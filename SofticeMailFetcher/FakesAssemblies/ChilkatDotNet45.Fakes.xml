<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ChilkatDotNet45.Fakes</name>
    </assembly>
    <members>
        <member name="T:Chilkat.Fakes.ShimAbortCheckEventArgs">
            <summary>Shim type of Chilkat.AbortCheckEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAbortCheckEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAbortCheckEventArgs.#ctor(Chilkat.AbortCheckEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AbortGet">
            <summary>Sets the shim of AbortCheckEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AbortSetBoolean">
            <summary>Sets the shim of AbortCheckEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAbortCheckEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AllInstances.AbortGet">
            <summary>Sets the shim of AbortCheckEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AllInstances.AbortSetBoolean">
            <summary>Sets the shim of AbortCheckEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of AbortCheckEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AbortCheckEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.AllInstances._AbortCheckEventArgs">
            <summary>Sets the shim of AbortCheckEventArgs.~AbortCheckEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAbortCheckEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAbortCheckEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAbortCheckEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.Constructor">
            <summary>Sets the shim of AbortCheckEventArgs.AbortCheckEventArgs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.Dispose">
            <summary>Sets the shim of AbortCheckEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs.DisposeBoolean">
            <summary>Sets the shim of AbortCheckEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAbortCheckEventArgs._AbortCheckEventArgs">
            <summary>Sets the shim of AbortCheckEventArgs.~AbortCheckEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAsn">
            <summary>Shim type of Chilkat.Asn</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAsn.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAsn.#ctor(Chilkat.Asn)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAsn.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendBigIntStringString">
            <summary>Sets the shim of Asn.AppendBigInt(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendBitsStringString">
            <summary>Sets the shim of Asn.AppendBits(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendBoolBoolean">
            <summary>Sets the shim of Asn.AppendBool(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendContextConstructedInt32">
            <summary>Sets the shim of Asn.AppendContextConstructed(Int32 tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendContextPrimitiveInt32StringString">
            <summary>Sets the shim of Asn.AppendContextPrimitive(Int32 tag, String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendIntInt32">
            <summary>Sets the shim of Asn.AppendInt(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendNull">
            <summary>Sets the shim of Asn.AppendNull()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendOctetsStringString">
            <summary>Sets the shim of Asn.AppendOctets(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendOidString">
            <summary>Sets the shim of Asn.AppendOid(String oid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendSequence">
            <summary>Sets the shim of Asn.AppendSequence()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendSequence2">
            <summary>Sets the shim of Asn.AppendSequence2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendSequenceR">
            <summary>Sets the shim of Asn.AppendSequenceR()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendSet">
            <summary>Sets the shim of Asn.AppendSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendSet2">
            <summary>Sets the shim of Asn.AppendSet2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendSetR">
            <summary>Sets the shim of Asn.AppendSetR()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendStringStringString">
            <summary>Sets the shim of Asn.AppendString(String strType, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AppendTimeStringString">
            <summary>Sets the shim of Asn.AppendTime(String timeFormat, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.AsnToXml">
            <summary>Sets the shim of Asn.AsnToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.BoolValueGet">
            <summary>Sets the shim of Asn.get_BoolValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.BoolValueSetBoolean">
            <summary>Sets the shim of Asn.set_BoolValue(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.ConstructedGet">
            <summary>Sets the shim of Asn.get_Constructed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.ContentStrGet">
            <summary>Sets the shim of Asn.get_ContentStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.ContentStrSetString">
            <summary>Sets the shim of Asn.set_ContentStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Asn.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Asn.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.DeleteSubItemInt32">
            <summary>Sets the shim of Asn.DeleteSubItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.Dispose">
            <summary>Sets the shim of Asn.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Asn.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.GetBinaryDer">
            <summary>Sets the shim of Asn.GetBinaryDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.GetEncodedContentString">
            <summary>Sets the shim of Asn.GetEncodedContent(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.GetEncodedDerString">
            <summary>Sets the shim of Asn.GetEncodedDer(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.GetLastSubItem">
            <summary>Sets the shim of Asn.GetLastSubItem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.GetSubItemInt32">
            <summary>Sets the shim of Asn.GetSubItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.IntValueGet">
            <summary>Sets the shim of Asn.get_IntValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.IntValueSetInt32">
            <summary>Sets the shim of Asn.set_IntValue(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Asn.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Asn.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Asn.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Asn.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Asn.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LoadAsnXmlString">
            <summary>Sets the shim of Asn.LoadAsnXml(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LoadBinaryByteArray">
            <summary>Sets the shim of Asn.LoadBinary(Byte[] derBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LoadBinaryFileString">
            <summary>Sets the shim of Asn.LoadBinaryFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.LoadEncodedStringString">
            <summary>Sets the shim of Asn.LoadEncoded(String asnContent, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.NumSubItemsGet">
            <summary>Sets the shim of Asn.get_NumSubItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Asn.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.SetEncodedContentStringString">
            <summary>Sets the shim of Asn.SetEncodedContent(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.TagGet">
            <summary>Sets the shim of Asn.get_Tag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.TagValueGet">
            <summary>Sets the shim of Asn.get_TagValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.ToString01">
            <summary>Sets the shim of Asn.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Asn.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Asn.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.VersionGet">
            <summary>Sets the shim of Asn.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances.WriteBinaryDerString">
            <summary>Sets the shim of Asn.WriteBinaryDer(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances._Asn">
            <summary>Sets the shim of Asn.!Asn()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AllInstances._Asn01">
            <summary>Sets the shim of Asn.~Asn()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendBigIntStringString">
            <summary>Sets the shim of Asn.AppendBigInt(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendBitsStringString">
            <summary>Sets the shim of Asn.AppendBits(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendBoolBoolean">
            <summary>Sets the shim of Asn.AppendBool(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendContextConstructedInt32">
            <summary>Sets the shim of Asn.AppendContextConstructed(Int32 tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendContextPrimitiveInt32StringString">
            <summary>Sets the shim of Asn.AppendContextPrimitive(Int32 tag, String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendIntInt32">
            <summary>Sets the shim of Asn.AppendInt(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendNull">
            <summary>Sets the shim of Asn.AppendNull()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendOctetsStringString">
            <summary>Sets the shim of Asn.AppendOctets(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendOidString">
            <summary>Sets the shim of Asn.AppendOid(String oid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendSequence">
            <summary>Sets the shim of Asn.AppendSequence()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendSequence2">
            <summary>Sets the shim of Asn.AppendSequence2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendSequenceR">
            <summary>Sets the shim of Asn.AppendSequenceR()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendSet">
            <summary>Sets the shim of Asn.AppendSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendSet2">
            <summary>Sets the shim of Asn.AppendSet2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendSetR">
            <summary>Sets the shim of Asn.AppendSetR()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendStringStringString">
            <summary>Sets the shim of Asn.AppendString(String strType, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AppendTimeStringString">
            <summary>Sets the shim of Asn.AppendTime(String timeFormat, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.AsnToXml">
            <summary>Sets the shim of Asn.AsnToXml()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAsn.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAsn.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAsn.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.BoolValueGet">
            <summary>Sets the shim of Asn.get_BoolValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.BoolValueSetBoolean">
            <summary>Sets the shim of Asn.set_BoolValue(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.ConstructedGet">
            <summary>Sets the shim of Asn.get_Constructed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.Constructor">
            <summary>Sets the shim of Asn.Asn()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.ContentStrGet">
            <summary>Sets the shim of Asn.get_ContentStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.ContentStrSetString">
            <summary>Sets the shim of Asn.set_ContentStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.DebugLogFilePathGet">
            <summary>Sets the shim of Asn.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.DebugLogFilePathSetString">
            <summary>Sets the shim of Asn.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.DeleteSubItemInt32">
            <summary>Sets the shim of Asn.DeleteSubItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.Dispose">
            <summary>Sets the shim of Asn.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.DisposeBoolean">
            <summary>Sets the shim of Asn.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.GetBinaryDer">
            <summary>Sets the shim of Asn.GetBinaryDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.GetEncodedContentString">
            <summary>Sets the shim of Asn.GetEncodedContent(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.GetEncodedDerString">
            <summary>Sets the shim of Asn.GetEncodedDer(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.GetLastSubItem">
            <summary>Sets the shim of Asn.GetLastSubItem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.GetSubItemInt32">
            <summary>Sets the shim of Asn.GetSubItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.IntValueGet">
            <summary>Sets the shim of Asn.get_IntValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.IntValueSetInt32">
            <summary>Sets the shim of Asn.set_IntValue(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LastErrorHtmlGet">
            <summary>Sets the shim of Asn.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LastErrorTextGet">
            <summary>Sets the shim of Asn.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LastErrorXmlGet">
            <summary>Sets the shim of Asn.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LastMethodSuccessGet">
            <summary>Sets the shim of Asn.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Asn.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LoadAsnXmlString">
            <summary>Sets the shim of Asn.LoadAsnXml(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LoadBinaryByteArray">
            <summary>Sets the shim of Asn.LoadBinary(Byte[] derBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LoadBinaryFileString">
            <summary>Sets the shim of Asn.LoadBinaryFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.LoadEncodedStringString">
            <summary>Sets the shim of Asn.LoadEncoded(String asnContent, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.NumSubItemsGet">
            <summary>Sets the shim of Asn.get_NumSubItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.SaveLastErrorString">
            <summary>Sets the shim of Asn.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.SetEncodedContentStringString">
            <summary>Sets the shim of Asn.SetEncodedContent(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.TagGet">
            <summary>Sets the shim of Asn.get_Tag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.TagValueGet">
            <summary>Sets the shim of Asn.get_TagValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.ToString">
            <summary>Sets the shim of Asn.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.VerboseLoggingGet">
            <summary>Sets the shim of Asn.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Asn.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.VersionGet">
            <summary>Sets the shim of Asn.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn.WriteBinaryDerString">
            <summary>Sets the shim of Asn.WriteBinaryDer(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn._Asn">
            <summary>Sets the shim of Asn.!Asn()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAsn._Asn01">
            <summary>Sets the shim of Asn.~Asn()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAtom">
            <summary>Shim type of Chilkat.Atom</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAtom.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAtom.#ctor(Chilkat.Atom)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AbortCurrentGet">
            <summary>Sets the shim of Atom.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementDateStrStringString">
            <summary>Sets the shim of Atom.AddElementDateStr(String tag, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementDateStringDateTime">
            <summary>Sets the shim of Atom.AddElementDate(String tag, DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementDtStringCkDateTime">
            <summary>Sets the shim of Atom.AddElementDt(String tag, CkDateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementHtmlStringString">
            <summary>Sets the shim of Atom.AddElementHtml(String tag, String htmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementStringString">
            <summary>Sets the shim of Atom.AddElement(String tag, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementXHtmlStringString">
            <summary>Sets the shim of Atom.AddElementXHtml(String tag, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddElementXmlStringString">
            <summary>Sets the shim of Atom.AddElementXml(String tag, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddEntryString">
            <summary>Sets the shim of Atom.AddEntry(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddLinkStringStringStringString">
            <summary>Sets the shim of Atom.AddLink(String rel, String href, String title, String typ)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AddPersonStringStringStringString">
            <summary>Sets the shim of Atom.AddPerson(String tag, String name, String uri, String email)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAtom.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Atom.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementDateStrStringString">
            <summary>Sets the shim of Atom.AddElementDateStr(String tag, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementDateStringDateTime">
            <summary>Sets the shim of Atom.AddElementDate(String tag, DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementDtStringCkDateTime">
            <summary>Sets the shim of Atom.AddElementDt(String tag, CkDateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementHtmlStringString">
            <summary>Sets the shim of Atom.AddElementHtml(String tag, String htmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementStringString">
            <summary>Sets the shim of Atom.AddElement(String tag, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementXHtmlStringString">
            <summary>Sets the shim of Atom.AddElementXHtml(String tag, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddElementXmlStringString">
            <summary>Sets the shim of Atom.AddElementXml(String tag, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddEntryString">
            <summary>Sets the shim of Atom.AddEntry(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddLinkStringStringStringString">
            <summary>Sets the shim of Atom.AddLink(String rel, String href, String title, String typ)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.AddPersonStringStringStringString">
            <summary>Sets the shim of Atom.AddPerson(String tag, String name, String uri, String email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Atom.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Atom.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DeleteElementAttrStringInt32String">
            <summary>Sets the shim of Atom.DeleteElementAttr(String tag, Int32 index, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DeleteElementStringInt32">
            <summary>Sets the shim of Atom.DeleteElement(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DeletePersonStringInt32">
            <summary>Sets the shim of Atom.DeletePerson(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.Dispose">
            <summary>Sets the shim of Atom.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Atom.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DownloadAtomAsyncString">
            <summary>Sets the shim of Atom.DownloadAtomAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.DownloadAtomString">
            <summary>Sets the shim of Atom.DownloadAtom(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Atom.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Atom.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Atom.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Atom.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Atom.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Atom.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Atom.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Atom.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetElementAttrStringInt32String">
            <summary>Sets the shim of Atom.GetElementAttr(String tag, Int32 index, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetElementCountString">
            <summary>Sets the shim of Atom.GetElementCount(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetElementDateStrStringInt32">
            <summary>Sets the shim of Atom.GetElementDateStr(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetElementDateStringInt32">
            <summary>Sets the shim of Atom.GetElementDate(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetElementDtStringInt32">
            <summary>Sets the shim of Atom.GetElementDt(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetElementStringInt32">
            <summary>Sets the shim of Atom.GetElement(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetEntryInt32">
            <summary>Sets the shim of Atom.GetEntry(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetLinkHrefString">
            <summary>Sets the shim of Atom.GetLinkHref(String relName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetPersonInfoStringInt32String">
            <summary>Sets the shim of Atom.GetPersonInfo(String tag, Int32 index, String tag2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.GetTopAttrString">
            <summary>Sets the shim of Atom.GetTopAttr(String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.HasElementString">
            <summary>Sets the shim of Atom.HasElement(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Atom.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Atom.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Atom.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Atom.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Atom.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.LoadXmlString">
            <summary>Sets the shim of Atom.LoadXml(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.NewEntry">
            <summary>Sets the shim of Atom.NewEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.NewFeed">
            <summary>Sets the shim of Atom.NewFeed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.NumEntriesGet">
            <summary>Sets the shim of Atom.get_NumEntries()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnAbortCheckAddAtomAbortCheckEventHandler">
            <summary>Sets the shim of Atom.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Atom.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnAbortCheckRemoveAtomAbortCheckEventHandler">
            <summary>Sets the shim of Atom.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnBinaryDataAddAtomBinaryDataEventHandler">
            <summary>Sets the shim of Atom.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Atom.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnBinaryDataRemoveAtomBinaryDataEventHandler">
            <summary>Sets the shim of Atom.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnPercentDoneAddAtomPercentDoneEventHandler">
            <summary>Sets the shim of Atom.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Atom.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnPercentDoneRemoveAtomPercentDoneEventHandler">
            <summary>Sets the shim of Atom.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnProgressInfoAddAtomProgressInfoEventHandler">
            <summary>Sets the shim of Atom.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Atom.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnProgressInfoRemoveAtomProgressInfoEventHandler">
            <summary>Sets the shim of Atom.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnTaskCompletedAddAtomTaskCompletedEventHandler">
            <summary>Sets the shim of Atom.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Atom.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnTaskCompletedRemoveAtomTaskCompletedEventHandler">
            <summary>Sets the shim of Atom.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnTextDataAddAtomTextDataEventHandler">
            <summary>Sets the shim of Atom.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Atom.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.OnTextDataRemoveAtomTextDataEventHandler">
            <summary>Sets the shim of Atom.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Atom.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.SetElementAttrStringInt32StringString">
            <summary>Sets the shim of Atom.SetElementAttr(String tag, Int32 index, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.SetTopAttrStringString">
            <summary>Sets the shim of Atom.SetTopAttr(String attrName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.ToString01">
            <summary>Sets the shim of Atom.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.ToXmlString">
            <summary>Sets the shim of Atom.ToXmlString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementDateStrStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementDateStr(String tag, Int32 index, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementDateStringInt32DateTime">
            <summary>Sets the shim of Atom.UpdateElementDate(String tag, Int32 index, DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementDtStringInt32CkDateTime">
            <summary>Sets the shim of Atom.UpdateElementDt(String tag, Int32 index, CkDateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementHtmlStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementHtml(String tag, Int32 index, String htmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementStringInt32String">
            <summary>Sets the shim of Atom.UpdateElement(String tag, Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementXHtmlStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementXHtml(String tag, Int32 index, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdateElementXmlStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementXml(String tag, Int32 index, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.UpdatePersonStringInt32StringStringString">
            <summary>Sets the shim of Atom.UpdatePerson(String tag, Int32 index, String name, String uri, String email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Atom.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Atom.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances.VersionGet">
            <summary>Sets the shim of Atom.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances._Atom">
            <summary>Sets the shim of Atom.!Atom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.AllInstances._Atom01">
            <summary>Sets the shim of Atom.~Atom()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAtom.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAtom.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAtom.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.Constructor">
            <summary>Sets the shim of Atom.Atom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DebugLogFilePathGet">
            <summary>Sets the shim of Atom.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DebugLogFilePathSetString">
            <summary>Sets the shim of Atom.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DeleteElementAttrStringInt32String">
            <summary>Sets the shim of Atom.DeleteElementAttr(String tag, Int32 index, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DeleteElementStringInt32">
            <summary>Sets the shim of Atom.DeleteElement(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DeletePersonStringInt32">
            <summary>Sets the shim of Atom.DeletePerson(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.Dispose">
            <summary>Sets the shim of Atom.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DisposeBoolean">
            <summary>Sets the shim of Atom.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DownloadAtomAsyncString">
            <summary>Sets the shim of Atom.DownloadAtomAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.DownloadAtomString">
            <summary>Sets the shim of Atom.DownloadAtom(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.EnableEventsGet">
            <summary>Sets the shim of Atom.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.EnableEventsSetBoolean">
            <summary>Sets the shim of Atom.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Atom.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Atom.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Atom.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Atom.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Atom.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Atom.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetElementAttrStringInt32String">
            <summary>Sets the shim of Atom.GetElementAttr(String tag, Int32 index, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetElementCountString">
            <summary>Sets the shim of Atom.GetElementCount(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetElementDateStrStringInt32">
            <summary>Sets the shim of Atom.GetElementDateStr(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetElementDateStringInt32">
            <summary>Sets the shim of Atom.GetElementDate(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetElementDtStringInt32">
            <summary>Sets the shim of Atom.GetElementDt(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetElementStringInt32">
            <summary>Sets the shim of Atom.GetElement(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetEntryInt32">
            <summary>Sets the shim of Atom.GetEntry(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetLinkHrefString">
            <summary>Sets the shim of Atom.GetLinkHref(String relName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetPersonInfoStringInt32String">
            <summary>Sets the shim of Atom.GetPersonInfo(String tag, Int32 index, String tag2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.GetTopAttrString">
            <summary>Sets the shim of Atom.GetTopAttr(String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.HasElementString">
            <summary>Sets the shim of Atom.HasElement(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.LastErrorHtmlGet">
            <summary>Sets the shim of Atom.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.LastErrorTextGet">
            <summary>Sets the shim of Atom.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.LastErrorXmlGet">
            <summary>Sets the shim of Atom.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.LastMethodSuccessGet">
            <summary>Sets the shim of Atom.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Atom.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.LoadXmlString">
            <summary>Sets the shim of Atom.LoadXml(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.NewEntry">
            <summary>Sets the shim of Atom.NewEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.NewFeed">
            <summary>Sets the shim of Atom.NewFeed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.NumEntriesGet">
            <summary>Sets the shim of Atom.get_NumEntries()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnAbortCheckAddAtomAbortCheckEventHandler">
            <summary>Sets the shim of Atom.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Atom.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnAbortCheckRemoveAtomAbortCheckEventHandler">
            <summary>Sets the shim of Atom.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnBinaryDataAddAtomBinaryDataEventHandler">
            <summary>Sets the shim of Atom.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Atom.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnBinaryDataRemoveAtomBinaryDataEventHandler">
            <summary>Sets the shim of Atom.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnPercentDoneAddAtomPercentDoneEventHandler">
            <summary>Sets the shim of Atom.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Atom.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnPercentDoneRemoveAtomPercentDoneEventHandler">
            <summary>Sets the shim of Atom.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnProgressInfoAddAtomProgressInfoEventHandler">
            <summary>Sets the shim of Atom.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Atom.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnProgressInfoRemoveAtomProgressInfoEventHandler">
            <summary>Sets the shim of Atom.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnTaskCompletedAddAtomTaskCompletedEventHandler">
            <summary>Sets the shim of Atom.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Atom.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnTaskCompletedRemoveAtomTaskCompletedEventHandler">
            <summary>Sets the shim of Atom.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnTextDataAddAtomTextDataEventHandler">
            <summary>Sets the shim of Atom.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Atom.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.OnTextDataRemoveAtomTextDataEventHandler">
            <summary>Sets the shim of Atom.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.SaveLastErrorString">
            <summary>Sets the shim of Atom.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.SetElementAttrStringInt32StringString">
            <summary>Sets the shim of Atom.SetElementAttr(String tag, Int32 index, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.SetTopAttrStringString">
            <summary>Sets the shim of Atom.SetTopAttr(String attrName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.ToString">
            <summary>Sets the shim of Atom.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.ToXmlString">
            <summary>Sets the shim of Atom.ToXmlString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementDateStrStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementDateStr(String tag, Int32 index, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementDateStringInt32DateTime">
            <summary>Sets the shim of Atom.UpdateElementDate(String tag, Int32 index, DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementDtStringInt32CkDateTime">
            <summary>Sets the shim of Atom.UpdateElementDt(String tag, Int32 index, CkDateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementHtmlStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementHtml(String tag, Int32 index, String htmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementStringInt32String">
            <summary>Sets the shim of Atom.UpdateElement(String tag, Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementXHtmlStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementXHtml(String tag, Int32 index, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdateElementXmlStringInt32String">
            <summary>Sets the shim of Atom.UpdateElementXml(String tag, Int32 index, String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.UpdatePersonStringInt32StringStringString">
            <summary>Sets the shim of Atom.UpdatePerson(String tag, Int32 index, String name, String uri, String email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.VerboseLoggingGet">
            <summary>Sets the shim of Atom.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Atom.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom.VersionGet">
            <summary>Sets the shim of Atom.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom._Atom">
            <summary>Sets the shim of Atom.!Atom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAtom._Atom01">
            <summary>Sets the shim of Atom.~Atom()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAws">
            <summary>Shim type of Chilkat.AuthAws</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAws.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAws.#ctor(Chilkat.AuthAws)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AccessKeyGet">
            <summary>Sets the shim of AuthAws.get_AccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AccessKeySetString">
            <summary>Sets the shim of AuthAws.set_AccessKey(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAws.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.AccessKeyGet">
            <summary>Sets the shim of AuthAws.get_AccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.AccessKeySetString">
            <summary>Sets the shim of AuthAws.set_AccessKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.CanonicalizedResourceV2Get">
            <summary>Sets the shim of AuthAws.get_CanonicalizedResourceV2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.CanonicalizedResourceV2SetString">
            <summary>Sets the shim of AuthAws.set_CanonicalizedResourceV2(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAws.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAws.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.Dispose">
            <summary>Sets the shim of AuthAws.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AuthAws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAws.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of AuthAws.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of AuthAws.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAws.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAws.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.PrecomputedMd5Get">
            <summary>Sets the shim of AuthAws.get_PrecomputedMd5()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.PrecomputedMd5SetString">
            <summary>Sets the shim of AuthAws.set_PrecomputedMd5(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.PrecomputedSha256Get">
            <summary>Sets the shim of AuthAws.get_PrecomputedSha256()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.PrecomputedSha256SetString">
            <summary>Sets the shim of AuthAws.set_PrecomputedSha256(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.RegionGet">
            <summary>Sets the shim of AuthAws.get_Region()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.RegionSetString">
            <summary>Sets the shim of AuthAws.set_Region(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of AuthAws.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.SecretKeyGet">
            <summary>Sets the shim of AuthAws.get_SecretKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.SecretKeySetString">
            <summary>Sets the shim of AuthAws.set_SecretKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.ServiceNameGet">
            <summary>Sets the shim of AuthAws.get_ServiceName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.ServiceNameSetString">
            <summary>Sets the shim of AuthAws.set_ServiceName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.SignatureVersionGet">
            <summary>Sets the shim of AuthAws.get_SignatureVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.SignatureVersionSetInt32">
            <summary>Sets the shim of AuthAws.set_SignatureVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.ToString01">
            <summary>Sets the shim of AuthAws.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of AuthAws.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAws.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances.VersionGet">
            <summary>Sets the shim of AuthAws.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances._AuthAws">
            <summary>Sets the shim of AuthAws.!AuthAws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.AllInstances._AuthAws01">
            <summary>Sets the shim of AuthAws.~AuthAws()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAws.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAws.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAws.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.CanonicalizedResourceV2Get">
            <summary>Sets the shim of AuthAws.get_CanonicalizedResourceV2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.CanonicalizedResourceV2SetString">
            <summary>Sets the shim of AuthAws.set_CanonicalizedResourceV2(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.Constructor">
            <summary>Sets the shim of AuthAws.AuthAws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAws.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAws.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.Dispose">
            <summary>Sets the shim of AuthAws.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.DisposeBoolean">
            <summary>Sets the shim of AuthAws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAws.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.LastErrorTextGet">
            <summary>Sets the shim of AuthAws.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.LastErrorXmlGet">
            <summary>Sets the shim of AuthAws.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAws.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAws.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.PrecomputedMd5Get">
            <summary>Sets the shim of AuthAws.get_PrecomputedMd5()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.PrecomputedMd5SetString">
            <summary>Sets the shim of AuthAws.set_PrecomputedMd5(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.PrecomputedSha256Get">
            <summary>Sets the shim of AuthAws.get_PrecomputedSha256()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.PrecomputedSha256SetString">
            <summary>Sets the shim of AuthAws.set_PrecomputedSha256(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.RegionGet">
            <summary>Sets the shim of AuthAws.get_Region()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.RegionSetString">
            <summary>Sets the shim of AuthAws.set_Region(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.SaveLastErrorString">
            <summary>Sets the shim of AuthAws.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.SecretKeyGet">
            <summary>Sets the shim of AuthAws.get_SecretKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.SecretKeySetString">
            <summary>Sets the shim of AuthAws.set_SecretKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.ServiceNameGet">
            <summary>Sets the shim of AuthAws.get_ServiceName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.ServiceNameSetString">
            <summary>Sets the shim of AuthAws.set_ServiceName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.SignatureVersionGet">
            <summary>Sets the shim of AuthAws.get_SignatureVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.SignatureVersionSetInt32">
            <summary>Sets the shim of AuthAws.set_SignatureVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.ToString">
            <summary>Sets the shim of AuthAws.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.VerboseLoggingGet">
            <summary>Sets the shim of AuthAws.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAws.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws.VersionGet">
            <summary>Sets the shim of AuthAws.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws._AuthAws">
            <summary>Sets the shim of AuthAws.!AuthAws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAws._AuthAws01">
            <summary>Sets the shim of AuthAws.~AuthAws()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAzureAD">
            <summary>Shim type of Chilkat.AuthAzureAD</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureAD.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureAD.#ctor(Chilkat.AuthAzureAD)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AccessTokenGet">
            <summary>Sets the shim of AuthAzureAD.get_AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AccessTokenSetString">
            <summary>Sets the shim of AuthAzureAD.set_AccessToken(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAzureAD.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.AccessTokenGet">
            <summary>Sets the shim of AuthAzureAD.get_AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of AuthAzureAD.set_AccessToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ClientIdGet">
            <summary>Sets the shim of AuthAzureAD.get_ClientId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ClientIdSetString">
            <summary>Sets the shim of AuthAzureAD.set_ClientId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ClientSecretGet">
            <summary>Sets the shim of AuthAzureAD.get_ClientSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ClientSecretSetString">
            <summary>Sets the shim of AuthAzureAD.set_ClientSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAzureAD.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAzureAD.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.Dispose">
            <summary>Sets the shim of AuthAzureAD.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AuthAzureAD.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.EnableEventsGet">
            <summary>Sets the shim of AuthAzureAD.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of AuthAzureAD.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthAzureAD.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAzureAD.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of AuthAzureAD.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of AuthAzureAD.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAzureAD.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAzureAD.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.NumSecondsRemainingGet">
            <summary>Sets the shim of AuthAzureAD.get_NumSecondsRemaining()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ObtainAccessTokenAsyncSocket">
            <summary>Sets the shim of AuthAzureAD.ObtainAccessTokenAsync(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ObtainAccessTokenSocket">
            <summary>Sets the shim of AuthAzureAD.ObtainAccessToken(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnAbortCheckAddAuthAzureADAbortCheckEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnAbortCheckRemoveAuthAzureADAbortCheckEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnBinaryDataAddAuthAzureADBinaryDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnBinaryDataRemoveAuthAzureADBinaryDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnPercentDoneAddAuthAzureADPercentDoneEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnPercentDoneRemoveAuthAzureADPercentDoneEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnProgressInfoAddAuthAzureADProgressInfoEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnProgressInfoRemoveAuthAzureADProgressInfoEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnTaskCompletedAddAuthAzureADTaskCompletedEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnTaskCompletedRemoveAuthAzureADTaskCompletedEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnTextDataAddAuthAzureADTextDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.OnTextDataRemoveAuthAzureADTextDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ResourceGet">
            <summary>Sets the shim of AuthAzureAD.get_Resource()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ResourceSetString">
            <summary>Sets the shim of AuthAzureAD.set_Resource(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of AuthAzureAD.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.TenantIdGet">
            <summary>Sets the shim of AuthAzureAD.get_TenantId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.TenantIdSetString">
            <summary>Sets the shim of AuthAzureAD.set_TenantId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ToString01">
            <summary>Sets the shim of AuthAzureAD.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.ValidGet">
            <summary>Sets the shim of AuthAzureAD.get_Valid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of AuthAzureAD.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAzureAD.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances.VersionGet">
            <summary>Sets the shim of AuthAzureAD.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances._AuthAzureAD">
            <summary>Sets the shim of AuthAzureAD.!AuthAzureAD()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.AllInstances._AuthAzureAD01">
            <summary>Sets the shim of AuthAzureAD.~AuthAzureAD()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureAD.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureAD.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureAD.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ClientIdGet">
            <summary>Sets the shim of AuthAzureAD.get_ClientId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ClientIdSetString">
            <summary>Sets the shim of AuthAzureAD.set_ClientId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ClientSecretGet">
            <summary>Sets the shim of AuthAzureAD.get_ClientSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ClientSecretSetString">
            <summary>Sets the shim of AuthAzureAD.set_ClientSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.Constructor">
            <summary>Sets the shim of AuthAzureAD.AuthAzureAD()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAzureAD.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAzureAD.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.Dispose">
            <summary>Sets the shim of AuthAzureAD.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.DisposeBoolean">
            <summary>Sets the shim of AuthAzureAD.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.EnableEventsGet">
            <summary>Sets the shim of AuthAzureAD.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.EnableEventsSetBoolean">
            <summary>Sets the shim of AuthAzureAD.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthAzureAD.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAzureAD.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.LastErrorTextGet">
            <summary>Sets the shim of AuthAzureAD.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.LastErrorXmlGet">
            <summary>Sets the shim of AuthAzureAD.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAzureAD.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAzureAD.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.NumSecondsRemainingGet">
            <summary>Sets the shim of AuthAzureAD.get_NumSecondsRemaining()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ObtainAccessTokenAsyncSocket">
            <summary>Sets the shim of AuthAzureAD.ObtainAccessTokenAsync(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ObtainAccessTokenSocket">
            <summary>Sets the shim of AuthAzureAD.ObtainAccessToken(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnAbortCheckAddAuthAzureADAbortCheckEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnAbortCheckRemoveAuthAzureADAbortCheckEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnBinaryDataAddAuthAzureADBinaryDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnBinaryDataRemoveAuthAzureADBinaryDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnPercentDoneAddAuthAzureADPercentDoneEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnPercentDoneRemoveAuthAzureADPercentDoneEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnProgressInfoAddAuthAzureADProgressInfoEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnProgressInfoRemoveAuthAzureADProgressInfoEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnTaskCompletedAddAuthAzureADTaskCompletedEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnTaskCompletedRemoveAuthAzureADTaskCompletedEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnTextDataAddAuthAzureADTextDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of AuthAzureAD.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.OnTextDataRemoveAuthAzureADTextDataEventHandler">
            <summary>Sets the shim of AuthAzureAD.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ResourceGet">
            <summary>Sets the shim of AuthAzureAD.get_Resource()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ResourceSetString">
            <summary>Sets the shim of AuthAzureAD.set_Resource(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.SaveLastErrorString">
            <summary>Sets the shim of AuthAzureAD.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.TenantIdGet">
            <summary>Sets the shim of AuthAzureAD.get_TenantId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.TenantIdSetString">
            <summary>Sets the shim of AuthAzureAD.set_TenantId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ToString">
            <summary>Sets the shim of AuthAzureAD.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.ValidGet">
            <summary>Sets the shim of AuthAzureAD.get_Valid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.VerboseLoggingGet">
            <summary>Sets the shim of AuthAzureAD.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAzureAD.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD.VersionGet">
            <summary>Sets the shim of AuthAzureAD.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD._AuthAzureAD">
            <summary>Sets the shim of AuthAzureAD.!AuthAzureAD()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureAD._AuthAzureAD01">
            <summary>Sets the shim of AuthAzureAD.~AuthAzureAD()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAzureSAS">
            <summary>Shim type of Chilkat.AuthAzureSAS</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureSAS.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureSAS.#ctor(Chilkat.AuthAzureSAS)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AccessKeyGet">
            <summary>Sets the shim of AuthAzureSAS.get_AccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AccessKeySetString">
            <summary>Sets the shim of AuthAzureSAS.set_AccessKey(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.AccessKeyGet">
            <summary>Sets the shim of AuthAzureSAS.get_AccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.AccessKeySetString">
            <summary>Sets the shim of AuthAzureSAS.set_AccessKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.Clear">
            <summary>Sets the shim of AuthAzureSAS.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAzureSAS.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAzureSAS.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.Dispose">
            <summary>Sets the shim of AuthAzureSAS.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AuthAzureSAS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.GenerateToken">
            <summary>Sets the shim of AuthAzureSAS.GenerateToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAzureSAS.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of AuthAzureSAS.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.SetNonTokenParamStringString">
            <summary>Sets the shim of AuthAzureSAS.SetNonTokenParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.SetTokenParamStringStringString">
            <summary>Sets the shim of AuthAzureSAS.SetTokenParam(String name, String authParamName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.StringToSignGet">
            <summary>Sets the shim of AuthAzureSAS.get_StringToSign()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.StringToSignSetString">
            <summary>Sets the shim of AuthAzureSAS.set_StringToSign(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.ToString01">
            <summary>Sets the shim of AuthAzureSAS.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of AuthAzureSAS.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAzureSAS.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances.VersionGet">
            <summary>Sets the shim of AuthAzureSAS.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances._AuthAzureSAS">
            <summary>Sets the shim of AuthAzureSAS.!AuthAzureSAS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.AllInstances._AuthAzureSAS01">
            <summary>Sets the shim of AuthAzureSAS.~AuthAzureSAS()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureSAS.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureSAS.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureSAS.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.Clear">
            <summary>Sets the shim of AuthAzureSAS.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.Constructor">
            <summary>Sets the shim of AuthAzureSAS.AuthAzureSAS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAzureSAS.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAzureSAS.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.Dispose">
            <summary>Sets the shim of AuthAzureSAS.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.DisposeBoolean">
            <summary>Sets the shim of AuthAzureSAS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.GenerateToken">
            <summary>Sets the shim of AuthAzureSAS.GenerateToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.LastErrorTextGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.LastErrorXmlGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAzureSAS.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAzureSAS.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.SaveLastErrorString">
            <summary>Sets the shim of AuthAzureSAS.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.SetNonTokenParamStringString">
            <summary>Sets the shim of AuthAzureSAS.SetNonTokenParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.SetTokenParamStringStringString">
            <summary>Sets the shim of AuthAzureSAS.SetTokenParam(String name, String authParamName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.StringToSignGet">
            <summary>Sets the shim of AuthAzureSAS.get_StringToSign()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.StringToSignSetString">
            <summary>Sets the shim of AuthAzureSAS.set_StringToSign(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.ToString">
            <summary>Sets the shim of AuthAzureSAS.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.VerboseLoggingGet">
            <summary>Sets the shim of AuthAzureSAS.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAzureSAS.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS.VersionGet">
            <summary>Sets the shim of AuthAzureSAS.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS._AuthAzureSAS">
            <summary>Sets the shim of AuthAzureSAS.!AuthAzureSAS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureSAS._AuthAzureSAS01">
            <summary>Sets the shim of AuthAzureSAS.~AuthAzureSAS()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAzureStorage">
            <summary>Shim type of Chilkat.AuthAzureStorage</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureStorage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureStorage.#ctor(Chilkat.AuthAzureStorage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AccessKeyGet">
            <summary>Sets the shim of AuthAzureStorage.get_AccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AccessKeySetString">
            <summary>Sets the shim of AuthAzureStorage.set_AccessKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AccountGet">
            <summary>Sets the shim of AuthAzureStorage.get_Account()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AccountSetString">
            <summary>Sets the shim of AuthAzureStorage.set_Account(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.AccessKeyGet">
            <summary>Sets the shim of AuthAzureStorage.get_AccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.AccessKeySetString">
            <summary>Sets the shim of AuthAzureStorage.set_AccessKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.AccountGet">
            <summary>Sets the shim of AuthAzureStorage.get_Account()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.AccountSetString">
            <summary>Sets the shim of AuthAzureStorage.set_Account(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAzureStorage.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAzureStorage.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.Dispose">
            <summary>Sets the shim of AuthAzureStorage.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AuthAzureStorage.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAzureStorage.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of AuthAzureStorage.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.SchemeGet">
            <summary>Sets the shim of AuthAzureStorage.get_Scheme()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.SchemeSetString">
            <summary>Sets the shim of AuthAzureStorage.set_Scheme(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.ServiceGet">
            <summary>Sets the shim of AuthAzureStorage.get_Service()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.ServiceSetString">
            <summary>Sets the shim of AuthAzureStorage.set_Service(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.ToString01">
            <summary>Sets the shim of AuthAzureStorage.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of AuthAzureStorage.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAzureStorage.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.VersionGet">
            <summary>Sets the shim of AuthAzureStorage.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.XMsVersionGet">
            <summary>Sets the shim of AuthAzureStorage.get_XMsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances.XMsVersionSetString">
            <summary>Sets the shim of AuthAzureStorage.set_XMsVersion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances._AuthAzureStorage">
            <summary>Sets the shim of AuthAzureStorage.!AuthAzureStorage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.AllInstances._AuthAzureStorage01">
            <summary>Sets the shim of AuthAzureStorage.~AuthAzureStorage()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureStorage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureStorage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthAzureStorage.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.Constructor">
            <summary>Sets the shim of AuthAzureStorage.AuthAzureStorage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.DebugLogFilePathGet">
            <summary>Sets the shim of AuthAzureStorage.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthAzureStorage.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.Dispose">
            <summary>Sets the shim of AuthAzureStorage.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.DisposeBoolean">
            <summary>Sets the shim of AuthAzureStorage.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.LastErrorHtmlGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.LastErrorTextGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.LastErrorXmlGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.LastMethodSuccessGet">
            <summary>Sets the shim of AuthAzureStorage.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthAzureStorage.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.SaveLastErrorString">
            <summary>Sets the shim of AuthAzureStorage.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.SchemeGet">
            <summary>Sets the shim of AuthAzureStorage.get_Scheme()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.SchemeSetString">
            <summary>Sets the shim of AuthAzureStorage.set_Scheme(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.ServiceGet">
            <summary>Sets the shim of AuthAzureStorage.get_Service()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.ServiceSetString">
            <summary>Sets the shim of AuthAzureStorage.set_Service(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.ToString">
            <summary>Sets the shim of AuthAzureStorage.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.VerboseLoggingGet">
            <summary>Sets the shim of AuthAzureStorage.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthAzureStorage.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.VersionGet">
            <summary>Sets the shim of AuthAzureStorage.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.XMsVersionGet">
            <summary>Sets the shim of AuthAzureStorage.get_XMsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage.XMsVersionSetString">
            <summary>Sets the shim of AuthAzureStorage.set_XMsVersion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage._AuthAzureStorage">
            <summary>Sets the shim of AuthAzureStorage.!AuthAzureStorage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthAzureStorage._AuthAzureStorage01">
            <summary>Sets the shim of AuthAzureStorage.~AuthAzureStorage()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthGoogle">
            <summary>Shim type of Chilkat.AuthGoogle</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthGoogle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthGoogle.#ctor(Chilkat.AuthGoogle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AccessTokenGet">
            <summary>Sets the shim of AuthGoogle.get_AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AccessTokenSetString">
            <summary>Sets the shim of AuthGoogle.set_AccessToken(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthGoogle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.AccessTokenGet">
            <summary>Sets the shim of AuthGoogle.get_AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of AuthGoogle.set_AccessToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of AuthGoogle.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthGoogle.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.Dispose">
            <summary>Sets the shim of AuthGoogle.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AuthGoogle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.EmailAddressGet">
            <summary>Sets the shim of AuthGoogle.get_EmailAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.EmailAddressSetString">
            <summary>Sets the shim of AuthGoogle.set_EmailAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.EnableEventsGet">
            <summary>Sets the shim of AuthGoogle.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of AuthGoogle.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ExpireNumSecondsGet">
            <summary>Sets the shim of AuthGoogle.get_ExpireNumSeconds()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ExpireNumSecondsSetInt32">
            <summary>Sets the shim of AuthGoogle.set_ExpireNumSeconds(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthGoogle.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthGoogle.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthGoogle.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthGoogle.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthGoogle.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of AuthGoogle.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.GetP12">
            <summary>Sets the shim of AuthGoogle.GetP12()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.JsonKeyGet">
            <summary>Sets the shim of AuthGoogle.get_JsonKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.JsonKeySetString">
            <summary>Sets the shim of AuthGoogle.set_JsonKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of AuthGoogle.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of AuthGoogle.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of AuthGoogle.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of AuthGoogle.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthGoogle.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.NumSecondsRemainingGet">
            <summary>Sets the shim of AuthGoogle.get_NumSecondsRemaining()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ObtainAccessTokenAsyncSocket">
            <summary>Sets the shim of AuthGoogle.ObtainAccessTokenAsync(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ObtainAccessTokenSocket">
            <summary>Sets the shim of AuthGoogle.ObtainAccessToken(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnAbortCheckAddAuthGoogleAbortCheckEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnAbortCheckRemoveAuthGoogleAbortCheckEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnBinaryDataAddAuthGoogleBinaryDataEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnBinaryDataRemoveAuthGoogleBinaryDataEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnPercentDoneAddAuthGooglePercentDoneEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnPercentDoneRemoveAuthGooglePercentDoneEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnProgressInfoAddAuthGoogleProgressInfoEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnProgressInfoRemoveAuthGoogleProgressInfoEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnTaskCompletedAddAuthGoogleTaskCompletedEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnTaskCompletedRemoveAuthGoogleTaskCompletedEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnTextDataAddAuthGoogleTextDataEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.OnTextDataRemoveAuthGoogleTextDataEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of AuthGoogle.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ScopeGet">
            <summary>Sets the shim of AuthGoogle.get_Scope()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ScopeSetString">
            <summary>Sets the shim of AuthGoogle.set_Scope(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.SetP12Pfx">
            <summary>Sets the shim of AuthGoogle.SetP12(Pfx key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.SubEmailAddressGet">
            <summary>Sets the shim of AuthGoogle.get_SubEmailAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.SubEmailAddressSetString">
            <summary>Sets the shim of AuthGoogle.set_SubEmailAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ToString01">
            <summary>Sets the shim of AuthGoogle.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.ValidGet">
            <summary>Sets the shim of AuthGoogle.get_Valid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of AuthGoogle.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthGoogle.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances.VersionGet">
            <summary>Sets the shim of AuthGoogle.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances._AuthGoogle">
            <summary>Sets the shim of AuthGoogle.!AuthGoogle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.AllInstances._AuthGoogle01">
            <summary>Sets the shim of AuthGoogle.~AuthGoogle()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthGoogle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthGoogle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthGoogle.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.Constructor">
            <summary>Sets the shim of AuthGoogle.AuthGoogle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.DebugLogFilePathGet">
            <summary>Sets the shim of AuthGoogle.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthGoogle.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.Dispose">
            <summary>Sets the shim of AuthGoogle.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.DisposeBoolean">
            <summary>Sets the shim of AuthGoogle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.EmailAddressGet">
            <summary>Sets the shim of AuthGoogle.get_EmailAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.EmailAddressSetString">
            <summary>Sets the shim of AuthGoogle.set_EmailAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.EnableEventsGet">
            <summary>Sets the shim of AuthGoogle.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.EnableEventsSetBoolean">
            <summary>Sets the shim of AuthGoogle.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ExpireNumSecondsGet">
            <summary>Sets the shim of AuthGoogle.get_ExpireNumSeconds()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ExpireNumSecondsSetInt32">
            <summary>Sets the shim of AuthGoogle.set_ExpireNumSeconds(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthGoogle.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthGoogle.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthGoogle.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthGoogle.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthGoogle.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of AuthGoogle.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.GetP12">
            <summary>Sets the shim of AuthGoogle.GetP12()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.JsonKeyGet">
            <summary>Sets the shim of AuthGoogle.get_JsonKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.JsonKeySetString">
            <summary>Sets the shim of AuthGoogle.set_JsonKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.LastErrorHtmlGet">
            <summary>Sets the shim of AuthGoogle.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.LastErrorTextGet">
            <summary>Sets the shim of AuthGoogle.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.LastErrorXmlGet">
            <summary>Sets the shim of AuthGoogle.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.LastMethodSuccessGet">
            <summary>Sets the shim of AuthGoogle.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthGoogle.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.NumSecondsRemainingGet">
            <summary>Sets the shim of AuthGoogle.get_NumSecondsRemaining()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ObtainAccessTokenAsyncSocket">
            <summary>Sets the shim of AuthGoogle.ObtainAccessTokenAsync(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ObtainAccessTokenSocket">
            <summary>Sets the shim of AuthGoogle.ObtainAccessToken(Socket connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnAbortCheckAddAuthGoogleAbortCheckEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnAbortCheckRemoveAuthGoogleAbortCheckEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnBinaryDataAddAuthGoogleBinaryDataEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnBinaryDataRemoveAuthGoogleBinaryDataEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnPercentDoneAddAuthGooglePercentDoneEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnPercentDoneRemoveAuthGooglePercentDoneEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnProgressInfoAddAuthGoogleProgressInfoEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnProgressInfoRemoveAuthGoogleProgressInfoEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnTaskCompletedAddAuthGoogleTaskCompletedEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnTaskCompletedRemoveAuthGoogleTaskCompletedEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnTextDataAddAuthGoogleTextDataEventHandler">
            <summary>Sets the shim of AuthGoogle.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of AuthGoogle.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.OnTextDataRemoveAuthGoogleTextDataEventHandler">
            <summary>Sets the shim of AuthGoogle.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.SaveLastErrorString">
            <summary>Sets the shim of AuthGoogle.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ScopeGet">
            <summary>Sets the shim of AuthGoogle.get_Scope()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ScopeSetString">
            <summary>Sets the shim of AuthGoogle.set_Scope(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.SetP12Pfx">
            <summary>Sets the shim of AuthGoogle.SetP12(Pfx key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.SubEmailAddressGet">
            <summary>Sets the shim of AuthGoogle.get_SubEmailAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.SubEmailAddressSetString">
            <summary>Sets the shim of AuthGoogle.set_SubEmailAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ToString">
            <summary>Sets the shim of AuthGoogle.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.ValidGet">
            <summary>Sets the shim of AuthGoogle.get_Valid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.VerboseLoggingGet">
            <summary>Sets the shim of AuthGoogle.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthGoogle.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle.VersionGet">
            <summary>Sets the shim of AuthGoogle.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle._AuthGoogle">
            <summary>Sets the shim of AuthGoogle.!AuthGoogle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthGoogle._AuthGoogle01">
            <summary>Sets the shim of AuthGoogle.~AuthGoogle()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthUtil">
            <summary>Shim type of Chilkat.AuthUtil</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthUtil.#ctor(Chilkat.AuthUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimAuthUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of AuthUtil.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthUtil.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.Dispose">
            <summary>Sets the shim of AuthUtil.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AuthUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of AuthUtil.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of AuthUtil.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of AuthUtil.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of AuthUtil.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthUtil.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of AuthUtil.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.ToString01">
            <summary>Sets the shim of AuthUtil.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of AuthUtil.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthUtil.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.VersionGet">
            <summary>Sets the shim of AuthUtil.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances.WalmartSignatureStringStringStringString">
            <summary>Sets the shim of AuthUtil.WalmartSignature(String requestUrl, String consumerId, String privateKey, String requestMethod)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances._AuthUtil">
            <summary>Sets the shim of AuthUtil.!AuthUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.AllInstances._AuthUtil01">
            <summary>Sets the shim of AuthUtil.~AuthUtil()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimAuthUtil.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.Constructor">
            <summary>Sets the shim of AuthUtil.AuthUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.DebugLogFilePathGet">
            <summary>Sets the shim of AuthUtil.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.DebugLogFilePathSetString">
            <summary>Sets the shim of AuthUtil.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.Dispose">
            <summary>Sets the shim of AuthUtil.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.DisposeBoolean">
            <summary>Sets the shim of AuthUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.LastErrorHtmlGet">
            <summary>Sets the shim of AuthUtil.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.LastErrorTextGet">
            <summary>Sets the shim of AuthUtil.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.LastErrorXmlGet">
            <summary>Sets the shim of AuthUtil.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.LastMethodSuccessGet">
            <summary>Sets the shim of AuthUtil.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of AuthUtil.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.SaveLastErrorString">
            <summary>Sets the shim of AuthUtil.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.ToString">
            <summary>Sets the shim of AuthUtil.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.VerboseLoggingGet">
            <summary>Sets the shim of AuthUtil.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.VerboseLoggingSetBoolean">
            <summary>Sets the shim of AuthUtil.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.VersionGet">
            <summary>Sets the shim of AuthUtil.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil.WalmartSignatureStringStringStringString">
            <summary>Sets the shim of AuthUtil.WalmartSignature(String requestUrl, String consumerId, String privateKey, String requestMethod)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil._AuthUtil">
            <summary>Sets the shim of AuthUtil.!AuthUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimAuthUtil._AuthUtil01">
            <summary>Sets the shim of AuthUtil.~AuthUtil()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBinData">
            <summary>Shim type of Chilkat.BinData</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinData.#ctor(Chilkat.BinData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBinData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendBdBinData">
            <summary>Sets the shim of BinData.AppendBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendBinaryByteArray">
            <summary>Sets the shim of BinData.AppendBinary(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendBomString">
            <summary>Sets the shim of BinData.AppendBom(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendEncodedSbStringBuilderString">
            <summary>Sets the shim of BinData.AppendEncodedSb(StringBuilder sb, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendEncodedStringString">
            <summary>Sets the shim of BinData.AppendEncoded(String encData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendSbStringBuilderString">
            <summary>Sets the shim of BinData.AppendSb(StringBuilder sb, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.AppendStringStringString">
            <summary>Sets the shim of BinData.AppendString(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.Clear">
            <summary>Sets the shim of BinData.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.ContentsEqualBinData">
            <summary>Sets the shim of BinData.ContentsEqual(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.Dispose">
            <summary>Sets the shim of BinData.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BinData.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.GetBinary">
            <summary>Sets the shim of BinData.GetBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.GetBinaryChunkInt32Int32">
            <summary>Sets the shim of BinData.GetBinaryChunk(Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.GetEncodedChunkInt32Int32String">
            <summary>Sets the shim of BinData.GetEncodedChunk(Int32 offset, Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.GetEncodedSbStringStringBuilder">
            <summary>Sets the shim of BinData.GetEncodedSb(String encoding, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.GetEncodedString">
            <summary>Sets the shim of BinData.GetEncoded(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.GetStringString">
            <summary>Sets the shim of BinData.GetString(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of BinData.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of BinData.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.LoadBinaryByteArray">
            <summary>Sets the shim of BinData.LoadBinary(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.LoadEncodedStringString">
            <summary>Sets the shim of BinData.LoadEncoded(String encData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.LoadFileString">
            <summary>Sets the shim of BinData.LoadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.NumBytesGet">
            <summary>Sets the shim of BinData.get_NumBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.RemoveChunkInt32Int32">
            <summary>Sets the shim of BinData.RemoveChunk(Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.SecureClear">
            <summary>Sets the shim of BinData.SecureClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.ToString01">
            <summary>Sets the shim of BinData.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances.WriteFileString">
            <summary>Sets the shim of BinData.WriteFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances._BinData">
            <summary>Sets the shim of BinData.!BinData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AllInstances._BinData01">
            <summary>Sets the shim of BinData.~BinData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendBdBinData">
            <summary>Sets the shim of BinData.AppendBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendBinaryByteArray">
            <summary>Sets the shim of BinData.AppendBinary(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendBomString">
            <summary>Sets the shim of BinData.AppendBom(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendEncodedSbStringBuilderString">
            <summary>Sets the shim of BinData.AppendEncodedSb(StringBuilder sb, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendEncodedStringString">
            <summary>Sets the shim of BinData.AppendEncoded(String encData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendSbStringBuilderString">
            <summary>Sets the shim of BinData.AppendSb(StringBuilder sb, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.AppendStringStringString">
            <summary>Sets the shim of BinData.AppendString(String str, String charset)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinData.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.Clear">
            <summary>Sets the shim of BinData.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.Constructor">
            <summary>Sets the shim of BinData.BinData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.ContentsEqualBinData">
            <summary>Sets the shim of BinData.ContentsEqual(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.Dispose">
            <summary>Sets the shim of BinData.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.DisposeBoolean">
            <summary>Sets the shim of BinData.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.GetBinary">
            <summary>Sets the shim of BinData.GetBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.GetBinaryChunkInt32Int32">
            <summary>Sets the shim of BinData.GetBinaryChunk(Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.GetEncodedChunkInt32Int32String">
            <summary>Sets the shim of BinData.GetEncodedChunk(Int32 offset, Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.GetEncodedSbStringStringBuilder">
            <summary>Sets the shim of BinData.GetEncodedSb(String encoding, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.GetEncodedString">
            <summary>Sets the shim of BinData.GetEncoded(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.GetStringString">
            <summary>Sets the shim of BinData.GetString(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.LastMethodSuccessGet">
            <summary>Sets the shim of BinData.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of BinData.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.LoadBinaryByteArray">
            <summary>Sets the shim of BinData.LoadBinary(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.LoadEncodedStringString">
            <summary>Sets the shim of BinData.LoadEncoded(String encData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.LoadFileString">
            <summary>Sets the shim of BinData.LoadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.NumBytesGet">
            <summary>Sets the shim of BinData.get_NumBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.RemoveChunkInt32Int32">
            <summary>Sets the shim of BinData.RemoveChunk(Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.SecureClear">
            <summary>Sets the shim of BinData.SecureClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.ToString">
            <summary>Sets the shim of BinData.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData.WriteFileString">
            <summary>Sets the shim of BinData.WriteFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData._BinData">
            <summary>Sets the shim of BinData.!BinData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinData._BinData01">
            <summary>Sets the shim of BinData.~BinData()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBinaryDataEventArgs">
            <summary>Shim type of Chilkat.BinaryDataEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinaryDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinaryDataEventArgs.#ctor(Chilkat.BinaryDataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBinaryDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.AllInstances.DataGet">
            <summary>Sets the shim of BinaryDataEventArgs.get_Data()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of BinaryDataEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of BinaryDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.AllInstances._BinaryDataEventArgs">
            <summary>Sets the shim of BinaryDataEventArgs.~BinaryDataEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinaryDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinaryDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBinaryDataEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.DataGet">
            <summary>Sets the shim of BinaryDataEventArgs.get_Data()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.Dispose">
            <summary>Sets the shim of BinaryDataEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs.DisposeBoolean">
            <summary>Sets the shim of BinaryDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBinaryDataEventArgs._BinaryDataEventArgs">
            <summary>Sets the shim of BinaryDataEventArgs.~BinaryDataEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBounce">
            <summary>Shim type of Chilkat.Bounce</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBounce.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBounce.#ctor(Chilkat.Bounce)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBounce.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.BounceAddressGet">
            <summary>Sets the shim of Bounce.get_BounceAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.BounceDataGet">
            <summary>Sets the shim of Bounce.get_BounceData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.BounceTypeGet">
            <summary>Sets the shim of Bounce.get_BounceType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Bounce.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Bounce.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.Dispose">
            <summary>Sets the shim of Bounce.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Bounce.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.ExamineEmailEmail">
            <summary>Sets the shim of Bounce.ExamineEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.ExamineEmlString">
            <summary>Sets the shim of Bounce.ExamineEml(String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.ExamineMimeString">
            <summary>Sets the shim of Bounce.ExamineMime(String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Bounce.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Bounce.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Bounce.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Bounce.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Bounce.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Bounce.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.ToString01">
            <summary>Sets the shim of Bounce.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Bounce.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Bounce.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Bounce.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances.VersionGet">
            <summary>Sets the shim of Bounce.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances._Bounce">
            <summary>Sets the shim of Bounce.!Bounce()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.AllInstances._Bounce01">
            <summary>Sets the shim of Bounce.~Bounce()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBounce.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBounce.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBounce.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.BounceAddressGet">
            <summary>Sets the shim of Bounce.get_BounceAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.BounceDataGet">
            <summary>Sets the shim of Bounce.get_BounceData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.BounceTypeGet">
            <summary>Sets the shim of Bounce.get_BounceType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.Constructor">
            <summary>Sets the shim of Bounce.Bounce()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.DebugLogFilePathGet">
            <summary>Sets the shim of Bounce.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.DebugLogFilePathSetString">
            <summary>Sets the shim of Bounce.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.Dispose">
            <summary>Sets the shim of Bounce.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.DisposeBoolean">
            <summary>Sets the shim of Bounce.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.ExamineEmailEmail">
            <summary>Sets the shim of Bounce.ExamineEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.ExamineEmlString">
            <summary>Sets the shim of Bounce.ExamineEml(String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.ExamineMimeString">
            <summary>Sets the shim of Bounce.ExamineMime(String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.LastErrorHtmlGet">
            <summary>Sets the shim of Bounce.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.LastErrorTextGet">
            <summary>Sets the shim of Bounce.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.LastErrorXmlGet">
            <summary>Sets the shim of Bounce.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.LastMethodSuccessGet">
            <summary>Sets the shim of Bounce.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Bounce.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.SaveLastErrorString">
            <summary>Sets the shim of Bounce.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.ToString">
            <summary>Sets the shim of Bounce.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.UnlockComponentString">
            <summary>Sets the shim of Bounce.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.VerboseLoggingGet">
            <summary>Sets the shim of Bounce.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Bounce.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce.VersionGet">
            <summary>Sets the shim of Bounce.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce._Bounce">
            <summary>Sets the shim of Bounce.!Bounce()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBounce._Bounce01">
            <summary>Sets the shim of Bounce.~Bounce()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimByteBuffer">
            <summary>Shim type of Chilkat.ByteBuffer</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimByteBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimByteBuffer.#ctor(Chilkat.ByteBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimByteBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.AppendByteArray">
            <summary>Sets the shim of ByteBuffer.Append(Byte[] A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.AppendFromFileString">
            <summary>Sets the shim of ByteBuffer.AppendFromFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.AppendStrStringString">
            <summary>Sets the shim of ByteBuffer.AppendStr(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.Dispose">
            <summary>Sets the shim of ByteBuffer.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ByteBuffer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.GetBytes">
            <summary>Sets the shim of ByteBuffer.GetBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.LeftUInt32">
            <summary>Sets the shim of ByteBuffer.Left(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.LengthGet">
            <summary>Sets the shim of ByteBuffer.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.MidUInt32UInt32">
            <summary>Sets the shim of ByteBuffer.Mid(UInt32 startIdx, UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.PrependByteArray">
            <summary>Sets the shim of ByteBuffer.Prepend(Byte[] A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.PrependStrStringString">
            <summary>Sets the shim of ByteBuffer.PrependStr(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.ReplaceByteArray">
            <summary>Sets the shim of ByteBuffer.Replace(Byte[] A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.RightUInt32">
            <summary>Sets the shim of ByteBuffer.Right(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances.WriteFileString">
            <summary>Sets the shim of ByteBuffer.WriteFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances._ByteBuffer">
            <summary>Sets the shim of ByteBuffer.!ByteBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AllInstances._ByteBuffer01">
            <summary>Sets the shim of ByteBuffer.~ByteBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AppendByteArray">
            <summary>Sets the shim of ByteBuffer.Append(Byte[] A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AppendFromFileString">
            <summary>Sets the shim of ByteBuffer.AppendFromFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.AppendStrStringString">
            <summary>Sets the shim of ByteBuffer.AppendStr(String str, String charset)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimByteBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimByteBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimByteBuffer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.Constructor">
            <summary>Sets the shim of ByteBuffer.ByteBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.Dispose">
            <summary>Sets the shim of ByteBuffer.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.DisposeBoolean">
            <summary>Sets the shim of ByteBuffer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.GetBytes">
            <summary>Sets the shim of ByteBuffer.GetBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.LeftUInt32">
            <summary>Sets the shim of ByteBuffer.Left(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.LengthGet">
            <summary>Sets the shim of ByteBuffer.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.MidUInt32UInt32">
            <summary>Sets the shim of ByteBuffer.Mid(UInt32 startIdx, UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.PrependByteArray">
            <summary>Sets the shim of ByteBuffer.Prepend(Byte[] A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.PrependStrStringString">
            <summary>Sets the shim of ByteBuffer.PrependStr(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.ReplaceByteArray">
            <summary>Sets the shim of ByteBuffer.Replace(Byte[] A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.RightUInt32">
            <summary>Sets the shim of ByteBuffer.Right(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer.WriteFileString">
            <summary>Sets the shim of ByteBuffer.WriteFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer._ByteBuffer">
            <summary>Sets the shim of ByteBuffer.!ByteBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimByteBuffer._ByteBuffer01">
            <summary>Sets the shim of ByteBuffer.~ByteBuffer()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBz2">
            <summary>Shim type of Chilkat.Bz2</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBz2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBz2.#ctor(Chilkat.Bz2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AbortCurrentGet">
            <summary>Sets the shim of Bz2.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AbortCurrentSetBoolean">
            <summary>Sets the shim of Bz2.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimBz2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Bz2.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Bz2.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressFileAsyncStringString">
            <summary>Sets the shim of Bz2.CompressFileAsync(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressFileStringString">
            <summary>Sets the shim of Bz2.CompressFile(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressFileToMemAsyncString">
            <summary>Sets the shim of Bz2.CompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressFileToMemString">
            <summary>Sets the shim of Bz2.CompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Bz2.CompressMemToFileAsync(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressMemToFileByteArrayString">
            <summary>Sets the shim of Bz2.CompressMemToFile(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressMemoryAsyncByteArray">
            <summary>Sets the shim of Bz2.CompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.CompressMemoryByteArray">
            <summary>Sets the shim of Bz2.CompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Bz2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Bz2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.Dispose">
            <summary>Sets the shim of Bz2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Bz2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Bz2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Bz2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Bz2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Bz2.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Bz2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Bz2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Bz2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Bz2.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Bz2.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Bz2.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Bz2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Bz2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Bz2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Bz2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Bz2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnAbortCheckAddBz2AbortCheckEventHandler">
            <summary>Sets the shim of Bz2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Bz2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnAbortCheckRemoveBz2AbortCheckEventHandler">
            <summary>Sets the shim of Bz2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnBinaryDataAddBz2BinaryDataEventHandler">
            <summary>Sets the shim of Bz2.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Bz2.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnBinaryDataRemoveBz2BinaryDataEventHandler">
            <summary>Sets the shim of Bz2.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnPercentDoneAddBz2PercentDoneEventHandler">
            <summary>Sets the shim of Bz2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Bz2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnPercentDoneRemoveBz2PercentDoneEventHandler">
            <summary>Sets the shim of Bz2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnProgressInfoAddBz2ProgressInfoEventHandler">
            <summary>Sets the shim of Bz2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Bz2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnProgressInfoRemoveBz2ProgressInfoEventHandler">
            <summary>Sets the shim of Bz2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnTaskCompletedAddBz2TaskCompletedEventHandler">
            <summary>Sets the shim of Bz2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Bz2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnTaskCompletedRemoveBz2TaskCompletedEventHandler">
            <summary>Sets the shim of Bz2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnTextDataAddBz2TextDataEventHandler">
            <summary>Sets the shim of Bz2.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Bz2.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.OnTextDataRemoveBz2TextDataEventHandler">
            <summary>Sets the shim of Bz2.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Bz2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.ToString01">
            <summary>Sets the shim of Bz2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressFileAsyncStringString">
            <summary>Sets the shim of Bz2.UncompressFileAsync(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressFileStringString">
            <summary>Sets the shim of Bz2.UncompressFile(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressFileToMemAsyncString">
            <summary>Sets the shim of Bz2.UncompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressFileToMemString">
            <summary>Sets the shim of Bz2.UncompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Bz2.UncompressMemToFileAsync(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressMemToFileByteArrayString">
            <summary>Sets the shim of Bz2.UncompressMemToFile(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressMemoryAsyncByteArray">
            <summary>Sets the shim of Bz2.UncompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UncompressMemoryByteArray">
            <summary>Sets the shim of Bz2.UncompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Bz2.UnlockComponent(String regCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Bz2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Bz2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances.VersionGet">
            <summary>Sets the shim of Bz2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances._Bz2">
            <summary>Sets the shim of Bz2.!Bz2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.AllInstances._Bz201">
            <summary>Sets the shim of Bz2.~Bz2()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBz2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBz2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimBz2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressFileAsyncStringString">
            <summary>Sets the shim of Bz2.CompressFileAsync(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressFileStringString">
            <summary>Sets the shim of Bz2.CompressFile(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressFileToMemAsyncString">
            <summary>Sets the shim of Bz2.CompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressFileToMemString">
            <summary>Sets the shim of Bz2.CompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Bz2.CompressMemToFileAsync(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressMemToFileByteArrayString">
            <summary>Sets the shim of Bz2.CompressMemToFile(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressMemoryAsyncByteArray">
            <summary>Sets the shim of Bz2.CompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.CompressMemoryByteArray">
            <summary>Sets the shim of Bz2.CompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.Constructor">
            <summary>Sets the shim of Bz2.Bz2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.DebugLogFilePathGet">
            <summary>Sets the shim of Bz2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.DebugLogFilePathSetString">
            <summary>Sets the shim of Bz2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.Dispose">
            <summary>Sets the shim of Bz2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.DisposeBoolean">
            <summary>Sets the shim of Bz2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.EnableEventsGet">
            <summary>Sets the shim of Bz2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.EnableEventsSetBoolean">
            <summary>Sets the shim of Bz2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Bz2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Bz2.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Bz2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Bz2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Bz2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Bz2.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.HeartbeatMsGet">
            <summary>Sets the shim of Bz2.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.HeartbeatMsSetInt32">
            <summary>Sets the shim of Bz2.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.LastErrorHtmlGet">
            <summary>Sets the shim of Bz2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.LastErrorTextGet">
            <summary>Sets the shim of Bz2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.LastErrorXmlGet">
            <summary>Sets the shim of Bz2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.LastMethodSuccessGet">
            <summary>Sets the shim of Bz2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Bz2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnAbortCheckAddBz2AbortCheckEventHandler">
            <summary>Sets the shim of Bz2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Bz2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnAbortCheckRemoveBz2AbortCheckEventHandler">
            <summary>Sets the shim of Bz2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnBinaryDataAddBz2BinaryDataEventHandler">
            <summary>Sets the shim of Bz2.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Bz2.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnBinaryDataRemoveBz2BinaryDataEventHandler">
            <summary>Sets the shim of Bz2.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnPercentDoneAddBz2PercentDoneEventHandler">
            <summary>Sets the shim of Bz2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Bz2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnPercentDoneRemoveBz2PercentDoneEventHandler">
            <summary>Sets the shim of Bz2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnProgressInfoAddBz2ProgressInfoEventHandler">
            <summary>Sets the shim of Bz2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Bz2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnProgressInfoRemoveBz2ProgressInfoEventHandler">
            <summary>Sets the shim of Bz2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnTaskCompletedAddBz2TaskCompletedEventHandler">
            <summary>Sets the shim of Bz2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Bz2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnTaskCompletedRemoveBz2TaskCompletedEventHandler">
            <summary>Sets the shim of Bz2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnTextDataAddBz2TextDataEventHandler">
            <summary>Sets the shim of Bz2.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Bz2.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.OnTextDataRemoveBz2TextDataEventHandler">
            <summary>Sets the shim of Bz2.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.SaveLastErrorString">
            <summary>Sets the shim of Bz2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.ToString">
            <summary>Sets the shim of Bz2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressFileAsyncStringString">
            <summary>Sets the shim of Bz2.UncompressFileAsync(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressFileStringString">
            <summary>Sets the shim of Bz2.UncompressFile(String inFilename, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressFileToMemAsyncString">
            <summary>Sets the shim of Bz2.UncompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressFileToMemString">
            <summary>Sets the shim of Bz2.UncompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Bz2.UncompressMemToFileAsync(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressMemToFileByteArrayString">
            <summary>Sets the shim of Bz2.UncompressMemToFile(Byte[] inData, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressMemoryAsyncByteArray">
            <summary>Sets the shim of Bz2.UncompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UncompressMemoryByteArray">
            <summary>Sets the shim of Bz2.UncompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.UnlockComponentString">
            <summary>Sets the shim of Bz2.UnlockComponent(String regCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.VerboseLoggingGet">
            <summary>Sets the shim of Bz2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Bz2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2.VersionGet">
            <summary>Sets the shim of Bz2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2._Bz2">
            <summary>Sets the shim of Bz2.!Bz2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimBz2._Bz201">
            <summary>Sets the shim of Bz2.~Bz2()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCache">
            <summary>Shim type of Chilkat.Cache</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCache.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCache.#ctor(Chilkat.Cache)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AddRootString">
            <summary>Sets the shim of Cache.AddRoot(String path)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCache.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.AddRootString">
            <summary>Sets the shim of Cache.AddRoot(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Cache.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Cache.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DeleteAll">
            <summary>Sets the shim of Cache.DeleteAll()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DeleteAllExpired">
            <summary>Sets the shim of Cache.DeleteAllExpired()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DeleteFromCacheString">
            <summary>Sets the shim of Cache.DeleteFromCache(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DeleteOlderDateTime">
            <summary>Sets the shim of Cache.DeleteOlder(DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DeleteOlderDtCkDateTime">
            <summary>Sets the shim of Cache.DeleteOlderDt(CkDateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DeleteOlderStrString">
            <summary>Sets the shim of Cache.DeleteOlderStr(String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.Dispose">
            <summary>Sets the shim of Cache.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Cache.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.FetchFromCacheString">
            <summary>Sets the shim of Cache.FetchFromCache(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.FetchTextString">
            <summary>Sets the shim of Cache.FetchText(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.GetEtagString">
            <summary>Sets the shim of Cache.GetEtag(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.GetExpirationDtString">
            <summary>Sets the shim of Cache.GetExpirationDt(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.GetExpirationStrString">
            <summary>Sets the shim of Cache.GetExpirationStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.GetExpirationString">
            <summary>Sets the shim of Cache.GetExpiration(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.GetFilenameString">
            <summary>Sets the shim of Cache.GetFilename(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.GetRootInt32">
            <summary>Sets the shim of Cache.GetRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.IsCachedString">
            <summary>Sets the shim of Cache.IsCached(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Cache.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Cache.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Cache.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastEtagFetchedGet">
            <summary>Sets the shim of Cache.get_LastEtagFetched()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastExpirationFetchedGet">
            <summary>Sets the shim of Cache.get_LastExpirationFetched()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastExpirationFetchedStrGet">
            <summary>Sets the shim of Cache.get_LastExpirationFetchedStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastHitExpiredGet">
            <summary>Sets the shim of Cache.get_LastHitExpired()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastKeyFetchedGet">
            <summary>Sets the shim of Cache.get_LastKeyFetched()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Cache.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Cache.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LevelGet">
            <summary>Sets the shim of Cache.get_Level()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.LevelSetInt32">
            <summary>Sets the shim of Cache.set_Level(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.NumRootsGet">
            <summary>Sets the shim of Cache.get_NumRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Cache.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveTextDtStringCkDateTimeStringString">
            <summary>Sets the shim of Cache.SaveTextDt(String key, CkDateTime expireDateTime, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveTextNoExpireStringStringString">
            <summary>Sets the shim of Cache.SaveTextNoExpire(String key, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveTextStrStringStringStringString">
            <summary>Sets the shim of Cache.SaveTextStr(String key, String expireDateTime, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveTextStringDateTimeStringString">
            <summary>Sets the shim of Cache.SaveText(String key, DateTime expireDateTime, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveToCacheDtStringCkDateTimeStringByteArray">
            <summary>Sets the shim of Cache.SaveToCacheDt(String key, CkDateTime expireDateTime, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveToCacheNoExpireStringStringByteArray">
            <summary>Sets the shim of Cache.SaveToCacheNoExpire(String key, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveToCacheStrStringStringStringByteArray">
            <summary>Sets the shim of Cache.SaveToCacheStr(String key, String expireDateTime, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.SaveToCacheStringDateTimeStringByteArray">
            <summary>Sets the shim of Cache.SaveToCache(String key, DateTime expireDateTime, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.ToString01">
            <summary>Sets the shim of Cache.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.UpdateExpirationDtStringCkDateTime">
            <summary>Sets the shim of Cache.UpdateExpirationDt(String key, CkDateTime expireDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.UpdateExpirationStrStringString">
            <summary>Sets the shim of Cache.UpdateExpirationStr(String key, String expireDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.UpdateExpirationStringDateTime">
            <summary>Sets the shim of Cache.UpdateExpiration(String key, DateTime expireDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Cache.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Cache.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances.VersionGet">
            <summary>Sets the shim of Cache.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances._Cache">
            <summary>Sets the shim of Cache.!Cache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.AllInstances._Cache01">
            <summary>Sets the shim of Cache.~Cache()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCache.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCache.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCache.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.Constructor">
            <summary>Sets the shim of Cache.Cache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DebugLogFilePathGet">
            <summary>Sets the shim of Cache.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DebugLogFilePathSetString">
            <summary>Sets the shim of Cache.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DeleteAll">
            <summary>Sets the shim of Cache.DeleteAll()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DeleteAllExpired">
            <summary>Sets the shim of Cache.DeleteAllExpired()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DeleteFromCacheString">
            <summary>Sets the shim of Cache.DeleteFromCache(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DeleteOlderDateTime">
            <summary>Sets the shim of Cache.DeleteOlder(DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DeleteOlderDtCkDateTime">
            <summary>Sets the shim of Cache.DeleteOlderDt(CkDateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DeleteOlderStrString">
            <summary>Sets the shim of Cache.DeleteOlderStr(String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.Dispose">
            <summary>Sets the shim of Cache.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.DisposeBoolean">
            <summary>Sets the shim of Cache.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.FetchFromCacheString">
            <summary>Sets the shim of Cache.FetchFromCache(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.FetchTextString">
            <summary>Sets the shim of Cache.FetchText(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.GetEtagString">
            <summary>Sets the shim of Cache.GetEtag(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.GetExpirationDtString">
            <summary>Sets the shim of Cache.GetExpirationDt(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.GetExpirationStrString">
            <summary>Sets the shim of Cache.GetExpirationStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.GetExpirationString">
            <summary>Sets the shim of Cache.GetExpiration(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.GetFilenameString">
            <summary>Sets the shim of Cache.GetFilename(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.GetRootInt32">
            <summary>Sets the shim of Cache.GetRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.IsCachedString">
            <summary>Sets the shim of Cache.IsCached(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastErrorHtmlGet">
            <summary>Sets the shim of Cache.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastErrorTextGet">
            <summary>Sets the shim of Cache.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastErrorXmlGet">
            <summary>Sets the shim of Cache.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastEtagFetchedGet">
            <summary>Sets the shim of Cache.get_LastEtagFetched()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastExpirationFetchedGet">
            <summary>Sets the shim of Cache.get_LastExpirationFetched()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastExpirationFetchedStrGet">
            <summary>Sets the shim of Cache.get_LastExpirationFetchedStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastHitExpiredGet">
            <summary>Sets the shim of Cache.get_LastHitExpired()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastKeyFetchedGet">
            <summary>Sets the shim of Cache.get_LastKeyFetched()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastMethodSuccessGet">
            <summary>Sets the shim of Cache.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Cache.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LevelGet">
            <summary>Sets the shim of Cache.get_Level()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.LevelSetInt32">
            <summary>Sets the shim of Cache.set_Level(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.NumRootsGet">
            <summary>Sets the shim of Cache.get_NumRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveLastErrorString">
            <summary>Sets the shim of Cache.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveTextDtStringCkDateTimeStringString">
            <summary>Sets the shim of Cache.SaveTextDt(String key, CkDateTime expireDateTime, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveTextNoExpireStringStringString">
            <summary>Sets the shim of Cache.SaveTextNoExpire(String key, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveTextStrStringStringStringString">
            <summary>Sets the shim of Cache.SaveTextStr(String key, String expireDateTime, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveTextStringDateTimeStringString">
            <summary>Sets the shim of Cache.SaveText(String key, DateTime expireDateTime, String eTag, String itemTextData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveToCacheDtStringCkDateTimeStringByteArray">
            <summary>Sets the shim of Cache.SaveToCacheDt(String key, CkDateTime expireDateTime, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveToCacheNoExpireStringStringByteArray">
            <summary>Sets the shim of Cache.SaveToCacheNoExpire(String key, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveToCacheStrStringStringStringByteArray">
            <summary>Sets the shim of Cache.SaveToCacheStr(String key, String expireDateTime, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.SaveToCacheStringDateTimeStringByteArray">
            <summary>Sets the shim of Cache.SaveToCache(String key, DateTime expireDateTime, String eTag, Byte[] itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.ToString">
            <summary>Sets the shim of Cache.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.UpdateExpirationDtStringCkDateTime">
            <summary>Sets the shim of Cache.UpdateExpirationDt(String key, CkDateTime expireDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.UpdateExpirationStrStringString">
            <summary>Sets the shim of Cache.UpdateExpirationStr(String key, String expireDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.UpdateExpirationStringDateTime">
            <summary>Sets the shim of Cache.UpdateExpiration(String key, DateTime expireDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.VerboseLoggingGet">
            <summary>Sets the shim of Cache.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Cache.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache.VersionGet">
            <summary>Sets the shim of Cache.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache._Cache">
            <summary>Sets the shim of Cache.!Cache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCache._Cache01">
            <summary>Sets the shim of Cache.~Cache()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCert">
            <summary>Shim type of Chilkat.Cert</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCert.#ctor(Chilkat.Cert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.AuthorityKeyIdGet">
            <summary>Sets the shim of Cert.get_AuthorityKeyId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.AvoidWindowsPkAccessGet">
            <summary>Sets the shim of Cert.get_AvoidWindowsPkAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.AvoidWindowsPkAccessSetBoolean">
            <summary>Sets the shim of Cert.set_AvoidWindowsPkAccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.CertVersionGet">
            <summary>Sets the shim of Cert.get_CertVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.CheckRevoked">
            <summary>Sets the shim of Cert.CheckRevoked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.CspNameGet">
            <summary>Sets the shim of Cert.get_CspName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Cert.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Cert.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.Dispose">
            <summary>Sets the shim of Cert.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Cert.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExpiredGet">
            <summary>Sets the shim of Cert.get_Expired()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportCertDer">
            <summary>Sets the shim of Cert.ExportCertDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportCertDerBdBinData">
            <summary>Sets the shim of Cert.ExportCertDerBd(BinData cerData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportCertDerFileString">
            <summary>Sets the shim of Cert.ExportCertDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportCertPem">
            <summary>Sets the shim of Cert.ExportCertPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportCertPemFileString">
            <summary>Sets the shim of Cert.ExportCertPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportCertXml">
            <summary>Sets the shim of Cert.ExportCertXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportPrivateKey">
            <summary>Sets the shim of Cert.ExportPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportPublicKey">
            <summary>Sets the shim of Cert.ExportPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportToPfxBdStringBooleanBinData">
            <summary>Sets the shim of Cert.ExportToPfxBd(String password, Boolean includeCertChain, BinData pfxData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportToPfxDataStringBoolean">
            <summary>Sets the shim of Cert.ExportToPfxData(String password, Boolean includeCertChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ExportToPfxFileStringStringBoolean">
            <summary>Sets the shim of Cert.ExportToPfxFile(String pfxFilename, String pfxPassword, Boolean bIncludeCertChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.FindIssuer">
            <summary>Sets the shim of Cert.FindIssuer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ForClientAuthenticationGet">
            <summary>Sets the shim of Cert.get_ForClientAuthentication()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ForCodeSigningGet">
            <summary>Sets the shim of Cert.get_ForCodeSigning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ForSecureEmailGet">
            <summary>Sets the shim of Cert.get_ForSecureEmail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ForServerAuthenticationGet">
            <summary>Sets the shim of Cert.get_ForServerAuthentication()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ForTimeStampingGet">
            <summary>Sets the shim of Cert.get_ForTimeStamping()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetCertChain">
            <summary>Sets the shim of Cert.GetCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetEncoded">
            <summary>Sets the shim of Cert.GetEncoded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetExtensionAsXmlString">
            <summary>Sets the shim of Cert.GetExtensionAsXml(String oid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetPrivateKeyPem">
            <summary>Sets the shim of Cert.GetPrivateKeyPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetSpkiFingerprintStringString">
            <summary>Sets the shim of Cert.GetSpkiFingerprint(String hashAlg, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetValidFromDt">
            <summary>Sets the shim of Cert.GetValidFromDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.GetValidToDt">
            <summary>Sets the shim of Cert.GetValidToDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.HasKeyContainerGet">
            <summary>Sets the shim of Cert.get_HasKeyContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.HasPrivateKey">
            <summary>Sets the shim of Cert.HasPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IntendedKeyUsageGet">
            <summary>Sets the shim of Cert.get_IntendedKeyUsage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IsRootGet">
            <summary>Sets the shim of Cert.get_IsRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerCGet">
            <summary>Sets the shim of Cert.get_IssuerC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerCNGet">
            <summary>Sets the shim of Cert.get_IssuerCN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerDNGet">
            <summary>Sets the shim of Cert.get_IssuerDN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerEGet">
            <summary>Sets the shim of Cert.get_IssuerE()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerLGet">
            <summary>Sets the shim of Cert.get_IssuerL()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerOGet">
            <summary>Sets the shim of Cert.get_IssuerO()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerOUGet">
            <summary>Sets the shim of Cert.get_IssuerOU()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.IssuerSGet">
            <summary>Sets the shim of Cert.get_IssuerS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.KeyContainerNameGet">
            <summary>Sets the shim of Cert.get_KeyContainerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Cert.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Cert.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Cert.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Cert.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Cert.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LinkPrivateKeyStringBooleanBoolean">
            <summary>Sets the shim of Cert.LinkPrivateKey(String keyContainerName, Boolean bMachineKeyset, Boolean bForSigning)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadByCommonNameString">
            <summary>Sets the shim of Cert.LoadByCommonName(String cn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadByEmailAddressString">
            <summary>Sets the shim of Cert.LoadByEmailAddress(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadByIssuerAndSerialNumberStringString">
            <summary>Sets the shim of Cert.LoadByIssuerAndSerialNumber(String issuerCN, String serialNumber)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadFromBase64String">
            <summary>Sets the shim of Cert.LoadFromBase64(String encodedCert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadFromBdBinData">
            <summary>Sets the shim of Cert.LoadFromBd(BinData certBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadFromBinaryByteArray">
            <summary>Sets the shim of Cert.LoadFromBinary(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadFromFileString">
            <summary>Sets the shim of Cert.LoadFromFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadPemString">
            <summary>Sets the shim of Cert.LoadPem(String strPem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadPfxBdBinDataString">
            <summary>Sets the shim of Cert.LoadPfxBd(BinData pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadPfxDataByteArrayString">
            <summary>Sets the shim of Cert.LoadPfxData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadPfxFileStringString">
            <summary>Sets the shim of Cert.LoadPfxFile(String pfxPath, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of Cert.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.MachineKeysetGet">
            <summary>Sets the shim of Cert.get_MachineKeyset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.OcspUrlGet">
            <summary>Sets the shim of Cert.get_OcspUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.PemFileToDerFileStringString">
            <summary>Sets the shim of Cert.PemFileToDerFile(String fromPath, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.PrivateKeyExportableGet">
            <summary>Sets the shim of Cert.get_PrivateKeyExportable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.RevokedGet">
            <summary>Sets the shim of Cert.get_Revoked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.Rfc822NameGet">
            <summary>Sets the shim of Cert.get_Rfc822Name()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Cert.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SaveToFileString">
            <summary>Sets the shim of Cert.SaveToFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SelfSignedGet">
            <summary>Sets the shim of Cert.get_SelfSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SerialNumberGet">
            <summary>Sets the shim of Cert.get_SerialNumber()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SetFromEncodedString">
            <summary>Sets the shim of Cert.SetFromEncoded(String encodedCert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SetPrivateKeyPemString">
            <summary>Sets the shim of Cert.SetPrivateKeyPem(String privKeyPem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SetPrivateKeyPrivateKey">
            <summary>Sets the shim of Cert.SetPrivateKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.Sha1ThumbprintGet">
            <summary>Sets the shim of Cert.get_Sha1Thumbprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SignatureVerifiedGet">
            <summary>Sets the shim of Cert.get_SignatureVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SilentGet">
            <summary>Sets the shim of Cert.get_Silent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectCGet">
            <summary>Sets the shim of Cert.get_SubjectC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectCNGet">
            <summary>Sets the shim of Cert.get_SubjectCN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectDNGet">
            <summary>Sets the shim of Cert.get_SubjectDN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectEGet">
            <summary>Sets the shim of Cert.get_SubjectE()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectKeyIdGet">
            <summary>Sets the shim of Cert.get_SubjectKeyId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectLGet">
            <summary>Sets the shim of Cert.get_SubjectL()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectOGet">
            <summary>Sets the shim of Cert.get_SubjectO()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectOUGet">
            <summary>Sets the shim of Cert.get_SubjectOU()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.SubjectSGet">
            <summary>Sets the shim of Cert.get_SubjectS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ToString01">
            <summary>Sets the shim of Cert.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.TrustedRootGet">
            <summary>Sets the shim of Cert.get_TrustedRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Cert.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ValidFromGet">
            <summary>Sets the shim of Cert.get_ValidFrom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ValidFromStrGet">
            <summary>Sets the shim of Cert.get_ValidFromStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ValidToGet">
            <summary>Sets the shim of Cert.get_ValidTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.ValidToStrGet">
            <summary>Sets the shim of Cert.get_ValidToStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Cert.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Cert.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.VerifySignature">
            <summary>Sets the shim of Cert.VerifySignature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances.VersionGet">
            <summary>Sets the shim of Cert.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances._Cert">
            <summary>Sets the shim of Cert.!Cert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AllInstances._Cert01">
            <summary>Sets the shim of Cert.~Cert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AuthorityKeyIdGet">
            <summary>Sets the shim of Cert.get_AuthorityKeyId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AvoidWindowsPkAccessGet">
            <summary>Sets the shim of Cert.get_AvoidWindowsPkAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.AvoidWindowsPkAccessSetBoolean">
            <summary>Sets the shim of Cert.set_AvoidWindowsPkAccess(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCert.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.CertVersionGet">
            <summary>Sets the shim of Cert.get_CertVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.CheckRevoked">
            <summary>Sets the shim of Cert.CheckRevoked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.Constructor">
            <summary>Sets the shim of Cert.Cert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.CspNameGet">
            <summary>Sets the shim of Cert.get_CspName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.DebugLogFilePathGet">
            <summary>Sets the shim of Cert.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.DebugLogFilePathSetString">
            <summary>Sets the shim of Cert.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.Dispose">
            <summary>Sets the shim of Cert.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.DisposeBoolean">
            <summary>Sets the shim of Cert.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExpiredGet">
            <summary>Sets the shim of Cert.get_Expired()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportCertDer">
            <summary>Sets the shim of Cert.ExportCertDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportCertDerBdBinData">
            <summary>Sets the shim of Cert.ExportCertDerBd(BinData cerData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportCertDerFileString">
            <summary>Sets the shim of Cert.ExportCertDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportCertPem">
            <summary>Sets the shim of Cert.ExportCertPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportCertPemFileString">
            <summary>Sets the shim of Cert.ExportCertPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportCertXml">
            <summary>Sets the shim of Cert.ExportCertXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportPrivateKey">
            <summary>Sets the shim of Cert.ExportPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportPublicKey">
            <summary>Sets the shim of Cert.ExportPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportToPfxBdStringBooleanBinData">
            <summary>Sets the shim of Cert.ExportToPfxBd(String password, Boolean includeCertChain, BinData pfxData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportToPfxDataStringBoolean">
            <summary>Sets the shim of Cert.ExportToPfxData(String password, Boolean includeCertChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ExportToPfxFileStringStringBoolean">
            <summary>Sets the shim of Cert.ExportToPfxFile(String pfxFilename, String pfxPassword, Boolean bIncludeCertChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.FindIssuer">
            <summary>Sets the shim of Cert.FindIssuer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ForClientAuthenticationGet">
            <summary>Sets the shim of Cert.get_ForClientAuthentication()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ForCodeSigningGet">
            <summary>Sets the shim of Cert.get_ForCodeSigning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ForSecureEmailGet">
            <summary>Sets the shim of Cert.get_ForSecureEmail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ForServerAuthenticationGet">
            <summary>Sets the shim of Cert.get_ForServerAuthentication()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ForTimeStampingGet">
            <summary>Sets the shim of Cert.get_ForTimeStamping()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetCertChain">
            <summary>Sets the shim of Cert.GetCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetEncoded">
            <summary>Sets the shim of Cert.GetEncoded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetExtensionAsXmlString">
            <summary>Sets the shim of Cert.GetExtensionAsXml(String oid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetPrivateKeyPem">
            <summary>Sets the shim of Cert.GetPrivateKeyPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetSpkiFingerprintStringString">
            <summary>Sets the shim of Cert.GetSpkiFingerprint(String hashAlg, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetValidFromDt">
            <summary>Sets the shim of Cert.GetValidFromDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.GetValidToDt">
            <summary>Sets the shim of Cert.GetValidToDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.HasKeyContainerGet">
            <summary>Sets the shim of Cert.get_HasKeyContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.HasPrivateKey">
            <summary>Sets the shim of Cert.HasPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IntendedKeyUsageGet">
            <summary>Sets the shim of Cert.get_IntendedKeyUsage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IsRootGet">
            <summary>Sets the shim of Cert.get_IsRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerCGet">
            <summary>Sets the shim of Cert.get_IssuerC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerCNGet">
            <summary>Sets the shim of Cert.get_IssuerCN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerDNGet">
            <summary>Sets the shim of Cert.get_IssuerDN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerEGet">
            <summary>Sets the shim of Cert.get_IssuerE()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerLGet">
            <summary>Sets the shim of Cert.get_IssuerL()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerOGet">
            <summary>Sets the shim of Cert.get_IssuerO()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerOUGet">
            <summary>Sets the shim of Cert.get_IssuerOU()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.IssuerSGet">
            <summary>Sets the shim of Cert.get_IssuerS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.KeyContainerNameGet">
            <summary>Sets the shim of Cert.get_KeyContainerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LastErrorHtmlGet">
            <summary>Sets the shim of Cert.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LastErrorTextGet">
            <summary>Sets the shim of Cert.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LastErrorXmlGet">
            <summary>Sets the shim of Cert.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LastMethodSuccessGet">
            <summary>Sets the shim of Cert.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Cert.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LinkPrivateKeyStringBooleanBoolean">
            <summary>Sets the shim of Cert.LinkPrivateKey(String keyContainerName, Boolean bMachineKeyset, Boolean bForSigning)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadByCommonNameString">
            <summary>Sets the shim of Cert.LoadByCommonName(String cn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadByEmailAddressString">
            <summary>Sets the shim of Cert.LoadByEmailAddress(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadByIssuerAndSerialNumberStringString">
            <summary>Sets the shim of Cert.LoadByIssuerAndSerialNumber(String issuerCN, String serialNumber)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadFromBase64String">
            <summary>Sets the shim of Cert.LoadFromBase64(String encodedCert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadFromBdBinData">
            <summary>Sets the shim of Cert.LoadFromBd(BinData certBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadFromBinaryByteArray">
            <summary>Sets the shim of Cert.LoadFromBinary(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadFromFileString">
            <summary>Sets the shim of Cert.LoadFromFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadPemString">
            <summary>Sets the shim of Cert.LoadPem(String strPem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadPfxBdBinDataString">
            <summary>Sets the shim of Cert.LoadPfxBd(BinData pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadPfxDataByteArrayString">
            <summary>Sets the shim of Cert.LoadPfxData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadPfxFileStringString">
            <summary>Sets the shim of Cert.LoadPfxFile(String pfxPath, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.LoadTaskResultTask">
            <summary>Sets the shim of Cert.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.MachineKeysetGet">
            <summary>Sets the shim of Cert.get_MachineKeyset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.OcspUrlGet">
            <summary>Sets the shim of Cert.get_OcspUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.PemFileToDerFileStringString">
            <summary>Sets the shim of Cert.PemFileToDerFile(String fromPath, String toPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.PrivateKeyExportableGet">
            <summary>Sets the shim of Cert.get_PrivateKeyExportable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.RevokedGet">
            <summary>Sets the shim of Cert.get_Revoked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.Rfc822NameGet">
            <summary>Sets the shim of Cert.get_Rfc822Name()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SaveLastErrorString">
            <summary>Sets the shim of Cert.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SaveToFileString">
            <summary>Sets the shim of Cert.SaveToFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SelfSignedGet">
            <summary>Sets the shim of Cert.get_SelfSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SerialNumberGet">
            <summary>Sets the shim of Cert.get_SerialNumber()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SetFromEncodedString">
            <summary>Sets the shim of Cert.SetFromEncoded(String encodedCert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SetPrivateKeyPemString">
            <summary>Sets the shim of Cert.SetPrivateKeyPem(String privKeyPem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SetPrivateKeyPrivateKey">
            <summary>Sets the shim of Cert.SetPrivateKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.Sha1ThumbprintGet">
            <summary>Sets the shim of Cert.get_Sha1Thumbprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SignatureVerifiedGet">
            <summary>Sets the shim of Cert.get_SignatureVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SilentGet">
            <summary>Sets the shim of Cert.get_Silent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectCGet">
            <summary>Sets the shim of Cert.get_SubjectC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectCNGet">
            <summary>Sets the shim of Cert.get_SubjectCN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectDNGet">
            <summary>Sets the shim of Cert.get_SubjectDN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectEGet">
            <summary>Sets the shim of Cert.get_SubjectE()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectKeyIdGet">
            <summary>Sets the shim of Cert.get_SubjectKeyId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectLGet">
            <summary>Sets the shim of Cert.get_SubjectL()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectOGet">
            <summary>Sets the shim of Cert.get_SubjectO()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectOUGet">
            <summary>Sets the shim of Cert.get_SubjectOU()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.SubjectSGet">
            <summary>Sets the shim of Cert.get_SubjectS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ToString">
            <summary>Sets the shim of Cert.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.TrustedRootGet">
            <summary>Sets the shim of Cert.get_TrustedRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Cert.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ValidFromGet">
            <summary>Sets the shim of Cert.get_ValidFrom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ValidFromStrGet">
            <summary>Sets the shim of Cert.get_ValidFromStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ValidToGet">
            <summary>Sets the shim of Cert.get_ValidTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.ValidToStrGet">
            <summary>Sets the shim of Cert.get_ValidToStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.VerboseLoggingGet">
            <summary>Sets the shim of Cert.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Cert.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.VerifySignature">
            <summary>Sets the shim of Cert.VerifySignature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert.VersionGet">
            <summary>Sets the shim of Cert.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert._Cert">
            <summary>Sets the shim of Cert.!Cert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCert._Cert01">
            <summary>Sets the shim of Cert.~Cert()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCertChain">
            <summary>Shim type of Chilkat.CertChain</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertChain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertChain.#ctor(Chilkat.CertChain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCertChain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of CertChain.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of CertChain.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.Dispose">
            <summary>Sets the shim of CertChain.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CertChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.GetCertInt32">
            <summary>Sets the shim of CertChain.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.IsRootTrustedTrustedRoots">
            <summary>Sets the shim of CertChain.IsRootTrusted(TrustedRoots trustedRoots)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of CertChain.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of CertChain.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of CertChain.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of CertChain.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of CertChain.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.LoadX5CJsonObject">
            <summary>Sets the shim of CertChain.LoadX5C(JsonObject jwk)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.NumCertsGet">
            <summary>Sets the shim of CertChain.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.NumExpiredCertsGet">
            <summary>Sets the shim of CertChain.get_NumExpiredCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.ReachesRootGet">
            <summary>Sets the shim of CertChain.get_ReachesRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of CertChain.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.ToString01">
            <summary>Sets the shim of CertChain.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of CertChain.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of CertChain.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.VerifyCertSignatures">
            <summary>Sets the shim of CertChain.VerifyCertSignatures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances.VersionGet">
            <summary>Sets the shim of CertChain.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances._CertChain">
            <summary>Sets the shim of CertChain.!CertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.AllInstances._CertChain01">
            <summary>Sets the shim of CertChain.~CertChain()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertChain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertChain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertChain.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.Constructor">
            <summary>Sets the shim of CertChain.CertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.DebugLogFilePathGet">
            <summary>Sets the shim of CertChain.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.DebugLogFilePathSetString">
            <summary>Sets the shim of CertChain.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.Dispose">
            <summary>Sets the shim of CertChain.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.DisposeBoolean">
            <summary>Sets the shim of CertChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.GetCertInt32">
            <summary>Sets the shim of CertChain.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.IsRootTrustedTrustedRoots">
            <summary>Sets the shim of CertChain.IsRootTrusted(TrustedRoots trustedRoots)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.LastErrorHtmlGet">
            <summary>Sets the shim of CertChain.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.LastErrorTextGet">
            <summary>Sets the shim of CertChain.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.LastErrorXmlGet">
            <summary>Sets the shim of CertChain.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.LastMethodSuccessGet">
            <summary>Sets the shim of CertChain.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of CertChain.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.LoadX5CJsonObject">
            <summary>Sets the shim of CertChain.LoadX5C(JsonObject jwk)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.NumCertsGet">
            <summary>Sets the shim of CertChain.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.NumExpiredCertsGet">
            <summary>Sets the shim of CertChain.get_NumExpiredCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.ReachesRootGet">
            <summary>Sets the shim of CertChain.get_ReachesRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.SaveLastErrorString">
            <summary>Sets the shim of CertChain.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.ToString">
            <summary>Sets the shim of CertChain.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.VerboseLoggingGet">
            <summary>Sets the shim of CertChain.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.VerboseLoggingSetBoolean">
            <summary>Sets the shim of CertChain.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.VerifyCertSignatures">
            <summary>Sets the shim of CertChain.VerifyCertSignatures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain.VersionGet">
            <summary>Sets the shim of CertChain.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain._CertChain">
            <summary>Sets the shim of CertChain.!CertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertChain._CertChain01">
            <summary>Sets the shim of CertChain.~CertChain()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCertStore">
            <summary>Shim type of Chilkat.CertStore</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertStore.#ctor(Chilkat.CertStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AddCertificateCert">
            <summary>Sets the shim of CertStore.AddCertificate(Cert cert)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCertStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.AddCertificateCert">
            <summary>Sets the shim of CertStore.AddCertificate(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.AvoidWindowsPkAccessGet">
            <summary>Sets the shim of CertStore.get_AvoidWindowsPkAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.AvoidWindowsPkAccessSetBoolean">
            <summary>Sets the shim of CertStore.set_AvoidWindowsPkAccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.CreateFileStoreString">
            <summary>Sets the shim of CertStore.CreateFileStore(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.CreateMemoryStore">
            <summary>Sets the shim of CertStore.CreateMemoryStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.CreateRegistryStoreStringString">
            <summary>Sets the shim of CertStore.CreateRegistryStore(String regRoot, String regPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of CertStore.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of CertStore.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.Dispose">
            <summary>Sets the shim of CertStore.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CertStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertByRfc822NameString">
            <summary>Sets the shim of CertStore.FindCertByRfc822Name(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertBySerialString">
            <summary>Sets the shim of CertStore.FindCertBySerial(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertBySha1ThumbprintString">
            <summary>Sets the shim of CertStore.FindCertBySha1Thumbprint(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertBySubjectCNString">
            <summary>Sets the shim of CertStore.FindCertBySubjectCN(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertBySubjectEString">
            <summary>Sets the shim of CertStore.FindCertBySubjectE(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertBySubjectOString">
            <summary>Sets the shim of CertStore.FindCertBySubjectO(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertBySubjectString">
            <summary>Sets the shim of CertStore.FindCertBySubject(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.FindCertForEmailString">
            <summary>Sets the shim of CertStore.FindCertForEmail(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.GetCertificateInt32">
            <summary>Sets the shim of CertStore.GetCertificate(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.GetEmailCertInt32">
            <summary>Sets the shim of CertStore.GetEmailCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of CertStore.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of CertStore.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of CertStore.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of CertStore.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of CertStore.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LoadPemFileString">
            <summary>Sets the shim of CertStore.LoadPemFile(String pemPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LoadPemStrString">
            <summary>Sets the shim of CertStore.LoadPemStr(String pemString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LoadPfxDataByteArrayString">
            <summary>Sets the shim of CertStore.LoadPfxData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.LoadPfxFileStringString">
            <summary>Sets the shim of CertStore.LoadPfxFile(String pfxFilename, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.NumCertificatesGet">
            <summary>Sets the shim of CertStore.get_NumCertificates()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.NumEmailCertsGet">
            <summary>Sets the shim of CertStore.get_NumEmailCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenChilkatStoreBoolean">
            <summary>Sets the shim of CertStore.OpenChilkatStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenCurrentUserStoreBoolean">
            <summary>Sets the shim of CertStore.OpenCurrentUserStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenFileStoreStringBoolean">
            <summary>Sets the shim of CertStore.OpenFileStore(String filename, Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenLocalSystemStoreBoolean">
            <summary>Sets the shim of CertStore.OpenLocalSystemStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenOutlookStoreBoolean">
            <summary>Sets the shim of CertStore.OpenOutlookStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenRegistryStoreStringStringBoolean">
            <summary>Sets the shim of CertStore.OpenRegistryStore(String regRoot, String regPath, Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.OpenWindowsStoreStringStringBoolean">
            <summary>Sets the shim of CertStore.OpenWindowsStore(String storeLocation, String storeName, Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.RemoveCertificateCert">
            <summary>Sets the shim of CertStore.RemoveCertificate(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of CertStore.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.ToString01">
            <summary>Sets the shim of CertStore.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of CertStore.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of CertStore.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances.VersionGet">
            <summary>Sets the shim of CertStore.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances._CertStore">
            <summary>Sets the shim of CertStore.!CertStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AllInstances._CertStore01">
            <summary>Sets the shim of CertStore.~CertStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AvoidWindowsPkAccessGet">
            <summary>Sets the shim of CertStore.get_AvoidWindowsPkAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.AvoidWindowsPkAccessSetBoolean">
            <summary>Sets the shim of CertStore.set_AvoidWindowsPkAccess(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCertStore.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.Constructor">
            <summary>Sets the shim of CertStore.CertStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.CreateFileStoreString">
            <summary>Sets the shim of CertStore.CreateFileStore(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.CreateMemoryStore">
            <summary>Sets the shim of CertStore.CreateMemoryStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.CreateRegistryStoreStringString">
            <summary>Sets the shim of CertStore.CreateRegistryStore(String regRoot, String regPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.DebugLogFilePathGet">
            <summary>Sets the shim of CertStore.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.DebugLogFilePathSetString">
            <summary>Sets the shim of CertStore.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.Dispose">
            <summary>Sets the shim of CertStore.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.DisposeBoolean">
            <summary>Sets the shim of CertStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertByRfc822NameString">
            <summary>Sets the shim of CertStore.FindCertByRfc822Name(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertBySerialString">
            <summary>Sets the shim of CertStore.FindCertBySerial(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertBySha1ThumbprintString">
            <summary>Sets the shim of CertStore.FindCertBySha1Thumbprint(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertBySubjectCNString">
            <summary>Sets the shim of CertStore.FindCertBySubjectCN(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertBySubjectEString">
            <summary>Sets the shim of CertStore.FindCertBySubjectE(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertBySubjectOString">
            <summary>Sets the shim of CertStore.FindCertBySubjectO(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertBySubjectString">
            <summary>Sets the shim of CertStore.FindCertBySubject(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.FindCertForEmailString">
            <summary>Sets the shim of CertStore.FindCertForEmail(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.GetCertificateInt32">
            <summary>Sets the shim of CertStore.GetCertificate(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.GetEmailCertInt32">
            <summary>Sets the shim of CertStore.GetEmailCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LastErrorHtmlGet">
            <summary>Sets the shim of CertStore.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LastErrorTextGet">
            <summary>Sets the shim of CertStore.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LastErrorXmlGet">
            <summary>Sets the shim of CertStore.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LastMethodSuccessGet">
            <summary>Sets the shim of CertStore.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of CertStore.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LoadPemFileString">
            <summary>Sets the shim of CertStore.LoadPemFile(String pemPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LoadPemStrString">
            <summary>Sets the shim of CertStore.LoadPemStr(String pemString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LoadPfxDataByteArrayString">
            <summary>Sets the shim of CertStore.LoadPfxData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.LoadPfxFileStringString">
            <summary>Sets the shim of CertStore.LoadPfxFile(String pfxFilename, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.NumCertificatesGet">
            <summary>Sets the shim of CertStore.get_NumCertificates()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.NumEmailCertsGet">
            <summary>Sets the shim of CertStore.get_NumEmailCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenChilkatStoreBoolean">
            <summary>Sets the shim of CertStore.OpenChilkatStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenCurrentUserStoreBoolean">
            <summary>Sets the shim of CertStore.OpenCurrentUserStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenFileStoreStringBoolean">
            <summary>Sets the shim of CertStore.OpenFileStore(String filename, Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenLocalSystemStoreBoolean">
            <summary>Sets the shim of CertStore.OpenLocalSystemStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenOutlookStoreBoolean">
            <summary>Sets the shim of CertStore.OpenOutlookStore(Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenRegistryStoreStringStringBoolean">
            <summary>Sets the shim of CertStore.OpenRegistryStore(String regRoot, String regPath, Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.OpenWindowsStoreStringStringBoolean">
            <summary>Sets the shim of CertStore.OpenWindowsStore(String storeLocation, String storeName, Boolean readOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.RemoveCertificateCert">
            <summary>Sets the shim of CertStore.RemoveCertificate(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.SaveLastErrorString">
            <summary>Sets the shim of CertStore.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.ToString">
            <summary>Sets the shim of CertStore.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.VerboseLoggingGet">
            <summary>Sets the shim of CertStore.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.VerboseLoggingSetBoolean">
            <summary>Sets the shim of CertStore.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore.VersionGet">
            <summary>Sets the shim of CertStore.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore._CertStore">
            <summary>Sets the shim of CertStore.!CertStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCertStore._CertStore01">
            <summary>Sets the shim of CertStore.~CertStore()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCharset">
            <summary>Shim type of Chilkat.Charset</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCharset.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCharset.#ctor(Chilkat.Charset)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCharset.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.AltToCharsetGet">
            <summary>Sets the shim of Charset.get_AltToCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.AltToCharsetSetString">
            <summary>Sets the shim of Charset.set_AltToCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.CharsetToCodePageString">
            <summary>Sets the shim of Charset.CharsetToCodePage(String charsetName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.CodePageToCharsetInt32">
            <summary>Sets the shim of Charset.CodePageToCharset(Int32 codePage)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertDataByteArray">
            <summary>Sets the shim of Charset.ConvertData(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertFileNoPreambleStringString">
            <summary>Sets the shim of Charset.ConvertFileNoPreamble(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertFileStringString">
            <summary>Sets the shim of Charset.ConvertFile(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertFromUnicodeString">
            <summary>Sets the shim of Charset.ConvertFromUnicode(String inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertFromUtf16ByteArray">
            <summary>Sets the shim of Charset.ConvertFromUtf16(Byte[] uniData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertHtmlByteArray">
            <summary>Sets the shim of Charset.ConvertHtml(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertHtmlFileStringString">
            <summary>Sets the shim of Charset.ConvertHtmlFile(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertToUnicodeByteArray">
            <summary>Sets the shim of Charset.ConvertToUnicode(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ConvertToUtf16ByteArray">
            <summary>Sets the shim of Charset.ConvertToUtf16(Byte[] mbData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Charset.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Charset.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.Dispose">
            <summary>Sets the shim of Charset.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Charset.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.EntityEncodeDecString">
            <summary>Sets the shim of Charset.EntityEncodeDec(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.EntityEncodeHexString">
            <summary>Sets the shim of Charset.EntityEncodeHex(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ErrorActionGet">
            <summary>Sets the shim of Charset.get_ErrorAction()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ErrorActionSetInt32">
            <summary>Sets the shim of Charset.set_ErrorAction(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.FromCharsetGet">
            <summary>Sets the shim of Charset.get_FromCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.FromCharsetSetString">
            <summary>Sets the shim of Charset.set_FromCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.GetHtmlCharsetByteArray">
            <summary>Sets the shim of Charset.GetHtmlCharset(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.GetHtmlFileCharsetString">
            <summary>Sets the shim of Charset.GetHtmlFileCharset(String htmlFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.HtmlDecodeToStrString">
            <summary>Sets the shim of Charset.HtmlDecodeToStr(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.HtmlEntityDecodeByteArray">
            <summary>Sets the shim of Charset.HtmlEntityDecode(Byte[] inHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.HtmlEntityDecodeFileStringString">
            <summary>Sets the shim of Charset.HtmlEntityDecodeFile(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.IsUnlocked">
            <summary>Sets the shim of Charset.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Charset.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Charset.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Charset.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastInputAsHexGet">
            <summary>Sets the shim of Charset.get_LastInputAsHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastInputAsQPGet">
            <summary>Sets the shim of Charset.get_LastInputAsQP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Charset.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Charset.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastOutputAsHexGet">
            <summary>Sets the shim of Charset.get_LastOutputAsHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LastOutputAsQPGet">
            <summary>Sets the shim of Charset.get_LastOutputAsQP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.LowerCaseString">
            <summary>Sets the shim of Charset.LowerCase(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ReadFileString">
            <summary>Sets the shim of Charset.ReadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ReadFileToStringStringString">
            <summary>Sets the shim of Charset.ReadFileToString(String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Charset.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.SaveLastGet">
            <summary>Sets the shim of Charset.get_SaveLast()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.SaveLastSetBoolean">
            <summary>Sets the shim of Charset.set_SaveLast(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.SetErrorBytesByteArray">
            <summary>Sets the shim of Charset.SetErrorBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.SetErrorStringStringString">
            <summary>Sets the shim of Charset.SetErrorString(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ToCharsetGet">
            <summary>Sets the shim of Charset.get_ToCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ToCharsetSetString">
            <summary>Sets the shim of Charset.set_ToCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.ToString01">
            <summary>Sets the shim of Charset.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Charset.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.UpperCaseString">
            <summary>Sets the shim of Charset.UpperCase(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.UrlDecodeStrString">
            <summary>Sets the shim of Charset.UrlDecodeStr(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Charset.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Charset.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.VerifyDataStringByteArray">
            <summary>Sets the shim of Charset.VerifyData(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.VerifyFileStringString">
            <summary>Sets the shim of Charset.VerifyFile(String charset, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.VersionGet">
            <summary>Sets the shim of Charset.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.WriteFileStringByteArray">
            <summary>Sets the shim of Charset.WriteFile(String path, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances.WriteStringToFileStringStringString">
            <summary>Sets the shim of Charset.WriteStringToFile(String textData, String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances._Charset">
            <summary>Sets the shim of Charset.!Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AllInstances._Charset01">
            <summary>Sets the shim of Charset.~Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AltToCharsetGet">
            <summary>Sets the shim of Charset.get_AltToCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.AltToCharsetSetString">
            <summary>Sets the shim of Charset.set_AltToCharset(String propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCharset.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCharset.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCharset.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.CharsetToCodePageString">
            <summary>Sets the shim of Charset.CharsetToCodePage(String charsetName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.CodePageToCharsetInt32">
            <summary>Sets the shim of Charset.CodePageToCharset(Int32 codePage)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.Constructor">
            <summary>Sets the shim of Charset.Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertDataByteArray">
            <summary>Sets the shim of Charset.ConvertData(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertFileNoPreambleStringString">
            <summary>Sets the shim of Charset.ConvertFileNoPreamble(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertFileStringString">
            <summary>Sets the shim of Charset.ConvertFile(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertFromUnicodeString">
            <summary>Sets the shim of Charset.ConvertFromUnicode(String inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertFromUtf16ByteArray">
            <summary>Sets the shim of Charset.ConvertFromUtf16(Byte[] uniData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertHtmlByteArray">
            <summary>Sets the shim of Charset.ConvertHtml(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertHtmlFileStringString">
            <summary>Sets the shim of Charset.ConvertHtmlFile(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertToUnicodeByteArray">
            <summary>Sets the shim of Charset.ConvertToUnicode(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ConvertToUtf16ByteArray">
            <summary>Sets the shim of Charset.ConvertToUtf16(Byte[] mbData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.DebugLogFilePathGet">
            <summary>Sets the shim of Charset.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.DebugLogFilePathSetString">
            <summary>Sets the shim of Charset.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.Dispose">
            <summary>Sets the shim of Charset.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.DisposeBoolean">
            <summary>Sets the shim of Charset.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.EntityEncodeDecString">
            <summary>Sets the shim of Charset.EntityEncodeDec(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.EntityEncodeHexString">
            <summary>Sets the shim of Charset.EntityEncodeHex(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ErrorActionGet">
            <summary>Sets the shim of Charset.get_ErrorAction()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ErrorActionSetInt32">
            <summary>Sets the shim of Charset.set_ErrorAction(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.FromCharsetGet">
            <summary>Sets the shim of Charset.get_FromCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.FromCharsetSetString">
            <summary>Sets the shim of Charset.set_FromCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.GetHtmlCharsetByteArray">
            <summary>Sets the shim of Charset.GetHtmlCharset(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.GetHtmlFileCharsetString">
            <summary>Sets the shim of Charset.GetHtmlFileCharset(String htmlFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.HtmlDecodeToStrString">
            <summary>Sets the shim of Charset.HtmlDecodeToStr(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.HtmlEntityDecodeByteArray">
            <summary>Sets the shim of Charset.HtmlEntityDecode(Byte[] inHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.HtmlEntityDecodeFileStringString">
            <summary>Sets the shim of Charset.HtmlEntityDecodeFile(String inPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.IsUnlocked">
            <summary>Sets the shim of Charset.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastErrorHtmlGet">
            <summary>Sets the shim of Charset.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastErrorTextGet">
            <summary>Sets the shim of Charset.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastErrorXmlGet">
            <summary>Sets the shim of Charset.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastInputAsHexGet">
            <summary>Sets the shim of Charset.get_LastInputAsHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastInputAsQPGet">
            <summary>Sets the shim of Charset.get_LastInputAsQP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastMethodSuccessGet">
            <summary>Sets the shim of Charset.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Charset.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastOutputAsHexGet">
            <summary>Sets the shim of Charset.get_LastOutputAsHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LastOutputAsQPGet">
            <summary>Sets the shim of Charset.get_LastOutputAsQP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.LowerCaseString">
            <summary>Sets the shim of Charset.LowerCase(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ReadFileString">
            <summary>Sets the shim of Charset.ReadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ReadFileToStringStringString">
            <summary>Sets the shim of Charset.ReadFileToString(String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.SaveLastErrorString">
            <summary>Sets the shim of Charset.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.SaveLastGet">
            <summary>Sets the shim of Charset.get_SaveLast()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.SaveLastSetBoolean">
            <summary>Sets the shim of Charset.set_SaveLast(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.SetErrorBytesByteArray">
            <summary>Sets the shim of Charset.SetErrorBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.SetErrorStringStringString">
            <summary>Sets the shim of Charset.SetErrorString(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ToCharsetGet">
            <summary>Sets the shim of Charset.get_ToCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ToCharsetSetString">
            <summary>Sets the shim of Charset.set_ToCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.ToString">
            <summary>Sets the shim of Charset.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.UnlockComponentString">
            <summary>Sets the shim of Charset.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.UpperCaseString">
            <summary>Sets the shim of Charset.UpperCase(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.UrlDecodeStrString">
            <summary>Sets the shim of Charset.UrlDecodeStr(String inStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.VerboseLoggingGet">
            <summary>Sets the shim of Charset.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Charset.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.VerifyDataStringByteArray">
            <summary>Sets the shim of Charset.VerifyData(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.VerifyFileStringString">
            <summary>Sets the shim of Charset.VerifyFile(String charset, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.VersionGet">
            <summary>Sets the shim of Charset.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.WriteFileStringByteArray">
            <summary>Sets the shim of Charset.WriteFile(String path, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset.WriteStringToFileStringStringString">
            <summary>Sets the shim of Charset.WriteStringToFile(String textData, String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset._Charset">
            <summary>Sets the shim of Charset.!Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCharset._Charset01">
            <summary>Sets the shim of Charset.~Charset()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCkDateTime">
            <summary>Shim type of Chilkat.CkDateTime</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkDateTime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkDateTime.#ctor(Chilkat.CkDateTime)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AddDaysInt32">
            <summary>Sets the shim of CkDateTime.AddDays(Int32 numDays)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AddSecondsInt32">
            <summary>Sets the shim of CkDateTime.AddSeconds(Int32 numSeconds)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCkDateTime.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.AddDaysInt32">
            <summary>Sets the shim of CkDateTime.AddDays(Int32 numDays)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.AddSecondsInt32">
            <summary>Sets the shim of CkDateTime.AddSeconds(Int32 numSeconds)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.DeSerializeString">
            <summary>Sets the shim of CkDateTime.DeSerialize(String serializedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.DiffSecondsCkDateTime">
            <summary>Sets the shim of CkDateTime.DiffSeconds(CkDateTime dtArg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.Dispose">
            <summary>Sets the shim of CkDateTime.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CkDateTime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.ExpiresWithinInt32String">
            <summary>Sets the shim of CkDateTime.ExpiresWithin(Int32 n, String units)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsDateTimeBoolean">
            <summary>Sets the shim of CkDateTime.GetAsDateTime(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsDateTimeTicksBoolean">
            <summary>Sets the shim of CkDateTime.GetAsDateTimeTicks(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsDosDateBoolean">
            <summary>Sets the shim of CkDateTime.GetAsDosDate(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsIso8601StringBoolean">
            <summary>Sets the shim of CkDateTime.GetAsIso8601(String formatStr, Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsOleDateBoolean">
            <summary>Sets the shim of CkDateTime.GetAsOleDate(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsRfc822Boolean">
            <summary>Sets the shim of CkDateTime.GetAsRfc822(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsTimestampBoolean">
            <summary>Sets the shim of CkDateTime.GetAsTimestamp(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsUnixTime64Boolean">
            <summary>Sets the shim of CkDateTime.GetAsUnixTime64(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsUnixTimeBoolean">
            <summary>Sets the shim of CkDateTime.GetAsUnixTime(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetAsUnixTimeStrBoolean">
            <summary>Sets the shim of CkDateTime.GetAsUnixTimeStr(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.GetDtObjBoolean">
            <summary>Sets the shim of CkDateTime.GetDtObj(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.IsDstGet">
            <summary>Sets the shim of CkDateTime.get_IsDst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of CkDateTime.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of CkDateTime.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of CkDateTime.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.OlderThanInt32String">
            <summary>Sets the shim of CkDateTime.OlderThan(Int32 n, String units)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of CkDateTime.SaveLastError(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.Serialize">
            <summary>Sets the shim of CkDateTime.Serialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromCurrentSystemTime">
            <summary>Sets the shim of CkDateTime.SetFromCurrentSystemTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromDateTimeBooleanDateTime">
            <summary>Sets the shim of CkDateTime.SetFromDateTime(Boolean bLocal, DateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromDateTimeTicksBooleanInt64">
            <summary>Sets the shim of CkDateTime.SetFromDateTimeTicks(Boolean bLocal, Int64 ticks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromDosDateBooleanUInt32">
            <summary>Sets the shim of CkDateTime.SetFromDosDate(Boolean bLocal, UInt32 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromDtObjDtObj">
            <summary>Sets the shim of CkDateTime.SetFromDtObj(DtObj dtObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromNtpTimeInt32">
            <summary>Sets the shim of CkDateTime.SetFromNtpTime(Int32 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromOleDateBooleanDouble">
            <summary>Sets the shim of CkDateTime.SetFromOleDate(Boolean bLocal, Double dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromRfc822String">
            <summary>Sets the shim of CkDateTime.SetFromRfc822(String rfc822Str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromTimestampString">
            <summary>Sets the shim of CkDateTime.SetFromTimestamp(String ios8061Str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromUnixTime64BooleanInt64">
            <summary>Sets the shim of CkDateTime.SetFromUnixTime64(Boolean bLocal, Int64 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.SetFromUnixTimeBooleanInt32">
            <summary>Sets the shim of CkDateTime.SetFromUnixTime(Boolean bLocal, Int32 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances.UtcOffsetGet">
            <summary>Sets the shim of CkDateTime.get_UtcOffset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances._CkDateTime">
            <summary>Sets the shim of CkDateTime.!CkDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.AllInstances._CkDateTime01">
            <summary>Sets the shim of CkDateTime.~CkDateTime()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkDateTime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkDateTime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkDateTime.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.Constructor">
            <summary>Sets the shim of CkDateTime.CkDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.DeSerializeString">
            <summary>Sets the shim of CkDateTime.DeSerialize(String serializedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.DiffSecondsCkDateTime">
            <summary>Sets the shim of CkDateTime.DiffSeconds(CkDateTime dtArg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.Dispose">
            <summary>Sets the shim of CkDateTime.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.DisposeBoolean">
            <summary>Sets the shim of CkDateTime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.ExpiresWithinInt32String">
            <summary>Sets the shim of CkDateTime.ExpiresWithin(Int32 n, String units)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsDateTimeBoolean">
            <summary>Sets the shim of CkDateTime.GetAsDateTime(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsDateTimeTicksBoolean">
            <summary>Sets the shim of CkDateTime.GetAsDateTimeTicks(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsDosDateBoolean">
            <summary>Sets the shim of CkDateTime.GetAsDosDate(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsIso8601StringBoolean">
            <summary>Sets the shim of CkDateTime.GetAsIso8601(String formatStr, Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsOleDateBoolean">
            <summary>Sets the shim of CkDateTime.GetAsOleDate(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsRfc822Boolean">
            <summary>Sets the shim of CkDateTime.GetAsRfc822(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsTimestampBoolean">
            <summary>Sets the shim of CkDateTime.GetAsTimestamp(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsUnixTime64Boolean">
            <summary>Sets the shim of CkDateTime.GetAsUnixTime64(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsUnixTimeBoolean">
            <summary>Sets the shim of CkDateTime.GetAsUnixTime(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetAsUnixTimeStrBoolean">
            <summary>Sets the shim of CkDateTime.GetAsUnixTimeStr(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.GetDtObjBoolean">
            <summary>Sets the shim of CkDateTime.GetDtObj(Boolean bLocal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.IsDstGet">
            <summary>Sets the shim of CkDateTime.get_IsDst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.LastErrorHtmlGet">
            <summary>Sets the shim of CkDateTime.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.LastErrorTextGet">
            <summary>Sets the shim of CkDateTime.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.LastErrorXmlGet">
            <summary>Sets the shim of CkDateTime.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.OlderThanInt32String">
            <summary>Sets the shim of CkDateTime.OlderThan(Int32 n, String units)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SaveLastErrorString">
            <summary>Sets the shim of CkDateTime.SaveLastError(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.Serialize">
            <summary>Sets the shim of CkDateTime.Serialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromCurrentSystemTime">
            <summary>Sets the shim of CkDateTime.SetFromCurrentSystemTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromDateTimeBooleanDateTime">
            <summary>Sets the shim of CkDateTime.SetFromDateTime(Boolean bLocal, DateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromDateTimeTicksBooleanInt64">
            <summary>Sets the shim of CkDateTime.SetFromDateTimeTicks(Boolean bLocal, Int64 ticks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromDosDateBooleanUInt32">
            <summary>Sets the shim of CkDateTime.SetFromDosDate(Boolean bLocal, UInt32 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromDtObjDtObj">
            <summary>Sets the shim of CkDateTime.SetFromDtObj(DtObj dtObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromNtpTimeInt32">
            <summary>Sets the shim of CkDateTime.SetFromNtpTime(Int32 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromOleDateBooleanDouble">
            <summary>Sets the shim of CkDateTime.SetFromOleDate(Boolean bLocal, Double dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromRfc822String">
            <summary>Sets the shim of CkDateTime.SetFromRfc822(String rfc822Str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromTimestampString">
            <summary>Sets the shim of CkDateTime.SetFromTimestamp(String ios8061Str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromUnixTime64BooleanInt64">
            <summary>Sets the shim of CkDateTime.SetFromUnixTime64(Boolean bLocal, Int64 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.SetFromUnixTimeBooleanInt32">
            <summary>Sets the shim of CkDateTime.SetFromUnixTime(Boolean bLocal, Int32 t)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime.UtcOffsetGet">
            <summary>Sets the shim of CkDateTime.get_UtcOffset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime._CkDateTime">
            <summary>Sets the shim of CkDateTime.!CkDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkDateTime._CkDateTime01">
            <summary>Sets the shim of CkDateTime.~CkDateTime()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCkMarshal">
            <summary>Shim type of Chilkat.CkMarshal</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkMarshal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkMarshal.#ctor(Chilkat.CkMarshal)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCkMarshal.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.AllInstances.Dispose">
            <summary>Sets the shim of CkMarshal.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CkMarshal.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.AllInstances._CkMarshal">
            <summary>Sets the shim of CkMarshal.~CkMarshal()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkMarshal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkMarshal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkMarshal.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.Constructor">
            <summary>Sets the shim of CkMarshal.CkMarshal()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.Dispose">
            <summary>Sets the shim of CkMarshal.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal.DisposeBoolean">
            <summary>Sets the shim of CkMarshal.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkMarshal._CkMarshal">
            <summary>Sets the shim of CkMarshal.~CkMarshal()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCkString">
            <summary>Shim type of Chilkat.CkString</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkString.#ctor(Chilkat.CkString)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCkString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.Dispose">
            <summary>Sets the shim of CkString.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CkString.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.ToString01">
            <summary>Sets the shim of CkString.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances._CkString">
            <summary>Sets the shim of CkString.!CkString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances._CkString01">
            <summary>Sets the shim of CkString.~CkString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.appendCkString">
            <summary>Sets the shim of CkString.append(CkString str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.appendIntInt32">
            <summary>Sets the shim of CkString.appendInt(Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.appendObfuscatedString">
            <summary>Sets the shim of CkString.appendObfuscated(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.appendString">
            <summary>Sets the shim of CkString.append(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.autoLinkUrls">
            <summary>Sets the shim of CkString.autoLinkUrls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.base64DecodeString">
            <summary>Sets the shim of CkString.base64Decode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.base64EncodeString">
            <summary>Sets the shim of CkString.base64Encode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.beginsWithString">
            <summary>Sets the shim of CkString.beginsWith(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.charAtInt32">
            <summary>Sets the shim of CkString.charAt(Int32 idx)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.chopAtFirstCharChar">
            <summary>Sets the shim of CkString.chopAtFirstChar(Char c1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.clear">
            <summary>Sets the shim of CkString.clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.containsSubstringNoCaseString">
            <summary>Sets the shim of CkString.containsSubstringNoCase(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.containsSubstringString">
            <summary>Sets the shim of CkString.containsSubstring(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.decodeXMLSpecial">
            <summary>Sets the shim of CkString.decodeXMLSpecial()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.doubleValue">
            <summary>Sets the shim of CkString.doubleValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.eliminateCharCharInt32">
            <summary>Sets the shim of CkString.eliminateChar(Char ch, Int32 startIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.encodeXMLSpecial">
            <summary>Sets the shim of CkString.encodeXMLSpecial()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.endsWithString">
            <summary>Sets the shim of CkString.endsWith(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.entityDecode">
            <summary>Sets the shim of CkString.entityDecode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.entityEncode">
            <summary>Sets the shim of CkString.entityEncode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.equalsIgnoreCaseString">
            <summary>Sets the shim of CkString.equalsIgnoreCase(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.equalsString">
            <summary>Sets the shim of CkString.equals(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.getDelimitedStringStringString">
            <summary>Sets the shim of CkString.getDelimited(String beginSearchAfter, String startDelim, String endDelim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.getNumChars">
            <summary>Sets the shim of CkString.getNumChars()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.getSizeAnsi">
            <summary>Sets the shim of CkString.getSizeAnsi()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.getSizeUnicode">
            <summary>Sets the shim of CkString.getSizeUnicode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.getSizeUtf8">
            <summary>Sets the shim of CkString.getSizeUtf8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.getString">
            <summary>Sets the shim of CkString.getString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.hexDecodeString">
            <summary>Sets the shim of CkString.hexDecode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.hexEncodeString">
            <summary>Sets the shim of CkString.hexEncode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.intValue">
            <summary>Sets the shim of CkString.intValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.isEmpty">
            <summary>Sets the shim of CkString.isEmpty()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.lastChar">
            <summary>Sets the shim of CkString.lastChar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.loadFileStringString">
            <summary>Sets the shim of CkString.loadFile(String fileName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.loadXmlFileString">
            <summary>Sets the shim of CkString.loadXmlFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.obfuscate">
            <summary>Sets the shim of CkString.obfuscate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.prependString">
            <summary>Sets the shim of CkString.prepend(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.punyDecode">
            <summary>Sets the shim of CkString.punyDecode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.punyEncode">
            <summary>Sets the shim of CkString.punyEncode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.qpDecodeString">
            <summary>Sets the shim of CkString.qpDecode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.qpEncodeString">
            <summary>Sets the shim of CkString.qpEncode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.removeCharOccurancesChar">
            <summary>Sets the shim of CkString.removeCharOccurances(Char c)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.removeChunkInt32Int32">
            <summary>Sets the shim of CkString.removeChunk(Int32 charStartPos, Int32 numChars)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.removeDelimitedStringStringBoolean">
            <summary>Sets the shim of CkString.removeDelimited(String beginDelim, String endDelim, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.replaceAllOccurancesStringString">
            <summary>Sets the shim of CkString.replaceAllOccurances(String pattern, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.replaceAllWordOccurancesStringString">
            <summary>Sets the shim of CkString.replaceAllWordOccurances(String pattern, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.replaceCharCharChar">
            <summary>Sets the shim of CkString.replaceChar(Char c1, Char c2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.replaceFirstOccuranceStringString">
            <summary>Sets the shim of CkString.replaceFirstOccurance(String pattern, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.saveToFile2StringStringBoolean">
            <summary>Sets the shim of CkString.saveToFile2(String filename, String charset, Boolean emitBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.saveToFileStringString">
            <summary>Sets the shim of CkString.saveToFile(String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.setStringCkString">
            <summary>Sets the shim of CkString.setString(CkString str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.setStringString">
            <summary>Sets the shim of CkString.setString(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.shortenInt32">
            <summary>Sets the shim of CkString.shorten(Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.toCRLF">
            <summary>Sets the shim of CkString.toCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.toLF">
            <summary>Sets the shim of CkString.toLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.toLowerCase">
            <summary>Sets the shim of CkString.toLowerCase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.toUpperCase">
            <summary>Sets the shim of CkString.toUpperCase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.trim">
            <summary>Sets the shim of CkString.trim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.trim2">
            <summary>Sets the shim of CkString.trim2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.trimInsideSpaces">
            <summary>Sets the shim of CkString.trimInsideSpaces()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.unobfuscate">
            <summary>Sets the shim of CkString.unobfuscate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.urlDecodeString">
            <summary>Sets the shim of CkString.urlDecode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.AllInstances.urlEncodeString">
            <summary>Sets the shim of CkString.urlEncode(String charset)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCkString.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.Constructor">
            <summary>Sets the shim of CkString.CkString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.Dispose">
            <summary>Sets the shim of CkString.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.DisposeBoolean">
            <summary>Sets the shim of CkString.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.ToString">
            <summary>Sets the shim of CkString.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString._CkString">
            <summary>Sets the shim of CkString.!CkString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString._CkString01">
            <summary>Sets the shim of CkString.~CkString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.appendCkString">
            <summary>Sets the shim of CkString.append(CkString str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.appendIntInt32">
            <summary>Sets the shim of CkString.appendInt(Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.appendObfuscatedString">
            <summary>Sets the shim of CkString.appendObfuscated(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.appendString">
            <summary>Sets the shim of CkString.append(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.autoLinkUrls">
            <summary>Sets the shim of CkString.autoLinkUrls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.base64DecodeString">
            <summary>Sets the shim of CkString.base64Decode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.base64EncodeString">
            <summary>Sets the shim of CkString.base64Encode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.beginsWithString">
            <summary>Sets the shim of CkString.beginsWith(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.charAtInt32">
            <summary>Sets the shim of CkString.charAt(Int32 idx)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.chopAtFirstCharChar">
            <summary>Sets the shim of CkString.chopAtFirstChar(Char c1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.clear">
            <summary>Sets the shim of CkString.clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.containsSubstringNoCaseString">
            <summary>Sets the shim of CkString.containsSubstringNoCase(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.containsSubstringString">
            <summary>Sets the shim of CkString.containsSubstring(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.decodeXMLSpecial">
            <summary>Sets the shim of CkString.decodeXMLSpecial()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.doubleValue">
            <summary>Sets the shim of CkString.doubleValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.eliminateCharCharInt32">
            <summary>Sets the shim of CkString.eliminateChar(Char ch, Int32 startIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.encodeXMLSpecial">
            <summary>Sets the shim of CkString.encodeXMLSpecial()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.endsWithString">
            <summary>Sets the shim of CkString.endsWith(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.entityDecode">
            <summary>Sets the shim of CkString.entityDecode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.entityEncode">
            <summary>Sets the shim of CkString.entityEncode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.equalsIgnoreCaseString">
            <summary>Sets the shim of CkString.equalsIgnoreCase(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.equalsString">
            <summary>Sets the shim of CkString.equals(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.getDelimitedStringStringString">
            <summary>Sets the shim of CkString.getDelimited(String beginSearchAfter, String startDelim, String endDelim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.getNumChars">
            <summary>Sets the shim of CkString.getNumChars()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.getSizeAnsi">
            <summary>Sets the shim of CkString.getSizeAnsi()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.getSizeUnicode">
            <summary>Sets the shim of CkString.getSizeUnicode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.getSizeUtf8">
            <summary>Sets the shim of CkString.getSizeUtf8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.getString">
            <summary>Sets the shim of CkString.getString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.hexDecodeString">
            <summary>Sets the shim of CkString.hexDecode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.hexEncodeString">
            <summary>Sets the shim of CkString.hexEncode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.intValue">
            <summary>Sets the shim of CkString.intValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.isEmpty">
            <summary>Sets the shim of CkString.isEmpty()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.lastChar">
            <summary>Sets the shim of CkString.lastChar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.loadFileStringString">
            <summary>Sets the shim of CkString.loadFile(String fileName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.loadXmlFileString">
            <summary>Sets the shim of CkString.loadXmlFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.obfuscate">
            <summary>Sets the shim of CkString.obfuscate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.prependString">
            <summary>Sets the shim of CkString.prepend(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.punyDecode">
            <summary>Sets the shim of CkString.punyDecode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.punyEncode">
            <summary>Sets the shim of CkString.punyEncode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.qpDecodeString">
            <summary>Sets the shim of CkString.qpDecode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.qpEncodeString">
            <summary>Sets the shim of CkString.qpEncode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.removeCharOccurancesChar">
            <summary>Sets the shim of CkString.removeCharOccurances(Char c)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.removeChunkInt32Int32">
            <summary>Sets the shim of CkString.removeChunk(Int32 charStartPos, Int32 numChars)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.removeDelimitedStringStringBoolean">
            <summary>Sets the shim of CkString.removeDelimited(String beginDelim, String endDelim, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.replaceAllOccurancesStringString">
            <summary>Sets the shim of CkString.replaceAllOccurances(String pattern, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.replaceAllWordOccurancesStringString">
            <summary>Sets the shim of CkString.replaceAllWordOccurances(String pattern, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.replaceCharCharChar">
            <summary>Sets the shim of CkString.replaceChar(Char c1, Char c2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.replaceFirstOccuranceStringString">
            <summary>Sets the shim of CkString.replaceFirstOccurance(String pattern, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.saveToFile2StringStringBoolean">
            <summary>Sets the shim of CkString.saveToFile2(String filename, String charset, Boolean emitBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.saveToFileStringString">
            <summary>Sets the shim of CkString.saveToFile(String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.setStringCkString">
            <summary>Sets the shim of CkString.setString(CkString str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.setStringString">
            <summary>Sets the shim of CkString.setString(String s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.shortenInt32">
            <summary>Sets the shim of CkString.shorten(Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.toCRLF">
            <summary>Sets the shim of CkString.toCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.toLF">
            <summary>Sets the shim of CkString.toLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.toLowerCase">
            <summary>Sets the shim of CkString.toLowerCase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.toUpperCase">
            <summary>Sets the shim of CkString.toUpperCase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.trim">
            <summary>Sets the shim of CkString.trim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.trim2">
            <summary>Sets the shim of CkString.trim2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.trimInsideSpaces">
            <summary>Sets the shim of CkString.trimInsideSpaces()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.unobfuscate">
            <summary>Sets the shim of CkString.unobfuscate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.urlDecodeString">
            <summary>Sets the shim of CkString.urlDecode(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCkString.urlEncodeString">
            <summary>Sets the shim of CkString.urlEncode(String charset)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCompression">
            <summary>Shim type of Chilkat.Compression</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCompression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCompression.#ctor(Chilkat.Compression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AlgorithmGet">
            <summary>Sets the shim of Compression.get_Algorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AlgorithmSetString">
            <summary>Sets the shim of Compression.set_Algorithm(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCompression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.AlgorithmGet">
            <summary>Sets the shim of Compression.get_Algorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.AlgorithmSetString">
            <summary>Sets the shim of Compression.set_Algorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressBytesByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressBytesENCAsyncByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytesENCAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressBytesENCByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressStringAsyncString">
            <summary>Sets the shim of Compression.BeginCompressStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressStringENCAsyncString">
            <summary>Sets the shim of Compression.BeginCompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressStringENCString">
            <summary>Sets the shim of Compression.BeginCompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginCompressStringString">
            <summary>Sets the shim of Compression.BeginCompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.BeginDecompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressBytesByteArray">
            <summary>Sets the shim of Compression.BeginDecompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressBytesENCAsyncString">
            <summary>Sets the shim of Compression.BeginDecompressBytesENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressBytesENCString">
            <summary>Sets the shim of Compression.BeginDecompressBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressStringAsyncByteArray">
            <summary>Sets the shim of Compression.BeginDecompressStringAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressStringByteArray">
            <summary>Sets the shim of Compression.BeginDecompressString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressStringENCAsyncString">
            <summary>Sets the shim of Compression.BeginDecompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.BeginDecompressStringENCString">
            <summary>Sets the shim of Compression.BeginDecompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CharsetGet">
            <summary>Sets the shim of Compression.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CharsetSetString">
            <summary>Sets the shim of Compression.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressBdAsyncBinData">
            <summary>Sets the shim of Compression.CompressBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressBdBinData">
            <summary>Sets the shim of Compression.CompressBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.CompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressBytesByteArray">
            <summary>Sets the shim of Compression.CompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressBytesENCAsyncByteArray">
            <summary>Sets the shim of Compression.CompressBytesENCAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressBytesENCByteArray">
            <summary>Sets the shim of Compression.CompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressFileAsyncStringString">
            <summary>Sets the shim of Compression.CompressFileAsync(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressFileStringString">
            <summary>Sets the shim of Compression.CompressFile(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressStreamAsyncStream">
            <summary>Sets the shim of Compression.CompressStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressStreamStream">
            <summary>Sets the shim of Compression.CompressStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressStringAsyncString">
            <summary>Sets the shim of Compression.CompressStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressStringENCAsyncString">
            <summary>Sets the shim of Compression.CompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressStringENCString">
            <summary>Sets the shim of Compression.CompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.CompressStringString">
            <summary>Sets the shim of Compression.CompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Compression.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Compression.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressBdAsyncBinData">
            <summary>Sets the shim of Compression.DecompressBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressBdBinData">
            <summary>Sets the shim of Compression.DecompressBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.DecompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressBytesByteArray">
            <summary>Sets the shim of Compression.DecompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressBytesENCAsyncString">
            <summary>Sets the shim of Compression.DecompressBytesENCAsync(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressBytesENCString">
            <summary>Sets the shim of Compression.DecompressBytesENC(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressFileAsyncStringString">
            <summary>Sets the shim of Compression.DecompressFileAsync(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressFileStringString">
            <summary>Sets the shim of Compression.DecompressFile(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressStreamAsyncStream">
            <summary>Sets the shim of Compression.DecompressStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressStreamStream">
            <summary>Sets the shim of Compression.DecompressStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressStringAsyncByteArray">
            <summary>Sets the shim of Compression.DecompressStringAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressStringByteArray">
            <summary>Sets the shim of Compression.DecompressString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressStringENCAsyncString">
            <summary>Sets the shim of Compression.DecompressStringENCAsync(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DecompressStringENCString">
            <summary>Sets the shim of Compression.DecompressStringENC(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.Dispose">
            <summary>Sets the shim of Compression.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Compression.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Compression.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Compression.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EncodingModeGet">
            <summary>Sets the shim of Compression.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EncodingModeSetString">
            <summary>Sets the shim of Compression.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressBytes">
            <summary>Sets the shim of Compression.EndCompressBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressBytesAsync">
            <summary>Sets the shim of Compression.EndCompressBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressBytesENC">
            <summary>Sets the shim of Compression.EndCompressBytesENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressBytesENCAsync">
            <summary>Sets the shim of Compression.EndCompressBytesENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressString">
            <summary>Sets the shim of Compression.EndCompressString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressStringAsync">
            <summary>Sets the shim of Compression.EndCompressStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressStringENC">
            <summary>Sets the shim of Compression.EndCompressStringENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndCompressStringENCAsync">
            <summary>Sets the shim of Compression.EndCompressStringENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressBytes">
            <summary>Sets the shim of Compression.EndDecompressBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressBytesAsync">
            <summary>Sets the shim of Compression.EndDecompressBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressBytesENC">
            <summary>Sets the shim of Compression.EndDecompressBytesENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressBytesENCAsync">
            <summary>Sets the shim of Compression.EndDecompressBytesENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressString">
            <summary>Sets the shim of Compression.EndDecompressString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressStringAsync">
            <summary>Sets the shim of Compression.EndDecompressStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressStringENC">
            <summary>Sets the shim of Compression.EndDecompressStringENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.EndDecompressStringENCAsync">
            <summary>Sets the shim of Compression.EndDecompressStringENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Compression.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Compression.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Compression.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Compression.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Compression.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Compression.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Compression.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Compression.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Compression.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Compression.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Compression.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Compression.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Compression.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressBytesByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressBytesENCAsyncByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytesENCAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressBytesENCByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressStringAsyncString">
            <summary>Sets the shim of Compression.MoreCompressStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressStringENCAsyncString">
            <summary>Sets the shim of Compression.MoreCompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressStringENCString">
            <summary>Sets the shim of Compression.MoreCompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreCompressStringString">
            <summary>Sets the shim of Compression.MoreCompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.MoreDecompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressBytesByteArray">
            <summary>Sets the shim of Compression.MoreDecompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressBytesENCAsyncString">
            <summary>Sets the shim of Compression.MoreDecompressBytesENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressBytesENCString">
            <summary>Sets the shim of Compression.MoreDecompressBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressStringAsyncByteArray">
            <summary>Sets the shim of Compression.MoreDecompressStringAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressStringByteArray">
            <summary>Sets the shim of Compression.MoreDecompressString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressStringENCAsyncString">
            <summary>Sets the shim of Compression.MoreDecompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.MoreDecompressStringENCString">
            <summary>Sets the shim of Compression.MoreDecompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnAbortCheckAddCompressionAbortCheckEventHandler">
            <summary>Sets the shim of Compression.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Compression.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnAbortCheckRemoveCompressionAbortCheckEventHandler">
            <summary>Sets the shim of Compression.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnBinaryDataAddCompressionBinaryDataEventHandler">
            <summary>Sets the shim of Compression.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Compression.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnBinaryDataRemoveCompressionBinaryDataEventHandler">
            <summary>Sets the shim of Compression.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnPercentDoneAddCompressionPercentDoneEventHandler">
            <summary>Sets the shim of Compression.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Compression.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnPercentDoneRemoveCompressionPercentDoneEventHandler">
            <summary>Sets the shim of Compression.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnProgressInfoAddCompressionProgressInfoEventHandler">
            <summary>Sets the shim of Compression.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Compression.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnProgressInfoRemoveCompressionProgressInfoEventHandler">
            <summary>Sets the shim of Compression.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnTaskCompletedAddCompressionTaskCompletedEventHandler">
            <summary>Sets the shim of Compression.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Compression.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnTaskCompletedRemoveCompressionTaskCompletedEventHandler">
            <summary>Sets the shim of Compression.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnTextDataAddCompressionTextDataEventHandler">
            <summary>Sets the shim of Compression.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Compression.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.OnTextDataRemoveCompressionTextDataEventHandler">
            <summary>Sets the shim of Compression.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Compression.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.ToString01">
            <summary>Sets the shim of Compression.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Compression.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Compression.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Compression.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances.VersionGet">
            <summary>Sets the shim of Compression.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances._Compression">
            <summary>Sets the shim of Compression.!Compression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.AllInstances._Compression01">
            <summary>Sets the shim of Compression.~Compression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressBytesByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressBytesENCAsyncByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytesENCAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressBytesENCByteArray">
            <summary>Sets the shim of Compression.BeginCompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressStringAsyncString">
            <summary>Sets the shim of Compression.BeginCompressStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressStringENCAsyncString">
            <summary>Sets the shim of Compression.BeginCompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressStringENCString">
            <summary>Sets the shim of Compression.BeginCompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginCompressStringString">
            <summary>Sets the shim of Compression.BeginCompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.BeginDecompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressBytesByteArray">
            <summary>Sets the shim of Compression.BeginDecompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressBytesENCAsyncString">
            <summary>Sets the shim of Compression.BeginDecompressBytesENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressBytesENCString">
            <summary>Sets the shim of Compression.BeginDecompressBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressStringAsyncByteArray">
            <summary>Sets the shim of Compression.BeginDecompressStringAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressStringByteArray">
            <summary>Sets the shim of Compression.BeginDecompressString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressStringENCAsyncString">
            <summary>Sets the shim of Compression.BeginDecompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.BeginDecompressStringENCString">
            <summary>Sets the shim of Compression.BeginDecompressStringENC(String str)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCompression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCompression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCompression.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CharsetGet">
            <summary>Sets the shim of Compression.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CharsetSetString">
            <summary>Sets the shim of Compression.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressBdAsyncBinData">
            <summary>Sets the shim of Compression.CompressBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressBdBinData">
            <summary>Sets the shim of Compression.CompressBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.CompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressBytesByteArray">
            <summary>Sets the shim of Compression.CompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressBytesENCAsyncByteArray">
            <summary>Sets the shim of Compression.CompressBytesENCAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressBytesENCByteArray">
            <summary>Sets the shim of Compression.CompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressFileAsyncStringString">
            <summary>Sets the shim of Compression.CompressFileAsync(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressFileStringString">
            <summary>Sets the shim of Compression.CompressFile(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressStreamAsyncStream">
            <summary>Sets the shim of Compression.CompressStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressStreamStream">
            <summary>Sets the shim of Compression.CompressStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressStringAsyncString">
            <summary>Sets the shim of Compression.CompressStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressStringENCAsyncString">
            <summary>Sets the shim of Compression.CompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressStringENCString">
            <summary>Sets the shim of Compression.CompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.CompressStringString">
            <summary>Sets the shim of Compression.CompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.Constructor">
            <summary>Sets the shim of Compression.Compression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DebugLogFilePathGet">
            <summary>Sets the shim of Compression.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DebugLogFilePathSetString">
            <summary>Sets the shim of Compression.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressBdAsyncBinData">
            <summary>Sets the shim of Compression.DecompressBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressBdBinData">
            <summary>Sets the shim of Compression.DecompressBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.DecompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressBytesByteArray">
            <summary>Sets the shim of Compression.DecompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressBytesENCAsyncString">
            <summary>Sets the shim of Compression.DecompressBytesENCAsync(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressBytesENCString">
            <summary>Sets the shim of Compression.DecompressBytesENC(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressFileAsyncStringString">
            <summary>Sets the shim of Compression.DecompressFileAsync(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressFileStringString">
            <summary>Sets the shim of Compression.DecompressFile(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressStreamAsyncStream">
            <summary>Sets the shim of Compression.DecompressStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressStreamStream">
            <summary>Sets the shim of Compression.DecompressStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressStringAsyncByteArray">
            <summary>Sets the shim of Compression.DecompressStringAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressStringByteArray">
            <summary>Sets the shim of Compression.DecompressString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressStringENCAsyncString">
            <summary>Sets the shim of Compression.DecompressStringENCAsync(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DecompressStringENCString">
            <summary>Sets the shim of Compression.DecompressStringENC(String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.Dispose">
            <summary>Sets the shim of Compression.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.DisposeBoolean">
            <summary>Sets the shim of Compression.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EnableEventsGet">
            <summary>Sets the shim of Compression.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EnableEventsSetBoolean">
            <summary>Sets the shim of Compression.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EncodingModeGet">
            <summary>Sets the shim of Compression.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EncodingModeSetString">
            <summary>Sets the shim of Compression.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressBytes">
            <summary>Sets the shim of Compression.EndCompressBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressBytesAsync">
            <summary>Sets the shim of Compression.EndCompressBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressBytesENC">
            <summary>Sets the shim of Compression.EndCompressBytesENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressBytesENCAsync">
            <summary>Sets the shim of Compression.EndCompressBytesENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressString">
            <summary>Sets the shim of Compression.EndCompressString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressStringAsync">
            <summary>Sets the shim of Compression.EndCompressStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressStringENC">
            <summary>Sets the shim of Compression.EndCompressStringENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndCompressStringENCAsync">
            <summary>Sets the shim of Compression.EndCompressStringENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressBytes">
            <summary>Sets the shim of Compression.EndDecompressBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressBytesAsync">
            <summary>Sets the shim of Compression.EndDecompressBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressBytesENC">
            <summary>Sets the shim of Compression.EndDecompressBytesENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressBytesENCAsync">
            <summary>Sets the shim of Compression.EndDecompressBytesENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressString">
            <summary>Sets the shim of Compression.EndDecompressString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressStringAsync">
            <summary>Sets the shim of Compression.EndDecompressStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressStringENC">
            <summary>Sets the shim of Compression.EndDecompressStringENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.EndDecompressStringENCAsync">
            <summary>Sets the shim of Compression.EndDecompressStringENCAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Compression.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Compression.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Compression.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Compression.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Compression.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Compression.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.HeartbeatMsGet">
            <summary>Sets the shim of Compression.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.HeartbeatMsSetInt32">
            <summary>Sets the shim of Compression.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.LastErrorHtmlGet">
            <summary>Sets the shim of Compression.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.LastErrorTextGet">
            <summary>Sets the shim of Compression.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.LastErrorXmlGet">
            <summary>Sets the shim of Compression.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.LastMethodSuccessGet">
            <summary>Sets the shim of Compression.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Compression.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressBytesByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressBytesENCAsyncByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytesENCAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressBytesENCByteArray">
            <summary>Sets the shim of Compression.MoreCompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressStringAsyncString">
            <summary>Sets the shim of Compression.MoreCompressStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressStringENCAsyncString">
            <summary>Sets the shim of Compression.MoreCompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressStringENCString">
            <summary>Sets the shim of Compression.MoreCompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreCompressStringString">
            <summary>Sets the shim of Compression.MoreCompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressBytesAsyncByteArray">
            <summary>Sets the shim of Compression.MoreDecompressBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressBytesByteArray">
            <summary>Sets the shim of Compression.MoreDecompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressBytesENCAsyncString">
            <summary>Sets the shim of Compression.MoreDecompressBytesENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressBytesENCString">
            <summary>Sets the shim of Compression.MoreDecompressBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressStringAsyncByteArray">
            <summary>Sets the shim of Compression.MoreDecompressStringAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressStringByteArray">
            <summary>Sets the shim of Compression.MoreDecompressString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressStringENCAsyncString">
            <summary>Sets the shim of Compression.MoreDecompressStringENCAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.MoreDecompressStringENCString">
            <summary>Sets the shim of Compression.MoreDecompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnAbortCheckAddCompressionAbortCheckEventHandler">
            <summary>Sets the shim of Compression.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Compression.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnAbortCheckRemoveCompressionAbortCheckEventHandler">
            <summary>Sets the shim of Compression.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnBinaryDataAddCompressionBinaryDataEventHandler">
            <summary>Sets the shim of Compression.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Compression.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnBinaryDataRemoveCompressionBinaryDataEventHandler">
            <summary>Sets the shim of Compression.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnPercentDoneAddCompressionPercentDoneEventHandler">
            <summary>Sets the shim of Compression.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Compression.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnPercentDoneRemoveCompressionPercentDoneEventHandler">
            <summary>Sets the shim of Compression.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnProgressInfoAddCompressionProgressInfoEventHandler">
            <summary>Sets the shim of Compression.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Compression.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnProgressInfoRemoveCompressionProgressInfoEventHandler">
            <summary>Sets the shim of Compression.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnTaskCompletedAddCompressionTaskCompletedEventHandler">
            <summary>Sets the shim of Compression.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Compression.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnTaskCompletedRemoveCompressionTaskCompletedEventHandler">
            <summary>Sets the shim of Compression.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnTextDataAddCompressionTextDataEventHandler">
            <summary>Sets the shim of Compression.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Compression.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.OnTextDataRemoveCompressionTextDataEventHandler">
            <summary>Sets the shim of Compression.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.SaveLastErrorString">
            <summary>Sets the shim of Compression.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.ToString">
            <summary>Sets the shim of Compression.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.UnlockComponentString">
            <summary>Sets the shim of Compression.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.VerboseLoggingGet">
            <summary>Sets the shim of Compression.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Compression.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression.VersionGet">
            <summary>Sets the shim of Compression.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression._Compression">
            <summary>Sets the shim of Compression.!Compression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCompression._Compression01">
            <summary>Sets the shim of Compression.~Compression()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCreateCS">
            <summary>Shim type of Chilkat.CreateCS</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCreateCS.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCreateCS.#ctor(Chilkat.CreateCS)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCreateCS.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.CreateFileStoreString">
            <summary>Sets the shim of CreateCS.CreateFileStore(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.CreateMemoryStore">
            <summary>Sets the shim of CreateCS.CreateMemoryStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.CreateRegistryStoreStringString">
            <summary>Sets the shim of CreateCS.CreateRegistryStore(String regRoot, String regPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of CreateCS.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of CreateCS.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.Dispose">
            <summary>Sets the shim of CreateCS.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CreateCS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of CreateCS.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of CreateCS.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of CreateCS.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of CreateCS.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of CreateCS.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.OpenChilkatStore">
            <summary>Sets the shim of CreateCS.OpenChilkatStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.OpenCurrentUserStore">
            <summary>Sets the shim of CreateCS.OpenCurrentUserStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.OpenFileStoreString">
            <summary>Sets the shim of CreateCS.OpenFileStore(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.OpenLocalSystemStore">
            <summary>Sets the shim of CreateCS.OpenLocalSystemStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.OpenOutlookStore">
            <summary>Sets the shim of CreateCS.OpenOutlookStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.OpenRegistryStoreStringString">
            <summary>Sets the shim of CreateCS.OpenRegistryStore(String regRoot, String regPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.ReadOnlyGet">
            <summary>Sets the shim of CreateCS.get_ReadOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.ReadOnlySetBoolean">
            <summary>Sets the shim of CreateCS.set_ReadOnly(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of CreateCS.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.ToString01">
            <summary>Sets the shim of CreateCS.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of CreateCS.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of CreateCS.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances.VersionGet">
            <summary>Sets the shim of CreateCS.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances._CreateCS">
            <summary>Sets the shim of CreateCS.!CreateCS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.AllInstances._CreateCS01">
            <summary>Sets the shim of CreateCS.~CreateCS()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCreateCS.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCreateCS.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCreateCS.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.Constructor">
            <summary>Sets the shim of CreateCS.CreateCS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.CreateFileStoreString">
            <summary>Sets the shim of CreateCS.CreateFileStore(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.CreateMemoryStore">
            <summary>Sets the shim of CreateCS.CreateMemoryStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.CreateRegistryStoreStringString">
            <summary>Sets the shim of CreateCS.CreateRegistryStore(String regRoot, String regPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.DebugLogFilePathGet">
            <summary>Sets the shim of CreateCS.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.DebugLogFilePathSetString">
            <summary>Sets the shim of CreateCS.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.Dispose">
            <summary>Sets the shim of CreateCS.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.DisposeBoolean">
            <summary>Sets the shim of CreateCS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.LastErrorHtmlGet">
            <summary>Sets the shim of CreateCS.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.LastErrorTextGet">
            <summary>Sets the shim of CreateCS.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.LastErrorXmlGet">
            <summary>Sets the shim of CreateCS.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.LastMethodSuccessGet">
            <summary>Sets the shim of CreateCS.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of CreateCS.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.OpenChilkatStore">
            <summary>Sets the shim of CreateCS.OpenChilkatStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.OpenCurrentUserStore">
            <summary>Sets the shim of CreateCS.OpenCurrentUserStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.OpenFileStoreString">
            <summary>Sets the shim of CreateCS.OpenFileStore(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.OpenLocalSystemStore">
            <summary>Sets the shim of CreateCS.OpenLocalSystemStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.OpenOutlookStore">
            <summary>Sets the shim of CreateCS.OpenOutlookStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.OpenRegistryStoreStringString">
            <summary>Sets the shim of CreateCS.OpenRegistryStore(String regRoot, String regPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.ReadOnlyGet">
            <summary>Sets the shim of CreateCS.get_ReadOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.ReadOnlySetBoolean">
            <summary>Sets the shim of CreateCS.set_ReadOnly(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.SaveLastErrorString">
            <summary>Sets the shim of CreateCS.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.ToString">
            <summary>Sets the shim of CreateCS.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.VerboseLoggingGet">
            <summary>Sets the shim of CreateCS.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.VerboseLoggingSetBoolean">
            <summary>Sets the shim of CreateCS.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS.VersionGet">
            <summary>Sets the shim of CreateCS.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS._CreateCS">
            <summary>Sets the shim of CreateCS.!CreateCS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCreateCS._CreateCS01">
            <summary>Sets the shim of CreateCS.~CreateCS()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCrypt2">
            <summary>Shim type of Chilkat.Crypt2</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCrypt2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCrypt2.#ctor(Chilkat.Crypt2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AbortCurrentGet">
            <summary>Sets the shim of Crypt2.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AbortCurrentSetBoolean">
            <summary>Sets the shim of Crypt2.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AddEncryptCertCert">
            <summary>Sets the shim of Crypt2.AddEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Crypt2.AddPfxSourceData(Byte[] pfxBytes, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AddPfxSourceFileStringString">
            <summary>Sets the shim of Crypt2.AddPfxSourceFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AesKeyUnwrapStringStringString">
            <summary>Sets the shim of Crypt2.AesKeyUnwrap(String kek, String wrappedKeyData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AesKeyWrapStringStringString">
            <summary>Sets the shim of Crypt2.AesKeyWrap(String kek, String keyData, String encoding)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCrypt2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Crypt2.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Crypt2.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AddEncryptCertCert">
            <summary>Sets the shim of Crypt2.AddEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Crypt2.AddPfxSourceData(Byte[] pfxBytes, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AddPfxSourceFileStringString">
            <summary>Sets the shim of Crypt2.AddPfxSourceFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AesKeyUnwrapStringStringString">
            <summary>Sets the shim of Crypt2.AesKeyUnwrap(String kek, String wrappedKeyData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.AesKeyWrapStringStringString">
            <summary>Sets the shim of Crypt2.AesKeyWrap(String kek, String keyData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.BCryptHashString">
            <summary>Sets the shim of Crypt2.BCryptHash(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.BCryptVerifyStringString">
            <summary>Sets the shim of Crypt2.BCryptVerify(String password, String bcryptHash)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.BCryptWorkFactorGet">
            <summary>Sets the shim of Crypt2.get_BCryptWorkFactor()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.BCryptWorkFactorSetInt32">
            <summary>Sets the shim of Crypt2.set_BCryptWorkFactor(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.BlockSizeGet">
            <summary>Sets the shim of Crypt2.get_BlockSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.ByteSwap4321ByteArray">
            <summary>Sets the shim of Crypt2.ByteSwap4321(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.BytesToStringByteArrayString">
            <summary>Sets the shim of Crypt2.BytesToString(Byte[] inData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesEnabledGet">
            <summary>Sets the shim of Crypt2.get_CadesEnabled()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesEnabledSetBoolean">
            <summary>Sets the shim of Crypt2.set_CadesEnabled(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesSigPolicyHashGet">
            <summary>Sets the shim of Crypt2.get_CadesSigPolicyHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesSigPolicyHashSetString">
            <summary>Sets the shim of Crypt2.set_CadesSigPolicyHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesSigPolicyIdGet">
            <summary>Sets the shim of Crypt2.get_CadesSigPolicyId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesSigPolicyIdSetString">
            <summary>Sets the shim of Crypt2.set_CadesSigPolicyId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesSigPolicyUriGet">
            <summary>Sets the shim of Crypt2.get_CadesSigPolicyUri()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CadesSigPolicyUriSetString">
            <summary>Sets the shim of Crypt2.set_CadesSigPolicyUri(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CharsetGet">
            <summary>Sets the shim of Crypt2.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CharsetSetString">
            <summary>Sets the shim of Crypt2.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CipherModeGet">
            <summary>Sets the shim of Crypt2.get_CipherMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CipherModeSetString">
            <summary>Sets the shim of Crypt2.set_CipherMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CkDecryptFileAsyncStringString">
            <summary>Sets the shim of Crypt2.CkDecryptFileAsync(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CkDecryptFileStringString">
            <summary>Sets the shim of Crypt2.CkDecryptFile(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CkEncryptFileAsyncStringString">
            <summary>Sets the shim of Crypt2.CkEncryptFileAsync(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CkEncryptFileStringString">
            <summary>Sets the shim of Crypt2.CkEncryptFile(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.ClearEncryptCerts">
            <summary>Sets the shim of Crypt2.ClearEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CompressBytesByteArray">
            <summary>Sets the shim of Crypt2.CompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CompressBytesENCByteArray">
            <summary>Sets the shim of Crypt2.CompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CompressStringENCString">
            <summary>Sets the shim of Crypt2.CompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CompressStringString">
            <summary>Sets the shim of Crypt2.CompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CompressionAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_CompressionAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CompressionAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_CompressionAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CrcBytesStringByteArray">
            <summary>Sets the shim of Crypt2.CrcBytes(String crcAlg, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CrcFileAsyncStringString">
            <summary>Sets the shim of Crypt2.CrcFileAsync(String crcAlg, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CrcFileStringString">
            <summary>Sets the shim of Crypt2.CrcFile(String crcAlg, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CreateDetachedSignatureStringString">
            <summary>Sets the shim of Crypt2.CreateDetachedSignature(String inFilePath, String sigFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CreateP7MStringString">
            <summary>Sets the shim of Crypt2.CreateP7M(String inFilename, String p7mPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CreateP7SStringString">
            <summary>Sets the shim of Crypt2.CreateP7S(String inFilename, String p7sPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CryptAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_CryptAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.CryptAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_CryptAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Crypt2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Crypt2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecodeStringString">
            <summary>Sets the shim of Crypt2.Decode(String str, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecodeStringStringStringString">
            <summary>Sets the shim of Crypt2.DecodeString(String inStr, String charset, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptBdBinData">
            <summary>Sets the shim of Crypt2.DecryptBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptBytesByteArray">
            <summary>Sets the shim of Crypt2.DecryptBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptBytesENCString">
            <summary>Sets the shim of Crypt2.DecryptBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptEncodedString">
            <summary>Sets the shim of Crypt2.DecryptEncoded(String encodedEncryptedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptSbBinDataStringBuilder">
            <summary>Sets the shim of Crypt2.DecryptSb(BinData bdIn, StringBuilder sbOut)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptStreamAsyncStream">
            <summary>Sets the shim of Crypt2.DecryptStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptStreamStream">
            <summary>Sets the shim of Crypt2.DecryptStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptStringByteArray">
            <summary>Sets the shim of Crypt2.DecryptString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DecryptStringENCString">
            <summary>Sets the shim of Crypt2.DecryptStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Dispose">
            <summary>Sets the shim of Crypt2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Crypt2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Crypt2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Crypt2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncodeByteArrayString">
            <summary>Sets the shim of Crypt2.Encode(Byte[] byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncodeStringStringStringString">
            <summary>Sets the shim of Crypt2.EncodeString(String strToEncode, String charsetName, String toEncodingName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncodingModeGet">
            <summary>Sets the shim of Crypt2.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncodingModeSetString">
            <summary>Sets the shim of Crypt2.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptBdBinData">
            <summary>Sets the shim of Crypt2.EncryptBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptBytesByteArray">
            <summary>Sets the shim of Crypt2.EncryptBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptBytesENCByteArray">
            <summary>Sets the shim of Crypt2.EncryptBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptEncodedString">
            <summary>Sets the shim of Crypt2.EncryptEncoded(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptSbStringBuilderBinData">
            <summary>Sets the shim of Crypt2.EncryptSb(StringBuilder sbIn, BinData bdOut)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptStreamAsyncStream">
            <summary>Sets the shim of Crypt2.EncryptStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptStreamStream">
            <summary>Sets the shim of Crypt2.EncryptStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptStringENCString">
            <summary>Sets the shim of Crypt2.EncryptStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.EncryptStringString">
            <summary>Sets the shim of Crypt2.EncryptString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Crypt2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Crypt2.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Crypt2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Crypt2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Crypt2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Crypt2.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FirstChunkGet">
            <summary>Sets the shim of Crypt2.get_FirstChunk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.FirstChunkSetBoolean">
            <summary>Sets the shim of Crypt2.set_FirstChunk(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GenEncodedSecretKeyStringString">
            <summary>Sets the shim of Crypt2.GenEncodedSecretKey(String password, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GenRandomBytesENCInt32">
            <summary>Sets the shim of Crypt2.GenRandomBytesENC(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GenerateSecretKeyString">
            <summary>Sets the shim of Crypt2.GenerateSecretKey(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GenerateUuid">
            <summary>Sets the shim of Crypt2.GenerateUuid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetDecryptCert">
            <summary>Sets the shim of Crypt2.GetDecryptCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetEncodedAadString">
            <summary>Sets the shim of Crypt2.GetEncodedAad(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetEncodedAuthTagString">
            <summary>Sets the shim of Crypt2.GetEncodedAuthTag(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetEncodedIVString">
            <summary>Sets the shim of Crypt2.GetEncodedIV(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetEncodedKeyString">
            <summary>Sets the shim of Crypt2.GetEncodedKey(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetEncodedSaltString">
            <summary>Sets the shim of Crypt2.GetEncodedSalt(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetLastCert">
            <summary>Sets the shim of Crypt2.GetLastCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetSignatureSigningTimeInt32">
            <summary>Sets the shim of Crypt2.GetSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetSignatureSigningTimeStrInt32">
            <summary>Sets the shim of Crypt2.GetSignatureSigningTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetSignerCertChainInt32">
            <summary>Sets the shim of Crypt2.GetSignerCertChain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.GetSignerCertInt32">
            <summary>Sets the shim of Crypt2.GetSignerCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HasSignatureSigningTimeInt32">
            <summary>Sets the shim of Crypt2.HasSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_HashAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_HashAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashBdENCBinData">
            <summary>Sets the shim of Crypt2.HashBdENC(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashBeginBytesByteArray">
            <summary>Sets the shim of Crypt2.HashBeginBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashBeginStringString">
            <summary>Sets the shim of Crypt2.HashBeginString(String strData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashBytesByteArray">
            <summary>Sets the shim of Crypt2.HashBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashBytesENCByteArray">
            <summary>Sets the shim of Crypt2.HashBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashFileAsyncString">
            <summary>Sets the shim of Crypt2.HashFileAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashFileENCAsyncString">
            <summary>Sets the shim of Crypt2.HashFileENCAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashFileENCString">
            <summary>Sets the shim of Crypt2.HashFileENC(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashFileString">
            <summary>Sets the shim of Crypt2.HashFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashFinal">
            <summary>Sets the shim of Crypt2.HashFinal()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashFinalENC">
            <summary>Sets the shim of Crypt2.HashFinalENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashMoreBytesByteArray">
            <summary>Sets the shim of Crypt2.HashMoreBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashMoreStringString">
            <summary>Sets the shim of Crypt2.HashMoreString(String strData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashStringENCString">
            <summary>Sets the shim of Crypt2.HashStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HashStringString">
            <summary>Sets the shim of Crypt2.HashString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HavalRoundsGet">
            <summary>Sets the shim of Crypt2.get_HavalRounds()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HavalRoundsSetInt32">
            <summary>Sets the shim of Crypt2.set_HavalRounds(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Crypt2.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Crypt2.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HmacBytesByteArray">
            <summary>Sets the shim of Crypt2.HmacBytes(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HmacBytesENCByteArray">
            <summary>Sets the shim of Crypt2.HmacBytesENC(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HmacStringENCString">
            <summary>Sets the shim of Crypt2.HmacStringENC(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.HmacStringString">
            <summary>Sets the shim of Crypt2.HmacString(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IVGet">
            <summary>Sets the shim of Crypt2.get_IV()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IVSetByteArray">
            <summary>Sets the shim of Crypt2.set_IV(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IncludeCertChainGet">
            <summary>Sets the shim of Crypt2.get_IncludeCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IncludeCertChainSetBoolean">
            <summary>Sets the shim of Crypt2.set_IncludeCertChain(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.InflateBytesByteArray">
            <summary>Sets the shim of Crypt2.InflateBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.InflateBytesENCString">
            <summary>Sets the shim of Crypt2.InflateBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.InflateStringByteArray">
            <summary>Sets the shim of Crypt2.InflateString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.InflateStringENCString">
            <summary>Sets the shim of Crypt2.InflateStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.InitialCountGet">
            <summary>Sets the shim of Crypt2.get_InitialCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.InitialCountSetInt32">
            <summary>Sets the shim of Crypt2.set_InitialCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IsUnlocked">
            <summary>Sets the shim of Crypt2.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IterationCountGet">
            <summary>Sets the shim of Crypt2.get_IterationCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.IterationCountSetInt32">
            <summary>Sets the shim of Crypt2.set_IterationCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.KeyLengthGet">
            <summary>Sets the shim of Crypt2.get_KeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.KeyLengthSetInt32">
            <summary>Sets the shim of Crypt2.set_KeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastChunkGet">
            <summary>Sets the shim of Crypt2.get_LastChunk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastChunkSetBoolean">
            <summary>Sets the shim of Crypt2.set_LastChunk(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Crypt2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Crypt2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Crypt2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastJsonData">
            <summary>Sets the shim of Crypt2.LastJsonData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Crypt2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Crypt2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_MacAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_MacAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacBdENCBinData">
            <summary>Sets the shim of Crypt2.MacBdENC(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacBytesByteArray">
            <summary>Sets the shim of Crypt2.MacBytes(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacBytesENCByteArray">
            <summary>Sets the shim of Crypt2.MacBytesENC(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacStringENCString">
            <summary>Sets the shim of Crypt2.MacStringENC(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MacStringString">
            <summary>Sets the shim of Crypt2.MacString(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MySqlAesDecryptStringString">
            <summary>Sets the shim of Crypt2.MySqlAesDecrypt(String strEncryptedHex, String strPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.MySqlAesEncryptStringString">
            <summary>Sets the shim of Crypt2.MySqlAesEncrypt(String strData, String strPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.NumSignerCertsGet">
            <summary>Sets the shim of Crypt2.get_NumSignerCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OaepHashGet">
            <summary>Sets the shim of Crypt2.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OaepHashSetString">
            <summary>Sets the shim of Crypt2.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OaepPaddingGet">
            <summary>Sets the shim of Crypt2.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OaepPaddingSetBoolean">
            <summary>Sets the shim of Crypt2.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnAbortCheckAddCrypt2AbortCheckEventHandler">
            <summary>Sets the shim of Crypt2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnAbortCheckRemoveCrypt2AbortCheckEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnBinaryDataAddCrypt2BinaryDataEventHandler">
            <summary>Sets the shim of Crypt2.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnBinaryDataRemoveCrypt2BinaryDataEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnPercentDoneAddCrypt2PercentDoneEventHandler">
            <summary>Sets the shim of Crypt2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnPercentDoneRemoveCrypt2PercentDoneEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnProgressInfoAddCrypt2ProgressInfoEventHandler">
            <summary>Sets the shim of Crypt2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnProgressInfoRemoveCrypt2ProgressInfoEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnTaskCompletedAddCrypt2TaskCompletedEventHandler">
            <summary>Sets the shim of Crypt2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnTaskCompletedRemoveCrypt2TaskCompletedEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnTextDataAddCrypt2TextDataEventHandler">
            <summary>Sets the shim of Crypt2.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OnTextDataRemoveCrypt2TextDataEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueSignBdBinData">
            <summary>Sets the shim of Crypt2.OpaqueSignBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueSignBytesByteArray">
            <summary>Sets the shim of Crypt2.OpaqueSignBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueSignBytesENCByteArray">
            <summary>Sets the shim of Crypt2.OpaqueSignBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueSignStringENCString">
            <summary>Sets the shim of Crypt2.OpaqueSignStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueSignStringString">
            <summary>Sets the shim of Crypt2.OpaqueSignString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueVerifyBdBinData">
            <summary>Sets the shim of Crypt2.OpaqueVerifyBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueVerifyBytesByteArray">
            <summary>Sets the shim of Crypt2.OpaqueVerifyBytes(Byte[] p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueVerifyBytesENCString">
            <summary>Sets the shim of Crypt2.OpaqueVerifyBytesENC(String p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueVerifyStringByteArray">
            <summary>Sets the shim of Crypt2.OpaqueVerifyString(Byte[] p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.OpaqueVerifyStringENCString">
            <summary>Sets the shim of Crypt2.OpaqueVerifyStringENC(String p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.PaddingSchemeGet">
            <summary>Sets the shim of Crypt2.get_PaddingScheme()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.PaddingSchemeSetInt32">
            <summary>Sets the shim of Crypt2.set_PaddingScheme(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.PbesAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_PbesAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.PbesAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_PbesAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.PbesPasswordGet">
            <summary>Sets the shim of Crypt2.get_PbesPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.PbesPasswordSetString">
            <summary>Sets the shim of Crypt2.set_PbesPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Pbkdf1StringStringStringStringInt32Int32String">
            <summary>Sets the shim of Crypt2.Pbkdf1(String password, String charset, String hashAlg, String salt, Int32 iterationCount, Int32 outputKeyBitLen, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Pbkdf2StringStringStringStringInt32Int32String">
            <summary>Sets the shim of Crypt2.Pbkdf2(String password, String charset, String hashAlg, String salt, Int32 iterationCount, Int32 outputKeyBitLen, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Pkcs7CryptAlgGet">
            <summary>Sets the shim of Crypt2.get_Pkcs7CryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Pkcs7CryptAlgSetString">
            <summary>Sets the shim of Crypt2.set_Pkcs7CryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Pkcs7ExtractDigestInt32String">
            <summary>Sets the shim of Crypt2.Pkcs7ExtractDigest(Int32 signerIndex, String pkcs7)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.RandomizeIV">
            <summary>Sets the shim of Crypt2.RandomizeIV()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.RandomizeKey">
            <summary>Sets the shim of Crypt2.RandomizeKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Rc2EffectiveKeyLengthGet">
            <summary>Sets the shim of Crypt2.get_Rc2EffectiveKeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.Rc2EffectiveKeyLengthSetInt32">
            <summary>Sets the shim of Crypt2.set_Rc2EffectiveKeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.ReEncodeStringStringString">
            <summary>Sets the shim of Crypt2.ReEncode(String encodedData, String fromEncoding, String toEncoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.ReadFileString">
            <summary>Sets the shim of Crypt2.ReadFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SaltGet">
            <summary>Sets the shim of Crypt2.get_Salt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SaltSetByteArray">
            <summary>Sets the shim of Crypt2.set_Salt(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Crypt2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SecretKeyGet">
            <summary>Sets the shim of Crypt2.get_SecretKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SecretKeySetByteArray">
            <summary>Sets the shim of Crypt2.set_SecretKey(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetCSPCsp">
            <summary>Sets the shim of Crypt2.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of Crypt2.SetDecryptCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetDecryptCertCert">
            <summary>Sets the shim of Crypt2.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetEncodedAadStringString">
            <summary>Sets the shim of Crypt2.SetEncodedAad(String aadStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetEncodedAuthTagStringString">
            <summary>Sets the shim of Crypt2.SetEncodedAuthTag(String authTagStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetEncodedIVStringString">
            <summary>Sets the shim of Crypt2.SetEncodedIV(String ivStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetEncodedKeyStringString">
            <summary>Sets the shim of Crypt2.SetEncodedKey(String keyStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetEncodedSaltStringString">
            <summary>Sets the shim of Crypt2.SetEncodedSalt(String saltStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetEncryptCertCert">
            <summary>Sets the shim of Crypt2.SetEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetHmacKeyBytesByteArray">
            <summary>Sets the shim of Crypt2.SetHmacKeyBytes(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetHmacKeyEncodedStringString">
            <summary>Sets the shim of Crypt2.SetHmacKeyEncoded(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetHmacKeyStringString">
            <summary>Sets the shim of Crypt2.SetHmacKeyString(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetMacKeyBytesByteArray">
            <summary>Sets the shim of Crypt2.SetMacKeyBytes(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetMacKeyEncodedStringString">
            <summary>Sets the shim of Crypt2.SetMacKeyEncoded(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetMacKeyStringString">
            <summary>Sets the shim of Crypt2.SetMacKeyString(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetSecretKeyViaPasswordString">
            <summary>Sets the shim of Crypt2.SetSecretKeyViaPassword(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetSigningCert2CertPrivateKey">
            <summary>Sets the shim of Crypt2.SetSigningCert2(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetSigningCertCert">
            <summary>Sets the shim of Crypt2.SetSigningCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SetVerifyCertCert">
            <summary>Sets the shim of Crypt2.SetVerifyCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SignBdENCBinData">
            <summary>Sets the shim of Crypt2.SignBdENC(BinData dataToSign)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SignBytesByteArray">
            <summary>Sets the shim of Crypt2.SignBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SignBytesENCByteArray">
            <summary>Sets the shim of Crypt2.SignBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SignSbENCStringBuilder">
            <summary>Sets the shim of Crypt2.SignSbENC(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SignStringENCString">
            <summary>Sets the shim of Crypt2.SignStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SignStringString">
            <summary>Sets the shim of Crypt2.SignString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SigningAlgGet">
            <summary>Sets the shim of Crypt2.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.SigningAlgSetString">
            <summary>Sets the shim of Crypt2.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.StringToBytesStringString">
            <summary>Sets the shim of Crypt2.StringToBytes(String inStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.ToString01">
            <summary>Sets the shim of Crypt2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.TrimEndingWithStringString">
            <summary>Sets the shim of Crypt2.TrimEndingWith(String inStr, String ending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Crypt2.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Crypt2.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.UuFilenameGet">
            <summary>Sets the shim of Crypt2.get_UuFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.UuFilenameSetString">
            <summary>Sets the shim of Crypt2.set_UuFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.UuModeGet">
            <summary>Sets the shim of Crypt2.get_UuMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.UuModeSetString">
            <summary>Sets the shim of Crypt2.set_UuMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Crypt2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Crypt2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyBdENCBinDataString">
            <summary>Sets the shim of Crypt2.VerifyBdENC(BinData data, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyBytesByteArrayByteArray">
            <summary>Sets the shim of Crypt2.VerifyBytes(Byte[] data, Byte[] sig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyBytesENCByteArrayString">
            <summary>Sets the shim of Crypt2.VerifyBytesENC(Byte[] data, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyDetachedSignatureStringString">
            <summary>Sets the shim of Crypt2.VerifyDetachedSignature(String inFilename, String p7sFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyP7MStringString">
            <summary>Sets the shim of Crypt2.VerifyP7M(String p7mPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyP7SStringString">
            <summary>Sets the shim of Crypt2.VerifyP7S(String inFilename, String p7sFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifySbENCStringBuilderString">
            <summary>Sets the shim of Crypt2.VerifySbENC(StringBuilder sb, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyStringENCStringString">
            <summary>Sets the shim of Crypt2.VerifyStringENC(String str, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VerifyStringStringByteArray">
            <summary>Sets the shim of Crypt2.VerifyString(String str, Byte[] sig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.VersionGet">
            <summary>Sets the shim of Crypt2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances.WriteFileStringByteArray">
            <summary>Sets the shim of Crypt2.WriteFile(String filename, Byte[] fileData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances._Crypt2">
            <summary>Sets the shim of Crypt2.!Crypt2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.AllInstances._Crypt201">
            <summary>Sets the shim of Crypt2.~Crypt2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.BCryptHashString">
            <summary>Sets the shim of Crypt2.BCryptHash(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.BCryptVerifyStringString">
            <summary>Sets the shim of Crypt2.BCryptVerify(String password, String bcryptHash)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.BCryptWorkFactorGet">
            <summary>Sets the shim of Crypt2.get_BCryptWorkFactor()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.BCryptWorkFactorSetInt32">
            <summary>Sets the shim of Crypt2.set_BCryptWorkFactor(Int32 propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCrypt2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCrypt2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCrypt2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.BlockSizeGet">
            <summary>Sets the shim of Crypt2.get_BlockSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.ByteSwap4321ByteArray">
            <summary>Sets the shim of Crypt2.ByteSwap4321(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.BytesToStringByteArrayString">
            <summary>Sets the shim of Crypt2.BytesToString(Byte[] inData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesEnabledGet">
            <summary>Sets the shim of Crypt2.get_CadesEnabled()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesEnabledSetBoolean">
            <summary>Sets the shim of Crypt2.set_CadesEnabled(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesSigPolicyHashGet">
            <summary>Sets the shim of Crypt2.get_CadesSigPolicyHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesSigPolicyHashSetString">
            <summary>Sets the shim of Crypt2.set_CadesSigPolicyHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesSigPolicyIdGet">
            <summary>Sets the shim of Crypt2.get_CadesSigPolicyId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesSigPolicyIdSetString">
            <summary>Sets the shim of Crypt2.set_CadesSigPolicyId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesSigPolicyUriGet">
            <summary>Sets the shim of Crypt2.get_CadesSigPolicyUri()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CadesSigPolicyUriSetString">
            <summary>Sets the shim of Crypt2.set_CadesSigPolicyUri(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CharsetGet">
            <summary>Sets the shim of Crypt2.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CharsetSetString">
            <summary>Sets the shim of Crypt2.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CipherModeGet">
            <summary>Sets the shim of Crypt2.get_CipherMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CipherModeSetString">
            <summary>Sets the shim of Crypt2.set_CipherMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CkDecryptFileAsyncStringString">
            <summary>Sets the shim of Crypt2.CkDecryptFileAsync(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CkDecryptFileStringString">
            <summary>Sets the shim of Crypt2.CkDecryptFile(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CkEncryptFileAsyncStringString">
            <summary>Sets the shim of Crypt2.CkEncryptFileAsync(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CkEncryptFileStringString">
            <summary>Sets the shim of Crypt2.CkEncryptFile(String srcFile, String destFile)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.ClearEncryptCerts">
            <summary>Sets the shim of Crypt2.ClearEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CompressBytesByteArray">
            <summary>Sets the shim of Crypt2.CompressBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CompressBytesENCByteArray">
            <summary>Sets the shim of Crypt2.CompressBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CompressStringENCString">
            <summary>Sets the shim of Crypt2.CompressStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CompressStringString">
            <summary>Sets the shim of Crypt2.CompressString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CompressionAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_CompressionAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CompressionAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_CompressionAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Constructor">
            <summary>Sets the shim of Crypt2.Crypt2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CrcBytesStringByteArray">
            <summary>Sets the shim of Crypt2.CrcBytes(String crcAlg, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CrcFileAsyncStringString">
            <summary>Sets the shim of Crypt2.CrcFileAsync(String crcAlg, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CrcFileStringString">
            <summary>Sets the shim of Crypt2.CrcFile(String crcAlg, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CreateDetachedSignatureStringString">
            <summary>Sets the shim of Crypt2.CreateDetachedSignature(String inFilePath, String sigFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CreateP7MStringString">
            <summary>Sets the shim of Crypt2.CreateP7M(String inFilename, String p7mPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CreateP7SStringString">
            <summary>Sets the shim of Crypt2.CreateP7S(String inFilename, String p7sPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CryptAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_CryptAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.CryptAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_CryptAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DebugLogFilePathGet">
            <summary>Sets the shim of Crypt2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DebugLogFilePathSetString">
            <summary>Sets the shim of Crypt2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecodeStringString">
            <summary>Sets the shim of Crypt2.Decode(String str, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecodeStringStringStringString">
            <summary>Sets the shim of Crypt2.DecodeString(String inStr, String charset, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptBdBinData">
            <summary>Sets the shim of Crypt2.DecryptBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptBytesByteArray">
            <summary>Sets the shim of Crypt2.DecryptBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptBytesENCString">
            <summary>Sets the shim of Crypt2.DecryptBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptEncodedString">
            <summary>Sets the shim of Crypt2.DecryptEncoded(String encodedEncryptedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptSbBinDataStringBuilder">
            <summary>Sets the shim of Crypt2.DecryptSb(BinData bdIn, StringBuilder sbOut)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptStreamAsyncStream">
            <summary>Sets the shim of Crypt2.DecryptStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptStreamStream">
            <summary>Sets the shim of Crypt2.DecryptStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptStringByteArray">
            <summary>Sets the shim of Crypt2.DecryptString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DecryptStringENCString">
            <summary>Sets the shim of Crypt2.DecryptStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Dispose">
            <summary>Sets the shim of Crypt2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.DisposeBoolean">
            <summary>Sets the shim of Crypt2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EnableEventsGet">
            <summary>Sets the shim of Crypt2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EnableEventsSetBoolean">
            <summary>Sets the shim of Crypt2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncodeByteArrayString">
            <summary>Sets the shim of Crypt2.Encode(Byte[] byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncodeStringStringStringString">
            <summary>Sets the shim of Crypt2.EncodeString(String strToEncode, String charsetName, String toEncodingName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncodingModeGet">
            <summary>Sets the shim of Crypt2.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncodingModeSetString">
            <summary>Sets the shim of Crypt2.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptBdBinData">
            <summary>Sets the shim of Crypt2.EncryptBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptBytesByteArray">
            <summary>Sets the shim of Crypt2.EncryptBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptBytesENCByteArray">
            <summary>Sets the shim of Crypt2.EncryptBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptEncodedString">
            <summary>Sets the shim of Crypt2.EncryptEncoded(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptSbStringBuilderBinData">
            <summary>Sets the shim of Crypt2.EncryptSb(StringBuilder sbIn, BinData bdOut)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptStreamAsyncStream">
            <summary>Sets the shim of Crypt2.EncryptStreamAsync(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptStreamStream">
            <summary>Sets the shim of Crypt2.EncryptStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptStringENCString">
            <summary>Sets the shim of Crypt2.EncryptStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.EncryptStringString">
            <summary>Sets the shim of Crypt2.EncryptString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Crypt2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Crypt2.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Crypt2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Crypt2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Crypt2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Crypt2.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FirstChunkGet">
            <summary>Sets the shim of Crypt2.get_FirstChunk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.FirstChunkSetBoolean">
            <summary>Sets the shim of Crypt2.set_FirstChunk(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GenEncodedSecretKeyStringString">
            <summary>Sets the shim of Crypt2.GenEncodedSecretKey(String password, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GenRandomBytesENCInt32">
            <summary>Sets the shim of Crypt2.GenRandomBytesENC(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GenerateSecretKeyString">
            <summary>Sets the shim of Crypt2.GenerateSecretKey(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GenerateUuid">
            <summary>Sets the shim of Crypt2.GenerateUuid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetDecryptCert">
            <summary>Sets the shim of Crypt2.GetDecryptCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetEncodedAadString">
            <summary>Sets the shim of Crypt2.GetEncodedAad(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetEncodedAuthTagString">
            <summary>Sets the shim of Crypt2.GetEncodedAuthTag(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetEncodedIVString">
            <summary>Sets the shim of Crypt2.GetEncodedIV(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetEncodedKeyString">
            <summary>Sets the shim of Crypt2.GetEncodedKey(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetEncodedSaltString">
            <summary>Sets the shim of Crypt2.GetEncodedSalt(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetLastCert">
            <summary>Sets the shim of Crypt2.GetLastCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetSignatureSigningTimeInt32">
            <summary>Sets the shim of Crypt2.GetSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetSignatureSigningTimeStrInt32">
            <summary>Sets the shim of Crypt2.GetSignatureSigningTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetSignerCertChainInt32">
            <summary>Sets the shim of Crypt2.GetSignerCertChain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.GetSignerCertInt32">
            <summary>Sets the shim of Crypt2.GetSignerCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HasSignatureSigningTimeInt32">
            <summary>Sets the shim of Crypt2.HasSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_HashAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_HashAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashBdENCBinData">
            <summary>Sets the shim of Crypt2.HashBdENC(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashBeginBytesByteArray">
            <summary>Sets the shim of Crypt2.HashBeginBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashBeginStringString">
            <summary>Sets the shim of Crypt2.HashBeginString(String strData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashBytesByteArray">
            <summary>Sets the shim of Crypt2.HashBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashBytesENCByteArray">
            <summary>Sets the shim of Crypt2.HashBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashFileAsyncString">
            <summary>Sets the shim of Crypt2.HashFileAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashFileENCAsyncString">
            <summary>Sets the shim of Crypt2.HashFileENCAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashFileENCString">
            <summary>Sets the shim of Crypt2.HashFileENC(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashFileString">
            <summary>Sets the shim of Crypt2.HashFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashFinal">
            <summary>Sets the shim of Crypt2.HashFinal()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashFinalENC">
            <summary>Sets the shim of Crypt2.HashFinalENC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashMoreBytesByteArray">
            <summary>Sets the shim of Crypt2.HashMoreBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashMoreStringString">
            <summary>Sets the shim of Crypt2.HashMoreString(String strData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashStringENCString">
            <summary>Sets the shim of Crypt2.HashStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HashStringString">
            <summary>Sets the shim of Crypt2.HashString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HavalRoundsGet">
            <summary>Sets the shim of Crypt2.get_HavalRounds()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HavalRoundsSetInt32">
            <summary>Sets the shim of Crypt2.set_HavalRounds(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HeartbeatMsGet">
            <summary>Sets the shim of Crypt2.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HeartbeatMsSetInt32">
            <summary>Sets the shim of Crypt2.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HmacBytesByteArray">
            <summary>Sets the shim of Crypt2.HmacBytes(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HmacBytesENCByteArray">
            <summary>Sets the shim of Crypt2.HmacBytesENC(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HmacStringENCString">
            <summary>Sets the shim of Crypt2.HmacStringENC(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.HmacStringString">
            <summary>Sets the shim of Crypt2.HmacString(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IVGet">
            <summary>Sets the shim of Crypt2.get_IV()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IVSetByteArray">
            <summary>Sets the shim of Crypt2.set_IV(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IncludeCertChainGet">
            <summary>Sets the shim of Crypt2.get_IncludeCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IncludeCertChainSetBoolean">
            <summary>Sets the shim of Crypt2.set_IncludeCertChain(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.InflateBytesByteArray">
            <summary>Sets the shim of Crypt2.InflateBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.InflateBytesENCString">
            <summary>Sets the shim of Crypt2.InflateBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.InflateStringByteArray">
            <summary>Sets the shim of Crypt2.InflateString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.InflateStringENCString">
            <summary>Sets the shim of Crypt2.InflateStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.InitialCountGet">
            <summary>Sets the shim of Crypt2.get_InitialCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.InitialCountSetInt32">
            <summary>Sets the shim of Crypt2.set_InitialCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IsUnlocked">
            <summary>Sets the shim of Crypt2.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IterationCountGet">
            <summary>Sets the shim of Crypt2.get_IterationCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.IterationCountSetInt32">
            <summary>Sets the shim of Crypt2.set_IterationCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.KeyLengthGet">
            <summary>Sets the shim of Crypt2.get_KeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.KeyLengthSetInt32">
            <summary>Sets the shim of Crypt2.set_KeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastChunkGet">
            <summary>Sets the shim of Crypt2.get_LastChunk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastChunkSetBoolean">
            <summary>Sets the shim of Crypt2.set_LastChunk(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastErrorHtmlGet">
            <summary>Sets the shim of Crypt2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastErrorTextGet">
            <summary>Sets the shim of Crypt2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastErrorXmlGet">
            <summary>Sets the shim of Crypt2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastJsonData">
            <summary>Sets the shim of Crypt2.LastJsonData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastMethodSuccessGet">
            <summary>Sets the shim of Crypt2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Crypt2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_MacAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_MacAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacBdENCBinData">
            <summary>Sets the shim of Crypt2.MacBdENC(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacBytesByteArray">
            <summary>Sets the shim of Crypt2.MacBytes(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacBytesENCByteArray">
            <summary>Sets the shim of Crypt2.MacBytesENC(Byte[] inBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacStringENCString">
            <summary>Sets the shim of Crypt2.MacStringENC(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MacStringString">
            <summary>Sets the shim of Crypt2.MacString(String inText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MySqlAesDecryptStringString">
            <summary>Sets the shim of Crypt2.MySqlAesDecrypt(String strEncryptedHex, String strPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.MySqlAesEncryptStringString">
            <summary>Sets the shim of Crypt2.MySqlAesEncrypt(String strData, String strPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.NumSignerCertsGet">
            <summary>Sets the shim of Crypt2.get_NumSignerCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OaepHashGet">
            <summary>Sets the shim of Crypt2.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OaepHashSetString">
            <summary>Sets the shim of Crypt2.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OaepPaddingGet">
            <summary>Sets the shim of Crypt2.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OaepPaddingSetBoolean">
            <summary>Sets the shim of Crypt2.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnAbortCheckAddCrypt2AbortCheckEventHandler">
            <summary>Sets the shim of Crypt2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnAbortCheckRemoveCrypt2AbortCheckEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnBinaryDataAddCrypt2BinaryDataEventHandler">
            <summary>Sets the shim of Crypt2.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnBinaryDataRemoveCrypt2BinaryDataEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnPercentDoneAddCrypt2PercentDoneEventHandler">
            <summary>Sets the shim of Crypt2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnPercentDoneRemoveCrypt2PercentDoneEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnProgressInfoAddCrypt2ProgressInfoEventHandler">
            <summary>Sets the shim of Crypt2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnProgressInfoRemoveCrypt2ProgressInfoEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnTaskCompletedAddCrypt2TaskCompletedEventHandler">
            <summary>Sets the shim of Crypt2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnTaskCompletedRemoveCrypt2TaskCompletedEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnTextDataAddCrypt2TextDataEventHandler">
            <summary>Sets the shim of Crypt2.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Crypt2.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OnTextDataRemoveCrypt2TextDataEventHandler">
            <summary>Sets the shim of Crypt2.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueSignBdBinData">
            <summary>Sets the shim of Crypt2.OpaqueSignBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueSignBytesByteArray">
            <summary>Sets the shim of Crypt2.OpaqueSignBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueSignBytesENCByteArray">
            <summary>Sets the shim of Crypt2.OpaqueSignBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueSignStringENCString">
            <summary>Sets the shim of Crypt2.OpaqueSignStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueSignStringString">
            <summary>Sets the shim of Crypt2.OpaqueSignString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueVerifyBdBinData">
            <summary>Sets the shim of Crypt2.OpaqueVerifyBd(BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueVerifyBytesByteArray">
            <summary>Sets the shim of Crypt2.OpaqueVerifyBytes(Byte[] p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueVerifyBytesENCString">
            <summary>Sets the shim of Crypt2.OpaqueVerifyBytesENC(String p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueVerifyStringByteArray">
            <summary>Sets the shim of Crypt2.OpaqueVerifyString(Byte[] p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.OpaqueVerifyStringENCString">
            <summary>Sets the shim of Crypt2.OpaqueVerifyStringENC(String p7s)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.PaddingSchemeGet">
            <summary>Sets the shim of Crypt2.get_PaddingScheme()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.PaddingSchemeSetInt32">
            <summary>Sets the shim of Crypt2.set_PaddingScheme(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.PbesAlgorithmGet">
            <summary>Sets the shim of Crypt2.get_PbesAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.PbesAlgorithmSetString">
            <summary>Sets the shim of Crypt2.set_PbesAlgorithm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.PbesPasswordGet">
            <summary>Sets the shim of Crypt2.get_PbesPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.PbesPasswordSetString">
            <summary>Sets the shim of Crypt2.set_PbesPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Pbkdf1StringStringStringStringInt32Int32String">
            <summary>Sets the shim of Crypt2.Pbkdf1(String password, String charset, String hashAlg, String salt, Int32 iterationCount, Int32 outputKeyBitLen, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Pbkdf2StringStringStringStringInt32Int32String">
            <summary>Sets the shim of Crypt2.Pbkdf2(String password, String charset, String hashAlg, String salt, Int32 iterationCount, Int32 outputKeyBitLen, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Pkcs7CryptAlgGet">
            <summary>Sets the shim of Crypt2.get_Pkcs7CryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Pkcs7CryptAlgSetString">
            <summary>Sets the shim of Crypt2.set_Pkcs7CryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Pkcs7ExtractDigestInt32String">
            <summary>Sets the shim of Crypt2.Pkcs7ExtractDigest(Int32 signerIndex, String pkcs7)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.RandomizeIV">
            <summary>Sets the shim of Crypt2.RandomizeIV()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.RandomizeKey">
            <summary>Sets the shim of Crypt2.RandomizeKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Rc2EffectiveKeyLengthGet">
            <summary>Sets the shim of Crypt2.get_Rc2EffectiveKeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.Rc2EffectiveKeyLengthSetInt32">
            <summary>Sets the shim of Crypt2.set_Rc2EffectiveKeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.ReEncodeStringStringString">
            <summary>Sets the shim of Crypt2.ReEncode(String encodedData, String fromEncoding, String toEncoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.ReadFileString">
            <summary>Sets the shim of Crypt2.ReadFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SaltGet">
            <summary>Sets the shim of Crypt2.get_Salt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SaltSetByteArray">
            <summary>Sets the shim of Crypt2.set_Salt(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SaveLastErrorString">
            <summary>Sets the shim of Crypt2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SecretKeyGet">
            <summary>Sets the shim of Crypt2.get_SecretKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SecretKeySetByteArray">
            <summary>Sets the shim of Crypt2.set_SecretKey(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetCSPCsp">
            <summary>Sets the shim of Crypt2.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of Crypt2.SetDecryptCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetDecryptCertCert">
            <summary>Sets the shim of Crypt2.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetEncodedAadStringString">
            <summary>Sets the shim of Crypt2.SetEncodedAad(String aadStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetEncodedAuthTagStringString">
            <summary>Sets the shim of Crypt2.SetEncodedAuthTag(String authTagStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetEncodedIVStringString">
            <summary>Sets the shim of Crypt2.SetEncodedIV(String ivStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetEncodedKeyStringString">
            <summary>Sets the shim of Crypt2.SetEncodedKey(String keyStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetEncodedSaltStringString">
            <summary>Sets the shim of Crypt2.SetEncodedSalt(String saltStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetEncryptCertCert">
            <summary>Sets the shim of Crypt2.SetEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetHmacKeyBytesByteArray">
            <summary>Sets the shim of Crypt2.SetHmacKeyBytes(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetHmacKeyEncodedStringString">
            <summary>Sets the shim of Crypt2.SetHmacKeyEncoded(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetHmacKeyStringString">
            <summary>Sets the shim of Crypt2.SetHmacKeyString(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetMacKeyBytesByteArray">
            <summary>Sets the shim of Crypt2.SetMacKeyBytes(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetMacKeyEncodedStringString">
            <summary>Sets the shim of Crypt2.SetMacKeyEncoded(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetMacKeyStringString">
            <summary>Sets the shim of Crypt2.SetMacKeyString(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetSecretKeyViaPasswordString">
            <summary>Sets the shim of Crypt2.SetSecretKeyViaPassword(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetSigningCert2CertPrivateKey">
            <summary>Sets the shim of Crypt2.SetSigningCert2(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetSigningCertCert">
            <summary>Sets the shim of Crypt2.SetSigningCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SetVerifyCertCert">
            <summary>Sets the shim of Crypt2.SetVerifyCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SignBdENCBinData">
            <summary>Sets the shim of Crypt2.SignBdENC(BinData dataToSign)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SignBytesByteArray">
            <summary>Sets the shim of Crypt2.SignBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SignBytesENCByteArray">
            <summary>Sets the shim of Crypt2.SignBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SignSbENCStringBuilder">
            <summary>Sets the shim of Crypt2.SignSbENC(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SignStringENCString">
            <summary>Sets the shim of Crypt2.SignStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SignStringString">
            <summary>Sets the shim of Crypt2.SignString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SigningAlgGet">
            <summary>Sets the shim of Crypt2.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.SigningAlgSetString">
            <summary>Sets the shim of Crypt2.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.StringToBytesStringString">
            <summary>Sets the shim of Crypt2.StringToBytes(String inStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.ToString">
            <summary>Sets the shim of Crypt2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.TrimEndingWithStringString">
            <summary>Sets the shim of Crypt2.TrimEndingWith(String inStr, String ending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.UnlockComponentString">
            <summary>Sets the shim of Crypt2.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Crypt2.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.UuFilenameGet">
            <summary>Sets the shim of Crypt2.get_UuFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.UuFilenameSetString">
            <summary>Sets the shim of Crypt2.set_UuFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.UuModeGet">
            <summary>Sets the shim of Crypt2.get_UuMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.UuModeSetString">
            <summary>Sets the shim of Crypt2.set_UuMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerboseLoggingGet">
            <summary>Sets the shim of Crypt2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Crypt2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyBdENCBinDataString">
            <summary>Sets the shim of Crypt2.VerifyBdENC(BinData data, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyBytesByteArrayByteArray">
            <summary>Sets the shim of Crypt2.VerifyBytes(Byte[] data, Byte[] sig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyBytesENCByteArrayString">
            <summary>Sets the shim of Crypt2.VerifyBytesENC(Byte[] data, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyDetachedSignatureStringString">
            <summary>Sets the shim of Crypt2.VerifyDetachedSignature(String inFilename, String p7sFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyP7MStringString">
            <summary>Sets the shim of Crypt2.VerifyP7M(String p7mPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyP7SStringString">
            <summary>Sets the shim of Crypt2.VerifyP7S(String inFilename, String p7sFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifySbENCStringBuilderString">
            <summary>Sets the shim of Crypt2.VerifySbENC(StringBuilder sb, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyStringENCStringString">
            <summary>Sets the shim of Crypt2.VerifyStringENC(String str, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VerifyStringStringByteArray">
            <summary>Sets the shim of Crypt2.VerifyString(String str, Byte[] sig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.VersionGet">
            <summary>Sets the shim of Crypt2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2.WriteFileStringByteArray">
            <summary>Sets the shim of Crypt2.WriteFile(String filename, Byte[] fileData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2._Crypt2">
            <summary>Sets the shim of Crypt2.!Crypt2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCrypt2._Crypt201">
            <summary>Sets the shim of Crypt2.~Crypt2()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCsp">
            <summary>Shim type of Chilkat.Csp</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsp.#ctor(Chilkat.Csp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCsp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Csp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Csp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.Dispose">
            <summary>Sets the shim of Csp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Csp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.EncryptAlgorithmGet">
            <summary>Sets the shim of Csp.get_EncryptAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.EncryptAlgorithmIDGet">
            <summary>Sets the shim of Csp.get_EncryptAlgorithmID()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.EncryptNumBitsGet">
            <summary>Sets the shim of Csp.get_EncryptNumBits()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.GetKeyContainerNames">
            <summary>Sets the shim of Csp.GetKeyContainerNames()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.HasEncryptAlgorithmStringInt32">
            <summary>Sets the shim of Csp.HasEncryptAlgorithm(String name, Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.HasHashAlgorithmStringInt32">
            <summary>Sets the shim of Csp.HasHashAlgorithm(String name, Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.HashAlgorithmGet">
            <summary>Sets the shim of Csp.get_HashAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.HashAlgorithmIDGet">
            <summary>Sets the shim of Csp.get_HashAlgorithmID()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.HashNumBitsGet">
            <summary>Sets the shim of Csp.get_HashNumBits()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.Initialize">
            <summary>Sets the shim of Csp.Initialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.KeyContainerNameGet">
            <summary>Sets the shim of Csp.get_KeyContainerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.KeyContainerNameSetString">
            <summary>Sets the shim of Csp.set_KeyContainerName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Csp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Csp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Csp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Csp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Csp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.MachineKeysetGet">
            <summary>Sets the shim of Csp.get_MachineKeyset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.MachineKeysetSetBoolean">
            <summary>Sets the shim of Csp.set_MachineKeyset(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthEncryptionAlgorithmInt32">
            <summary>Sets the shim of Csp.NthEncryptionAlgorithm(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthEncryptionNumBitsInt32">
            <summary>Sets the shim of Csp.NthEncryptionNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthHashAlgorithmNameInt32">
            <summary>Sets the shim of Csp.NthHashAlgorithmName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthHashNumBitsInt32">
            <summary>Sets the shim of Csp.NthHashNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthKeyContainerNameInt32">
            <summary>Sets the shim of Csp.NthKeyContainerName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthKeyExchangeAlgorithmInt32">
            <summary>Sets the shim of Csp.NthKeyExchangeAlgorithm(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthKeyExchangeNumBitsInt32">
            <summary>Sets the shim of Csp.NthKeyExchangeNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthSignatureAlgorithmInt32">
            <summary>Sets the shim of Csp.NthSignatureAlgorithm(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NthSignatureNumBitsInt32">
            <summary>Sets the shim of Csp.NthSignatureNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NumEncryptAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumEncryptAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NumHashAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumHashAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NumKeyContainersGet">
            <summary>Sets the shim of Csp.get_NumKeyContainers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NumKeyExchangeAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumKeyExchangeAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.NumSignatureAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumSignatureAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.ProviderNameGet">
            <summary>Sets the shim of Csp.get_ProviderName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.ProviderNameSetString">
            <summary>Sets the shim of Csp.set_ProviderName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.ProviderTypeGet">
            <summary>Sets the shim of Csp.get_ProviderType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Csp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SetEncryptAlgorithmString">
            <summary>Sets the shim of Csp.SetEncryptAlgorithm(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SetHashAlgorithmString">
            <summary>Sets the shim of Csp.SetHashAlgorithm(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SetProviderMicrosoftBase">
            <summary>Sets the shim of Csp.SetProviderMicrosoftBase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SetProviderMicrosoftEnhanced">
            <summary>Sets the shim of Csp.SetProviderMicrosoftEnhanced()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SetProviderMicrosoftRsaAes">
            <summary>Sets the shim of Csp.SetProviderMicrosoftRsaAes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.SetProviderMicrosoftStrong">
            <summary>Sets the shim of Csp.SetProviderMicrosoftStrong()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.ToString01">
            <summary>Sets the shim of Csp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Csp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Csp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances.VersionGet">
            <summary>Sets the shim of Csp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances._Csp">
            <summary>Sets the shim of Csp.!Csp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.AllInstances._Csp01">
            <summary>Sets the shim of Csp.~Csp()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsp.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.Constructor">
            <summary>Sets the shim of Csp.Csp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.DebugLogFilePathGet">
            <summary>Sets the shim of Csp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.DebugLogFilePathSetString">
            <summary>Sets the shim of Csp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.Dispose">
            <summary>Sets the shim of Csp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.DisposeBoolean">
            <summary>Sets the shim of Csp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.EncryptAlgorithmGet">
            <summary>Sets the shim of Csp.get_EncryptAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.EncryptAlgorithmIDGet">
            <summary>Sets the shim of Csp.get_EncryptAlgorithmID()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.EncryptNumBitsGet">
            <summary>Sets the shim of Csp.get_EncryptNumBits()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.GetKeyContainerNames">
            <summary>Sets the shim of Csp.GetKeyContainerNames()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.HasEncryptAlgorithmStringInt32">
            <summary>Sets the shim of Csp.HasEncryptAlgorithm(String name, Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.HasHashAlgorithmStringInt32">
            <summary>Sets the shim of Csp.HasHashAlgorithm(String name, Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.HashAlgorithmGet">
            <summary>Sets the shim of Csp.get_HashAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.HashAlgorithmIDGet">
            <summary>Sets the shim of Csp.get_HashAlgorithmID()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.HashNumBitsGet">
            <summary>Sets the shim of Csp.get_HashNumBits()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.Initialize">
            <summary>Sets the shim of Csp.Initialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.KeyContainerNameGet">
            <summary>Sets the shim of Csp.get_KeyContainerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.KeyContainerNameSetString">
            <summary>Sets the shim of Csp.set_KeyContainerName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.LastErrorHtmlGet">
            <summary>Sets the shim of Csp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.LastErrorTextGet">
            <summary>Sets the shim of Csp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.LastErrorXmlGet">
            <summary>Sets the shim of Csp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.LastMethodSuccessGet">
            <summary>Sets the shim of Csp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Csp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.MachineKeysetGet">
            <summary>Sets the shim of Csp.get_MachineKeyset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.MachineKeysetSetBoolean">
            <summary>Sets the shim of Csp.set_MachineKeyset(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthEncryptionAlgorithmInt32">
            <summary>Sets the shim of Csp.NthEncryptionAlgorithm(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthEncryptionNumBitsInt32">
            <summary>Sets the shim of Csp.NthEncryptionNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthHashAlgorithmNameInt32">
            <summary>Sets the shim of Csp.NthHashAlgorithmName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthHashNumBitsInt32">
            <summary>Sets the shim of Csp.NthHashNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthKeyContainerNameInt32">
            <summary>Sets the shim of Csp.NthKeyContainerName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthKeyExchangeAlgorithmInt32">
            <summary>Sets the shim of Csp.NthKeyExchangeAlgorithm(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthKeyExchangeNumBitsInt32">
            <summary>Sets the shim of Csp.NthKeyExchangeNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthSignatureAlgorithmInt32">
            <summary>Sets the shim of Csp.NthSignatureAlgorithm(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NthSignatureNumBitsInt32">
            <summary>Sets the shim of Csp.NthSignatureNumBits(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NumEncryptAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumEncryptAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NumHashAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumHashAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NumKeyContainersGet">
            <summary>Sets the shim of Csp.get_NumKeyContainers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NumKeyExchangeAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumKeyExchangeAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.NumSignatureAlgorithmsGet">
            <summary>Sets the shim of Csp.get_NumSignatureAlgorithms()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.ProviderNameGet">
            <summary>Sets the shim of Csp.get_ProviderName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.ProviderNameSetString">
            <summary>Sets the shim of Csp.set_ProviderName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.ProviderTypeGet">
            <summary>Sets the shim of Csp.get_ProviderType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SaveLastErrorString">
            <summary>Sets the shim of Csp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SetEncryptAlgorithmString">
            <summary>Sets the shim of Csp.SetEncryptAlgorithm(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SetHashAlgorithmString">
            <summary>Sets the shim of Csp.SetHashAlgorithm(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SetProviderMicrosoftBase">
            <summary>Sets the shim of Csp.SetProviderMicrosoftBase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SetProviderMicrosoftEnhanced">
            <summary>Sets the shim of Csp.SetProviderMicrosoftEnhanced()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SetProviderMicrosoftRsaAes">
            <summary>Sets the shim of Csp.SetProviderMicrosoftRsaAes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.SetProviderMicrosoftStrong">
            <summary>Sets the shim of Csp.SetProviderMicrosoftStrong()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.ToString">
            <summary>Sets the shim of Csp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.VerboseLoggingGet">
            <summary>Sets the shim of Csp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Csp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp.VersionGet">
            <summary>Sets the shim of Csp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp._Csp">
            <summary>Sets the shim of Csp.!Csp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsp._Csp01">
            <summary>Sets the shim of Csp.~Csp()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCsr">
            <summary>Shim type of Chilkat.Csr</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsr.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsr.#ctor(Chilkat.Csr)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCsr.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CommonNameGet">
            <summary>Sets the shim of Csr.get_CommonName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CommonNameSetString">
            <summary>Sets the shim of Csr.set_CommonName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CompanyDivisionGet">
            <summary>Sets the shim of Csr.get_CompanyDivision()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CompanyDivisionSetString">
            <summary>Sets the shim of Csr.set_CompanyDivision(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CompanyGet">
            <summary>Sets the shim of Csr.get_Company()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CompanySetString">
            <summary>Sets the shim of Csr.set_Company(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CountryGet">
            <summary>Sets the shim of Csr.get_Country()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.CountrySetString">
            <summary>Sets the shim of Csr.set_Country(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Csr.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Csr.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.Dispose">
            <summary>Sets the shim of Csr.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Csr.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.EmailAddressGet">
            <summary>Sets the shim of Csr.get_EmailAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.EmailAddressSetString">
            <summary>Sets the shim of Csr.set_EmailAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.GenCsrBdPrivateKeyBinData">
            <summary>Sets the shim of Csr.GenCsrBd(PrivateKey privKey, BinData csrData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.GenCsrPemPrivateKey">
            <summary>Sets the shim of Csr.GenCsrPem(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.GetSubjectFieldString">
            <summary>Sets the shim of Csr.GetSubjectField(String oid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Csr.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Csr.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Csr.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Csr.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Csr.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LoadCsrPemString">
            <summary>Sets the shim of Csr.LoadCsrPem(String csrPemStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LocalityGet">
            <summary>Sets the shim of Csr.get_Locality()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.LocalitySetString">
            <summary>Sets the shim of Csr.set_Locality(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Csr.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.SetSubjectFieldStringStringString">
            <summary>Sets the shim of Csr.SetSubjectField(String oid, String value, String asnType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.StateGet">
            <summary>Sets the shim of Csr.get_State()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.StateSetString">
            <summary>Sets the shim of Csr.set_State(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.ToString01">
            <summary>Sets the shim of Csr.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Csr.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Csr.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances.VersionGet">
            <summary>Sets the shim of Csr.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances._Csr">
            <summary>Sets the shim of Csr.!Csr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.AllInstances._Csr01">
            <summary>Sets the shim of Csr.~Csr()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsr.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsr.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsr.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CommonNameGet">
            <summary>Sets the shim of Csr.get_CommonName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CommonNameSetString">
            <summary>Sets the shim of Csr.set_CommonName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CompanyDivisionGet">
            <summary>Sets the shim of Csr.get_CompanyDivision()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CompanyDivisionSetString">
            <summary>Sets the shim of Csr.set_CompanyDivision(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CompanyGet">
            <summary>Sets the shim of Csr.get_Company()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CompanySetString">
            <summary>Sets the shim of Csr.set_Company(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.Constructor">
            <summary>Sets the shim of Csr.Csr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CountryGet">
            <summary>Sets the shim of Csr.get_Country()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.CountrySetString">
            <summary>Sets the shim of Csr.set_Country(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.DebugLogFilePathGet">
            <summary>Sets the shim of Csr.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.DebugLogFilePathSetString">
            <summary>Sets the shim of Csr.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.Dispose">
            <summary>Sets the shim of Csr.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.DisposeBoolean">
            <summary>Sets the shim of Csr.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.EmailAddressGet">
            <summary>Sets the shim of Csr.get_EmailAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.EmailAddressSetString">
            <summary>Sets the shim of Csr.set_EmailAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.GenCsrBdPrivateKeyBinData">
            <summary>Sets the shim of Csr.GenCsrBd(PrivateKey privKey, BinData csrData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.GenCsrPemPrivateKey">
            <summary>Sets the shim of Csr.GenCsrPem(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.GetSubjectFieldString">
            <summary>Sets the shim of Csr.GetSubjectField(String oid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LastErrorHtmlGet">
            <summary>Sets the shim of Csr.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LastErrorTextGet">
            <summary>Sets the shim of Csr.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LastErrorXmlGet">
            <summary>Sets the shim of Csr.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LastMethodSuccessGet">
            <summary>Sets the shim of Csr.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Csr.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LoadCsrPemString">
            <summary>Sets the shim of Csr.LoadCsrPem(String csrPemStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LocalityGet">
            <summary>Sets the shim of Csr.get_Locality()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.LocalitySetString">
            <summary>Sets the shim of Csr.set_Locality(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.SaveLastErrorString">
            <summary>Sets the shim of Csr.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.SetSubjectFieldStringStringString">
            <summary>Sets the shim of Csr.SetSubjectField(String oid, String value, String asnType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.StateGet">
            <summary>Sets the shim of Csr.get_State()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.StateSetString">
            <summary>Sets the shim of Csr.set_State(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.ToString">
            <summary>Sets the shim of Csr.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.VerboseLoggingGet">
            <summary>Sets the shim of Csr.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Csr.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr.VersionGet">
            <summary>Sets the shim of Csr.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr._Csr">
            <summary>Sets the shim of Csr.!Csr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsr._Csr01">
            <summary>Sets the shim of Csr.~Csr()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCsv">
            <summary>Shim type of Chilkat.Csv</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsv.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsv.#ctor(Chilkat.Csv)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimCsv.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.AutoTrimGet">
            <summary>Sets the shim of Csv.get_AutoTrim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.AutoTrimSetBoolean">
            <summary>Sets the shim of Csv.set_AutoTrim(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.CrlfGet">
            <summary>Sets the shim of Csv.get_Crlf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.CrlfSetBoolean">
            <summary>Sets the shim of Csv.set_Crlf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Csv.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Csv.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DeleteColumnByNameString">
            <summary>Sets the shim of Csv.DeleteColumnByName(String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DeleteColumnInt32">
            <summary>Sets the shim of Csv.DeleteColumn(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DeleteRowInt32">
            <summary>Sets the shim of Csv.DeleteRow(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DelimiterGet">
            <summary>Sets the shim of Csv.get_Delimiter()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DelimiterSetString">
            <summary>Sets the shim of Csv.set_Delimiter(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.Dispose">
            <summary>Sets the shim of Csv.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Csv.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.EscapeBackslashGet">
            <summary>Sets the shim of Csv.get_EscapeBackslash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.EscapeBackslashSetBoolean">
            <summary>Sets the shim of Csv.set_EscapeBackslash(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.GetCellByNameInt32String">
            <summary>Sets the shim of Csv.GetCellByName(Int32 rowIndex, String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.GetCellInt32Int32">
            <summary>Sets the shim of Csv.GetCell(Int32 row, Int32 col)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.GetColumnNameInt32">
            <summary>Sets the shim of Csv.GetColumnName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.GetIndexString">
            <summary>Sets the shim of Csv.GetIndex(String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.GetNumColsInt32">
            <summary>Sets the shim of Csv.GetNumCols(Int32 row)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.HasColumnNamesGet">
            <summary>Sets the shim of Csv.get_HasColumnNames()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.HasColumnNamesSetBoolean">
            <summary>Sets the shim of Csv.set_HasColumnNames(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Csv.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Csv.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Csv.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Csv.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Csv.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LoadFile2StringString">
            <summary>Sets the shim of Csv.LoadFile2(String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LoadFileString">
            <summary>Sets the shim of Csv.LoadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.LoadFromStringString">
            <summary>Sets the shim of Csv.LoadFromString(String csvData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.NumColumnsGet">
            <summary>Sets the shim of Csv.get_NumColumns()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.NumRowsGet">
            <summary>Sets the shim of Csv.get_NumRows()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.RowMatchesInt32StringBoolean">
            <summary>Sets the shim of Csv.RowMatches(Int32 rowIndex, String matchPattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SaveFile2StringString">
            <summary>Sets the shim of Csv.SaveFile2(String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SaveFileString">
            <summary>Sets the shim of Csv.SaveFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Csv.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SaveToString">
            <summary>Sets the shim of Csv.SaveToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SetCellByNameInt32StringString">
            <summary>Sets the shim of Csv.SetCellByName(Int32 rowIndex, String columnName, String contentStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SetCellInt32Int32String">
            <summary>Sets the shim of Csv.SetCell(Int32 row, Int32 col, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SetColumnNameInt32String">
            <summary>Sets the shim of Csv.SetColumnName(Int32 index, String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.SortByColumnStringBooleanBoolean">
            <summary>Sets the shim of Csv.SortByColumn(String columnName, Boolean ascending, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.ToString01">
            <summary>Sets the shim of Csv.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Csv.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Csv.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances.VersionGet">
            <summary>Sets the shim of Csv.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances._Csv">
            <summary>Sets the shim of Csv.!Csv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AllInstances._Csv01">
            <summary>Sets the shim of Csv.~Csv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AutoTrimGet">
            <summary>Sets the shim of Csv.get_AutoTrim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.AutoTrimSetBoolean">
            <summary>Sets the shim of Csv.set_AutoTrim(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsv.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsv.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimCsv.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.Constructor">
            <summary>Sets the shim of Csv.Csv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.CrlfGet">
            <summary>Sets the shim of Csv.get_Crlf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.CrlfSetBoolean">
            <summary>Sets the shim of Csv.set_Crlf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DebugLogFilePathGet">
            <summary>Sets the shim of Csv.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DebugLogFilePathSetString">
            <summary>Sets the shim of Csv.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DeleteColumnByNameString">
            <summary>Sets the shim of Csv.DeleteColumnByName(String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DeleteColumnInt32">
            <summary>Sets the shim of Csv.DeleteColumn(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DeleteRowInt32">
            <summary>Sets the shim of Csv.DeleteRow(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DelimiterGet">
            <summary>Sets the shim of Csv.get_Delimiter()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DelimiterSetString">
            <summary>Sets the shim of Csv.set_Delimiter(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.Dispose">
            <summary>Sets the shim of Csv.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.DisposeBoolean">
            <summary>Sets the shim of Csv.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.EscapeBackslashGet">
            <summary>Sets the shim of Csv.get_EscapeBackslash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.EscapeBackslashSetBoolean">
            <summary>Sets the shim of Csv.set_EscapeBackslash(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.GetCellByNameInt32String">
            <summary>Sets the shim of Csv.GetCellByName(Int32 rowIndex, String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.GetCellInt32Int32">
            <summary>Sets the shim of Csv.GetCell(Int32 row, Int32 col)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.GetColumnNameInt32">
            <summary>Sets the shim of Csv.GetColumnName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.GetIndexString">
            <summary>Sets the shim of Csv.GetIndex(String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.GetNumColsInt32">
            <summary>Sets the shim of Csv.GetNumCols(Int32 row)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.HasColumnNamesGet">
            <summary>Sets the shim of Csv.get_HasColumnNames()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.HasColumnNamesSetBoolean">
            <summary>Sets the shim of Csv.set_HasColumnNames(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LastErrorHtmlGet">
            <summary>Sets the shim of Csv.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LastErrorTextGet">
            <summary>Sets the shim of Csv.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LastErrorXmlGet">
            <summary>Sets the shim of Csv.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LastMethodSuccessGet">
            <summary>Sets the shim of Csv.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Csv.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LoadFile2StringString">
            <summary>Sets the shim of Csv.LoadFile2(String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LoadFileString">
            <summary>Sets the shim of Csv.LoadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.LoadFromStringString">
            <summary>Sets the shim of Csv.LoadFromString(String csvData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.NumColumnsGet">
            <summary>Sets the shim of Csv.get_NumColumns()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.NumRowsGet">
            <summary>Sets the shim of Csv.get_NumRows()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.RowMatchesInt32StringBoolean">
            <summary>Sets the shim of Csv.RowMatches(Int32 rowIndex, String matchPattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SaveFile2StringString">
            <summary>Sets the shim of Csv.SaveFile2(String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SaveFileString">
            <summary>Sets the shim of Csv.SaveFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SaveLastErrorString">
            <summary>Sets the shim of Csv.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SaveToString">
            <summary>Sets the shim of Csv.SaveToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SetCellByNameInt32StringString">
            <summary>Sets the shim of Csv.SetCellByName(Int32 rowIndex, String columnName, String contentStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SetCellInt32Int32String">
            <summary>Sets the shim of Csv.SetCell(Int32 row, Int32 col, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SetColumnNameInt32String">
            <summary>Sets the shim of Csv.SetColumnName(Int32 index, String columnName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.SortByColumnStringBooleanBoolean">
            <summary>Sets the shim of Csv.SortByColumn(String columnName, Boolean ascending, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.ToString">
            <summary>Sets the shim of Csv.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.VerboseLoggingGet">
            <summary>Sets the shim of Csv.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Csv.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv.VersionGet">
            <summary>Sets the shim of Csv.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv._Csv">
            <summary>Sets the shim of Csv.!Csv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimCsv._Csv01">
            <summary>Sets the shim of Csv.~Csv()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDataRateEventArgs">
            <summary>Shim type of Chilkat.DataRateEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDataRateEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDataRateEventArgs.#ctor(Chilkat.DataRateEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDataRateEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.AllInstances.ByteCountGet">
            <summary>Sets the shim of DataRateEventArgs.get_ByteCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.AllInstances.BytesPerSecGet">
            <summary>Sets the shim of DataRateEventArgs.get_BytesPerSec()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of DataRateEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DataRateEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.AllInstances._DataRateEventArgs">
            <summary>Sets the shim of DataRateEventArgs.~DataRateEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDataRateEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDataRateEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDataRateEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.ByteCountGet">
            <summary>Sets the shim of DataRateEventArgs.get_ByteCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.BytesPerSecGet">
            <summary>Sets the shim of DataRateEventArgs.get_BytesPerSec()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.ConstructorInt64UInt32">
            <summary>Sets the shim of DataRateEventArgs.DataRateEventArgs(Int64 byteCount, UInt32 bytesPerSec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.Dispose">
            <summary>Sets the shim of DataRateEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs.DisposeBoolean">
            <summary>Sets the shim of DataRateEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDataRateEventArgs._DataRateEventArgs">
            <summary>Sets the shim of DataRateEventArgs.~DataRateEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDh">
            <summary>Shim type of Chilkat.Dh</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDh.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDh.#ctor(Chilkat.Dh)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDh.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.CreateEInt32">
            <summary>Sets the shim of Dh.CreateE(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Dh.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Dh.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.Dispose">
            <summary>Sets the shim of Dh.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Dh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.FindKString">
            <summary>Sets the shim of Dh.FindK(String E)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.GGet">
            <summary>Sets the shim of Dh.get_G()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.GenPGInt32Int32">
            <summary>Sets the shim of Dh.GenPG(Int32 numBits, Int32 G)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Dh.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Dh.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Dh.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Dh.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Dh.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.PGet">
            <summary>Sets the shim of Dh.get_P()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Dh.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.SetPGStringInt32">
            <summary>Sets the shim of Dh.SetPG(String p, Int32 g)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.ToString01">
            <summary>Sets the shim of Dh.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Dh.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.UseKnownPrimeInt32">
            <summary>Sets the shim of Dh.UseKnownPrime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Dh.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Dh.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances.VersionGet">
            <summary>Sets the shim of Dh.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances._Dh">
            <summary>Sets the shim of Dh.!Dh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.AllInstances._Dh01">
            <summary>Sets the shim of Dh.~Dh()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDh.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDh.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDh.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.Constructor">
            <summary>Sets the shim of Dh.Dh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.CreateEInt32">
            <summary>Sets the shim of Dh.CreateE(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.DebugLogFilePathGet">
            <summary>Sets the shim of Dh.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.DebugLogFilePathSetString">
            <summary>Sets the shim of Dh.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.Dispose">
            <summary>Sets the shim of Dh.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.DisposeBoolean">
            <summary>Sets the shim of Dh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.FindKString">
            <summary>Sets the shim of Dh.FindK(String E)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.GGet">
            <summary>Sets the shim of Dh.get_G()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.GenPGInt32Int32">
            <summary>Sets the shim of Dh.GenPG(Int32 numBits, Int32 G)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.LastErrorHtmlGet">
            <summary>Sets the shim of Dh.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.LastErrorTextGet">
            <summary>Sets the shim of Dh.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.LastErrorXmlGet">
            <summary>Sets the shim of Dh.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.LastMethodSuccessGet">
            <summary>Sets the shim of Dh.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Dh.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.PGet">
            <summary>Sets the shim of Dh.get_P()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.SaveLastErrorString">
            <summary>Sets the shim of Dh.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.SetPGStringInt32">
            <summary>Sets the shim of Dh.SetPG(String p, Int32 g)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.ToString">
            <summary>Sets the shim of Dh.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.UnlockComponentString">
            <summary>Sets the shim of Dh.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.UseKnownPrimeInt32">
            <summary>Sets the shim of Dh.UseKnownPrime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.VerboseLoggingGet">
            <summary>Sets the shim of Dh.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Dh.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh.VersionGet">
            <summary>Sets the shim of Dh.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh._Dh">
            <summary>Sets the shim of Dh.!Dh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDh._Dh01">
            <summary>Sets the shim of Dh.~Dh()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDirToBeAddedEventArgs">
            <summary>Shim type of Chilkat.DirToBeAddedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirToBeAddedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirToBeAddedEventArgs.#ctor(Chilkat.DirToBeAddedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances.DirNameGet">
            <summary>Sets the shim of DirToBeAddedEventArgs.get_DirName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of DirToBeAddedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DirToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances.ExcludeGet">
            <summary>Sets the shim of DirToBeAddedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances.ExcludeSetBoolean">
            <summary>Sets the shim of DirToBeAddedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.AllInstances._DirToBeAddedEventArgs">
            <summary>Sets the shim of DirToBeAddedEventArgs.~DirToBeAddedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirToBeAddedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirToBeAddedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirToBeAddedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.DirNameGet">
            <summary>Sets the shim of DirToBeAddedEventArgs.get_DirName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.Dispose">
            <summary>Sets the shim of DirToBeAddedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.DisposeBoolean">
            <summary>Sets the shim of DirToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.ExcludeGet">
            <summary>Sets the shim of DirToBeAddedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs.ExcludeSetBoolean">
            <summary>Sets the shim of DirToBeAddedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirToBeAddedEventArgs._DirToBeAddedEventArgs">
            <summary>Sets the shim of DirToBeAddedEventArgs.~DirToBeAddedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDirTree">
            <summary>Shim type of Chilkat.DirTree</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirTree.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirTree.#ctor(Chilkat.DirTree)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AdvancePosition">
            <summary>Sets the shim of DirTree.AdvancePosition()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDirTree.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.AdvancePosition">
            <summary>Sets the shim of DirTree.AdvancePosition()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.BaseDirGet">
            <summary>Sets the shim of DirTree.get_BaseDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.BaseDirSetString">
            <summary>Sets the shim of DirTree.set_BaseDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.BeginIterate">
            <summary>Sets the shim of DirTree.BeginIterate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of DirTree.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of DirTree.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.Dispose">
            <summary>Sets the shim of DirTree.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DirTree.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.DoneIteratingGet">
            <summary>Sets the shim of DirTree.get_DoneIterating()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.FileSize32Get">
            <summary>Sets the shim of DirTree.get_FileSize32()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.FileSize64Get">
            <summary>Sets the shim of DirTree.get_FileSize64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.FullPathGet">
            <summary>Sets the shim of DirTree.get_FullPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.FullUncPathGet">
            <summary>Sets the shim of DirTree.get_FullUncPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of DirTree.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of DirTree.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of DirTree.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of DirTree.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of DirTree.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of DirTree.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.RecurseGet">
            <summary>Sets the shim of DirTree.get_Recurse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.RecurseSetBoolean">
            <summary>Sets the shim of DirTree.set_Recurse(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.RelativePathGet">
            <summary>Sets the shim of DirTree.get_RelativePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of DirTree.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.ToString01">
            <summary>Sets the shim of DirTree.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of DirTree.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of DirTree.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances.VersionGet">
            <summary>Sets the shim of DirTree.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances._DirTree">
            <summary>Sets the shim of DirTree.!DirTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.AllInstances._DirTree01">
            <summary>Sets the shim of DirTree.~DirTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.BaseDirGet">
            <summary>Sets the shim of DirTree.get_BaseDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.BaseDirSetString">
            <summary>Sets the shim of DirTree.set_BaseDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.BeginIterate">
            <summary>Sets the shim of DirTree.BeginIterate()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirTree.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirTree.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDirTree.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.Constructor">
            <summary>Sets the shim of DirTree.DirTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.DebugLogFilePathGet">
            <summary>Sets the shim of DirTree.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.DebugLogFilePathSetString">
            <summary>Sets the shim of DirTree.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.Dispose">
            <summary>Sets the shim of DirTree.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.DisposeBoolean">
            <summary>Sets the shim of DirTree.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.DoneIteratingGet">
            <summary>Sets the shim of DirTree.get_DoneIterating()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.FileSize32Get">
            <summary>Sets the shim of DirTree.get_FileSize32()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.FileSize64Get">
            <summary>Sets the shim of DirTree.get_FileSize64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.FullPathGet">
            <summary>Sets the shim of DirTree.get_FullPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.FullUncPathGet">
            <summary>Sets the shim of DirTree.get_FullUncPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.IsDirectoryGet">
            <summary>Sets the shim of DirTree.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.LastErrorHtmlGet">
            <summary>Sets the shim of DirTree.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.LastErrorTextGet">
            <summary>Sets the shim of DirTree.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.LastErrorXmlGet">
            <summary>Sets the shim of DirTree.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.LastMethodSuccessGet">
            <summary>Sets the shim of DirTree.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of DirTree.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.RecurseGet">
            <summary>Sets the shim of DirTree.get_Recurse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.RecurseSetBoolean">
            <summary>Sets the shim of DirTree.set_Recurse(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.RelativePathGet">
            <summary>Sets the shim of DirTree.get_RelativePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.SaveLastErrorString">
            <summary>Sets the shim of DirTree.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.ToString">
            <summary>Sets the shim of DirTree.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.VerboseLoggingGet">
            <summary>Sets the shim of DirTree.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.VerboseLoggingSetBoolean">
            <summary>Sets the shim of DirTree.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree.VersionGet">
            <summary>Sets the shim of DirTree.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree._DirTree">
            <summary>Sets the shim of DirTree.!DirTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDirTree._DirTree01">
            <summary>Sets the shim of DirTree.~DirTree()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDkim">
            <summary>Shim type of Chilkat.Dkim</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDkim.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDkim.#ctor(Chilkat.Dkim)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AbortCurrentGet">
            <summary>Sets the shim of Dkim.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AbortCurrentSetBoolean">
            <summary>Sets the shim of Dkim.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AddDkimSignatureByteArray">
            <summary>Sets the shim of Dkim.AddDkimSignature(Byte[] mimeIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AddDomainKeySignatureByteArray">
            <summary>Sets the shim of Dkim.AddDomainKeySignature(Byte[] mimeIn)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDkim.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Dkim.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Dkim.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.AddDkimSignatureByteArray">
            <summary>Sets the shim of Dkim.AddDkimSignature(Byte[] mimeIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.AddDomainKeySignatureByteArray">
            <summary>Sets the shim of Dkim.AddDomainKeySignature(Byte[] mimeIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Dkim.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Dkim.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.Dispose">
            <summary>Sets the shim of Dkim.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Dkim.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimAlgGet">
            <summary>Sets the shim of Dkim.get_DkimAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimAlgSetString">
            <summary>Sets the shim of Dkim.set_DkimAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimBodyLengthCountGet">
            <summary>Sets the shim of Dkim.get_DkimBodyLengthCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimBodyLengthCountSetInt32">
            <summary>Sets the shim of Dkim.set_DkimBodyLengthCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimCanonGet">
            <summary>Sets the shim of Dkim.get_DkimCanon()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimCanonSetString">
            <summary>Sets the shim of Dkim.set_DkimCanon(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimDomainGet">
            <summary>Sets the shim of Dkim.get_DkimDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimDomainSetString">
            <summary>Sets the shim of Dkim.set_DkimDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimHeadersGet">
            <summary>Sets the shim of Dkim.get_DkimHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimHeadersSetString">
            <summary>Sets the shim of Dkim.set_DkimHeaders(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimSelectorGet">
            <summary>Sets the shim of Dkim.get_DkimSelector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DkimSelectorSetString">
            <summary>Sets the shim of Dkim.set_DkimSelector(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyAlgGet">
            <summary>Sets the shim of Dkim.get_DomainKeyAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyAlgSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyCanonGet">
            <summary>Sets the shim of Dkim.get_DomainKeyCanon()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyCanonSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyCanon(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyDomainGet">
            <summary>Sets the shim of Dkim.get_DomainKeyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyDomainSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyHeadersGet">
            <summary>Sets the shim of Dkim.get_DomainKeyHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeyHeadersSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyHeaders(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeySelectorGet">
            <summary>Sets the shim of Dkim.get_DomainKeySelector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.DomainKeySelectorSetString">
            <summary>Sets the shim of Dkim.set_DomainKeySelector(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Dkim.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Dkim.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Dkim.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Dkim.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Dkim.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Dkim.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Dkim.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Dkim.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Dkim.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Dkim.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Dkim.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Dkim.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Dkim.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Dkim.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Dkim.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadDkimPkBytesByteArrayString">
            <summary>Sets the shim of Dkim.LoadDkimPkBytes(Byte[] privateKeyDer, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadDkimPkFileStringString">
            <summary>Sets the shim of Dkim.LoadDkimPkFile(String privateKeyFilePath, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadDkimPkStringString">
            <summary>Sets the shim of Dkim.LoadDkimPk(String privateKey, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadDomainKeyPkBytesByteArrayString">
            <summary>Sets the shim of Dkim.LoadDomainKeyPkBytes(Byte[] privateKeyDer, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadDomainKeyPkFileStringString">
            <summary>Sets the shim of Dkim.LoadDomainKeyPkFile(String privateKeyFilePath, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadDomainKeyPkStringString">
            <summary>Sets the shim of Dkim.LoadDomainKeyPk(String privateKey, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadPublicKeyFileStringStringString">
            <summary>Sets the shim of Dkim.LoadPublicKeyFile(String selector, String domain, String publicKeyFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.LoadPublicKeyStringStringString">
            <summary>Sets the shim of Dkim.LoadPublicKey(String selector, String domain, String publicKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.NumDkimSignaturesByteArray">
            <summary>Sets the shim of Dkim.NumDkimSignatures(Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.NumDomainKeySignaturesByteArray">
            <summary>Sets the shim of Dkim.NumDomainKeySignatures(Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnAbortCheckAddDkimAbortCheckEventHandler">
            <summary>Sets the shim of Dkim.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Dkim.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnAbortCheckRemoveDkimAbortCheckEventHandler">
            <summary>Sets the shim of Dkim.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnBinaryDataAddDkimBinaryDataEventHandler">
            <summary>Sets the shim of Dkim.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Dkim.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnBinaryDataRemoveDkimBinaryDataEventHandler">
            <summary>Sets the shim of Dkim.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnPercentDoneAddDkimPercentDoneEventHandler">
            <summary>Sets the shim of Dkim.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Dkim.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnPercentDoneRemoveDkimPercentDoneEventHandler">
            <summary>Sets the shim of Dkim.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnProgressInfoAddDkimProgressInfoEventHandler">
            <summary>Sets the shim of Dkim.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Dkim.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnProgressInfoRemoveDkimProgressInfoEventHandler">
            <summary>Sets the shim of Dkim.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnTaskCompletedAddDkimTaskCompletedEventHandler">
            <summary>Sets the shim of Dkim.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Dkim.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnTaskCompletedRemoveDkimTaskCompletedEventHandler">
            <summary>Sets the shim of Dkim.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnTextDataAddDkimTextDataEventHandler">
            <summary>Sets the shim of Dkim.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Dkim.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.OnTextDataRemoveDkimTextDataEventHandler">
            <summary>Sets the shim of Dkim.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.PrefetchPublicKeyAsyncStringString">
            <summary>Sets the shim of Dkim.PrefetchPublicKeyAsync(String selector, String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.PrefetchPublicKeyStringString">
            <summary>Sets the shim of Dkim.PrefetchPublicKey(String selector, String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Dkim.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.ToString01">
            <summary>Sets the shim of Dkim.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Dkim.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Dkim.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Dkim.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VerifyDkimSignatureAsyncInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDkimSignatureAsync(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VerifyDkimSignatureInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDkimSignature(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VerifyDomainKeySignatureAsyncInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDomainKeySignatureAsync(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VerifyDomainKeySignatureInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDomainKeySignature(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances.VersionGet">
            <summary>Sets the shim of Dkim.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances._Dkim">
            <summary>Sets the shim of Dkim.!Dkim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.AllInstances._Dkim01">
            <summary>Sets the shim of Dkim.~Dkim()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDkim.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDkim.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDkim.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.Constructor">
            <summary>Sets the shim of Dkim.Dkim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DebugLogFilePathGet">
            <summary>Sets the shim of Dkim.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DebugLogFilePathSetString">
            <summary>Sets the shim of Dkim.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.Dispose">
            <summary>Sets the shim of Dkim.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DisposeBoolean">
            <summary>Sets the shim of Dkim.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimAlgGet">
            <summary>Sets the shim of Dkim.get_DkimAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimAlgSetString">
            <summary>Sets the shim of Dkim.set_DkimAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimBodyLengthCountGet">
            <summary>Sets the shim of Dkim.get_DkimBodyLengthCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimBodyLengthCountSetInt32">
            <summary>Sets the shim of Dkim.set_DkimBodyLengthCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimCanonGet">
            <summary>Sets the shim of Dkim.get_DkimCanon()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimCanonSetString">
            <summary>Sets the shim of Dkim.set_DkimCanon(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimDomainGet">
            <summary>Sets the shim of Dkim.get_DkimDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimDomainSetString">
            <summary>Sets the shim of Dkim.set_DkimDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimHeadersGet">
            <summary>Sets the shim of Dkim.get_DkimHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimHeadersSetString">
            <summary>Sets the shim of Dkim.set_DkimHeaders(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimSelectorGet">
            <summary>Sets the shim of Dkim.get_DkimSelector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DkimSelectorSetString">
            <summary>Sets the shim of Dkim.set_DkimSelector(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyAlgGet">
            <summary>Sets the shim of Dkim.get_DomainKeyAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyAlgSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyCanonGet">
            <summary>Sets the shim of Dkim.get_DomainKeyCanon()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyCanonSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyCanon(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyDomainGet">
            <summary>Sets the shim of Dkim.get_DomainKeyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyDomainSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyHeadersGet">
            <summary>Sets the shim of Dkim.get_DomainKeyHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeyHeadersSetString">
            <summary>Sets the shim of Dkim.set_DomainKeyHeaders(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeySelectorGet">
            <summary>Sets the shim of Dkim.get_DomainKeySelector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.DomainKeySelectorSetString">
            <summary>Sets the shim of Dkim.set_DomainKeySelector(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.EnableEventsGet">
            <summary>Sets the shim of Dkim.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.EnableEventsSetBoolean">
            <summary>Sets the shim of Dkim.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Dkim.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Dkim.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Dkim.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Dkim.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Dkim.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Dkim.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.HeartbeatMsGet">
            <summary>Sets the shim of Dkim.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.HeartbeatMsSetInt32">
            <summary>Sets the shim of Dkim.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LastErrorHtmlGet">
            <summary>Sets the shim of Dkim.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LastErrorTextGet">
            <summary>Sets the shim of Dkim.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LastErrorXmlGet">
            <summary>Sets the shim of Dkim.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LastMethodSuccessGet">
            <summary>Sets the shim of Dkim.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Dkim.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadDkimPkBytesByteArrayString">
            <summary>Sets the shim of Dkim.LoadDkimPkBytes(Byte[] privateKeyDer, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadDkimPkFileStringString">
            <summary>Sets the shim of Dkim.LoadDkimPkFile(String privateKeyFilePath, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadDkimPkStringString">
            <summary>Sets the shim of Dkim.LoadDkimPk(String privateKey, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadDomainKeyPkBytesByteArrayString">
            <summary>Sets the shim of Dkim.LoadDomainKeyPkBytes(Byte[] privateKeyDer, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadDomainKeyPkFileStringString">
            <summary>Sets the shim of Dkim.LoadDomainKeyPkFile(String privateKeyFilePath, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadDomainKeyPkStringString">
            <summary>Sets the shim of Dkim.LoadDomainKeyPk(String privateKey, String optionalPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadPublicKeyFileStringStringString">
            <summary>Sets the shim of Dkim.LoadPublicKeyFile(String selector, String domain, String publicKeyFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.LoadPublicKeyStringStringString">
            <summary>Sets the shim of Dkim.LoadPublicKey(String selector, String domain, String publicKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.NumDkimSignaturesByteArray">
            <summary>Sets the shim of Dkim.NumDkimSignatures(Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.NumDomainKeySignaturesByteArray">
            <summary>Sets the shim of Dkim.NumDomainKeySignatures(Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnAbortCheckAddDkimAbortCheckEventHandler">
            <summary>Sets the shim of Dkim.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Dkim.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnAbortCheckRemoveDkimAbortCheckEventHandler">
            <summary>Sets the shim of Dkim.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnBinaryDataAddDkimBinaryDataEventHandler">
            <summary>Sets the shim of Dkim.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Dkim.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnBinaryDataRemoveDkimBinaryDataEventHandler">
            <summary>Sets the shim of Dkim.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnPercentDoneAddDkimPercentDoneEventHandler">
            <summary>Sets the shim of Dkim.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Dkim.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnPercentDoneRemoveDkimPercentDoneEventHandler">
            <summary>Sets the shim of Dkim.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnProgressInfoAddDkimProgressInfoEventHandler">
            <summary>Sets the shim of Dkim.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Dkim.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnProgressInfoRemoveDkimProgressInfoEventHandler">
            <summary>Sets the shim of Dkim.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnTaskCompletedAddDkimTaskCompletedEventHandler">
            <summary>Sets the shim of Dkim.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Dkim.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnTaskCompletedRemoveDkimTaskCompletedEventHandler">
            <summary>Sets the shim of Dkim.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnTextDataAddDkimTextDataEventHandler">
            <summary>Sets the shim of Dkim.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Dkim.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.OnTextDataRemoveDkimTextDataEventHandler">
            <summary>Sets the shim of Dkim.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.PrefetchPublicKeyAsyncStringString">
            <summary>Sets the shim of Dkim.PrefetchPublicKeyAsync(String selector, String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.PrefetchPublicKeyStringString">
            <summary>Sets the shim of Dkim.PrefetchPublicKey(String selector, String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.SaveLastErrorString">
            <summary>Sets the shim of Dkim.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.ToString">
            <summary>Sets the shim of Dkim.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.UnlockComponentString">
            <summary>Sets the shim of Dkim.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VerboseLoggingGet">
            <summary>Sets the shim of Dkim.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Dkim.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VerifyDkimSignatureAsyncInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDkimSignatureAsync(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VerifyDkimSignatureInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDkimSignature(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VerifyDomainKeySignatureAsyncInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDomainKeySignatureAsync(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VerifyDomainKeySignatureInt32ByteArray">
            <summary>Sets the shim of Dkim.VerifyDomainKeySignature(Int32 sigIndex, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim.VersionGet">
            <summary>Sets the shim of Dkim.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim._Dkim">
            <summary>Sets the shim of Dkim.!Dkim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDkim._Dkim01">
            <summary>Sets the shim of Dkim.~Dkim()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDsa">
            <summary>Shim type of Chilkat.Dsa</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDsa.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDsa.#ctor(Chilkat.Dsa)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDsa.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Dsa.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Dsa.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.Dispose">
            <summary>Sets the shim of Dsa.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Dsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromDerByteArray">
            <summary>Sets the shim of Dsa.FromDer(Byte[] derData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromDerFileString">
            <summary>Sets the shim of Dsa.FromDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromEncryptedPemStringString">
            <summary>Sets the shim of Dsa.FromEncryptedPem(String password, String pemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromPemString">
            <summary>Sets the shim of Dsa.FromPem(String pemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromPublicDerByteArray">
            <summary>Sets the shim of Dsa.FromPublicDer(Byte[] derData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromPublicDerFileString">
            <summary>Sets the shim of Dsa.FromPublicDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromPublicPemString">
            <summary>Sets the shim of Dsa.FromPublicPem(String pemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.FromXmlString">
            <summary>Sets the shim of Dsa.FromXml(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GenKeyFromParamsDerByteArray">
            <summary>Sets the shim of Dsa.GenKeyFromParamsDer(Byte[] derBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GenKeyFromParamsDerFileString">
            <summary>Sets the shim of Dsa.GenKeyFromParamsDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GenKeyFromParamsPemFileString">
            <summary>Sets the shim of Dsa.GenKeyFromParamsPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GenKeyFromParamsPemString">
            <summary>Sets the shim of Dsa.GenKeyFromParamsPem(String pem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GenKeyInt32">
            <summary>Sets the shim of Dsa.GenKey(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GetEncodedHashString">
            <summary>Sets the shim of Dsa.GetEncodedHash(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GetEncodedSignatureString">
            <summary>Sets the shim of Dsa.GetEncodedSignature(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GroupSizeGet">
            <summary>Sets the shim of Dsa.get_GroupSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.GroupSizeSetInt32">
            <summary>Sets the shim of Dsa.set_GroupSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HashGet">
            <summary>Sets the shim of Dsa.get_Hash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HashSetByteArray">
            <summary>Sets the shim of Dsa.set_Hash(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HexGGet">
            <summary>Sets the shim of Dsa.get_HexG()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HexPGet">
            <summary>Sets the shim of Dsa.get_HexP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HexQGet">
            <summary>Sets the shim of Dsa.get_HexQ()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HexXGet">
            <summary>Sets the shim of Dsa.get_HexX()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.HexYGet">
            <summary>Sets the shim of Dsa.get_HexY()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Dsa.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Dsa.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Dsa.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Dsa.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Dsa.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.LoadTextString">
            <summary>Sets the shim of Dsa.LoadText(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Dsa.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SaveTextStringString">
            <summary>Sets the shim of Dsa.SaveText(String strToSave, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SetEncodedHashStringString">
            <summary>Sets the shim of Dsa.SetEncodedHash(String encoding, String encodedHash)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SetEncodedSignatureRSStringStringString">
            <summary>Sets the shim of Dsa.SetEncodedSignatureRS(String encoding, String encodedR, String encodedS)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SetEncodedSignatureStringString">
            <summary>Sets the shim of Dsa.SetEncodedSignature(String encoding, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SetKeyExplicitInt32StringStringStringString">
            <summary>Sets the shim of Dsa.SetKeyExplicit(Int32 groupSizeInBytes, String pHex, String qHex, String gHex, String xHex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SetPubKeyExplicitInt32StringStringStringString">
            <summary>Sets the shim of Dsa.SetPubKeyExplicit(Int32 groupSizeInBytes, String pHex, String qHex, String gHex, String yHex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SignHash">
            <summary>Sets the shim of Dsa.SignHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SignatureGet">
            <summary>Sets the shim of Dsa.get_Signature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.SignatureSetByteArray">
            <summary>Sets the shim of Dsa.set_Signature(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToDer">
            <summary>Sets the shim of Dsa.ToDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToDerFileString">
            <summary>Sets the shim of Dsa.ToDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToEncryptedPemString">
            <summary>Sets the shim of Dsa.ToEncryptedPem(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToPem">
            <summary>Sets the shim of Dsa.ToPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToPublicDer">
            <summary>Sets the shim of Dsa.ToPublicDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToPublicDerFileString">
            <summary>Sets the shim of Dsa.ToPublicDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToPublicPem">
            <summary>Sets the shim of Dsa.ToPublicPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToString01">
            <summary>Sets the shim of Dsa.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.ToXmlBoolean">
            <summary>Sets the shim of Dsa.ToXml(Boolean bPublicOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Dsa.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Dsa.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Dsa.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.Verify">
            <summary>Sets the shim of Dsa.Verify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.VerifyKey">
            <summary>Sets the shim of Dsa.VerifyKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances.VersionGet">
            <summary>Sets the shim of Dsa.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances._Dsa">
            <summary>Sets the shim of Dsa.!Dsa()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.AllInstances._Dsa01">
            <summary>Sets the shim of Dsa.~Dsa()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDsa.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDsa.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDsa.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.Constructor">
            <summary>Sets the shim of Dsa.Dsa()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.DebugLogFilePathGet">
            <summary>Sets the shim of Dsa.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.DebugLogFilePathSetString">
            <summary>Sets the shim of Dsa.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.Dispose">
            <summary>Sets the shim of Dsa.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.DisposeBoolean">
            <summary>Sets the shim of Dsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromDerByteArray">
            <summary>Sets the shim of Dsa.FromDer(Byte[] derData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromDerFileString">
            <summary>Sets the shim of Dsa.FromDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromEncryptedPemStringString">
            <summary>Sets the shim of Dsa.FromEncryptedPem(String password, String pemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromPemString">
            <summary>Sets the shim of Dsa.FromPem(String pemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromPublicDerByteArray">
            <summary>Sets the shim of Dsa.FromPublicDer(Byte[] derData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromPublicDerFileString">
            <summary>Sets the shim of Dsa.FromPublicDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromPublicPemString">
            <summary>Sets the shim of Dsa.FromPublicPem(String pemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.FromXmlString">
            <summary>Sets the shim of Dsa.FromXml(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GenKeyFromParamsDerByteArray">
            <summary>Sets the shim of Dsa.GenKeyFromParamsDer(Byte[] derBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GenKeyFromParamsDerFileString">
            <summary>Sets the shim of Dsa.GenKeyFromParamsDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GenKeyFromParamsPemFileString">
            <summary>Sets the shim of Dsa.GenKeyFromParamsPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GenKeyFromParamsPemString">
            <summary>Sets the shim of Dsa.GenKeyFromParamsPem(String pem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GenKeyInt32">
            <summary>Sets the shim of Dsa.GenKey(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GetEncodedHashString">
            <summary>Sets the shim of Dsa.GetEncodedHash(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GetEncodedSignatureString">
            <summary>Sets the shim of Dsa.GetEncodedSignature(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GroupSizeGet">
            <summary>Sets the shim of Dsa.get_GroupSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.GroupSizeSetInt32">
            <summary>Sets the shim of Dsa.set_GroupSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HashGet">
            <summary>Sets the shim of Dsa.get_Hash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HashSetByteArray">
            <summary>Sets the shim of Dsa.set_Hash(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HexGGet">
            <summary>Sets the shim of Dsa.get_HexG()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HexPGet">
            <summary>Sets the shim of Dsa.get_HexP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HexQGet">
            <summary>Sets the shim of Dsa.get_HexQ()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HexXGet">
            <summary>Sets the shim of Dsa.get_HexX()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.HexYGet">
            <summary>Sets the shim of Dsa.get_HexY()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.LastErrorHtmlGet">
            <summary>Sets the shim of Dsa.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.LastErrorTextGet">
            <summary>Sets the shim of Dsa.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.LastErrorXmlGet">
            <summary>Sets the shim of Dsa.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.LastMethodSuccessGet">
            <summary>Sets the shim of Dsa.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Dsa.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.LoadTextString">
            <summary>Sets the shim of Dsa.LoadText(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SaveLastErrorString">
            <summary>Sets the shim of Dsa.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SaveTextStringString">
            <summary>Sets the shim of Dsa.SaveText(String strToSave, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SetEncodedHashStringString">
            <summary>Sets the shim of Dsa.SetEncodedHash(String encoding, String encodedHash)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SetEncodedSignatureRSStringStringString">
            <summary>Sets the shim of Dsa.SetEncodedSignatureRS(String encoding, String encodedR, String encodedS)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SetEncodedSignatureStringString">
            <summary>Sets the shim of Dsa.SetEncodedSignature(String encoding, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SetKeyExplicitInt32StringStringStringString">
            <summary>Sets the shim of Dsa.SetKeyExplicit(Int32 groupSizeInBytes, String pHex, String qHex, String gHex, String xHex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SetPubKeyExplicitInt32StringStringStringString">
            <summary>Sets the shim of Dsa.SetPubKeyExplicit(Int32 groupSizeInBytes, String pHex, String qHex, String gHex, String yHex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SignHash">
            <summary>Sets the shim of Dsa.SignHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SignatureGet">
            <summary>Sets the shim of Dsa.get_Signature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.SignatureSetByteArray">
            <summary>Sets the shim of Dsa.set_Signature(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToDer">
            <summary>Sets the shim of Dsa.ToDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToDerFileString">
            <summary>Sets the shim of Dsa.ToDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToEncryptedPemString">
            <summary>Sets the shim of Dsa.ToEncryptedPem(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToPem">
            <summary>Sets the shim of Dsa.ToPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToPublicDer">
            <summary>Sets the shim of Dsa.ToPublicDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToPublicDerFileString">
            <summary>Sets the shim of Dsa.ToPublicDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToPublicPem">
            <summary>Sets the shim of Dsa.ToPublicPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToString">
            <summary>Sets the shim of Dsa.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.ToXmlBoolean">
            <summary>Sets the shim of Dsa.ToXml(Boolean bPublicOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.UnlockComponentString">
            <summary>Sets the shim of Dsa.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.VerboseLoggingGet">
            <summary>Sets the shim of Dsa.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Dsa.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.Verify">
            <summary>Sets the shim of Dsa.Verify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.VerifyKey">
            <summary>Sets the shim of Dsa.VerifyKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa.VersionGet">
            <summary>Sets the shim of Dsa.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa._Dsa">
            <summary>Sets the shim of Dsa.!Dsa()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDsa._Dsa01">
            <summary>Sets the shim of Dsa.~Dsa()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDtObj">
            <summary>Shim type of Chilkat.DtObj</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDtObj.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDtObj.#ctor(Chilkat.DtObj)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimDtObj.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.DayGet">
            <summary>Sets the shim of DtObj.get_Day()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.DaySetInt32">
            <summary>Sets the shim of DtObj.set_Day(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.DeSerializeString">
            <summary>Sets the shim of DtObj.DeSerialize(String serializedDtObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of DtObj.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of DtObj.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.Dispose">
            <summary>Sets the shim of DtObj.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DtObj.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.HourGet">
            <summary>Sets the shim of DtObj.get_Hour()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.HourSetInt32">
            <summary>Sets the shim of DtObj.set_Hour(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of DtObj.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of DtObj.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of DtObj.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of DtObj.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of DtObj.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.MinuteGet">
            <summary>Sets the shim of DtObj.get_Minute()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.MinuteSetInt32">
            <summary>Sets the shim of DtObj.set_Minute(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.MonthGet">
            <summary>Sets the shim of DtObj.get_Month()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.MonthSetInt32">
            <summary>Sets the shim of DtObj.set_Month(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of DtObj.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.SecondGet">
            <summary>Sets the shim of DtObj.get_Second()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.SecondSetInt32">
            <summary>Sets the shim of DtObj.set_Second(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.Serialize">
            <summary>Sets the shim of DtObj.Serialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.StructTmMonthGet">
            <summary>Sets the shim of DtObj.get_StructTmMonth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.StructTmMonthSetInt32">
            <summary>Sets the shim of DtObj.set_StructTmMonth(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.StructTmYearGet">
            <summary>Sets the shim of DtObj.get_StructTmYear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.StructTmYearSetInt32">
            <summary>Sets the shim of DtObj.set_StructTmYear(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.ToString01">
            <summary>Sets the shim of DtObj.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.UtcGet">
            <summary>Sets the shim of DtObj.get_Utc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.UtcSetBoolean">
            <summary>Sets the shim of DtObj.set_Utc(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of DtObj.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of DtObj.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.VersionGet">
            <summary>Sets the shim of DtObj.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.YearGet">
            <summary>Sets the shim of DtObj.get_Year()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances.YearSetInt32">
            <summary>Sets the shim of DtObj.set_Year(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances._DtObj">
            <summary>Sets the shim of DtObj.!DtObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.AllInstances._DtObj01">
            <summary>Sets the shim of DtObj.~DtObj()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDtObj.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDtObj.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimDtObj.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.Constructor">
            <summary>Sets the shim of DtObj.DtObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.DayGet">
            <summary>Sets the shim of DtObj.get_Day()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.DaySetInt32">
            <summary>Sets the shim of DtObj.set_Day(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.DeSerializeString">
            <summary>Sets the shim of DtObj.DeSerialize(String serializedDtObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.DebugLogFilePathGet">
            <summary>Sets the shim of DtObj.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.DebugLogFilePathSetString">
            <summary>Sets the shim of DtObj.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.Dispose">
            <summary>Sets the shim of DtObj.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.DisposeBoolean">
            <summary>Sets the shim of DtObj.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.HourGet">
            <summary>Sets the shim of DtObj.get_Hour()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.HourSetInt32">
            <summary>Sets the shim of DtObj.set_Hour(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.LastErrorHtmlGet">
            <summary>Sets the shim of DtObj.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.LastErrorTextGet">
            <summary>Sets the shim of DtObj.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.LastErrorXmlGet">
            <summary>Sets the shim of DtObj.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.LastMethodSuccessGet">
            <summary>Sets the shim of DtObj.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of DtObj.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.MinuteGet">
            <summary>Sets the shim of DtObj.get_Minute()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.MinuteSetInt32">
            <summary>Sets the shim of DtObj.set_Minute(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.MonthGet">
            <summary>Sets the shim of DtObj.get_Month()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.MonthSetInt32">
            <summary>Sets the shim of DtObj.set_Month(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.SaveLastErrorString">
            <summary>Sets the shim of DtObj.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.SecondGet">
            <summary>Sets the shim of DtObj.get_Second()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.SecondSetInt32">
            <summary>Sets the shim of DtObj.set_Second(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.Serialize">
            <summary>Sets the shim of DtObj.Serialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.StructTmMonthGet">
            <summary>Sets the shim of DtObj.get_StructTmMonth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.StructTmMonthSetInt32">
            <summary>Sets the shim of DtObj.set_StructTmMonth(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.StructTmYearGet">
            <summary>Sets the shim of DtObj.get_StructTmYear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.StructTmYearSetInt32">
            <summary>Sets the shim of DtObj.set_StructTmYear(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.ToString">
            <summary>Sets the shim of DtObj.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.UtcGet">
            <summary>Sets the shim of DtObj.get_Utc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.UtcSetBoolean">
            <summary>Sets the shim of DtObj.set_Utc(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.VerboseLoggingGet">
            <summary>Sets the shim of DtObj.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.VerboseLoggingSetBoolean">
            <summary>Sets the shim of DtObj.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.VersionGet">
            <summary>Sets the shim of DtObj.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.YearGet">
            <summary>Sets the shim of DtObj.get_Year()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj.YearSetInt32">
            <summary>Sets the shim of DtObj.set_Year(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj._DtObj">
            <summary>Sets the shim of DtObj.!DtObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimDtObj._DtObj01">
            <summary>Sets the shim of DtObj.~DtObj()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEcc">
            <summary>Shim type of Chilkat.Ecc</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEcc.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEcc.#ctor(Chilkat.Ecc)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEcc.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Ecc.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Ecc.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.Dispose">
            <summary>Sets the shim of Ecc.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Ecc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.GenEccKey2StringStringString">
            <summary>Sets the shim of Ecc.GenEccKey2(String curveName, String encodedK, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.GenEccKeyStringPrng">
            <summary>Sets the shim of Ecc.GenEccKey(String curveName, Prng prng)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Ecc.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Ecc.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Ecc.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Ecc.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ecc.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Ecc.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.SharedSecretENCPrivateKeyPublicKeyString">
            <summary>Sets the shim of Ecc.SharedSecretENC(PrivateKey privKey, PublicKey pubKey, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.SignHashENCStringStringPrivateKeyPrng">
            <summary>Sets the shim of Ecc.SignHashENC(String encodedHash, String encoding, PrivateKey privkey, Prng prng)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.ToString01">
            <summary>Sets the shim of Ecc.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Ecc.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ecc.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.VerifyHashENCStringStringStringPublicKey">
            <summary>Sets the shim of Ecc.VerifyHashENC(String encodedHash, String encodedSig, String encoding, PublicKey pubkey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances.VersionGet">
            <summary>Sets the shim of Ecc.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances._Ecc">
            <summary>Sets the shim of Ecc.!Ecc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.AllInstances._Ecc01">
            <summary>Sets the shim of Ecc.~Ecc()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEcc.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEcc.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEcc.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.Constructor">
            <summary>Sets the shim of Ecc.Ecc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.DebugLogFilePathGet">
            <summary>Sets the shim of Ecc.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.DebugLogFilePathSetString">
            <summary>Sets the shim of Ecc.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.Dispose">
            <summary>Sets the shim of Ecc.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.DisposeBoolean">
            <summary>Sets the shim of Ecc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.GenEccKey2StringStringString">
            <summary>Sets the shim of Ecc.GenEccKey2(String curveName, String encodedK, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.GenEccKeyStringPrng">
            <summary>Sets the shim of Ecc.GenEccKey(String curveName, Prng prng)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.LastErrorHtmlGet">
            <summary>Sets the shim of Ecc.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.LastErrorTextGet">
            <summary>Sets the shim of Ecc.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.LastErrorXmlGet">
            <summary>Sets the shim of Ecc.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.LastMethodSuccessGet">
            <summary>Sets the shim of Ecc.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ecc.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.SaveLastErrorString">
            <summary>Sets the shim of Ecc.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.SharedSecretENCPrivateKeyPublicKeyString">
            <summary>Sets the shim of Ecc.SharedSecretENC(PrivateKey privKey, PublicKey pubKey, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.SignHashENCStringStringPrivateKeyPrng">
            <summary>Sets the shim of Ecc.SignHashENC(String encodedHash, String encoding, PrivateKey privkey, Prng prng)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.ToString">
            <summary>Sets the shim of Ecc.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.VerboseLoggingGet">
            <summary>Sets the shim of Ecc.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ecc.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.VerifyHashENCStringStringStringPublicKey">
            <summary>Sets the shim of Ecc.VerifyHashENC(String encodedHash, String encodedSig, String encoding, PublicKey pubkey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc.VersionGet">
            <summary>Sets the shim of Ecc.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc._Ecc">
            <summary>Sets the shim of Ecc.!Ecc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEcc._Ecc01">
            <summary>Sets the shim of Ecc.~Ecc()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEmail">
            <summary>Shim type of Chilkat.Email</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmail.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmail.#ctor(Chilkat.Email)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddAttachmentBdStringBinDataString">
            <summary>Sets the shim of Email.AddAttachmentBd(String filename, BinData binData, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddAttachmentHeaderInt32StringString">
            <summary>Sets the shim of Email.AddAttachmentHeader(Int32 index, String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddBccStringString">
            <summary>Sets the shim of Email.AddBcc(String friendlyName, String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddCCStringString">
            <summary>Sets the shim of Email.AddCC(String friendlyName, String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddDataAttachment2StringByteArrayString">
            <summary>Sets the shim of Email.AddDataAttachment2(String fileName, Byte[] content, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddDataAttachmentStringByteArray">
            <summary>Sets the shim of Email.AddDataAttachment(String fileName, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddEncryptCertCert">
            <summary>Sets the shim of Email.AddEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddFileAttachment2StringString">
            <summary>Sets the shim of Email.AddFileAttachment2(String path, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddFileAttachmentString">
            <summary>Sets the shim of Email.AddFileAttachment(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddHeaderField2StringString">
            <summary>Sets the shim of Email.AddHeaderField2(String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddHeaderFieldStringString">
            <summary>Sets the shim of Email.AddHeaderField(String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddHtmlAlternativeBodyString">
            <summary>Sets the shim of Email.AddHtmlAlternativeBody(String body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddMultipleBccString">
            <summary>Sets the shim of Email.AddMultipleBcc(String commaSeparatedAddresses)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddMultipleCCString">
            <summary>Sets the shim of Email.AddMultipleCC(String commaSeparatedAddresses)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddMultipleToString">
            <summary>Sets the shim of Email.AddMultipleTo(String commaSeparatedAddresses)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Email.AddPfxSourceData(Byte[] pfxBytes, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddPfxSourceFileStringString">
            <summary>Sets the shim of Email.AddPfxSourceFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddPlainTextAlternativeBodyString">
            <summary>Sets the shim of Email.AddPlainTextAlternativeBody(String body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedBd2BinDataString">
            <summary>Sets the shim of Email.AddRelatedBd2(BinData binData, String fileNameInHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedBdStringBinData">
            <summary>Sets the shim of Email.AddRelatedBd(String filename, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedData2ByteArrayString">
            <summary>Sets the shim of Email.AddRelatedData2(Byte[] inData, String fileNameInHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedDataStringByteArray">
            <summary>Sets the shim of Email.AddRelatedData(String fileName, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedFile2StringString">
            <summary>Sets the shim of Email.AddRelatedFile2(String filenameOnDisk, String filenameInHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedFileString">
            <summary>Sets the shim of Email.AddRelatedFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedHeaderInt32StringString">
            <summary>Sets the shim of Email.AddRelatedHeader(Int32 index, String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedString2StringStringString">
            <summary>Sets the shim of Email.AddRelatedString2(String fileNameInHtml, String content, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddRelatedStringStringStringString">
            <summary>Sets the shim of Email.AddRelatedString(String nameInHtml, String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddStringAttachment2StringStringString">
            <summary>Sets the shim of Email.AddStringAttachment2(String path, String content, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddStringAttachmentStringString">
            <summary>Sets the shim of Email.AddStringAttachment(String path, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddToStringString">
            <summary>Sets the shim of Email.AddTo(String friendlyName, String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AddiCalendarAlternativeBodyStringString">
            <summary>Sets the shim of Email.AddiCalendarAlternativeBody(String icalContent, String methodName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AesDecryptString">
            <summary>Sets the shim of Email.AesDecrypt(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AesEncryptString">
            <summary>Sets the shim of Email.AesEncrypt(String password)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEmail.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddAttachmentBdStringBinDataString">
            <summary>Sets the shim of Email.AddAttachmentBd(String filename, BinData binData, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddAttachmentHeaderInt32StringString">
            <summary>Sets the shim of Email.AddAttachmentHeader(Int32 index, String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddBccStringString">
            <summary>Sets the shim of Email.AddBcc(String friendlyName, String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddCCStringString">
            <summary>Sets the shim of Email.AddCC(String friendlyName, String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddDataAttachment2StringByteArrayString">
            <summary>Sets the shim of Email.AddDataAttachment2(String fileName, Byte[] content, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddDataAttachmentStringByteArray">
            <summary>Sets the shim of Email.AddDataAttachment(String fileName, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddEncryptCertCert">
            <summary>Sets the shim of Email.AddEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddFileAttachment2StringString">
            <summary>Sets the shim of Email.AddFileAttachment2(String path, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddFileAttachmentString">
            <summary>Sets the shim of Email.AddFileAttachment(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddHeaderField2StringString">
            <summary>Sets the shim of Email.AddHeaderField2(String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddHeaderFieldStringString">
            <summary>Sets the shim of Email.AddHeaderField(String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddHtmlAlternativeBodyString">
            <summary>Sets the shim of Email.AddHtmlAlternativeBody(String body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddMultipleBccString">
            <summary>Sets the shim of Email.AddMultipleBcc(String commaSeparatedAddresses)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddMultipleCCString">
            <summary>Sets the shim of Email.AddMultipleCC(String commaSeparatedAddresses)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddMultipleToString">
            <summary>Sets the shim of Email.AddMultipleTo(String commaSeparatedAddresses)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Email.AddPfxSourceData(Byte[] pfxBytes, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddPfxSourceFileStringString">
            <summary>Sets the shim of Email.AddPfxSourceFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddPlainTextAlternativeBodyString">
            <summary>Sets the shim of Email.AddPlainTextAlternativeBody(String body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedBd2BinDataString">
            <summary>Sets the shim of Email.AddRelatedBd2(BinData binData, String fileNameInHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedBdStringBinData">
            <summary>Sets the shim of Email.AddRelatedBd(String filename, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedData2ByteArrayString">
            <summary>Sets the shim of Email.AddRelatedData2(Byte[] inData, String fileNameInHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedDataStringByteArray">
            <summary>Sets the shim of Email.AddRelatedData(String fileName, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedFile2StringString">
            <summary>Sets the shim of Email.AddRelatedFile2(String filenameOnDisk, String filenameInHtml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedFileString">
            <summary>Sets the shim of Email.AddRelatedFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedHeaderInt32StringString">
            <summary>Sets the shim of Email.AddRelatedHeader(Int32 index, String fieldName, String fieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedString2StringStringString">
            <summary>Sets the shim of Email.AddRelatedString2(String fileNameInHtml, String content, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddRelatedStringStringStringString">
            <summary>Sets the shim of Email.AddRelatedString(String nameInHtml, String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddStringAttachment2StringStringString">
            <summary>Sets the shim of Email.AddStringAttachment2(String path, String content, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddStringAttachmentStringString">
            <summary>Sets the shim of Email.AddStringAttachment(String path, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddToStringString">
            <summary>Sets the shim of Email.AddTo(String friendlyName, String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AddiCalendarAlternativeBodyStringString">
            <summary>Sets the shim of Email.AddiCalendarAlternativeBody(String icalContent, String methodName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AesDecryptString">
            <summary>Sets the shim of Email.AesDecrypt(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AesEncryptString">
            <summary>Sets the shim of Email.AesEncrypt(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AppendToBodyString">
            <summary>Sets the shim of Email.AppendToBody(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AspUnpack2StringStringStringBoolean">
            <summary>Sets the shim of Email.AspUnpack2(String prefix, String saveDir, String urlPath, Boolean cleanFiles)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AspUnpackStringStringStringBoolean">
            <summary>Sets the shim of Email.AspUnpack(String prefix, String saveDir, String urlPath, Boolean cleanFiles)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.AttachMessageByteArray">
            <summary>Sets the shim of Email.AttachMessage(Byte[] mimeBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.BEncodeBytesByteArrayString">
            <summary>Sets the shim of Email.BEncodeBytes(Byte[] inData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.BEncodeStringStringString">
            <summary>Sets the shim of Email.BEncodeString(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.BodyGet">
            <summary>Sets the shim of Email.get_Body()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.BodySetString">
            <summary>Sets the shim of Email.set_Body(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.BounceAddressGet">
            <summary>Sets the shim of Email.get_BounceAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.BounceAddressSetString">
            <summary>Sets the shim of Email.set_BounceAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CharsetGet">
            <summary>Sets the shim of Email.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CharsetSetString">
            <summary>Sets the shim of Email.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ClearBcc">
            <summary>Sets the shim of Email.ClearBcc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ClearCC">
            <summary>Sets the shim of Email.ClearCC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ClearEncryptCerts">
            <summary>Sets the shim of Email.ClearEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ClearTo">
            <summary>Sets the shim of Email.ClearTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.Clone">
            <summary>Sets the shim of Email.Clone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ComputeGlobalKey2StringBoolean">
            <summary>Sets the shim of Email.ComputeGlobalKey2(String encoding, Boolean bFold)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ComputeGlobalKeyStringBoolean">
            <summary>Sets the shim of Email.ComputeGlobalKey(String encoding, Boolean bFold)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CreateDsnStringStringBoolean">
            <summary>Sets the shim of Email.CreateDsn(String humanReadableMessage, String xmlStatusFields, Boolean bHeaderOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CreateForward">
            <summary>Sets the shim of Email.CreateForward()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CreateMdnStringStringBoolean">
            <summary>Sets the shim of Email.CreateMdn(String humanReadableMessage, String xmlStatusFields, Boolean bHeaderOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CreateReply">
            <summary>Sets the shim of Email.CreateReply()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.CreateTempMhtString">
            <summary>Sets the shim of Email.CreateTempMht(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Email.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Email.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DecryptedGet">
            <summary>Sets the shim of Email.get_Decrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.Dispose">
            <summary>Sets the shim of Email.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Email.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DropAttachments">
            <summary>Sets the shim of Email.DropAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DropRelatedItemInt32">
            <summary>Sets the shim of Email.DropRelatedItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DropRelatedItems">
            <summary>Sets the shim of Email.DropRelatedItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.DropSingleAttachmentInt32">
            <summary>Sets the shim of Email.DropSingleAttachment(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.EmailDateGet">
            <summary>Sets the shim of Email.get_EmailDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.EmailDateSetDateTime">
            <summary>Sets the shim of Email.set_EmailDate(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.EmailDateStrGet">
            <summary>Sets the shim of Email.get_EmailDateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.EmailDateStrSetString">
            <summary>Sets the shim of Email.set_EmailDateStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.EncryptedByGet">
            <summary>Sets the shim of Email.get_EncryptedBy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FileDistListGet">
            <summary>Sets the shim of Email.get_FileDistList()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FileDistListSetString">
            <summary>Sets the shim of Email.set_FileDistList(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FindIssuerCert">
            <summary>Sets the shim of Email.FindIssuer(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FromAddressGet">
            <summary>Sets the shim of Email.get_FromAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FromAddressSetString">
            <summary>Sets the shim of Email.set_FromAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FromGet">
            <summary>Sets the shim of Email.get_From()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FromNameGet">
            <summary>Sets the shim of Email.get_FromName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FromNameSetString">
            <summary>Sets the shim of Email.set_FromName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.FromSetString">
            <summary>Sets the shim of Email.set_From(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GenerateFilename">
            <summary>Sets the shim of Email.GenerateFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAltHeaderFieldInt32String">
            <summary>Sets the shim of Email.GetAltHeaderField(Int32 index, String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAlternativeBodyBdInt32BinData">
            <summary>Sets the shim of Email.GetAlternativeBodyBd(Int32 index, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAlternativeBodyByContentTypeString">
            <summary>Sets the shim of Email.GetAlternativeBodyByContentType(String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAlternativeBodyInt32">
            <summary>Sets the shim of Email.GetAlternativeBody(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAlternativeContentTypeInt32">
            <summary>Sets the shim of Email.GetAlternativeContentType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachedMessageAttrInt32StringString">
            <summary>Sets the shim of Email.GetAttachedMessageAttr(Int32 index, String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachedMessageFilenameInt32">
            <summary>Sets the shim of Email.GetAttachedMessageFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachedMessageInt32">
            <summary>Sets the shim of Email.GetAttachedMessage(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentAttrInt32StringString">
            <summary>Sets the shim of Email.GetAttachmentAttr(Int32 index, String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentBdInt32BinData">
            <summary>Sets the shim of Email.GetAttachmentBd(Int32 index, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentContentIDInt32">
            <summary>Sets the shim of Email.GetAttachmentContentID(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentContentTypeInt32">
            <summary>Sets the shim of Email.GetAttachmentContentType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentDataInt32">
            <summary>Sets the shim of Email.GetAttachmentData(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentFilenameInt32">
            <summary>Sets the shim of Email.GetAttachmentFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentHeaderInt32String">
            <summary>Sets the shim of Email.GetAttachmentHeader(Int32 attachIndex, String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentSizeInt32">
            <summary>Sets the shim of Email.GetAttachmentSize(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentStringCrLfInt32String">
            <summary>Sets the shim of Email.GetAttachmentStringCrLf(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetAttachmentStringInt32String">
            <summary>Sets the shim of Email.GetAttachmentString(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetBccAddrInt32">
            <summary>Sets the shim of Email.GetBccAddr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetBccInt32">
            <summary>Sets the shim of Email.GetBcc(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetBccNameInt32">
            <summary>Sets the shim of Email.GetBccName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetCCInt32">
            <summary>Sets the shim of Email.GetCC(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetCcAddrInt32">
            <summary>Sets the shim of Email.GetCcAddr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetCcNameInt32">
            <summary>Sets the shim of Email.GetCcName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetDeliveryStatusInfoString">
            <summary>Sets the shim of Email.GetDeliveryStatusInfo(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetDigestInt32">
            <summary>Sets the shim of Email.GetDigest(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetDsnFinalRecipients">
            <summary>Sets the shim of Email.GetDsnFinalRecipients()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetDt">
            <summary>Sets the shim of Email.GetDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetEncryptCert">
            <summary>Sets the shim of Email.GetEncryptCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetEncryptedByCert">
            <summary>Sets the shim of Email.GetEncryptedByCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetFileContentString">
            <summary>Sets the shim of Email.GetFileContent(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetHeaderFieldNameInt32">
            <summary>Sets the shim of Email.GetHeaderFieldName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetHeaderFieldString">
            <summary>Sets the shim of Email.GetHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetHeaderFieldValueInt32">
            <summary>Sets the shim of Email.GetHeaderFieldValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetHtmlBody">
            <summary>Sets the shim of Email.GetHtmlBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetImapUid">
            <summary>Sets the shim of Email.GetImapUid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetLinkedDomains">
            <summary>Sets the shim of Email.GetLinkedDomains()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMbHeaderFieldStringString">
            <summary>Sets the shim of Email.GetMbHeaderField(String fieldName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMbHtmlBodyString">
            <summary>Sets the shim of Email.GetMbHtmlBody(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMbPlainTextBodyString">
            <summary>Sets the shim of Email.GetMbPlainTextBody(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMime">
            <summary>Sets the shim of Email.GetMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMimeBdBinData">
            <summary>Sets the shim of Email.GetMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMimeBinary">
            <summary>Sets the shim of Email.GetMimeBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetMimeSbStringBuilder">
            <summary>Sets the shim of Email.GetMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetNthBinaryPartOfTypeInt32StringBooleanBoolean">
            <summary>Sets the shim of Email.GetNthBinaryPartOfType(Int32 index, String contentType, Boolean inlineOnly, Boolean excludeAttachments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetNthTextPartOfTypeInt32StringBooleanBoolean">
            <summary>Sets the shim of Email.GetNthTextPartOfType(Int32 index, String contentType, Boolean inlineOnly, Boolean excludeAttachments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetNumPartsOfTypeStringBooleanBoolean">
            <summary>Sets the shim of Email.GetNumPartsOfType(String contentType, Boolean inlineOnly, Boolean excludeAttachments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetPlainTextBody">
            <summary>Sets the shim of Email.GetPlainTextBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedAttrInt32StringString">
            <summary>Sets the shim of Email.GetRelatedAttr(Int32 index, String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedContentIDInt32">
            <summary>Sets the shim of Email.GetRelatedContentID(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedContentLocationInt32">
            <summary>Sets the shim of Email.GetRelatedContentLocation(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedContentTypeInt32">
            <summary>Sets the shim of Email.GetRelatedContentType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedDataInt32">
            <summary>Sets the shim of Email.GetRelatedData(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedFilenameInt32">
            <summary>Sets the shim of Email.GetRelatedFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedStringCrLfInt32String">
            <summary>Sets the shim of Email.GetRelatedStringCrLf(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetRelatedStringInt32String">
            <summary>Sets the shim of Email.GetRelatedString(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetReplacePatternInt32">
            <summary>Sets the shim of Email.GetReplacePattern(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetReplaceString2String">
            <summary>Sets the shim of Email.GetReplaceString2(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetReplaceStringInt32">
            <summary>Sets the shim of Email.GetReplaceString(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetReportInt32">
            <summary>Sets the shim of Email.GetReport(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetSignedByCert">
            <summary>Sets the shim of Email.GetSignedByCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetSignedByCertChain">
            <summary>Sets the shim of Email.GetSignedByCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetSigningCert">
            <summary>Sets the shim of Email.GetSigningCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetToAddrInt32">
            <summary>Sets the shim of Email.GetToAddr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetToInt32">
            <summary>Sets the shim of Email.GetTo(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetToNameInt32">
            <summary>Sets the shim of Email.GetToName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.GetXml">
            <summary>Sets the shim of Email.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.HasHeaderMatchingStringStringBoolean">
            <summary>Sets the shim of Email.HasHeaderMatching(String fieldName, String valuePattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.HasHtmlBody">
            <summary>Sets the shim of Email.HasHtmlBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.HasPlainTextBody">
            <summary>Sets the shim of Email.HasPlainTextBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.HeaderGet">
            <summary>Sets the shim of Email.get_Header()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.IsMultipartReport">
            <summary>Sets the shim of Email.IsMultipartReport()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LanguageGet">
            <summary>Sets the shim of Email.get_Language()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Email.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Email.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Email.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Email.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Email.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LoadEmlString">
            <summary>Sets the shim of Email.LoadEml(String mimePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of Email.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LoadXmlString">
            <summary>Sets the shim of Email.LoadXml(String xmlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LoadXmlStringString">
            <summary>Sets the shim of Email.LoadXmlString(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LocalDateGet">
            <summary>Sets the shim of Email.get_LocalDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LocalDateSetDateTime">
            <summary>Sets the shim of Email.set_LocalDate(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LocalDateStrGet">
            <summary>Sets the shim of Email.get_LocalDateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.LocalDateStrSetString">
            <summary>Sets the shim of Email.set_LocalDateStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.MailerGet">
            <summary>Sets the shim of Email.get_Mailer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.MailerSetString">
            <summary>Sets the shim of Email.set_Mailer(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumAlternativesGet">
            <summary>Sets the shim of Email.get_NumAlternatives()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumAttachedMessagesGet">
            <summary>Sets the shim of Email.get_NumAttachedMessages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumAttachmentsGet">
            <summary>Sets the shim of Email.get_NumAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumBccGet">
            <summary>Sets the shim of Email.get_NumBcc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumCCGet">
            <summary>Sets the shim of Email.get_NumCC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumDaysOldGet">
            <summary>Sets the shim of Email.get_NumDaysOld()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumDigestsGet">
            <summary>Sets the shim of Email.get_NumDigests()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumHeaderFieldsGet">
            <summary>Sets the shim of Email.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumRelatedItemsGet">
            <summary>Sets the shim of Email.get_NumRelatedItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumReplacePatternsGet">
            <summary>Sets the shim of Email.get_NumReplacePatterns()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumReportsGet">
            <summary>Sets the shim of Email.get_NumReports()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.NumToGet">
            <summary>Sets the shim of Email.get_NumTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.OaepHashGet">
            <summary>Sets the shim of Email.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.OaepHashSetString">
            <summary>Sets the shim of Email.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.OaepPaddingGet">
            <summary>Sets the shim of Email.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.OaepPaddingSetBoolean">
            <summary>Sets the shim of Email.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.OverwriteExistingGet">
            <summary>Sets the shim of Email.get_OverwriteExisting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.OverwriteExistingSetBoolean">
            <summary>Sets the shim of Email.set_OverwriteExisting(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.Pkcs7CryptAlgGet">
            <summary>Sets the shim of Email.get_Pkcs7CryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.Pkcs7CryptAlgSetString">
            <summary>Sets the shim of Email.set_Pkcs7CryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.Pkcs7KeyLengthGet">
            <summary>Sets the shim of Email.get_Pkcs7KeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.Pkcs7KeyLengthSetInt32">
            <summary>Sets the shim of Email.set_Pkcs7KeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.PreferredCharsetGet">
            <summary>Sets the shim of Email.get_PreferredCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.PreferredCharsetSetString">
            <summary>Sets the shim of Email.set_PreferredCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.PrependHeadersGet">
            <summary>Sets the shim of Email.get_PrependHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.PrependHeadersSetBoolean">
            <summary>Sets the shim of Email.set_PrependHeaders(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.QEncodeBytesByteArrayString">
            <summary>Sets the shim of Email.QEncodeBytes(Byte[] inData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.QEncodeStringStringString">
            <summary>Sets the shim of Email.QEncodeString(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ReceivedEncryptedGet">
            <summary>Sets the shim of Email.get_ReceivedEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ReceivedSignedGet">
            <summary>Sets the shim of Email.get_ReceivedSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.RemoveAttachedMessageInt32">
            <summary>Sets the shim of Email.RemoveAttachedMessage(Int32 idx)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.RemoveAttachedMessages">
            <summary>Sets the shim of Email.RemoveAttachedMessages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.RemoveAttachmentPaths">
            <summary>Sets the shim of Email.RemoveAttachmentPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.RemoveHeaderFieldString">
            <summary>Sets the shim of Email.RemoveHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.RemoveHtmlAlternative">
            <summary>Sets the shim of Email.RemoveHtmlAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.RemovePlainTextAlternative">
            <summary>Sets the shim of Email.RemovePlainTextAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ReplyToGet">
            <summary>Sets the shim of Email.get_ReplyTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ReplyToSetString">
            <summary>Sets the shim of Email.set_ReplyTo(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ReturnReceiptGet">
            <summary>Sets the shim of Email.get_ReturnReceipt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ReturnReceiptSetBoolean">
            <summary>Sets the shim of Email.set_ReturnReceipt(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SaveAllAttachmentsString">
            <summary>Sets the shim of Email.SaveAllAttachments(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SaveAttachedFileInt32String">
            <summary>Sets the shim of Email.SaveAttachedFile(Int32 index, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SaveEmlString">
            <summary>Sets the shim of Email.SaveEml(String emlFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Email.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SaveRelatedItemInt32String">
            <summary>Sets the shim of Email.SaveRelatedItem(Int32 index, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SaveXmlString">
            <summary>Sets the shim of Email.SaveXml(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SendEncryptedGet">
            <summary>Sets the shim of Email.get_SendEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SendEncryptedSetBoolean">
            <summary>Sets the shim of Email.set_SendEncrypted(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SendSignedGet">
            <summary>Sets the shim of Email.get_SendSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SendSignedSetBoolean">
            <summary>Sets the shim of Email.set_SendSigned(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SenderGet">
            <summary>Sets the shim of Email.get_Sender()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SenderSetString">
            <summary>Sets the shim of Email.set_Sender(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetAttachmentCharsetInt32String">
            <summary>Sets the shim of Email.SetAttachmentCharset(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetAttachmentDispositionInt32String">
            <summary>Sets the shim of Email.SetAttachmentDisposition(Int32 index, String disposition)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetAttachmentFilenameInt32String">
            <summary>Sets the shim of Email.SetAttachmentFilename(Int32 index, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetBinaryBodyByteArrayStringStringString">
            <summary>Sets the shim of Email.SetBinaryBody(Byte[] byteData, String contentType, String disposition, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetCSPCsp">
            <summary>Sets the shim of Email.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of Email.SetDecryptCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetDecryptCertCert">
            <summary>Sets the shim of Email.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetDtCkDateTime">
            <summary>Sets the shim of Email.SetDt(CkDateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetEdifactBodyStringStringStringString">
            <summary>Sets the shim of Email.SetEdifactBody(String message, String name, String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetEncryptCertCert">
            <summary>Sets the shim of Email.SetEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetFromMimeBdBinData">
            <summary>Sets the shim of Email.SetFromMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetFromMimeBytes2ByteArrayString">
            <summary>Sets the shim of Email.SetFromMimeBytes2(Byte[] mimeBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetFromMimeBytesByteArray">
            <summary>Sets the shim of Email.SetFromMimeBytes(Byte[] mimeBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetFromMimeSbStringBuilder">
            <summary>Sets the shim of Email.SetFromMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetFromMimeTextString">
            <summary>Sets the shim of Email.SetFromMimeText(String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetFromXmlTextString">
            <summary>Sets the shim of Email.SetFromXmlText(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetHtmlBodyString">
            <summary>Sets the shim of Email.SetHtmlBody(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetMbHtmlBodyStringByteArray">
            <summary>Sets the shim of Email.SetMbHtmlBody(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetMbPlainTextBodyStringByteArray">
            <summary>Sets the shim of Email.SetMbPlainTextBody(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetRelatedFilenameInt32String">
            <summary>Sets the shim of Email.SetRelatedFilename(Int32 index, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetReplacePatternStringString">
            <summary>Sets the shim of Email.SetReplacePattern(String pattern, String replaceString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetSigningCert2CertPrivateKey">
            <summary>Sets the shim of Email.SetSigningCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetSigningCertCert">
            <summary>Sets the shim of Email.SetSigningCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SetTextBodyStringString">
            <summary>Sets the shim of Email.SetTextBody(String bodyText, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SignaturesValidGet">
            <summary>Sets the shim of Email.get_SignaturesValid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SignedByGet">
            <summary>Sets the shim of Email.get_SignedBy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SigningAlgGet">
            <summary>Sets the shim of Email.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SigningAlgSetString">
            <summary>Sets the shim of Email.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SigningHashAlgGet">
            <summary>Sets the shim of Email.get_SigningHashAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SigningHashAlgSetString">
            <summary>Sets the shim of Email.set_SigningHashAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SizeGet">
            <summary>Sets the shim of Email.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SubjectGet">
            <summary>Sets the shim of Email.get_Subject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.SubjectSetString">
            <summary>Sets the shim of Email.set_Subject(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ToString01">
            <summary>Sets the shim of Email.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UidlEqualsEmail">
            <summary>Sets the shim of Email.UidlEquals(Email e)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UidlGet">
            <summary>Sets the shim of Email.get_Uidl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UnSpamify">
            <summary>Sets the shim of Email.UnSpamify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UnpackHtmlStringStringString">
            <summary>Sets the shim of Email.UnpackHtml(String unpackDir, String htmlFilename, String partsSubdir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UnpackUseRelPathsGet">
            <summary>Sets the shim of Email.get_UnpackUseRelPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UnpackUseRelPathsSetBoolean">
            <summary>Sets the shim of Email.set_UnpackUseRelPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UnzipAttachments">
            <summary>Sets the shim of Email.UnzipAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Email.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Email.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Email.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.VersionGet">
            <summary>Sets the shim of Email.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances.ZipAttachmentsString">
            <summary>Sets the shim of Email.ZipAttachments(String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances._Email">
            <summary>Sets the shim of Email.!Email()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AllInstances._Email01">
            <summary>Sets the shim of Email.~Email()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AppendToBodyString">
            <summary>Sets the shim of Email.AppendToBody(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AspUnpack2StringStringStringBoolean">
            <summary>Sets the shim of Email.AspUnpack2(String prefix, String saveDir, String urlPath, Boolean cleanFiles)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AspUnpackStringStringStringBoolean">
            <summary>Sets the shim of Email.AspUnpack(String prefix, String saveDir, String urlPath, Boolean cleanFiles)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.AttachMessageByteArray">
            <summary>Sets the shim of Email.AttachMessage(Byte[] mimeBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.BEncodeBytesByteArrayString">
            <summary>Sets the shim of Email.BEncodeBytes(Byte[] inData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.BEncodeStringStringString">
            <summary>Sets the shim of Email.BEncodeString(String str, String charset)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmail.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmail.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmail.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.BodyGet">
            <summary>Sets the shim of Email.get_Body()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.BodySetString">
            <summary>Sets the shim of Email.set_Body(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.BounceAddressGet">
            <summary>Sets the shim of Email.get_BounceAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.BounceAddressSetString">
            <summary>Sets the shim of Email.set_BounceAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CharsetGet">
            <summary>Sets the shim of Email.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CharsetSetString">
            <summary>Sets the shim of Email.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ClearBcc">
            <summary>Sets the shim of Email.ClearBcc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ClearCC">
            <summary>Sets the shim of Email.ClearCC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ClearEncryptCerts">
            <summary>Sets the shim of Email.ClearEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ClearTo">
            <summary>Sets the shim of Email.ClearTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Clone">
            <summary>Sets the shim of Email.Clone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ComputeGlobalKey2StringBoolean">
            <summary>Sets the shim of Email.ComputeGlobalKey2(String encoding, Boolean bFold)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ComputeGlobalKeyStringBoolean">
            <summary>Sets the shim of Email.ComputeGlobalKey(String encoding, Boolean bFold)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Constructor">
            <summary>Sets the shim of Email.Email()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CreateDsnStringStringBoolean">
            <summary>Sets the shim of Email.CreateDsn(String humanReadableMessage, String xmlStatusFields, Boolean bHeaderOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CreateForward">
            <summary>Sets the shim of Email.CreateForward()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CreateMdnStringStringBoolean">
            <summary>Sets the shim of Email.CreateMdn(String humanReadableMessage, String xmlStatusFields, Boolean bHeaderOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CreateReply">
            <summary>Sets the shim of Email.CreateReply()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.CreateTempMhtString">
            <summary>Sets the shim of Email.CreateTempMht(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DebugLogFilePathGet">
            <summary>Sets the shim of Email.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DebugLogFilePathSetString">
            <summary>Sets the shim of Email.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DecryptedGet">
            <summary>Sets the shim of Email.get_Decrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Dispose">
            <summary>Sets the shim of Email.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DisposeBoolean">
            <summary>Sets the shim of Email.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DropAttachments">
            <summary>Sets the shim of Email.DropAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DropRelatedItemInt32">
            <summary>Sets the shim of Email.DropRelatedItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DropRelatedItems">
            <summary>Sets the shim of Email.DropRelatedItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.DropSingleAttachmentInt32">
            <summary>Sets the shim of Email.DropSingleAttachment(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.EmailDateGet">
            <summary>Sets the shim of Email.get_EmailDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.EmailDateSetDateTime">
            <summary>Sets the shim of Email.set_EmailDate(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.EmailDateStrGet">
            <summary>Sets the shim of Email.get_EmailDateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.EmailDateStrSetString">
            <summary>Sets the shim of Email.set_EmailDateStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.EncryptedByGet">
            <summary>Sets the shim of Email.get_EncryptedBy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FileDistListGet">
            <summary>Sets the shim of Email.get_FileDistList()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FileDistListSetString">
            <summary>Sets the shim of Email.set_FileDistList(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FindIssuerCert">
            <summary>Sets the shim of Email.FindIssuer(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FromAddressGet">
            <summary>Sets the shim of Email.get_FromAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FromAddressSetString">
            <summary>Sets the shim of Email.set_FromAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FromGet">
            <summary>Sets the shim of Email.get_From()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FromNameGet">
            <summary>Sets the shim of Email.get_FromName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FromNameSetString">
            <summary>Sets the shim of Email.set_FromName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.FromSetString">
            <summary>Sets the shim of Email.set_From(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GenerateFilename">
            <summary>Sets the shim of Email.GenerateFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAltHeaderFieldInt32String">
            <summary>Sets the shim of Email.GetAltHeaderField(Int32 index, String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAlternativeBodyBdInt32BinData">
            <summary>Sets the shim of Email.GetAlternativeBodyBd(Int32 index, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAlternativeBodyByContentTypeString">
            <summary>Sets the shim of Email.GetAlternativeBodyByContentType(String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAlternativeBodyInt32">
            <summary>Sets the shim of Email.GetAlternativeBody(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAlternativeContentTypeInt32">
            <summary>Sets the shim of Email.GetAlternativeContentType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachedMessageAttrInt32StringString">
            <summary>Sets the shim of Email.GetAttachedMessageAttr(Int32 index, String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachedMessageFilenameInt32">
            <summary>Sets the shim of Email.GetAttachedMessageFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachedMessageInt32">
            <summary>Sets the shim of Email.GetAttachedMessage(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentAttrInt32StringString">
            <summary>Sets the shim of Email.GetAttachmentAttr(Int32 index, String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentBdInt32BinData">
            <summary>Sets the shim of Email.GetAttachmentBd(Int32 index, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentContentIDInt32">
            <summary>Sets the shim of Email.GetAttachmentContentID(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentContentTypeInt32">
            <summary>Sets the shim of Email.GetAttachmentContentType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentDataInt32">
            <summary>Sets the shim of Email.GetAttachmentData(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentFilenameInt32">
            <summary>Sets the shim of Email.GetAttachmentFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentHeaderInt32String">
            <summary>Sets the shim of Email.GetAttachmentHeader(Int32 attachIndex, String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentSizeInt32">
            <summary>Sets the shim of Email.GetAttachmentSize(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentStringCrLfInt32String">
            <summary>Sets the shim of Email.GetAttachmentStringCrLf(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetAttachmentStringInt32String">
            <summary>Sets the shim of Email.GetAttachmentString(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetBccAddrInt32">
            <summary>Sets the shim of Email.GetBccAddr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetBccInt32">
            <summary>Sets the shim of Email.GetBcc(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetBccNameInt32">
            <summary>Sets the shim of Email.GetBccName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetCCInt32">
            <summary>Sets the shim of Email.GetCC(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetCcAddrInt32">
            <summary>Sets the shim of Email.GetCcAddr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetCcNameInt32">
            <summary>Sets the shim of Email.GetCcName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetDeliveryStatusInfoString">
            <summary>Sets the shim of Email.GetDeliveryStatusInfo(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetDigestInt32">
            <summary>Sets the shim of Email.GetDigest(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetDsnFinalRecipients">
            <summary>Sets the shim of Email.GetDsnFinalRecipients()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetDt">
            <summary>Sets the shim of Email.GetDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetEncryptCert">
            <summary>Sets the shim of Email.GetEncryptCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetEncryptedByCert">
            <summary>Sets the shim of Email.GetEncryptedByCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetFileContentString">
            <summary>Sets the shim of Email.GetFileContent(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetHeaderFieldNameInt32">
            <summary>Sets the shim of Email.GetHeaderFieldName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetHeaderFieldString">
            <summary>Sets the shim of Email.GetHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetHeaderFieldValueInt32">
            <summary>Sets the shim of Email.GetHeaderFieldValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetHtmlBody">
            <summary>Sets the shim of Email.GetHtmlBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetImapUid">
            <summary>Sets the shim of Email.GetImapUid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetLinkedDomains">
            <summary>Sets the shim of Email.GetLinkedDomains()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMbHeaderFieldStringString">
            <summary>Sets the shim of Email.GetMbHeaderField(String fieldName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMbHtmlBodyString">
            <summary>Sets the shim of Email.GetMbHtmlBody(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMbPlainTextBodyString">
            <summary>Sets the shim of Email.GetMbPlainTextBody(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMime">
            <summary>Sets the shim of Email.GetMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMimeBdBinData">
            <summary>Sets the shim of Email.GetMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMimeBinary">
            <summary>Sets the shim of Email.GetMimeBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetMimeSbStringBuilder">
            <summary>Sets the shim of Email.GetMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetNthBinaryPartOfTypeInt32StringBooleanBoolean">
            <summary>Sets the shim of Email.GetNthBinaryPartOfType(Int32 index, String contentType, Boolean inlineOnly, Boolean excludeAttachments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetNthTextPartOfTypeInt32StringBooleanBoolean">
            <summary>Sets the shim of Email.GetNthTextPartOfType(Int32 index, String contentType, Boolean inlineOnly, Boolean excludeAttachments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetNumPartsOfTypeStringBooleanBoolean">
            <summary>Sets the shim of Email.GetNumPartsOfType(String contentType, Boolean inlineOnly, Boolean excludeAttachments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetPlainTextBody">
            <summary>Sets the shim of Email.GetPlainTextBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedAttrInt32StringString">
            <summary>Sets the shim of Email.GetRelatedAttr(Int32 index, String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedContentIDInt32">
            <summary>Sets the shim of Email.GetRelatedContentID(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedContentLocationInt32">
            <summary>Sets the shim of Email.GetRelatedContentLocation(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedContentTypeInt32">
            <summary>Sets the shim of Email.GetRelatedContentType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedDataInt32">
            <summary>Sets the shim of Email.GetRelatedData(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedFilenameInt32">
            <summary>Sets the shim of Email.GetRelatedFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedStringCrLfInt32String">
            <summary>Sets the shim of Email.GetRelatedStringCrLf(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetRelatedStringInt32String">
            <summary>Sets the shim of Email.GetRelatedString(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetReplacePatternInt32">
            <summary>Sets the shim of Email.GetReplacePattern(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetReplaceString2String">
            <summary>Sets the shim of Email.GetReplaceString2(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetReplaceStringInt32">
            <summary>Sets the shim of Email.GetReplaceString(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetReportInt32">
            <summary>Sets the shim of Email.GetReport(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetSignedByCert">
            <summary>Sets the shim of Email.GetSignedByCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetSignedByCertChain">
            <summary>Sets the shim of Email.GetSignedByCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetSigningCert">
            <summary>Sets the shim of Email.GetSigningCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetToAddrInt32">
            <summary>Sets the shim of Email.GetToAddr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetToInt32">
            <summary>Sets the shim of Email.GetTo(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetToNameInt32">
            <summary>Sets the shim of Email.GetToName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.GetXml">
            <summary>Sets the shim of Email.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.HasHeaderMatchingStringStringBoolean">
            <summary>Sets the shim of Email.HasHeaderMatching(String fieldName, String valuePattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.HasHtmlBody">
            <summary>Sets the shim of Email.HasHtmlBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.HasPlainTextBody">
            <summary>Sets the shim of Email.HasPlainTextBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.HeaderGet">
            <summary>Sets the shim of Email.get_Header()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.IsMultipartReport">
            <summary>Sets the shim of Email.IsMultipartReport()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LanguageGet">
            <summary>Sets the shim of Email.get_Language()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LastErrorHtmlGet">
            <summary>Sets the shim of Email.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LastErrorTextGet">
            <summary>Sets the shim of Email.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LastErrorXmlGet">
            <summary>Sets the shim of Email.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LastMethodSuccessGet">
            <summary>Sets the shim of Email.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Email.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LoadEmlString">
            <summary>Sets the shim of Email.LoadEml(String mimePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LoadTaskResultTask">
            <summary>Sets the shim of Email.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LoadXmlString">
            <summary>Sets the shim of Email.LoadXml(String xmlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LoadXmlStringString">
            <summary>Sets the shim of Email.LoadXmlString(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LocalDateGet">
            <summary>Sets the shim of Email.get_LocalDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LocalDateSetDateTime">
            <summary>Sets the shim of Email.set_LocalDate(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LocalDateStrGet">
            <summary>Sets the shim of Email.get_LocalDateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.LocalDateStrSetString">
            <summary>Sets the shim of Email.set_LocalDateStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.MailerGet">
            <summary>Sets the shim of Email.get_Mailer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.MailerSetString">
            <summary>Sets the shim of Email.set_Mailer(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumAlternativesGet">
            <summary>Sets the shim of Email.get_NumAlternatives()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumAttachedMessagesGet">
            <summary>Sets the shim of Email.get_NumAttachedMessages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumAttachmentsGet">
            <summary>Sets the shim of Email.get_NumAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumBccGet">
            <summary>Sets the shim of Email.get_NumBcc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumCCGet">
            <summary>Sets the shim of Email.get_NumCC()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumDaysOldGet">
            <summary>Sets the shim of Email.get_NumDaysOld()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumDigestsGet">
            <summary>Sets the shim of Email.get_NumDigests()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumHeaderFieldsGet">
            <summary>Sets the shim of Email.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumRelatedItemsGet">
            <summary>Sets the shim of Email.get_NumRelatedItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumReplacePatternsGet">
            <summary>Sets the shim of Email.get_NumReplacePatterns()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumReportsGet">
            <summary>Sets the shim of Email.get_NumReports()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.NumToGet">
            <summary>Sets the shim of Email.get_NumTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.OaepHashGet">
            <summary>Sets the shim of Email.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.OaepHashSetString">
            <summary>Sets the shim of Email.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.OaepPaddingGet">
            <summary>Sets the shim of Email.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.OaepPaddingSetBoolean">
            <summary>Sets the shim of Email.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.OverwriteExistingGet">
            <summary>Sets the shim of Email.get_OverwriteExisting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.OverwriteExistingSetBoolean">
            <summary>Sets the shim of Email.set_OverwriteExisting(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Pkcs7CryptAlgGet">
            <summary>Sets the shim of Email.get_Pkcs7CryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Pkcs7CryptAlgSetString">
            <summary>Sets the shim of Email.set_Pkcs7CryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Pkcs7KeyLengthGet">
            <summary>Sets the shim of Email.get_Pkcs7KeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.Pkcs7KeyLengthSetInt32">
            <summary>Sets the shim of Email.set_Pkcs7KeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.PreferredCharsetGet">
            <summary>Sets the shim of Email.get_PreferredCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.PreferredCharsetSetString">
            <summary>Sets the shim of Email.set_PreferredCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.PrependHeadersGet">
            <summary>Sets the shim of Email.get_PrependHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.PrependHeadersSetBoolean">
            <summary>Sets the shim of Email.set_PrependHeaders(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.QEncodeBytesByteArrayString">
            <summary>Sets the shim of Email.QEncodeBytes(Byte[] inData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.QEncodeStringStringString">
            <summary>Sets the shim of Email.QEncodeString(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ReceivedEncryptedGet">
            <summary>Sets the shim of Email.get_ReceivedEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ReceivedSignedGet">
            <summary>Sets the shim of Email.get_ReceivedSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.RemoveAttachedMessageInt32">
            <summary>Sets the shim of Email.RemoveAttachedMessage(Int32 idx)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.RemoveAttachedMessages">
            <summary>Sets the shim of Email.RemoveAttachedMessages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.RemoveAttachmentPaths">
            <summary>Sets the shim of Email.RemoveAttachmentPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.RemoveHeaderFieldString">
            <summary>Sets the shim of Email.RemoveHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.RemoveHtmlAlternative">
            <summary>Sets the shim of Email.RemoveHtmlAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.RemovePlainTextAlternative">
            <summary>Sets the shim of Email.RemovePlainTextAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ReplyToGet">
            <summary>Sets the shim of Email.get_ReplyTo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ReplyToSetString">
            <summary>Sets the shim of Email.set_ReplyTo(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ReturnReceiptGet">
            <summary>Sets the shim of Email.get_ReturnReceipt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ReturnReceiptSetBoolean">
            <summary>Sets the shim of Email.set_ReturnReceipt(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SaveAllAttachmentsString">
            <summary>Sets the shim of Email.SaveAllAttachments(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SaveAttachedFileInt32String">
            <summary>Sets the shim of Email.SaveAttachedFile(Int32 index, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SaveEmlString">
            <summary>Sets the shim of Email.SaveEml(String emlFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SaveLastErrorString">
            <summary>Sets the shim of Email.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SaveRelatedItemInt32String">
            <summary>Sets the shim of Email.SaveRelatedItem(Int32 index, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SaveXmlString">
            <summary>Sets the shim of Email.SaveXml(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SendEncryptedGet">
            <summary>Sets the shim of Email.get_SendEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SendEncryptedSetBoolean">
            <summary>Sets the shim of Email.set_SendEncrypted(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SendSignedGet">
            <summary>Sets the shim of Email.get_SendSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SendSignedSetBoolean">
            <summary>Sets the shim of Email.set_SendSigned(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SenderGet">
            <summary>Sets the shim of Email.get_Sender()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SenderSetString">
            <summary>Sets the shim of Email.set_Sender(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetAttachmentCharsetInt32String">
            <summary>Sets the shim of Email.SetAttachmentCharset(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetAttachmentDispositionInt32String">
            <summary>Sets the shim of Email.SetAttachmentDisposition(Int32 index, String disposition)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetAttachmentFilenameInt32String">
            <summary>Sets the shim of Email.SetAttachmentFilename(Int32 index, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetBinaryBodyByteArrayStringStringString">
            <summary>Sets the shim of Email.SetBinaryBody(Byte[] byteData, String contentType, String disposition, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetCSPCsp">
            <summary>Sets the shim of Email.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of Email.SetDecryptCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetDecryptCertCert">
            <summary>Sets the shim of Email.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetDtCkDateTime">
            <summary>Sets the shim of Email.SetDt(CkDateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetEdifactBodyStringStringStringString">
            <summary>Sets the shim of Email.SetEdifactBody(String message, String name, String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetEncryptCertCert">
            <summary>Sets the shim of Email.SetEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetFromMimeBdBinData">
            <summary>Sets the shim of Email.SetFromMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetFromMimeBytes2ByteArrayString">
            <summary>Sets the shim of Email.SetFromMimeBytes2(Byte[] mimeBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetFromMimeBytesByteArray">
            <summary>Sets the shim of Email.SetFromMimeBytes(Byte[] mimeBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetFromMimeSbStringBuilder">
            <summary>Sets the shim of Email.SetFromMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetFromMimeTextString">
            <summary>Sets the shim of Email.SetFromMimeText(String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetFromXmlTextString">
            <summary>Sets the shim of Email.SetFromXmlText(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetHtmlBodyString">
            <summary>Sets the shim of Email.SetHtmlBody(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetMbHtmlBodyStringByteArray">
            <summary>Sets the shim of Email.SetMbHtmlBody(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetMbPlainTextBodyStringByteArray">
            <summary>Sets the shim of Email.SetMbPlainTextBody(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetRelatedFilenameInt32String">
            <summary>Sets the shim of Email.SetRelatedFilename(Int32 index, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetReplacePatternStringString">
            <summary>Sets the shim of Email.SetReplacePattern(String pattern, String replaceString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetSigningCert2CertPrivateKey">
            <summary>Sets the shim of Email.SetSigningCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetSigningCertCert">
            <summary>Sets the shim of Email.SetSigningCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SetTextBodyStringString">
            <summary>Sets the shim of Email.SetTextBody(String bodyText, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SignaturesValidGet">
            <summary>Sets the shim of Email.get_SignaturesValid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SignedByGet">
            <summary>Sets the shim of Email.get_SignedBy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SigningAlgGet">
            <summary>Sets the shim of Email.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SigningAlgSetString">
            <summary>Sets the shim of Email.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SigningHashAlgGet">
            <summary>Sets the shim of Email.get_SigningHashAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SigningHashAlgSetString">
            <summary>Sets the shim of Email.set_SigningHashAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SizeGet">
            <summary>Sets the shim of Email.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SubjectGet">
            <summary>Sets the shim of Email.get_Subject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.SubjectSetString">
            <summary>Sets the shim of Email.set_Subject(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ToString">
            <summary>Sets the shim of Email.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UidlEqualsEmail">
            <summary>Sets the shim of Email.UidlEquals(Email e)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UidlGet">
            <summary>Sets the shim of Email.get_Uidl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UnSpamify">
            <summary>Sets the shim of Email.UnSpamify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UnpackHtmlStringStringString">
            <summary>Sets the shim of Email.UnpackHtml(String unpackDir, String htmlFilename, String partsSubdir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UnpackUseRelPathsGet">
            <summary>Sets the shim of Email.get_UnpackUseRelPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UnpackUseRelPathsSetBoolean">
            <summary>Sets the shim of Email.set_UnpackUseRelPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UnzipAttachments">
            <summary>Sets the shim of Email.UnzipAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Email.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.VerboseLoggingGet">
            <summary>Sets the shim of Email.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Email.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.VersionGet">
            <summary>Sets the shim of Email.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail.ZipAttachmentsString">
            <summary>Sets the shim of Email.ZipAttachments(String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail._Email">
            <summary>Sets the shim of Email.!Email()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmail._Email01">
            <summary>Sets the shim of Email.~Email()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEmailBundle">
            <summary>Shim type of Chilkat.EmailBundle</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailBundle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailBundle.#ctor(Chilkat.EmailBundle)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AddEmailEmail">
            <summary>Sets the shim of EmailBundle.AddEmail(Email email)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEmailBundle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.AddEmailEmail">
            <summary>Sets the shim of EmailBundle.AddEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of EmailBundle.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of EmailBundle.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.Dispose">
            <summary>Sets the shim of EmailBundle.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EmailBundle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.FindByHeaderStringString">
            <summary>Sets the shim of EmailBundle.FindByHeader(String headerFieldName, String headerFieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.GetEmailInt32">
            <summary>Sets the shim of EmailBundle.GetEmail(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.GetUidls">
            <summary>Sets the shim of EmailBundle.GetUidls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.GetXml">
            <summary>Sets the shim of EmailBundle.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of EmailBundle.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of EmailBundle.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of EmailBundle.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of EmailBundle.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of EmailBundle.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of EmailBundle.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LoadXmlString">
            <summary>Sets the shim of EmailBundle.LoadXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.LoadXmlStringString">
            <summary>Sets the shim of EmailBundle.LoadXmlString(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.MessageCountGet">
            <summary>Sets the shim of EmailBundle.get_MessageCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.RemoveEmailByIndexInt32">
            <summary>Sets the shim of EmailBundle.RemoveEmailByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.RemoveEmailEmail">
            <summary>Sets the shim of EmailBundle.RemoveEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of EmailBundle.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.SaveXmlString">
            <summary>Sets the shim of EmailBundle.SaveXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.SortByDateBoolean">
            <summary>Sets the shim of EmailBundle.SortByDate(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.SortByRecipientBoolean">
            <summary>Sets the shim of EmailBundle.SortByRecipient(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.SortBySenderBoolean">
            <summary>Sets the shim of EmailBundle.SortBySender(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.SortBySubjectBoolean">
            <summary>Sets the shim of EmailBundle.SortBySubject(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.ToString01">
            <summary>Sets the shim of EmailBundle.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of EmailBundle.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of EmailBundle.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances.VersionGet">
            <summary>Sets the shim of EmailBundle.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances._EmailBundle">
            <summary>Sets the shim of EmailBundle.!EmailBundle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.AllInstances._EmailBundle01">
            <summary>Sets the shim of EmailBundle.~EmailBundle()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailBundle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailBundle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailBundle.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.Constructor">
            <summary>Sets the shim of EmailBundle.EmailBundle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.DebugLogFilePathGet">
            <summary>Sets the shim of EmailBundle.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.DebugLogFilePathSetString">
            <summary>Sets the shim of EmailBundle.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.Dispose">
            <summary>Sets the shim of EmailBundle.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.DisposeBoolean">
            <summary>Sets the shim of EmailBundle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.FindByHeaderStringString">
            <summary>Sets the shim of EmailBundle.FindByHeader(String headerFieldName, String headerFieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.GetEmailInt32">
            <summary>Sets the shim of EmailBundle.GetEmail(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.GetUidls">
            <summary>Sets the shim of EmailBundle.GetUidls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.GetXml">
            <summary>Sets the shim of EmailBundle.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LastErrorHtmlGet">
            <summary>Sets the shim of EmailBundle.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LastErrorTextGet">
            <summary>Sets the shim of EmailBundle.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LastErrorXmlGet">
            <summary>Sets the shim of EmailBundle.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LastMethodSuccessGet">
            <summary>Sets the shim of EmailBundle.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of EmailBundle.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LoadTaskResultTask">
            <summary>Sets the shim of EmailBundle.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LoadXmlString">
            <summary>Sets the shim of EmailBundle.LoadXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.LoadXmlStringString">
            <summary>Sets the shim of EmailBundle.LoadXmlString(String xmlStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.MessageCountGet">
            <summary>Sets the shim of EmailBundle.get_MessageCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.RemoveEmailByIndexInt32">
            <summary>Sets the shim of EmailBundle.RemoveEmailByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.RemoveEmailEmail">
            <summary>Sets the shim of EmailBundle.RemoveEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.SaveLastErrorString">
            <summary>Sets the shim of EmailBundle.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.SaveXmlString">
            <summary>Sets the shim of EmailBundle.SaveXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.SortByDateBoolean">
            <summary>Sets the shim of EmailBundle.SortByDate(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.SortByRecipientBoolean">
            <summary>Sets the shim of EmailBundle.SortByRecipient(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.SortBySenderBoolean">
            <summary>Sets the shim of EmailBundle.SortBySender(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.SortBySubjectBoolean">
            <summary>Sets the shim of EmailBundle.SortBySubject(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.ToString">
            <summary>Sets the shim of EmailBundle.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.VerboseLoggingGet">
            <summary>Sets the shim of EmailBundle.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.VerboseLoggingSetBoolean">
            <summary>Sets the shim of EmailBundle.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle.VersionGet">
            <summary>Sets the shim of EmailBundle.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle._EmailBundle">
            <summary>Sets the shim of EmailBundle.!EmailBundle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailBundle._EmailBundle01">
            <summary>Sets the shim of EmailBundle.~EmailBundle()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEmailEventArgs">
            <summary>Shim type of Chilkat.EmailEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailEventArgs.#ctor(Chilkat.EmailEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimEmailEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.DateGet">
            <summary>Sets the shim of EmailEventArgs.get_Date()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of EmailEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of EmailEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.FromAddrGet">
            <summary>Sets the shim of EmailEventArgs.get_FromAddr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.FromNameGet">
            <summary>Sets the shim of EmailEventArgs.get_FromName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.ReturnPathGet">
            <summary>Sets the shim of EmailEventArgs.get_ReturnPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.SizeGet">
            <summary>Sets the shim of EmailEventArgs.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.SubjectGet">
            <summary>Sets the shim of EmailEventArgs.get_Subject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances.UidlGet">
            <summary>Sets the shim of EmailEventArgs.get_Uidl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.AllInstances._EmailEventArgs">
            <summary>Sets the shim of EmailEventArgs.~EmailEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimEmailEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.DateGet">
            <summary>Sets the shim of EmailEventArgs.get_Date()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.Dispose">
            <summary>Sets the shim of EmailEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.DisposeBoolean">
            <summary>Sets the shim of EmailEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.FromAddrGet">
            <summary>Sets the shim of EmailEventArgs.get_FromAddr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.FromNameGet">
            <summary>Sets the shim of EmailEventArgs.get_FromName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.ReturnPathGet">
            <summary>Sets the shim of EmailEventArgs.get_ReturnPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.SizeGet">
            <summary>Sets the shim of EmailEventArgs.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.SubjectGet">
            <summary>Sets the shim of EmailEventArgs.get_Subject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs.UidlGet">
            <summary>Sets the shim of EmailEventArgs.get_Uidl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimEmailEventArgs._EmailEventArgs">
            <summary>Sets the shim of EmailEventArgs.~EmailEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileAccess">
            <summary>Shim type of Chilkat.FileAccess</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAccess.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAccess.#ctor(Chilkat.FileAccess)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileAccess.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.AppendAnsiString">
            <summary>Sets the shim of FileAccess.AppendAnsi(String text)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.AppendTextStringString">
            <summary>Sets the shim of FileAccess.AppendText(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.AppendUnicodeBOM">
            <summary>Sets the shim of FileAccess.AppendUnicodeBOM()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.AppendUtf8BOM">
            <summary>Sets the shim of FileAccess.AppendUtf8BOM()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.CurrentDirGet">
            <summary>Sets the shim of FileAccess.get_CurrentDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of FileAccess.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of FileAccess.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DirAutoCreateString">
            <summary>Sets the shim of FileAccess.DirAutoCreate(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DirCreateString">
            <summary>Sets the shim of FileAccess.DirCreate(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DirDeleteString">
            <summary>Sets the shim of FileAccess.DirDelete(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DirEnsureExistsString">
            <summary>Sets the shim of FileAccess.DirEnsureExists(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.Dispose">
            <summary>Sets the shim of FileAccess.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileAccess.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.EndOfFileGet">
            <summary>Sets the shim of FileAccess.get_EndOfFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileClose">
            <summary>Sets the shim of FileAccess.FileClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileContentsEqualStringString">
            <summary>Sets the shim of FileAccess.FileContentsEqual(String filePath1, String filePath2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileCopyStringStringBoolean">
            <summary>Sets the shim of FileAccess.FileCopy(String existingFilepath, String newFilepath, Boolean failIfExists)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileDeleteString">
            <summary>Sets the shim of FileAccess.FileDelete(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileExists3String">
            <summary>Sets the shim of FileAccess.FileExists3(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileExistsString">
            <summary>Sets the shim of FileAccess.FileExists(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileOpenErrorGet">
            <summary>Sets the shim of FileAccess.get_FileOpenError()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileOpenErrorMsgGet">
            <summary>Sets the shim of FileAccess.get_FileOpenErrorMsg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileOpenStringUInt32UInt32UInt32UInt32">
            <summary>Sets the shim of FileAccess.FileOpen(String filePath, UInt32 accessMode, UInt32 shareMode, UInt32 createDisposition, UInt32 attributes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileReadBdInt32BinData">
            <summary>Sets the shim of FileAccess.FileReadBd(Int32 maxNumBytes, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileReadInt32">
            <summary>Sets the shim of FileAccess.FileRead(Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileRenameStringString">
            <summary>Sets the shim of FileAccess.FileRename(String existingFilepath, String newFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileSeekInt32Int32">
            <summary>Sets the shim of FileAccess.FileSeek(Int32 offset, Int32 origin)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileSizeString">
            <summary>Sets the shim of FileAccess.FileSize(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileWriteBdBinDataInt32Int32">
            <summary>Sets the shim of FileAccess.FileWriteBd(BinData binData, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.FileWriteByteArray">
            <summary>Sets the shim of FileAccess.FileWrite(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GenBlockIdInt32Int32String">
            <summary>Sets the shim of FileAccess.GenBlockId(Int32 index, Int32 length, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetDirectoryNameString">
            <summary>Sets the shim of FileAccess.GetDirectoryName(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetExtensionString">
            <summary>Sets the shim of FileAccess.GetExtension(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetFileNameString">
            <summary>Sets the shim of FileAccess.GetFileName(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetFileNameWithoutExtensionString">
            <summary>Sets the shim of FileAccess.GetFileNameWithoutExtension(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetLastModifiedString">
            <summary>Sets the shim of FileAccess.GetLastModified(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetNumBlocksInt32">
            <summary>Sets the shim of FileAccess.GetNumBlocks(Int32 blockSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.GetTempFilenameStringString">
            <summary>Sets the shim of FileAccess.GetTempFilename(String dirPath, String prefix)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of FileAccess.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of FileAccess.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of FileAccess.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of FileAccess.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of FileAccess.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.OpenForAppendString">
            <summary>Sets the shim of FileAccess.OpenForAppend(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.OpenForReadString">
            <summary>Sets the shim of FileAccess.OpenForRead(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.OpenForReadWriteString">
            <summary>Sets the shim of FileAccess.OpenForReadWrite(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.OpenForWriteString">
            <summary>Sets the shim of FileAccess.OpenForWrite(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ReadBinaryToEncodedStringString">
            <summary>Sets the shim of FileAccess.ReadBinaryToEncoded(String filePath, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ReadBlockInt32Int32">
            <summary>Sets the shim of FileAccess.ReadBlock(Int32 blockIndex, Int32 blockSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ReadEntireFileString">
            <summary>Sets the shim of FileAccess.ReadEntireFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ReadEntireTextFileStringString">
            <summary>Sets the shim of FileAccess.ReadEntireTextFile(String filePath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ReassembleFileStringStringStringString">
            <summary>Sets the shim of FileAccess.ReassembleFile(String partsDirPath, String partPrefix, String partExtension, String reassembledFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ReplaceStringsStringStringStringString">
            <summary>Sets the shim of FileAccess.ReplaceStrings(String filePath, String charset, String existingString, String replacementString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of FileAccess.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.SetCurrentDirString">
            <summary>Sets the shim of FileAccess.SetCurrentDir(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.SetFileTimesStringCkDateTimeCkDateTimeCkDateTime">
            <summary>Sets the shim of FileAccess.SetFileTimes(String filePath, CkDateTime createTime, CkDateTime lastAccessTime, CkDateTime lastModTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.SetLastModifiedStringCkDateTime">
            <summary>Sets the shim of FileAccess.SetLastModified(String filePath, CkDateTime lastModified)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.SplitFileStringStringStringInt32String">
            <summary>Sets the shim of FileAccess.SplitFile(String fileToSplit, String partPrefix, String partExtension, Int32 partSize, String destDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.ToString01">
            <summary>Sets the shim of FileAccess.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.TreeDeleteString">
            <summary>Sets the shim of FileAccess.TreeDelete(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of FileAccess.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of FileAccess.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.VersionGet">
            <summary>Sets the shim of FileAccess.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.WriteEntireFileStringByteArray">
            <summary>Sets the shim of FileAccess.WriteEntireFile(String filePath, Byte[] fileData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances.WriteEntireTextFileStringStringStringBoolean">
            <summary>Sets the shim of FileAccess.WriteEntireTextFile(String filePath, String textData, String charset, Boolean includedPreamble)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances._FileAccess">
            <summary>Sets the shim of FileAccess.!FileAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AllInstances._FileAccess01">
            <summary>Sets the shim of FileAccess.~FileAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AppendAnsiString">
            <summary>Sets the shim of FileAccess.AppendAnsi(String text)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AppendTextStringString">
            <summary>Sets the shim of FileAccess.AppendText(String str, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AppendUnicodeBOM">
            <summary>Sets the shim of FileAccess.AppendUnicodeBOM()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.AppendUtf8BOM">
            <summary>Sets the shim of FileAccess.AppendUtf8BOM()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAccess.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAccess.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAccess.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.Constructor">
            <summary>Sets the shim of FileAccess.FileAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.CurrentDirGet">
            <summary>Sets the shim of FileAccess.get_CurrentDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DebugLogFilePathGet">
            <summary>Sets the shim of FileAccess.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DebugLogFilePathSetString">
            <summary>Sets the shim of FileAccess.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DirAutoCreateString">
            <summary>Sets the shim of FileAccess.DirAutoCreate(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DirCreateString">
            <summary>Sets the shim of FileAccess.DirCreate(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DirDeleteString">
            <summary>Sets the shim of FileAccess.DirDelete(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DirEnsureExistsString">
            <summary>Sets the shim of FileAccess.DirEnsureExists(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.Dispose">
            <summary>Sets the shim of FileAccess.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.DisposeBoolean">
            <summary>Sets the shim of FileAccess.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.EndOfFileGet">
            <summary>Sets the shim of FileAccess.get_EndOfFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileClose">
            <summary>Sets the shim of FileAccess.FileClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileContentsEqualStringString">
            <summary>Sets the shim of FileAccess.FileContentsEqual(String filePath1, String filePath2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileCopyStringStringBoolean">
            <summary>Sets the shim of FileAccess.FileCopy(String existingFilepath, String newFilepath, Boolean failIfExists)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileDeleteString">
            <summary>Sets the shim of FileAccess.FileDelete(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileExists3String">
            <summary>Sets the shim of FileAccess.FileExists3(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileExistsString">
            <summary>Sets the shim of FileAccess.FileExists(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileOpenErrorGet">
            <summary>Sets the shim of FileAccess.get_FileOpenError()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileOpenErrorMsgGet">
            <summary>Sets the shim of FileAccess.get_FileOpenErrorMsg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileOpenStringUInt32UInt32UInt32UInt32">
            <summary>Sets the shim of FileAccess.FileOpen(String filePath, UInt32 accessMode, UInt32 shareMode, UInt32 createDisposition, UInt32 attributes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileReadBdInt32BinData">
            <summary>Sets the shim of FileAccess.FileReadBd(Int32 maxNumBytes, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileReadInt32">
            <summary>Sets the shim of FileAccess.FileRead(Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileRenameStringString">
            <summary>Sets the shim of FileAccess.FileRename(String existingFilepath, String newFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileSeekInt32Int32">
            <summary>Sets the shim of FileAccess.FileSeek(Int32 offset, Int32 origin)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileSizeString">
            <summary>Sets the shim of FileAccess.FileSize(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileWriteBdBinDataInt32Int32">
            <summary>Sets the shim of FileAccess.FileWriteBd(BinData binData, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.FileWriteByteArray">
            <summary>Sets the shim of FileAccess.FileWrite(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GenBlockIdInt32Int32String">
            <summary>Sets the shim of FileAccess.GenBlockId(Int32 index, Int32 length, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetDirectoryNameString">
            <summary>Sets the shim of FileAccess.GetDirectoryName(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetExtensionString">
            <summary>Sets the shim of FileAccess.GetExtension(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetFileNameString">
            <summary>Sets the shim of FileAccess.GetFileName(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetFileNameWithoutExtensionString">
            <summary>Sets the shim of FileAccess.GetFileNameWithoutExtension(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetLastModifiedString">
            <summary>Sets the shim of FileAccess.GetLastModified(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetNumBlocksInt32">
            <summary>Sets the shim of FileAccess.GetNumBlocks(Int32 blockSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.GetTempFilenameStringString">
            <summary>Sets the shim of FileAccess.GetTempFilename(String dirPath, String prefix)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.LastErrorHtmlGet">
            <summary>Sets the shim of FileAccess.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.LastErrorTextGet">
            <summary>Sets the shim of FileAccess.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.LastErrorXmlGet">
            <summary>Sets the shim of FileAccess.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.LastMethodSuccessGet">
            <summary>Sets the shim of FileAccess.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of FileAccess.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.OpenForAppendString">
            <summary>Sets the shim of FileAccess.OpenForAppend(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.OpenForReadString">
            <summary>Sets the shim of FileAccess.OpenForRead(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.OpenForReadWriteString">
            <summary>Sets the shim of FileAccess.OpenForReadWrite(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.OpenForWriteString">
            <summary>Sets the shim of FileAccess.OpenForWrite(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ReadBinaryToEncodedStringString">
            <summary>Sets the shim of FileAccess.ReadBinaryToEncoded(String filePath, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ReadBlockInt32Int32">
            <summary>Sets the shim of FileAccess.ReadBlock(Int32 blockIndex, Int32 blockSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ReadEntireFileString">
            <summary>Sets the shim of FileAccess.ReadEntireFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ReadEntireTextFileStringString">
            <summary>Sets the shim of FileAccess.ReadEntireTextFile(String filePath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ReassembleFileStringStringStringString">
            <summary>Sets the shim of FileAccess.ReassembleFile(String partsDirPath, String partPrefix, String partExtension, String reassembledFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ReplaceStringsStringStringStringString">
            <summary>Sets the shim of FileAccess.ReplaceStrings(String filePath, String charset, String existingString, String replacementString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.SaveLastErrorString">
            <summary>Sets the shim of FileAccess.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.SetCurrentDirString">
            <summary>Sets the shim of FileAccess.SetCurrentDir(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.SetFileTimesStringCkDateTimeCkDateTimeCkDateTime">
            <summary>Sets the shim of FileAccess.SetFileTimes(String filePath, CkDateTime createTime, CkDateTime lastAccessTime, CkDateTime lastModTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.SetLastModifiedStringCkDateTime">
            <summary>Sets the shim of FileAccess.SetLastModified(String filePath, CkDateTime lastModified)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.SplitFileStringStringStringInt32String">
            <summary>Sets the shim of FileAccess.SplitFile(String fileToSplit, String partPrefix, String partExtension, Int32 partSize, String destDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.ToString">
            <summary>Sets the shim of FileAccess.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.TreeDeleteString">
            <summary>Sets the shim of FileAccess.TreeDelete(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.VerboseLoggingGet">
            <summary>Sets the shim of FileAccess.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.VerboseLoggingSetBoolean">
            <summary>Sets the shim of FileAccess.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.VersionGet">
            <summary>Sets the shim of FileAccess.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.WriteEntireFileStringByteArray">
            <summary>Sets the shim of FileAccess.WriteEntireFile(String filePath, Byte[] fileData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess.WriteEntireTextFileStringStringStringBoolean">
            <summary>Sets the shim of FileAccess.WriteEntireTextFile(String filePath, String textData, String charset, Boolean includedPreamble)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess._FileAccess">
            <summary>Sets the shim of FileAccess.!FileAccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAccess._FileAccess01">
            <summary>Sets the shim of FileAccess.~FileAccess()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileAddedEventArgs">
            <summary>Shim type of Chilkat.FileAddedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAddedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAddedEventArgs.#ctor(Chilkat.FileAddedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AbortGet">
            <summary>Sets the shim of FileAddedEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AbortSetBoolean">
            <summary>Sets the shim of FileAddedEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances.AbortGet">
            <summary>Sets the shim of FileAddedEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances.AbortSetBoolean">
            <summary>Sets the shim of FileAddedEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of FileAddedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of FileAddedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of FileAddedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.AllInstances._FileAddedEventArgs">
            <summary>Sets the shim of FileAddedEventArgs.~FileAddedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAddedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAddedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileAddedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.Dispose">
            <summary>Sets the shim of FileAddedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.DisposeBoolean">
            <summary>Sets the shim of FileAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.FileNameGet">
            <summary>Sets the shim of FileAddedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs.FileSizeGet">
            <summary>Sets the shim of FileAddedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileAddedEventArgs._FileAddedEventArgs">
            <summary>Sets the shim of FileAddedEventArgs.~FileAddedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileUnzippedEventArgs">
            <summary>Shim type of Chilkat.FileUnzippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileUnzippedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileUnzippedEventArgs.#ctor(Chilkat.FileUnzippedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AbortGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AbortSetBoolean">
            <summary>Sets the shim of FileUnzippedEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.AbortGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.AbortSetBoolean">
            <summary>Sets the shim of FileUnzippedEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.CompressedSizeGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_CompressedSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of FileUnzippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.AllInstances._FileUnzippedEventArgs">
            <summary>Sets the shim of FileUnzippedEventArgs.~FileUnzippedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileUnzippedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileUnzippedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileUnzippedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.CompressedSizeGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_CompressedSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.Dispose">
            <summary>Sets the shim of FileUnzippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.DisposeBoolean">
            <summary>Sets the shim of FileUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.FileNameGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.FileSizeGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs.IsDirectoryGet">
            <summary>Sets the shim of FileUnzippedEventArgs.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileUnzippedEventArgs._FileUnzippedEventArgs">
            <summary>Sets the shim of FileUnzippedEventArgs.~FileUnzippedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileZippedEventArgs">
            <summary>Shim type of Chilkat.FileZippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileZippedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileZippedEventArgs.#ctor(Chilkat.FileZippedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AbortGet">
            <summary>Sets the shim of FileZippedEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AbortSetBoolean">
            <summary>Sets the shim of FileZippedEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.AbortGet">
            <summary>Sets the shim of FileZippedEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.AbortSetBoolean">
            <summary>Sets the shim of FileZippedEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.CompressedSizeGet">
            <summary>Sets the shim of FileZippedEventArgs.get_CompressedSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of FileZippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FileZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of FileZippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of FileZippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.AllInstances._FileZippedEventArgs">
            <summary>Sets the shim of FileZippedEventArgs.~FileZippedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileZippedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileZippedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFileZippedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.CompressedSizeGet">
            <summary>Sets the shim of FileZippedEventArgs.get_CompressedSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.Dispose">
            <summary>Sets the shim of FileZippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.DisposeBoolean">
            <summary>Sets the shim of FileZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.FileNameGet">
            <summary>Sets the shim of FileZippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs.FileSizeGet">
            <summary>Sets the shim of FileZippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFileZippedEventArgs._FileZippedEventArgs">
            <summary>Sets the shim of FileZippedEventArgs.~FileZippedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFtp2">
            <summary>Shim type of Chilkat.Ftp2</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtp2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtp2.#ctor(Chilkat.Ftp2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AbortCurrentGet">
            <summary>Sets the shim of Ftp2.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AbortCurrentSetBoolean">
            <summary>Sets the shim of Ftp2.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AccountGet">
            <summary>Sets the shim of Ftp2.get_Account()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AccountSetString">
            <summary>Sets the shim of Ftp2.set_Account(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ActivePortRangeEndGet">
            <summary>Sets the shim of Ftp2.get_ActivePortRangeEnd()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ActivePortRangeEndSetInt32">
            <summary>Sets the shim of Ftp2.set_ActivePortRangeEnd(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ActivePortRangeStartGet">
            <summary>Sets the shim of Ftp2.get_ActivePortRangeStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ActivePortRangeStartSetInt32">
            <summary>Sets the shim of Ftp2.set_ActivePortRangeStart(Int32 propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFtp2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Ftp2.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Ftp2.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AccountGet">
            <summary>Sets the shim of Ftp2.get_Account()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AccountSetString">
            <summary>Sets the shim of Ftp2.set_Account(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ActivePortRangeEndGet">
            <summary>Sets the shim of Ftp2.get_ActivePortRangeEnd()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ActivePortRangeEndSetInt32">
            <summary>Sets the shim of Ftp2.set_ActivePortRangeEnd(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ActivePortRangeStartGet">
            <summary>Sets the shim of Ftp2.get_ActivePortRangeStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ActivePortRangeStartSetInt32">
            <summary>Sets the shim of Ftp2.set_ActivePortRangeStart(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AllocateSizeGet">
            <summary>Sets the shim of Ftp2.get_AllocateSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AllocateSizeSetUInt32">
            <summary>Sets the shim of Ftp2.set_AllocateSize(UInt32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AllowMlsdGet">
            <summary>Sets the shim of Ftp2.get_AllowMlsd()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AllowMlsdSetBoolean">
            <summary>Sets the shim of Ftp2.set_AllowMlsd(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AppendFileAsyncStringString">
            <summary>Sets the shim of Ftp2.AppendFileAsync(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AppendFileFromBinaryDataAsyncStringByteArray">
            <summary>Sets the shim of Ftp2.AppendFileFromBinaryDataAsync(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AppendFileFromBinaryDataStringByteArray">
            <summary>Sets the shim of Ftp2.AppendFileFromBinaryData(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AppendFileFromTextDataAsyncStringStringString">
            <summary>Sets the shim of Ftp2.AppendFileFromTextDataAsync(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AppendFileFromTextDataStringStringString">
            <summary>Sets the shim of Ftp2.AppendFileFromTextData(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AppendFileStringString">
            <summary>Sets the shim of Ftp2.AppendFile(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncAbort">
            <summary>Sets the shim of Ftp2.AsyncAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncAppendFileStartStringString">
            <summary>Sets the shim of Ftp2.AsyncAppendFileStart(String localFilename, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncBytesReceived64Get">
            <summary>Sets the shim of Ftp2.get_AsyncBytesReceived64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncBytesReceivedGet">
            <summary>Sets the shim of Ftp2.get_AsyncBytesReceived()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncBytesSent64Get">
            <summary>Sets the shim of Ftp2.get_AsyncBytesSent64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncBytesSentGet">
            <summary>Sets the shim of Ftp2.get_AsyncBytesSent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncFinishedGet">
            <summary>Sets the shim of Ftp2.get_AsyncFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncGetFileStartStringString">
            <summary>Sets the shim of Ftp2.AsyncGetFileStart(String remoteFilename, String localFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncLogGet">
            <summary>Sets the shim of Ftp2.get_AsyncLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncPercentDoneGet">
            <summary>Sets the shim of Ftp2.get_AsyncPercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncPutFileStartStringString">
            <summary>Sets the shim of Ftp2.AsyncPutFileStart(String localFilename, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AsyncSuccessGet">
            <summary>Sets the shim of Ftp2.get_AsyncSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AuthSslGet">
            <summary>Sets the shim of Ftp2.get_AuthSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AuthSslSetBoolean">
            <summary>Sets the shim of Ftp2.set_AuthSsl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AuthTlsGet">
            <summary>Sets the shim of Ftp2.get_AuthTls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AuthTlsSetBoolean">
            <summary>Sets the shim of Ftp2.set_AuthTls(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoFeatGet">
            <summary>Sets the shim of Ftp2.get_AutoFeat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoFeatSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoFeat(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoFixGet">
            <summary>Sets the shim of Ftp2.get_AutoFix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoFixSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoFix(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoGetSizeForProgressGet">
            <summary>Sets the shim of Ftp2.get_AutoGetSizeForProgress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoGetSizeForProgressSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoGetSizeForProgress(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoOptsUtf8Get">
            <summary>Sets the shim of Ftp2.get_AutoOptsUtf8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoOptsUtf8SetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoOptsUtf8(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoSetUseEpsvGet">
            <summary>Sets the shim of Ftp2.get_AutoSetUseEpsv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoSetUseEpsvSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoSetUseEpsv(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoSystGet">
            <summary>Sets the shim of Ftp2.get_AutoSyst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoSystSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoSyst(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoXcrcGet">
            <summary>Sets the shim of Ftp2.get_AutoXcrc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.AutoXcrcSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoXcrc(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.BandwidthThrottleDownGet">
            <summary>Sets the shim of Ftp2.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of Ftp2.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.BandwidthThrottleUpGet">
            <summary>Sets the shim of Ftp2.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Ftp2.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ChangeRemoteDirAsyncString">
            <summary>Sets the shim of Ftp2.ChangeRemoteDirAsync(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ChangeRemoteDirString">
            <summary>Sets the shim of Ftp2.ChangeRemoteDir(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CheckConnection">
            <summary>Sets the shim of Ftp2.CheckConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CheckConnectionAsync">
            <summary>Sets the shim of Ftp2.CheckConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ClearControlChannel">
            <summary>Sets the shim of Ftp2.ClearControlChannel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ClearControlChannelAsync">
            <summary>Sets the shim of Ftp2.ClearControlChannelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ClearDirCache">
            <summary>Sets the shim of Ftp2.ClearDirCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ClearSessionLog">
            <summary>Sets the shim of Ftp2.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of Ftp2.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of Ftp2.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CommandCharsetGet">
            <summary>Sets the shim of Ftp2.get_CommandCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CommandCharsetSetString">
            <summary>Sets the shim of Ftp2.set_CommandCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Connect">
            <summary>Sets the shim of Ftp2.Connect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectAsync">
            <summary>Sets the shim of Ftp2.ConnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectFailReasonGet">
            <summary>Sets the shim of Ftp2.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectOnly">
            <summary>Sets the shim of Ftp2.ConnectOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectOnlyAsync">
            <summary>Sets the shim of Ftp2.ConnectOnlyAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectTimeoutGet">
            <summary>Sets the shim of Ftp2.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Ftp2.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConnectVerifiedGet">
            <summary>Sets the shim of Ftp2.get_ConnectVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConvertToTls">
            <summary>Sets the shim of Ftp2.ConvertToTls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ConvertToTlsAsync">
            <summary>Sets the shim of Ftp2.ConvertToTlsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CreatePlanAsyncString">
            <summary>Sets the shim of Ftp2.CreatePlanAsync(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CreatePlanString">
            <summary>Sets the shim of Ftp2.CreatePlan(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CreateRemoteDirAsyncString">
            <summary>Sets the shim of Ftp2.CreateRemoteDirAsync(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CreateRemoteDirString">
            <summary>Sets the shim of Ftp2.CreateRemoteDir(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CrlfModeGet">
            <summary>Sets the shim of Ftp2.get_CrlfMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.CrlfModeSetInt32">
            <summary>Sets the shim of Ftp2.set_CrlfMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DataProtectionGet">
            <summary>Sets the shim of Ftp2.get_DataProtection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DataProtectionSetString">
            <summary>Sets the shim of Ftp2.set_DataProtection(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Ftp2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Ftp2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DeleteMatchingAsyncString">
            <summary>Sets the shim of Ftp2.DeleteMatchingAsync(String remotePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DeleteMatchingString">
            <summary>Sets the shim of Ftp2.DeleteMatching(String remotePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DeleteRemoteFileAsyncString">
            <summary>Sets the shim of Ftp2.DeleteRemoteFileAsync(String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DeleteRemoteFileString">
            <summary>Sets the shim of Ftp2.DeleteRemoteFile(String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DeleteTree">
            <summary>Sets the shim of Ftp2.DeleteTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DeleteTreeAsync">
            <summary>Sets the shim of Ftp2.DeleteTreeAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DetermineProxyMethod">
            <summary>Sets the shim of Ftp2.DetermineProxyMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DetermineProxyMethodAsync">
            <summary>Sets the shim of Ftp2.DetermineProxyMethodAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DetermineSettings">
            <summary>Sets the shim of Ftp2.DetermineSettings()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DetermineSettingsAsync">
            <summary>Sets the shim of Ftp2.DetermineSettingsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DirListingCharsetGet">
            <summary>Sets the shim of Ftp2.get_DirListingCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DirListingCharsetSetString">
            <summary>Sets the shim of Ftp2.set_DirListingCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DirTreeXml">
            <summary>Sets the shim of Ftp2.DirTreeXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DirTreeXmlAsync">
            <summary>Sets the shim of Ftp2.DirTreeXmlAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Disconnect">
            <summary>Sets the shim of Ftp2.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DisconnectAsync">
            <summary>Sets the shim of Ftp2.DisconnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Dispose">
            <summary>Sets the shim of Ftp2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Ftp2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DownloadTransferRateGet">
            <summary>Sets the shim of Ftp2.get_DownloadTransferRate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DownloadTreeAsyncString">
            <summary>Sets the shim of Ftp2.DownloadTreeAsync(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.DownloadTreeString">
            <summary>Sets the shim of Ftp2.DownloadTree(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Ftp2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Ftp2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Feat">
            <summary>Sets the shim of Ftp2.Feat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FeatAsync">
            <summary>Sets the shim of Ftp2.FeatAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ftp2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireBeginDownloadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireBeginDownloadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireBeginUploadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireBeginUploadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireDownloadRateObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.FireDownloadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireEndDownloadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireEndDownloadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireEndUploadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireEndUploadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ftp2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ftp2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ftp2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireUploadRateObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.FireUploadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireVerifyDeleteDirObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyDeleteDir(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireVerifyDeleteFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyDeleteFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireVerifyDownloadDirObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyDownloadDir(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.FireVerifyUploadDirObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyUploadDir(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ForcePortIpAddressGet">
            <summary>Sets the shim of Ftp2.get_ForcePortIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ForcePortIpAddressSetString">
            <summary>Sets the shim of Ftp2.set_ForcePortIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateDtAsyncInt32">
            <summary>Sets the shim of Ftp2.GetCreateDtAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateDtByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetCreateDtByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateDtByNameString">
            <summary>Sets the shim of Ftp2.GetCreateDtByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateDtInt32">
            <summary>Sets the shim of Ftp2.GetCreateDt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateTimeByNameStrAsyncString">
            <summary>Sets the shim of Ftp2.GetCreateTimeByNameStrAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateTimeByNameStrString">
            <summary>Sets the shim of Ftp2.GetCreateTimeByNameStr(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateTimeByNameString">
            <summary>Sets the shim of Ftp2.GetCreateTimeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateTimeInt32">
            <summary>Sets the shim of Ftp2.GetCreateTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateTimeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetCreateTimeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCreateTimeStrInt32">
            <summary>Sets the shim of Ftp2.GetCreateTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCurrentRemoteDir">
            <summary>Sets the shim of Ftp2.GetCurrentRemoteDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetCurrentRemoteDirAsync">
            <summary>Sets the shim of Ftp2.GetCurrentRemoteDirAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetDirCount">
            <summary>Sets the shim of Ftp2.GetDirCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetDirCountAsync">
            <summary>Sets the shim of Ftp2.GetDirCountAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileAsyncStringString">
            <summary>Sets the shim of Ftp2.GetFileAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileBdAsyncStringBinData">
            <summary>Sets the shim of Ftp2.GetFileBdAsync(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileBdStringBinData">
            <summary>Sets the shim of Ftp2.GetFileBd(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Ftp2.GetFileSbAsync(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileSbStringStringStringBuilder">
            <summary>Sets the shim of Ftp2.GetFileSb(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileStringString">
            <summary>Sets the shim of Ftp2.GetFile(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileToStreamAsyncStringStream">
            <summary>Sets the shim of Ftp2.GetFileToStreamAsync(String remoteFilePath, Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFileToStreamStringStream">
            <summary>Sets the shim of Ftp2.GetFileToStream(String remoteFilePath, Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFilenameAsyncInt32">
            <summary>Sets the shim of Ftp2.GetFilenameAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetFilenameInt32">
            <summary>Sets the shim of Ftp2.GetFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetGroupAsyncInt32">
            <summary>Sets the shim of Ftp2.GetGroupAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetGroupInt32">
            <summary>Sets the shim of Ftp2.GetGroup(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetIsDirectoryAsyncInt32">
            <summary>Sets the shim of Ftp2.GetIsDirectoryAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetIsDirectoryInt32">
            <summary>Sets the shim of Ftp2.GetIsDirectory(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetIsSymbolicLinkAsyncInt32">
            <summary>Sets the shim of Ftp2.GetIsSymbolicLinkAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetIsSymbolicLinkInt32">
            <summary>Sets the shim of Ftp2.GetIsSymbolicLink(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessDtAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessDtAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessDtByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetLastAccessDtByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessDtByNameString">
            <summary>Sets the shim of Ftp2.GetLastAccessDtByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessDtInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessDt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessTimeByNameStrAsyncString">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeByNameStrAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessTimeByNameStrString">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeByNameStr(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessTimeByNameString">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessTimeInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessTimeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastAccessTimeStrInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModDtAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastModDtAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModDtByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetLastModDtByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModDtByNameString">
            <summary>Sets the shim of Ftp2.GetLastModDtByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModDtInt32">
            <summary>Sets the shim of Ftp2.GetLastModDt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModifiedTimeByNameStrAsyncString">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeByNameStrAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModifiedTimeByNameStrString">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeByNameStr(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModifiedTimeByNameString">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModifiedTimeInt32">
            <summary>Sets the shim of Ftp2.GetLastModifiedTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModifiedTimeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetLastModifiedTimeStrInt32">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetOwnerAsyncInt32">
            <summary>Sets the shim of Ftp2.GetOwnerAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetOwnerInt32">
            <summary>Sets the shim of Ftp2.GetOwner(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetPermTypeAsyncInt32">
            <summary>Sets the shim of Ftp2.GetPermTypeAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetPermTypeInt32">
            <summary>Sets the shim of Ftp2.GetPermType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetPermissionsAsyncInt32">
            <summary>Sets the shim of Ftp2.GetPermissionsAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetPermissionsInt32">
            <summary>Sets the shim of Ftp2.GetPermissions(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetRemoteFileBinaryDataAsyncString">
            <summary>Sets the shim of Ftp2.GetRemoteFileBinaryDataAsync(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetRemoteFileBinaryDataString">
            <summary>Sets the shim of Ftp2.GetRemoteFileBinaryData(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetRemoteFileTextCAsyncStringString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextCAsync(String remoteFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetRemoteFileTextCStringString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextC(String remoteFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetRemoteFileTextDataAsyncString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextDataAsync(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetRemoteFileTextDataString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextData(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSize64Int32">
            <summary>Sets the shim of Ftp2.GetSize64(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeAsyncInt32">
            <summary>Sets the shim of Ftp2.GetSizeAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeByName64String">
            <summary>Sets the shim of Ftp2.GetSizeByName64(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetSizeByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeByNameString">
            <summary>Sets the shim of Ftp2.GetSizeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeInt32">
            <summary>Sets the shim of Ftp2.GetSize(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetSizeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeStrByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetSizeStrByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeStrByNameString">
            <summary>Sets the shim of Ftp2.GetSizeStrByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSizeStrInt32">
            <summary>Sets the shim of Ftp2.GetSizeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetSslServerCert">
            <summary>Sets the shim of Ftp2.GetSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetTextDirListingAsyncString">
            <summary>Sets the shim of Ftp2.GetTextDirListingAsync(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetTextDirListingString">
            <summary>Sets the shim of Ftp2.GetTextDirListing(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetXmlDirListingAsyncString">
            <summary>Sets the shim of Ftp2.GetXmlDirListingAsync(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GetXmlDirListingString">
            <summary>Sets the shim of Ftp2.GetXmlDirListing(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.GreetingGet">
            <summary>Sets the shim of Ftp2.get_Greeting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HasModeZGet">
            <summary>Sets the shim of Ftp2.get_HasModeZ()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Ftp2.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Ftp2.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HostnameGet">
            <summary>Sets the shim of Ftp2.get_Hostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HostnameSetString">
            <summary>Sets the shim of Ftp2.set_Hostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of Ftp2.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of Ftp2.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Ftp2.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.IsConnectedGet">
            <summary>Sets the shim of Ftp2.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.IsUnlocked">
            <summary>Sets the shim of Ftp2.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.KeepSessionLogGet">
            <summary>Sets the shim of Ftp2.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Ftp2.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LargeFileMeasuresGet">
            <summary>Sets the shim of Ftp2.get_LargeFileMeasures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LargeFileMeasuresSetBoolean">
            <summary>Sets the shim of Ftp2.set_LargeFileMeasures(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LargeFileUploadAsyncStringStringInt32">
            <summary>Sets the shim of Ftp2.LargeFileUploadAsync(String localPath, String remotePath, Int32 chunkSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LargeFileUploadStringStringInt32">
            <summary>Sets the shim of Ftp2.LargeFileUpload(String localPath, String remotePath, Int32 chunkSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Ftp2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Ftp2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Ftp2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Ftp2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ftp2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LastReplyGet">
            <summary>Sets the shim of Ftp2.get_LastReply()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ListPatternGet">
            <summary>Sets the shim of Ftp2.get_ListPattern()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ListPatternSetString">
            <summary>Sets the shim of Ftp2.set_ListPattern(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LoginAfterConnectOnly">
            <summary>Sets the shim of Ftp2.LoginAfterConnectOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LoginAfterConnectOnlyAsync">
            <summary>Sets the shim of Ftp2.LoginAfterConnectOnlyAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.LoginVerifiedGet">
            <summary>Sets the shim of Ftp2.get_LoginVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.MGetFilesAsyncStringString">
            <summary>Sets the shim of Ftp2.MGetFilesAsync(String remotePattern, String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.MGetFilesStringString">
            <summary>Sets the shim of Ftp2.MGetFiles(String remotePattern, String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.MPutFilesAsyncString">
            <summary>Sets the shim of Ftp2.MPutFilesAsync(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.MPutFilesString">
            <summary>Sets the shim of Ftp2.MPutFiles(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.NlstXmlAsyncString">
            <summary>Sets the shim of Ftp2.NlstXmlAsync(String remoteDirPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.NlstXmlString">
            <summary>Sets the shim of Ftp2.NlstXml(String remoteDirPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Noop">
            <summary>Sets the shim of Ftp2.Noop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.NoopAsync">
            <summary>Sets the shim of Ftp2.NoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.NumFilesAndDirsGet">
            <summary>Sets the shim of Ftp2.get_NumFilesAndDirs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnAbortCheckAddFtp2AbortCheckEventHandler">
            <summary>Sets the shim of Ftp2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnAbortCheckRemoveFtp2AbortCheckEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnBeginDownloadFileAddFtp2BeginDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnBeginDownloadFile(BeginDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnBeginDownloadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnBeginDownloadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnBeginDownloadFileRemoveFtp2BeginDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnBeginDownloadFile(BeginDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnBeginUploadFileAddFtp2BeginUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnBeginUploadFile(BeginUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnBeginUploadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnBeginUploadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnBeginUploadFileRemoveFtp2BeginUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnBeginUploadFile(BeginUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnDownloadRateAddFtp2DownloadRateEventHandler">
            <summary>Sets the shim of Ftp2.add_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnDownloadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnDownloadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnDownloadRateRemoveFtp2DownloadRateEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnEndDownloadFileAddFtp2EndDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnEndDownloadFile(EndDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnEndDownloadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnEndDownloadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnEndDownloadFileRemoveFtp2EndDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnEndDownloadFile(EndDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnEndUploadFileAddFtp2EndUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnEndUploadFile(EndUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnEndUploadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnEndUploadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnEndUploadFileRemoveFtp2EndUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnEndUploadFile(EndUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnPercentDoneAddFtp2PercentDoneEventHandler">
            <summary>Sets the shim of Ftp2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnPercentDoneRemoveFtp2PercentDoneEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnProgressInfoAddFtp2ProgressInfoEventHandler">
            <summary>Sets the shim of Ftp2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnProgressInfoRemoveFtp2ProgressInfoEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnTaskCompletedAddFtp2TaskCompletedEventHandler">
            <summary>Sets the shim of Ftp2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnTaskCompletedRemoveFtp2TaskCompletedEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnUploadRateAddFtp2UploadRateEventHandler">
            <summary>Sets the shim of Ftp2.add_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnUploadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnUploadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnUploadRateRemoveFtp2UploadRateEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDeleteDirAddFtp2VerifyDeleteDirEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyDeleteDir(VerifyDeleteDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDeleteDirRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyDeleteDir(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDeleteDirRemoveFtp2VerifyDeleteDirEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyDeleteDir(VerifyDeleteDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDeleteFileAddFtp2VerifyDeleteFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyDeleteFile(VerifyDeleteFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDeleteFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyDeleteFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDeleteFileRemoveFtp2VerifyDeleteFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyDeleteFile(VerifyDeleteFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDownloadDirAddFtp2VerifyDownloadDirEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyDownloadDir(VerifyDownloadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDownloadDirRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyDownloadDir(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyDownloadDirRemoveFtp2VerifyDownloadDirEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyDownloadDir(VerifyDownloadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyUploadDirAddFtp2VerifyUploadDirEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyUploadDir(VerifyUploadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyUploadDirRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyUploadDir(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.OnVerifyUploadDirRemoveFtp2VerifyUploadDirEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyUploadDir(VerifyUploadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PartialTransferGet">
            <summary>Sets the shim of Ftp2.get_PartialTransfer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PassiveGet">
            <summary>Sets the shim of Ftp2.get_Passive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PassiveSetBoolean">
            <summary>Sets the shim of Ftp2.set_Passive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PassiveUseHostAddrGet">
            <summary>Sets the shim of Ftp2.get_PassiveUseHostAddr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PassiveUseHostAddrSetBoolean">
            <summary>Sets the shim of Ftp2.set_PassiveUseHostAddr(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PasswordGet">
            <summary>Sets the shim of Ftp2.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PasswordSetString">
            <summary>Sets the shim of Ftp2.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Ftp2.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Ftp2.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PortGet">
            <summary>Sets the shim of Ftp2.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PortSetInt32">
            <summary>Sets the shim of Ftp2.set_Port(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Ftp2.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Ftp2.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PreferNlstGet">
            <summary>Sets the shim of Ftp2.get_PreferNlst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PreferNlstSetBoolean">
            <summary>Sets the shim of Ftp2.set_PreferNlst(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProgressMonSize64Get">
            <summary>Sets the shim of Ftp2.get_ProgressMonSize64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProgressMonSize64SetInt64">
            <summary>Sets the shim of Ftp2.set_ProgressMonSize64(Int64 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProgressMonSizeGet">
            <summary>Sets the shim of Ftp2.get_ProgressMonSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProgressMonSizeSetInt32">
            <summary>Sets the shim of Ftp2.set_ProgressMonSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyHostnameGet">
            <summary>Sets the shim of Ftp2.get_ProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyHostnameSetString">
            <summary>Sets the shim of Ftp2.set_ProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyMethodGet">
            <summary>Sets the shim of Ftp2.get_ProxyMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyMethodSetInt32">
            <summary>Sets the shim of Ftp2.set_ProxyMethod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyPasswordGet">
            <summary>Sets the shim of Ftp2.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyPasswordSetString">
            <summary>Sets the shim of Ftp2.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyPortGet">
            <summary>Sets the shim of Ftp2.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyPortSetInt32">
            <summary>Sets the shim of Ftp2.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyUsernameGet">
            <summary>Sets the shim of Ftp2.get_ProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ProxyUsernameSetString">
            <summary>Sets the shim of Ftp2.set_ProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileAsyncStringString">
            <summary>Sets the shim of Ftp2.PutFileAsync(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileBdAsyncBinDataString">
            <summary>Sets the shim of Ftp2.PutFileBdAsync(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileBdBinDataString">
            <summary>Sets the shim of Ftp2.PutFileBd(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileFromBinaryDataAsyncStringByteArray">
            <summary>Sets the shim of Ftp2.PutFileFromBinaryDataAsync(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileFromBinaryDataStringByteArray">
            <summary>Sets the shim of Ftp2.PutFileFromBinaryData(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileFromTextDataAsyncStringStringString">
            <summary>Sets the shim of Ftp2.PutFileFromTextDataAsync(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileFromTextDataStringStringString">
            <summary>Sets the shim of Ftp2.PutFileFromTextData(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileSbAsyncStringBuilderStringBooleanString">
            <summary>Sets the shim of Ftp2.PutFileSbAsync(StringBuilder sb, String charset, Boolean includeBom, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileSbStringBuilderStringBooleanString">
            <summary>Sets the shim of Ftp2.PutFileSb(StringBuilder sb, String charset, Boolean includeBom, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutFileStringString">
            <summary>Sets the shim of Ftp2.PutFile(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutPlanAsyncStringString">
            <summary>Sets the shim of Ftp2.PutPlanAsync(String plan, String alreadyDoneFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutPlanStringString">
            <summary>Sets the shim of Ftp2.PutPlan(String plan, String alreadyDoneFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutTreeAsyncString">
            <summary>Sets the shim of Ftp2.PutTreeAsync(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.PutTreeString">
            <summary>Sets the shim of Ftp2.PutTree(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.QuoteAsyncString">
            <summary>Sets the shim of Ftp2.QuoteAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.QuoteString">
            <summary>Sets the shim of Ftp2.Quote(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of Ftp2.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of Ftp2.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RemoveRemoteDirAsyncString">
            <summary>Sets the shim of Ftp2.RemoveRemoteDirAsync(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RemoveRemoteDirString">
            <summary>Sets the shim of Ftp2.RemoveRemoteDir(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RenameRemoteFileAsyncStringString">
            <summary>Sets the shim of Ftp2.RenameRemoteFileAsync(String existingRemoteFilePath, String newRemoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RenameRemoteFileStringString">
            <summary>Sets the shim of Ftp2.RenameRemoteFile(String existingRemoteFilePath, String newRemoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RequireSslCertVerifyGet">
            <summary>Sets the shim of Ftp2.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Ftp2.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RestartNextGet">
            <summary>Sets the shim of Ftp2.get_RestartNext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.RestartNextSetBoolean">
            <summary>Sets the shim of Ftp2.set_RestartNext(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Ftp2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of Ftp2.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SendBufferSizeSetInt32">
            <summary>Sets the shim of Ftp2.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SendCommandAsyncString">
            <summary>Sets the shim of Ftp2.SendCommandAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SendCommandString">
            <summary>Sets the shim of Ftp2.SendCommand(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SessionLogGet">
            <summary>Sets the shim of Ftp2.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetModeZ">
            <summary>Sets the shim of Ftp2.SetModeZ()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetModeZAsync">
            <summary>Sets the shim of Ftp2.SetModeZAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetOldestDateDateTime">
            <summary>Sets the shim of Ftp2.SetOldestDate(DateTime oldestDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetOldestDateStrString">
            <summary>Sets the shim of Ftp2.SetOldestDateStr(String oldestDateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetOptionString">
            <summary>Sets the shim of Ftp2.SetOption(String option)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetRemoteFileDateTimeDateTimeString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDateTime(DateTime dt, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetRemoteFileDateTimeStrAsyncStringString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDateTimeStrAsync(String dateTimeStr, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetRemoteFileDateTimeStrStringString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDateTimeStr(String dateTimeStr, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetRemoteFileDtAsyncCkDateTimeString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDtAsync(CkDateTime dt, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetRemoteFileDtCkDateTimeString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDt(CkDateTime dt, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetSslCertRequirementStringString">
            <summary>Sets the shim of Ftp2.SetSslCertRequirement(String reqName, String reqValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetSslClientCertCert">
            <summary>Sets the shim of Ftp2.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetSslClientCertPemStringString">
            <summary>Sets the shim of Ftp2.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Ftp2.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetTypeAscii">
            <summary>Sets the shim of Ftp2.SetTypeAscii()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetTypeAsciiAsync">
            <summary>Sets the shim of Ftp2.SetTypeAsciiAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetTypeBinary">
            <summary>Sets the shim of Ftp2.SetTypeBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SetTypeBinaryAsync">
            <summary>Sets the shim of Ftp2.SetTypeBinaryAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SiteAsyncString">
            <summary>Sets the shim of Ftp2.SiteAsync(String siteCommand)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SiteString">
            <summary>Sets the shim of Ftp2.Site(String siteCommand)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SkipFinalReplyGet">
            <summary>Sets the shim of Ftp2.get_SkipFinalReply()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SkipFinalReplySetBoolean">
            <summary>Sets the shim of Ftp2.set_SkipFinalReply(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SleepMsInt32">
            <summary>Sets the shim of Ftp2.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of Ftp2.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of Ftp2.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SoSndBufGet">
            <summary>Sets the shim of Ftp2.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of Ftp2.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of Ftp2.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of Ftp2.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of Ftp2.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of Ftp2.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksPortGet">
            <summary>Sets the shim of Ftp2.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of Ftp2.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of Ftp2.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of Ftp2.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksVersionGet">
            <summary>Sets the shim of Ftp2.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of Ftp2.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslAllowedCiphersGet">
            <summary>Sets the shim of Ftp2.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslAllowedCiphersSetString">
            <summary>Sets the shim of Ftp2.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslGet">
            <summary>Sets the shim of Ftp2.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslProtocolGet">
            <summary>Sets the shim of Ftp2.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslProtocolSetString">
            <summary>Sets the shim of Ftp2.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslServerCertVerifiedGet">
            <summary>Sets the shim of Ftp2.get_SslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SslSetBoolean">
            <summary>Sets the shim of Ftp2.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Stat">
            <summary>Sets the shim of Ftp2.Stat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.StatAsync">
            <summary>Sets the shim of Ftp2.StatAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncDeleteRemoteAsyncString">
            <summary>Sets the shim of Ftp2.SyncDeleteRemoteAsync(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncDeleteRemoteString">
            <summary>Sets the shim of Ftp2.SyncDeleteRemote(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncLocalDirAsyncStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalDirAsync(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncLocalDirStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalDir(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncLocalTreeAsyncStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalTreeAsync(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncLocalTreeStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalTree(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncMustMatchGet">
            <summary>Sets the shim of Ftp2.get_SyncMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncMustMatchSetString">
            <summary>Sets the shim of Ftp2.set_SyncMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncMustNotMatchGet">
            <summary>Sets the shim of Ftp2.get_SyncMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncMustNotMatchSetString">
            <summary>Sets the shim of Ftp2.set_SyncMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncPreviewGet">
            <summary>Sets the shim of Ftp2.get_SyncPreview()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncRemoteTree2AsyncStringInt32BooleanBoolean">
            <summary>Sets the shim of Ftp2.SyncRemoteTree2Async(String localDirPath, Int32 mode, Boolean bDescend, Boolean bPreviewOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncRemoteTree2StringInt32BooleanBoolean">
            <summary>Sets the shim of Ftp2.SyncRemoteTree2(String localDirPath, Int32 mode, Boolean bDescend, Boolean bPreviewOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncRemoteTreeAsyncStringInt32">
            <summary>Sets the shim of Ftp2.SyncRemoteTreeAsync(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncRemoteTreeStringInt32">
            <summary>Sets the shim of Ftp2.SyncRemoteTree(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncedFilesGet">
            <summary>Sets the shim of Ftp2.get_SyncedFiles()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SyncedFilesSetString">
            <summary>Sets the shim of Ftp2.set_SyncedFiles(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.Syst">
            <summary>Sets the shim of Ftp2.Syst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.SystAsync">
            <summary>Sets the shim of Ftp2.SystAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.TlsCipherSuiteGet">
            <summary>Sets the shim of Ftp2.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.TlsPinSetGet">
            <summary>Sets the shim of Ftp2.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.TlsPinSetSetString">
            <summary>Sets the shim of Ftp2.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.TlsVersionGet">
            <summary>Sets the shim of Ftp2.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.ToString01">
            <summary>Sets the shim of Ftp2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Ftp2.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.UploadTransferRateGet">
            <summary>Sets the shim of Ftp2.get_UploadTransferRate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.UseEpsvGet">
            <summary>Sets the shim of Ftp2.get_UseEpsv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.UseEpsvSetBoolean">
            <summary>Sets the shim of Ftp2.set_UseEpsv(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.UsernameGet">
            <summary>Sets the shim of Ftp2.get_Username()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.UsernameSetString">
            <summary>Sets the shim of Ftp2.set_Username(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Ftp2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ftp2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances.VersionGet">
            <summary>Sets the shim of Ftp2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances._Ftp2">
            <summary>Sets the shim of Ftp2.!Ftp2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllInstances._Ftp201">
            <summary>Sets the shim of Ftp2.~Ftp2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllocateSizeGet">
            <summary>Sets the shim of Ftp2.get_AllocateSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllocateSizeSetUInt32">
            <summary>Sets the shim of Ftp2.set_AllocateSize(UInt32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllowMlsdGet">
            <summary>Sets the shim of Ftp2.get_AllowMlsd()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AllowMlsdSetBoolean">
            <summary>Sets the shim of Ftp2.set_AllowMlsd(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AppendFileAsyncStringString">
            <summary>Sets the shim of Ftp2.AppendFileAsync(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AppendFileFromBinaryDataAsyncStringByteArray">
            <summary>Sets the shim of Ftp2.AppendFileFromBinaryDataAsync(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AppendFileFromBinaryDataStringByteArray">
            <summary>Sets the shim of Ftp2.AppendFileFromBinaryData(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AppendFileFromTextDataAsyncStringStringString">
            <summary>Sets the shim of Ftp2.AppendFileFromTextDataAsync(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AppendFileFromTextDataStringStringString">
            <summary>Sets the shim of Ftp2.AppendFileFromTextData(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AppendFileStringString">
            <summary>Sets the shim of Ftp2.AppendFile(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncAbort">
            <summary>Sets the shim of Ftp2.AsyncAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncAppendFileStartStringString">
            <summary>Sets the shim of Ftp2.AsyncAppendFileStart(String localFilename, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncBytesReceived64Get">
            <summary>Sets the shim of Ftp2.get_AsyncBytesReceived64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncBytesReceivedGet">
            <summary>Sets the shim of Ftp2.get_AsyncBytesReceived()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncBytesSent64Get">
            <summary>Sets the shim of Ftp2.get_AsyncBytesSent64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncBytesSentGet">
            <summary>Sets the shim of Ftp2.get_AsyncBytesSent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncFinishedGet">
            <summary>Sets the shim of Ftp2.get_AsyncFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncGetFileStartStringString">
            <summary>Sets the shim of Ftp2.AsyncGetFileStart(String remoteFilename, String localFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncLogGet">
            <summary>Sets the shim of Ftp2.get_AsyncLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncPercentDoneGet">
            <summary>Sets the shim of Ftp2.get_AsyncPercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncPutFileStartStringString">
            <summary>Sets the shim of Ftp2.AsyncPutFileStart(String localFilename, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AsyncSuccessGet">
            <summary>Sets the shim of Ftp2.get_AsyncSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AuthSslGet">
            <summary>Sets the shim of Ftp2.get_AuthSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AuthSslSetBoolean">
            <summary>Sets the shim of Ftp2.set_AuthSsl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AuthTlsGet">
            <summary>Sets the shim of Ftp2.get_AuthTls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AuthTlsSetBoolean">
            <summary>Sets the shim of Ftp2.set_AuthTls(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoFeatGet">
            <summary>Sets the shim of Ftp2.get_AutoFeat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoFeatSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoFeat(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoFixGet">
            <summary>Sets the shim of Ftp2.get_AutoFix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoFixSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoFix(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoGetSizeForProgressGet">
            <summary>Sets the shim of Ftp2.get_AutoGetSizeForProgress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoGetSizeForProgressSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoGetSizeForProgress(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoOptsUtf8Get">
            <summary>Sets the shim of Ftp2.get_AutoOptsUtf8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoOptsUtf8SetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoOptsUtf8(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoSetUseEpsvGet">
            <summary>Sets the shim of Ftp2.get_AutoSetUseEpsv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoSetUseEpsvSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoSetUseEpsv(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoSystGet">
            <summary>Sets the shim of Ftp2.get_AutoSyst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoSystSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoSyst(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoXcrcGet">
            <summary>Sets the shim of Ftp2.get_AutoXcrc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.AutoXcrcSetBoolean">
            <summary>Sets the shim of Ftp2.set_AutoXcrc(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.BandwidthThrottleDownGet">
            <summary>Sets the shim of Ftp2.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of Ftp2.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.BandwidthThrottleUpGet">
            <summary>Sets the shim of Ftp2.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Ftp2.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtp2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtp2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtp2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ChangeRemoteDirAsyncString">
            <summary>Sets the shim of Ftp2.ChangeRemoteDirAsync(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ChangeRemoteDirString">
            <summary>Sets the shim of Ftp2.ChangeRemoteDir(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CheckConnection">
            <summary>Sets the shim of Ftp2.CheckConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CheckConnectionAsync">
            <summary>Sets the shim of Ftp2.CheckConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ClearControlChannel">
            <summary>Sets the shim of Ftp2.ClearControlChannel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ClearControlChannelAsync">
            <summary>Sets the shim of Ftp2.ClearControlChannelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ClearDirCache">
            <summary>Sets the shim of Ftp2.ClearDirCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ClearSessionLog">
            <summary>Sets the shim of Ftp2.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ClientIpAddressGet">
            <summary>Sets the shim of Ftp2.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ClientIpAddressSetString">
            <summary>Sets the shim of Ftp2.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CommandCharsetGet">
            <summary>Sets the shim of Ftp2.get_CommandCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CommandCharsetSetString">
            <summary>Sets the shim of Ftp2.set_CommandCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Connect">
            <summary>Sets the shim of Ftp2.Connect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectAsync">
            <summary>Sets the shim of Ftp2.ConnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectFailReasonGet">
            <summary>Sets the shim of Ftp2.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectOnly">
            <summary>Sets the shim of Ftp2.ConnectOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectOnlyAsync">
            <summary>Sets the shim of Ftp2.ConnectOnlyAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectTimeoutGet">
            <summary>Sets the shim of Ftp2.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Ftp2.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConnectVerifiedGet">
            <summary>Sets the shim of Ftp2.get_ConnectVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Constructor">
            <summary>Sets the shim of Ftp2.Ftp2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConvertToTls">
            <summary>Sets the shim of Ftp2.ConvertToTls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ConvertToTlsAsync">
            <summary>Sets the shim of Ftp2.ConvertToTlsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CreatePlanAsyncString">
            <summary>Sets the shim of Ftp2.CreatePlanAsync(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CreatePlanString">
            <summary>Sets the shim of Ftp2.CreatePlan(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CreateRemoteDirAsyncString">
            <summary>Sets the shim of Ftp2.CreateRemoteDirAsync(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CreateRemoteDirString">
            <summary>Sets the shim of Ftp2.CreateRemoteDir(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CrlfModeGet">
            <summary>Sets the shim of Ftp2.get_CrlfMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.CrlfModeSetInt32">
            <summary>Sets the shim of Ftp2.set_CrlfMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DataProtectionGet">
            <summary>Sets the shim of Ftp2.get_DataProtection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DataProtectionSetString">
            <summary>Sets the shim of Ftp2.set_DataProtection(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DebugLogFilePathGet">
            <summary>Sets the shim of Ftp2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DebugLogFilePathSetString">
            <summary>Sets the shim of Ftp2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DeleteMatchingAsyncString">
            <summary>Sets the shim of Ftp2.DeleteMatchingAsync(String remotePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DeleteMatchingString">
            <summary>Sets the shim of Ftp2.DeleteMatching(String remotePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DeleteRemoteFileAsyncString">
            <summary>Sets the shim of Ftp2.DeleteRemoteFileAsync(String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DeleteRemoteFileString">
            <summary>Sets the shim of Ftp2.DeleteRemoteFile(String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DeleteTree">
            <summary>Sets the shim of Ftp2.DeleteTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DeleteTreeAsync">
            <summary>Sets the shim of Ftp2.DeleteTreeAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DetermineProxyMethod">
            <summary>Sets the shim of Ftp2.DetermineProxyMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DetermineProxyMethodAsync">
            <summary>Sets the shim of Ftp2.DetermineProxyMethodAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DetermineSettings">
            <summary>Sets the shim of Ftp2.DetermineSettings()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DetermineSettingsAsync">
            <summary>Sets the shim of Ftp2.DetermineSettingsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DirListingCharsetGet">
            <summary>Sets the shim of Ftp2.get_DirListingCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DirListingCharsetSetString">
            <summary>Sets the shim of Ftp2.set_DirListingCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DirTreeXml">
            <summary>Sets the shim of Ftp2.DirTreeXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DirTreeXmlAsync">
            <summary>Sets the shim of Ftp2.DirTreeXmlAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Disconnect">
            <summary>Sets the shim of Ftp2.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DisconnectAsync">
            <summary>Sets the shim of Ftp2.DisconnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Dispose">
            <summary>Sets the shim of Ftp2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DisposeBoolean">
            <summary>Sets the shim of Ftp2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DownloadTransferRateGet">
            <summary>Sets the shim of Ftp2.get_DownloadTransferRate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DownloadTreeAsyncString">
            <summary>Sets the shim of Ftp2.DownloadTreeAsync(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.DownloadTreeString">
            <summary>Sets the shim of Ftp2.DownloadTree(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.EnableEventsGet">
            <summary>Sets the shim of Ftp2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.EnableEventsSetBoolean">
            <summary>Sets the shim of Ftp2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Feat">
            <summary>Sets the shim of Ftp2.Feat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FeatAsync">
            <summary>Sets the shim of Ftp2.FeatAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ftp2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireBeginDownloadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireBeginDownloadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireBeginUploadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireBeginUploadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireDownloadRateObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.FireDownloadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireEndDownloadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireEndDownloadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireEndUploadFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireEndUploadFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ftp2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ftp2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ftp2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireUploadRateObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.FireUploadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireVerifyDeleteDirObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyDeleteDir(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireVerifyDeleteFileObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyDeleteFile(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireVerifyDownloadDirObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyDownloadDir(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.FireVerifyUploadDirObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.FireVerifyUploadDir(Object sender, FtpTreeEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ForcePortIpAddressGet">
            <summary>Sets the shim of Ftp2.get_ForcePortIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ForcePortIpAddressSetString">
            <summary>Sets the shim of Ftp2.set_ForcePortIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateDtAsyncInt32">
            <summary>Sets the shim of Ftp2.GetCreateDtAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateDtByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetCreateDtByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateDtByNameString">
            <summary>Sets the shim of Ftp2.GetCreateDtByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateDtInt32">
            <summary>Sets the shim of Ftp2.GetCreateDt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateTimeByNameStrAsyncString">
            <summary>Sets the shim of Ftp2.GetCreateTimeByNameStrAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateTimeByNameStrString">
            <summary>Sets the shim of Ftp2.GetCreateTimeByNameStr(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateTimeByNameString">
            <summary>Sets the shim of Ftp2.GetCreateTimeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateTimeInt32">
            <summary>Sets the shim of Ftp2.GetCreateTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateTimeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetCreateTimeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCreateTimeStrInt32">
            <summary>Sets the shim of Ftp2.GetCreateTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCurrentRemoteDir">
            <summary>Sets the shim of Ftp2.GetCurrentRemoteDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetCurrentRemoteDirAsync">
            <summary>Sets the shim of Ftp2.GetCurrentRemoteDirAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetDirCount">
            <summary>Sets the shim of Ftp2.GetDirCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetDirCountAsync">
            <summary>Sets the shim of Ftp2.GetDirCountAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileAsyncStringString">
            <summary>Sets the shim of Ftp2.GetFileAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileBdAsyncStringBinData">
            <summary>Sets the shim of Ftp2.GetFileBdAsync(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileBdStringBinData">
            <summary>Sets the shim of Ftp2.GetFileBd(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Ftp2.GetFileSbAsync(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileSbStringStringStringBuilder">
            <summary>Sets the shim of Ftp2.GetFileSb(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileStringString">
            <summary>Sets the shim of Ftp2.GetFile(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileToStreamAsyncStringStream">
            <summary>Sets the shim of Ftp2.GetFileToStreamAsync(String remoteFilePath, Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFileToStreamStringStream">
            <summary>Sets the shim of Ftp2.GetFileToStream(String remoteFilePath, Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFilenameAsyncInt32">
            <summary>Sets the shim of Ftp2.GetFilenameAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetFilenameInt32">
            <summary>Sets the shim of Ftp2.GetFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetGroupAsyncInt32">
            <summary>Sets the shim of Ftp2.GetGroupAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetGroupInt32">
            <summary>Sets the shim of Ftp2.GetGroup(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetIsDirectoryAsyncInt32">
            <summary>Sets the shim of Ftp2.GetIsDirectoryAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetIsDirectoryInt32">
            <summary>Sets the shim of Ftp2.GetIsDirectory(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetIsSymbolicLinkAsyncInt32">
            <summary>Sets the shim of Ftp2.GetIsSymbolicLinkAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetIsSymbolicLinkInt32">
            <summary>Sets the shim of Ftp2.GetIsSymbolicLink(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessDtAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessDtAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessDtByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetLastAccessDtByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessDtByNameString">
            <summary>Sets the shim of Ftp2.GetLastAccessDtByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessDtInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessDt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessTimeByNameStrAsyncString">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeByNameStrAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessTimeByNameStrString">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeByNameStr(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessTimeByNameString">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessTimeInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessTimeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastAccessTimeStrInt32">
            <summary>Sets the shim of Ftp2.GetLastAccessTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModDtAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastModDtAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModDtByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetLastModDtByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModDtByNameString">
            <summary>Sets the shim of Ftp2.GetLastModDtByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModDtInt32">
            <summary>Sets the shim of Ftp2.GetLastModDt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModifiedTimeByNameStrAsyncString">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeByNameStrAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModifiedTimeByNameStrString">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeByNameStr(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModifiedTimeByNameString">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModifiedTimeInt32">
            <summary>Sets the shim of Ftp2.GetLastModifiedTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModifiedTimeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetLastModifiedTimeStrInt32">
            <summary>Sets the shim of Ftp2.GetLastModifiedTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetOwnerAsyncInt32">
            <summary>Sets the shim of Ftp2.GetOwnerAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetOwnerInt32">
            <summary>Sets the shim of Ftp2.GetOwner(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetPermTypeAsyncInt32">
            <summary>Sets the shim of Ftp2.GetPermTypeAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetPermTypeInt32">
            <summary>Sets the shim of Ftp2.GetPermType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetPermissionsAsyncInt32">
            <summary>Sets the shim of Ftp2.GetPermissionsAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetPermissionsInt32">
            <summary>Sets the shim of Ftp2.GetPermissions(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetRemoteFileBinaryDataAsyncString">
            <summary>Sets the shim of Ftp2.GetRemoteFileBinaryDataAsync(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetRemoteFileBinaryDataString">
            <summary>Sets the shim of Ftp2.GetRemoteFileBinaryData(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetRemoteFileTextCAsyncStringString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextCAsync(String remoteFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetRemoteFileTextCStringString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextC(String remoteFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetRemoteFileTextDataAsyncString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextDataAsync(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetRemoteFileTextDataString">
            <summary>Sets the shim of Ftp2.GetRemoteFileTextData(String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSize64Int32">
            <summary>Sets the shim of Ftp2.GetSize64(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeAsyncInt32">
            <summary>Sets the shim of Ftp2.GetSizeAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeByName64String">
            <summary>Sets the shim of Ftp2.GetSizeByName64(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetSizeByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeByNameString">
            <summary>Sets the shim of Ftp2.GetSizeByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeInt32">
            <summary>Sets the shim of Ftp2.GetSize(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeStrAsyncInt32">
            <summary>Sets the shim of Ftp2.GetSizeStrAsync(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeStrByNameAsyncString">
            <summary>Sets the shim of Ftp2.GetSizeStrByNameAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeStrByNameString">
            <summary>Sets the shim of Ftp2.GetSizeStrByName(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSizeStrInt32">
            <summary>Sets the shim of Ftp2.GetSizeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetSslServerCert">
            <summary>Sets the shim of Ftp2.GetSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetTextDirListingAsyncString">
            <summary>Sets the shim of Ftp2.GetTextDirListingAsync(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetTextDirListingString">
            <summary>Sets the shim of Ftp2.GetTextDirListing(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetXmlDirListingAsyncString">
            <summary>Sets the shim of Ftp2.GetXmlDirListingAsync(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GetXmlDirListingString">
            <summary>Sets the shim of Ftp2.GetXmlDirListing(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.GreetingGet">
            <summary>Sets the shim of Ftp2.get_Greeting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HasModeZGet">
            <summary>Sets the shim of Ftp2.get_HasModeZ()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HeartbeatMsGet">
            <summary>Sets the shim of Ftp2.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HeartbeatMsSetInt32">
            <summary>Sets the shim of Ftp2.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HostnameGet">
            <summary>Sets the shim of Ftp2.get_Hostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HostnameSetString">
            <summary>Sets the shim of Ftp2.set_Hostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyDomainGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyDomainSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyHostnameGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyHostnameSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyPasswordGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyPasswordSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyPortGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyPortSetInt32">
            <summary>Sets the shim of Ftp2.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyUsernameGet">
            <summary>Sets the shim of Ftp2.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.HttpProxyUsernameSetString">
            <summary>Sets the shim of Ftp2.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.IdleTimeoutMsGet">
            <summary>Sets the shim of Ftp2.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Ftp2.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.IsConnectedGet">
            <summary>Sets the shim of Ftp2.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.IsUnlocked">
            <summary>Sets the shim of Ftp2.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.KeepSessionLogGet">
            <summary>Sets the shim of Ftp2.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Ftp2.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LargeFileMeasuresGet">
            <summary>Sets the shim of Ftp2.get_LargeFileMeasures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LargeFileMeasuresSetBoolean">
            <summary>Sets the shim of Ftp2.set_LargeFileMeasures(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LargeFileUploadAsyncStringStringInt32">
            <summary>Sets the shim of Ftp2.LargeFileUploadAsync(String localPath, String remotePath, Int32 chunkSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LargeFileUploadStringStringInt32">
            <summary>Sets the shim of Ftp2.LargeFileUpload(String localPath, String remotePath, Int32 chunkSize)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LastErrorHtmlGet">
            <summary>Sets the shim of Ftp2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LastErrorTextGet">
            <summary>Sets the shim of Ftp2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LastErrorXmlGet">
            <summary>Sets the shim of Ftp2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LastMethodSuccessGet">
            <summary>Sets the shim of Ftp2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ftp2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LastReplyGet">
            <summary>Sets the shim of Ftp2.get_LastReply()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ListPatternGet">
            <summary>Sets the shim of Ftp2.get_ListPattern()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ListPatternSetString">
            <summary>Sets the shim of Ftp2.set_ListPattern(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LoginAfterConnectOnly">
            <summary>Sets the shim of Ftp2.LoginAfterConnectOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LoginAfterConnectOnlyAsync">
            <summary>Sets the shim of Ftp2.LoginAfterConnectOnlyAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.LoginVerifiedGet">
            <summary>Sets the shim of Ftp2.get_LoginVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.MGetFilesAsyncStringString">
            <summary>Sets the shim of Ftp2.MGetFilesAsync(String remotePattern, String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.MGetFilesStringString">
            <summary>Sets the shim of Ftp2.MGetFiles(String remotePattern, String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.MPutFilesAsyncString">
            <summary>Sets the shim of Ftp2.MPutFilesAsync(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.MPutFilesString">
            <summary>Sets the shim of Ftp2.MPutFiles(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.NlstXmlAsyncString">
            <summary>Sets the shim of Ftp2.NlstXmlAsync(String remoteDirPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.NlstXmlString">
            <summary>Sets the shim of Ftp2.NlstXml(String remoteDirPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Noop">
            <summary>Sets the shim of Ftp2.Noop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.NoopAsync">
            <summary>Sets the shim of Ftp2.NoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.NumFilesAndDirsGet">
            <summary>Sets the shim of Ftp2.get_NumFilesAndDirs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnAbortCheckAddFtp2AbortCheckEventHandler">
            <summary>Sets the shim of Ftp2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnAbortCheckRemoveFtp2AbortCheckEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnBeginDownloadFileAddFtp2BeginDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnBeginDownloadFile(BeginDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnBeginDownloadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnBeginDownloadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnBeginDownloadFileRemoveFtp2BeginDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnBeginDownloadFile(BeginDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnBeginUploadFileAddFtp2BeginUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnBeginUploadFile(BeginUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnBeginUploadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnBeginUploadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnBeginUploadFileRemoveFtp2BeginUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnBeginUploadFile(BeginUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnDownloadRateAddFtp2DownloadRateEventHandler">
            <summary>Sets the shim of Ftp2.add_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnDownloadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnDownloadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnDownloadRateRemoveFtp2DownloadRateEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnEndDownloadFileAddFtp2EndDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnEndDownloadFile(EndDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnEndDownloadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnEndDownloadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnEndDownloadFileRemoveFtp2EndDownloadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnEndDownloadFile(EndDownloadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnEndUploadFileAddFtp2EndUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnEndUploadFile(EndUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnEndUploadFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnEndUploadFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnEndUploadFileRemoveFtp2EndUploadFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnEndUploadFile(EndUploadFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnPercentDoneAddFtp2PercentDoneEventHandler">
            <summary>Sets the shim of Ftp2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnPercentDoneRemoveFtp2PercentDoneEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnProgressInfoAddFtp2ProgressInfoEventHandler">
            <summary>Sets the shim of Ftp2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnProgressInfoRemoveFtp2ProgressInfoEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnTaskCompletedAddFtp2TaskCompletedEventHandler">
            <summary>Sets the shim of Ftp2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnTaskCompletedRemoveFtp2TaskCompletedEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnUploadRateAddFtp2UploadRateEventHandler">
            <summary>Sets the shim of Ftp2.add_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnUploadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnUploadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnUploadRateRemoveFtp2UploadRateEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDeleteDirAddFtp2VerifyDeleteDirEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyDeleteDir(VerifyDeleteDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDeleteDirRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyDeleteDir(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDeleteDirRemoveFtp2VerifyDeleteDirEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyDeleteDir(VerifyDeleteDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDeleteFileAddFtp2VerifyDeleteFileEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyDeleteFile(VerifyDeleteFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDeleteFileRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyDeleteFile(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDeleteFileRemoveFtp2VerifyDeleteFileEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyDeleteFile(VerifyDeleteFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDownloadDirAddFtp2VerifyDownloadDirEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyDownloadDir(VerifyDownloadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDownloadDirRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyDownloadDir(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyDownloadDirRemoveFtp2VerifyDownloadDirEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyDownloadDir(VerifyDownloadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyUploadDirAddFtp2VerifyUploadDirEventHandler">
            <summary>Sets the shim of Ftp2.add_OnVerifyUploadDir(VerifyUploadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyUploadDirRaiseObjectFtpTreeEventArgs">
            <summary>Sets the shim of Ftp2.raise_OnVerifyUploadDir(Object value0, FtpTreeEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.OnVerifyUploadDirRemoveFtp2VerifyUploadDirEventHandler">
            <summary>Sets the shim of Ftp2.remove_OnVerifyUploadDir(VerifyUploadDirEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PartialTransferGet">
            <summary>Sets the shim of Ftp2.get_PartialTransfer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PassiveGet">
            <summary>Sets the shim of Ftp2.get_Passive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PassiveSetBoolean">
            <summary>Sets the shim of Ftp2.set_Passive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PassiveUseHostAddrGet">
            <summary>Sets the shim of Ftp2.get_PassiveUseHostAddr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PassiveUseHostAddrSetBoolean">
            <summary>Sets the shim of Ftp2.set_PassiveUseHostAddr(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PasswordGet">
            <summary>Sets the shim of Ftp2.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PasswordSetString">
            <summary>Sets the shim of Ftp2.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PercentDoneScaleGet">
            <summary>Sets the shim of Ftp2.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Ftp2.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PortGet">
            <summary>Sets the shim of Ftp2.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PortSetInt32">
            <summary>Sets the shim of Ftp2.set_Port(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PreferIpv6Get">
            <summary>Sets the shim of Ftp2.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PreferIpv6SetBoolean">
            <summary>Sets the shim of Ftp2.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PreferNlstGet">
            <summary>Sets the shim of Ftp2.get_PreferNlst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PreferNlstSetBoolean">
            <summary>Sets the shim of Ftp2.set_PreferNlst(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProgressMonSize64Get">
            <summary>Sets the shim of Ftp2.get_ProgressMonSize64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProgressMonSize64SetInt64">
            <summary>Sets the shim of Ftp2.set_ProgressMonSize64(Int64 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProgressMonSizeGet">
            <summary>Sets the shim of Ftp2.get_ProgressMonSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProgressMonSizeSetInt32">
            <summary>Sets the shim of Ftp2.set_ProgressMonSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyHostnameGet">
            <summary>Sets the shim of Ftp2.get_ProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyHostnameSetString">
            <summary>Sets the shim of Ftp2.set_ProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyMethodGet">
            <summary>Sets the shim of Ftp2.get_ProxyMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyMethodSetInt32">
            <summary>Sets the shim of Ftp2.set_ProxyMethod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyPasswordGet">
            <summary>Sets the shim of Ftp2.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyPasswordSetString">
            <summary>Sets the shim of Ftp2.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyPortGet">
            <summary>Sets the shim of Ftp2.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyPortSetInt32">
            <summary>Sets the shim of Ftp2.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyUsernameGet">
            <summary>Sets the shim of Ftp2.get_ProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ProxyUsernameSetString">
            <summary>Sets the shim of Ftp2.set_ProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileAsyncStringString">
            <summary>Sets the shim of Ftp2.PutFileAsync(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileBdAsyncBinDataString">
            <summary>Sets the shim of Ftp2.PutFileBdAsync(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileBdBinDataString">
            <summary>Sets the shim of Ftp2.PutFileBd(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileFromBinaryDataAsyncStringByteArray">
            <summary>Sets the shim of Ftp2.PutFileFromBinaryDataAsync(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileFromBinaryDataStringByteArray">
            <summary>Sets the shim of Ftp2.PutFileFromBinaryData(String remoteFilename, Byte[] content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileFromTextDataAsyncStringStringString">
            <summary>Sets the shim of Ftp2.PutFileFromTextDataAsync(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileFromTextDataStringStringString">
            <summary>Sets the shim of Ftp2.PutFileFromTextData(String remoteFilename, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileSbAsyncStringBuilderStringBooleanString">
            <summary>Sets the shim of Ftp2.PutFileSbAsync(StringBuilder sb, String charset, Boolean includeBom, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileSbStringBuilderStringBooleanString">
            <summary>Sets the shim of Ftp2.PutFileSb(StringBuilder sb, String charset, Boolean includeBom, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutFileStringString">
            <summary>Sets the shim of Ftp2.PutFile(String localFilePath, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutPlanAsyncStringString">
            <summary>Sets the shim of Ftp2.PutPlanAsync(String plan, String alreadyDoneFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutPlanStringString">
            <summary>Sets the shim of Ftp2.PutPlan(String plan, String alreadyDoneFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutTreeAsyncString">
            <summary>Sets the shim of Ftp2.PutTreeAsync(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.PutTreeString">
            <summary>Sets the shim of Ftp2.PutTree(String localDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.QuoteAsyncString">
            <summary>Sets the shim of Ftp2.QuoteAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.QuoteString">
            <summary>Sets the shim of Ftp2.Quote(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ReadTimeoutGet">
            <summary>Sets the shim of Ftp2.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ReadTimeoutSetInt32">
            <summary>Sets the shim of Ftp2.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RemoveRemoteDirAsyncString">
            <summary>Sets the shim of Ftp2.RemoveRemoteDirAsync(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RemoveRemoteDirString">
            <summary>Sets the shim of Ftp2.RemoveRemoteDir(String remoteDirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RenameRemoteFileAsyncStringString">
            <summary>Sets the shim of Ftp2.RenameRemoteFileAsync(String existingRemoteFilePath, String newRemoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RenameRemoteFileStringString">
            <summary>Sets the shim of Ftp2.RenameRemoteFile(String existingRemoteFilePath, String newRemoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RequireSslCertVerifyGet">
            <summary>Sets the shim of Ftp2.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Ftp2.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RestartNextGet">
            <summary>Sets the shim of Ftp2.get_RestartNext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.RestartNextSetBoolean">
            <summary>Sets the shim of Ftp2.set_RestartNext(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SaveLastErrorString">
            <summary>Sets the shim of Ftp2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SendBufferSizeGet">
            <summary>Sets the shim of Ftp2.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SendBufferSizeSetInt32">
            <summary>Sets the shim of Ftp2.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SendCommandAsyncString">
            <summary>Sets the shim of Ftp2.SendCommandAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SendCommandString">
            <summary>Sets the shim of Ftp2.SendCommand(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SessionLogGet">
            <summary>Sets the shim of Ftp2.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetModeZ">
            <summary>Sets the shim of Ftp2.SetModeZ()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetModeZAsync">
            <summary>Sets the shim of Ftp2.SetModeZAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetOldestDateDateTime">
            <summary>Sets the shim of Ftp2.SetOldestDate(DateTime oldestDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetOldestDateStrString">
            <summary>Sets the shim of Ftp2.SetOldestDateStr(String oldestDateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetOptionString">
            <summary>Sets the shim of Ftp2.SetOption(String option)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetRemoteFileDateTimeDateTimeString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDateTime(DateTime dt, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetRemoteFileDateTimeStrAsyncStringString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDateTimeStrAsync(String dateTimeStr, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetRemoteFileDateTimeStrStringString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDateTimeStr(String dateTimeStr, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetRemoteFileDtAsyncCkDateTimeString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDtAsync(CkDateTime dt, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetRemoteFileDtCkDateTimeString">
            <summary>Sets the shim of Ftp2.SetRemoteFileDt(CkDateTime dt, String remoteFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetSslCertRequirementStringString">
            <summary>Sets the shim of Ftp2.SetSslCertRequirement(String reqName, String reqValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetSslClientCertCert">
            <summary>Sets the shim of Ftp2.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetSslClientCertPemStringString">
            <summary>Sets the shim of Ftp2.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Ftp2.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetTypeAscii">
            <summary>Sets the shim of Ftp2.SetTypeAscii()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetTypeAsciiAsync">
            <summary>Sets the shim of Ftp2.SetTypeAsciiAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetTypeBinary">
            <summary>Sets the shim of Ftp2.SetTypeBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SetTypeBinaryAsync">
            <summary>Sets the shim of Ftp2.SetTypeBinaryAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SiteAsyncString">
            <summary>Sets the shim of Ftp2.SiteAsync(String siteCommand)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SiteString">
            <summary>Sets the shim of Ftp2.Site(String siteCommand)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SkipFinalReplyGet">
            <summary>Sets the shim of Ftp2.get_SkipFinalReply()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SkipFinalReplySetBoolean">
            <summary>Sets the shim of Ftp2.set_SkipFinalReply(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SleepMsInt32">
            <summary>Sets the shim of Ftp2.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SoRcvBufGet">
            <summary>Sets the shim of Ftp2.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SoRcvBufSetInt32">
            <summary>Sets the shim of Ftp2.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SoSndBufGet">
            <summary>Sets the shim of Ftp2.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SoSndBufSetInt32">
            <summary>Sets the shim of Ftp2.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksHostnameGet">
            <summary>Sets the shim of Ftp2.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksHostnameSetString">
            <summary>Sets the shim of Ftp2.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksPasswordGet">
            <summary>Sets the shim of Ftp2.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksPasswordSetString">
            <summary>Sets the shim of Ftp2.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksPortGet">
            <summary>Sets the shim of Ftp2.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksPortSetInt32">
            <summary>Sets the shim of Ftp2.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksUsernameGet">
            <summary>Sets the shim of Ftp2.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksUsernameSetString">
            <summary>Sets the shim of Ftp2.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksVersionGet">
            <summary>Sets the shim of Ftp2.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SocksVersionSetInt32">
            <summary>Sets the shim of Ftp2.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslAllowedCiphersGet">
            <summary>Sets the shim of Ftp2.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslAllowedCiphersSetString">
            <summary>Sets the shim of Ftp2.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslGet">
            <summary>Sets the shim of Ftp2.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslProtocolGet">
            <summary>Sets the shim of Ftp2.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslProtocolSetString">
            <summary>Sets the shim of Ftp2.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslServerCertVerifiedGet">
            <summary>Sets the shim of Ftp2.get_SslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SslSetBoolean">
            <summary>Sets the shim of Ftp2.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Stat">
            <summary>Sets the shim of Ftp2.Stat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.StatAsync">
            <summary>Sets the shim of Ftp2.StatAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncDeleteRemoteAsyncString">
            <summary>Sets the shim of Ftp2.SyncDeleteRemoteAsync(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncDeleteRemoteString">
            <summary>Sets the shim of Ftp2.SyncDeleteRemote(String localRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncLocalDirAsyncStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalDirAsync(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncLocalDirStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalDir(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncLocalTreeAsyncStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalTreeAsync(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncLocalTreeStringInt32">
            <summary>Sets the shim of Ftp2.SyncLocalTree(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncMustMatchGet">
            <summary>Sets the shim of Ftp2.get_SyncMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncMustMatchSetString">
            <summary>Sets the shim of Ftp2.set_SyncMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncMustNotMatchGet">
            <summary>Sets the shim of Ftp2.get_SyncMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncMustNotMatchSetString">
            <summary>Sets the shim of Ftp2.set_SyncMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncPreviewGet">
            <summary>Sets the shim of Ftp2.get_SyncPreview()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncRemoteTree2AsyncStringInt32BooleanBoolean">
            <summary>Sets the shim of Ftp2.SyncRemoteTree2Async(String localDirPath, Int32 mode, Boolean bDescend, Boolean bPreviewOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncRemoteTree2StringInt32BooleanBoolean">
            <summary>Sets the shim of Ftp2.SyncRemoteTree2(String localDirPath, Int32 mode, Boolean bDescend, Boolean bPreviewOnly)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncRemoteTreeAsyncStringInt32">
            <summary>Sets the shim of Ftp2.SyncRemoteTreeAsync(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncRemoteTreeStringInt32">
            <summary>Sets the shim of Ftp2.SyncRemoteTree(String localRoot, Int32 mode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncedFilesGet">
            <summary>Sets the shim of Ftp2.get_SyncedFiles()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SyncedFilesSetString">
            <summary>Sets the shim of Ftp2.set_SyncedFiles(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.Syst">
            <summary>Sets the shim of Ftp2.Syst()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.SystAsync">
            <summary>Sets the shim of Ftp2.SystAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.TlsCipherSuiteGet">
            <summary>Sets the shim of Ftp2.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.TlsPinSetGet">
            <summary>Sets the shim of Ftp2.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.TlsPinSetSetString">
            <summary>Sets the shim of Ftp2.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.TlsVersionGet">
            <summary>Sets the shim of Ftp2.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.ToString">
            <summary>Sets the shim of Ftp2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.UnlockComponentString">
            <summary>Sets the shim of Ftp2.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.UploadTransferRateGet">
            <summary>Sets the shim of Ftp2.get_UploadTransferRate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.UseEpsvGet">
            <summary>Sets the shim of Ftp2.get_UseEpsv()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.UseEpsvSetBoolean">
            <summary>Sets the shim of Ftp2.set_UseEpsv(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.UsernameGet">
            <summary>Sets the shim of Ftp2.get_Username()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.UsernameSetString">
            <summary>Sets the shim of Ftp2.set_Username(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.VerboseLoggingGet">
            <summary>Sets the shim of Ftp2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ftp2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2.VersionGet">
            <summary>Sets the shim of Ftp2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2._Ftp2">
            <summary>Sets the shim of Ftp2.!Ftp2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtp2._Ftp201">
            <summary>Sets the shim of Ftp2.~Ftp2()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFtpTreeEventArgs">
            <summary>Shim type of Chilkat.FtpTreeEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtpTreeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtpTreeEventArgs.#ctor(Chilkat.FtpTreeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of FtpTreeEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of FtpTreeEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances.NumBytesGet">
            <summary>Sets the shim of FtpTreeEventArgs.get_NumBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances.PathGet">
            <summary>Sets the shim of FtpTreeEventArgs.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances.SkipGet">
            <summary>Sets the shim of FtpTreeEventArgs.get_Skip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances.SkipSetBoolean">
            <summary>Sets the shim of FtpTreeEventArgs.set_Skip(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.AllInstances._FtpTreeEventArgs">
            <summary>Sets the shim of FtpTreeEventArgs.~FtpTreeEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtpTreeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtpTreeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimFtpTreeEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.Dispose">
            <summary>Sets the shim of FtpTreeEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.DisposeBoolean">
            <summary>Sets the shim of FtpTreeEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.NumBytesGet">
            <summary>Sets the shim of FtpTreeEventArgs.get_NumBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.PathGet">
            <summary>Sets the shim of FtpTreeEventArgs.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.SkipGet">
            <summary>Sets the shim of FtpTreeEventArgs.get_Skip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs.SkipSetBoolean">
            <summary>Sets the shim of FtpTreeEventArgs.set_Skip(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimFtpTreeEventArgs._FtpTreeEventArgs">
            <summary>Sets the shim of FtpTreeEventArgs.~FtpTreeEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimGlobal">
            <summary>Shim type of Chilkat.Global</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGlobal.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGlobal.#ctor(Chilkat.Global)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimGlobal.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.AnsiCodePageGet">
            <summary>Sets the shim of Global.get_AnsiCodePage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.AnsiCodePageSetInt32">
            <summary>Sets the shim of Global.set_AnsiCodePage(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Global.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Global.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DefaultNtlmVersionGet">
            <summary>Sets the shim of Global.get_DefaultNtlmVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DefaultNtlmVersionSetInt32">
            <summary>Sets the shim of Global.set_DefaultNtlmVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DefaultUtf8Get">
            <summary>Sets the shim of Global.get_DefaultUtf8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DefaultUtf8SetBoolean">
            <summary>Sets the shim of Global.set_DefaultUtf8(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.Dispose">
            <summary>Sets the shim of Global.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Global.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DnsClearCache">
            <summary>Sets the shim of Global.DnsClearCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DnsTimeToLiveGet">
            <summary>Sets the shim of Global.get_DnsTimeToLive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.DnsTimeToLiveSetInt32">
            <summary>Sets the shim of Global.set_DnsTimeToLive(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.EnableDnsCachingGet">
            <summary>Sets the shim of Global.get_EnableDnsCaching()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.EnableDnsCachingSetBoolean">
            <summary>Sets the shim of Global.set_EnableDnsCaching(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.FinalizeThreadPool">
            <summary>Sets the shim of Global.FinalizeThreadPool()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Global.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Global.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Global.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Global.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Global.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.MaxThreadsGet">
            <summary>Sets the shim of Global.get_MaxThreads()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.MaxThreadsSetInt32">
            <summary>Sets the shim of Global.set_MaxThreads(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Global.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Global.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Global.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.ThreadPoolLogPathGet">
            <summary>Sets the shim of Global.get_ThreadPoolLogPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.ThreadPoolLogPathSetString">
            <summary>Sets the shim of Global.set_ThreadPoolLogPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.ToString01">
            <summary>Sets the shim of Global.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.UnlockBundleString">
            <summary>Sets the shim of Global.UnlockBundle(String bundleUnlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.UnlockStatusGet">
            <summary>Sets the shim of Global.get_UnlockStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.UsePkcsConstructedEncodingGet">
            <summary>Sets the shim of Global.get_UsePkcsConstructedEncoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.UsePkcsConstructedEncodingSetBoolean">
            <summary>Sets the shim of Global.set_UsePkcsConstructedEncoding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Global.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Global.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances.VersionGet">
            <summary>Sets the shim of Global.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances._Global">
            <summary>Sets the shim of Global.!Global()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AllInstances._Global01">
            <summary>Sets the shim of Global.~Global()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AnsiCodePageGet">
            <summary>Sets the shim of Global.get_AnsiCodePage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.AnsiCodePageSetInt32">
            <summary>Sets the shim of Global.set_AnsiCodePage(Int32 propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGlobal.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGlobal.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGlobal.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.Constructor">
            <summary>Sets the shim of Global.Global()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DebugLogFilePathGet">
            <summary>Sets the shim of Global.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DebugLogFilePathSetString">
            <summary>Sets the shim of Global.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DefaultNtlmVersionGet">
            <summary>Sets the shim of Global.get_DefaultNtlmVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DefaultNtlmVersionSetInt32">
            <summary>Sets the shim of Global.set_DefaultNtlmVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DefaultUtf8Get">
            <summary>Sets the shim of Global.get_DefaultUtf8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DefaultUtf8SetBoolean">
            <summary>Sets the shim of Global.set_DefaultUtf8(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.Dispose">
            <summary>Sets the shim of Global.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DisposeBoolean">
            <summary>Sets the shim of Global.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DnsClearCache">
            <summary>Sets the shim of Global.DnsClearCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DnsTimeToLiveGet">
            <summary>Sets the shim of Global.get_DnsTimeToLive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.DnsTimeToLiveSetInt32">
            <summary>Sets the shim of Global.set_DnsTimeToLive(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.EnableDnsCachingGet">
            <summary>Sets the shim of Global.get_EnableDnsCaching()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.EnableDnsCachingSetBoolean">
            <summary>Sets the shim of Global.set_EnableDnsCaching(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.FinalizeThreadPool">
            <summary>Sets the shim of Global.FinalizeThreadPool()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.LastErrorHtmlGet">
            <summary>Sets the shim of Global.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.LastErrorTextGet">
            <summary>Sets the shim of Global.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.LastErrorXmlGet">
            <summary>Sets the shim of Global.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.LastMethodSuccessGet">
            <summary>Sets the shim of Global.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Global.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.MaxThreadsGet">
            <summary>Sets the shim of Global.get_MaxThreads()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.MaxThreadsSetInt32">
            <summary>Sets the shim of Global.set_MaxThreads(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.PreferIpv6Get">
            <summary>Sets the shim of Global.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.PreferIpv6SetBoolean">
            <summary>Sets the shim of Global.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.SaveLastErrorString">
            <summary>Sets the shim of Global.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.ThreadPoolLogPathGet">
            <summary>Sets the shim of Global.get_ThreadPoolLogPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.ThreadPoolLogPathSetString">
            <summary>Sets the shim of Global.set_ThreadPoolLogPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.ToString">
            <summary>Sets the shim of Global.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.UnlockBundleString">
            <summary>Sets the shim of Global.UnlockBundle(String bundleUnlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.UnlockStatusGet">
            <summary>Sets the shim of Global.get_UnlockStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.UsePkcsConstructedEncodingGet">
            <summary>Sets the shim of Global.get_UsePkcsConstructedEncoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.UsePkcsConstructedEncodingSetBoolean">
            <summary>Sets the shim of Global.set_UsePkcsConstructedEncoding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.VerboseLoggingGet">
            <summary>Sets the shim of Global.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Global.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal.VersionGet">
            <summary>Sets the shim of Global.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal._Global">
            <summary>Sets the shim of Global.!Global()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGlobal._Global01">
            <summary>Sets the shim of Global.~Global()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimGzip">
            <summary>Shim type of Chilkat.Gzip</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGzip.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGzip.#ctor(Chilkat.Gzip)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AbortCurrentGet">
            <summary>Sets the shim of Gzip.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AbortCurrentSetBoolean">
            <summary>Sets the shim of Gzip.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimGzip.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Gzip.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Gzip.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CommentGet">
            <summary>Sets the shim of Gzip.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CommentSetString">
            <summary>Sets the shim of Gzip.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressBdAsyncBinData">
            <summary>Sets the shim of Gzip.CompressBdAsync(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressBdBinData">
            <summary>Sets the shim of Gzip.CompressBd(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressFile2AsyncStringStringString">
            <summary>Sets the shim of Gzip.CompressFile2Async(String inFilename, String embeddedFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressFile2StringStringString">
            <summary>Sets the shim of Gzip.CompressFile2(String inFilename, String embeddedFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressFileAsyncStringString">
            <summary>Sets the shim of Gzip.CompressFileAsync(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressFileStringString">
            <summary>Sets the shim of Gzip.CompressFile(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressFileToMemAsyncString">
            <summary>Sets the shim of Gzip.CompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressFileToMemString">
            <summary>Sets the shim of Gzip.CompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Gzip.CompressMemToFileAsync(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressMemToFileByteArrayString">
            <summary>Sets the shim of Gzip.CompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressMemoryAsyncByteArray">
            <summary>Sets the shim of Gzip.CompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressMemoryByteArray">
            <summary>Sets the shim of Gzip.CompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressStringAsyncStringString">
            <summary>Sets the shim of Gzip.CompressStringAsync(String inStr, String destCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressStringENCStringStringString">
            <summary>Sets the shim of Gzip.CompressStringENC(String inStr, String charset, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressStringStringString">
            <summary>Sets the shim of Gzip.CompressString(String inStr, String destCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressStringToFileAsyncStringStringString">
            <summary>Sets the shim of Gzip.CompressStringToFileAsync(String inStr, String destCharset, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressStringToFileStringStringString">
            <summary>Sets the shim of Gzip.CompressStringToFile(String inStr, String destCharset, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressionLevelGet">
            <summary>Sets the shim of Gzip.get_CompressionLevel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.CompressionLevelSetInt32">
            <summary>Sets the shim of Gzip.set_CompressionLevel(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Gzip.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Gzip.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.DecodeStringString">
            <summary>Sets the shim of Gzip.Decode(String encodedStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.DeflateStringENCStringStringString">
            <summary>Sets the shim of Gzip.DeflateStringENC(String inString, String charsetName, String outputEncoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.Dispose">
            <summary>Sets the shim of Gzip.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Gzip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Gzip.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Gzip.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.EncodeByteArrayString">
            <summary>Sets the shim of Gzip.Encode(Byte[] byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.ExamineFileString">
            <summary>Sets the shim of Gzip.ExamineFile(String inGzFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.ExamineMemoryByteArray">
            <summary>Sets the shim of Gzip.ExamineMemory(Byte[] inGzData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.ExtraDataGet">
            <summary>Sets the shim of Gzip.get_ExtraData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.ExtraDataSetByteArray">
            <summary>Sets the shim of Gzip.set_ExtraData(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FilenameGet">
            <summary>Sets the shim of Gzip.get_Filename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FilenameSetString">
            <summary>Sets the shim of Gzip.set_Filename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Gzip.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Gzip.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Gzip.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Gzip.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Gzip.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Gzip.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.GetDt">
            <summary>Sets the shim of Gzip.GetDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Gzip.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Gzip.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.InflateStringENCStringStringString">
            <summary>Sets the shim of Gzip.InflateStringENC(String inString, String convertFromCharset, String inputEncoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.IsUnlocked">
            <summary>Sets the shim of Gzip.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Gzip.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Gzip.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Gzip.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Gzip.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Gzip.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastModGet">
            <summary>Sets the shim of Gzip.get_LastMod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastModSetDateTime">
            <summary>Sets the shim of Gzip.set_LastMod(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastModStrGet">
            <summary>Sets the shim of Gzip.get_LastModStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.LastModStrSetString">
            <summary>Sets the shim of Gzip.set_LastModStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnAbortCheckAddGzipAbortCheckEventHandler">
            <summary>Sets the shim of Gzip.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Gzip.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnAbortCheckRemoveGzipAbortCheckEventHandler">
            <summary>Sets the shim of Gzip.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnBinaryDataAddGzipBinaryDataEventHandler">
            <summary>Sets the shim of Gzip.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Gzip.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnBinaryDataRemoveGzipBinaryDataEventHandler">
            <summary>Sets the shim of Gzip.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnPercentDoneAddGzipPercentDoneEventHandler">
            <summary>Sets the shim of Gzip.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Gzip.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnPercentDoneRemoveGzipPercentDoneEventHandler">
            <summary>Sets the shim of Gzip.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnProgressInfoAddGzipProgressInfoEventHandler">
            <summary>Sets the shim of Gzip.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Gzip.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnProgressInfoRemoveGzipProgressInfoEventHandler">
            <summary>Sets the shim of Gzip.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnTaskCompletedAddGzipTaskCompletedEventHandler">
            <summary>Sets the shim of Gzip.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Gzip.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnTaskCompletedRemoveGzipTaskCompletedEventHandler">
            <summary>Sets the shim of Gzip.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnTextDataAddGzipTextDataEventHandler">
            <summary>Sets the shim of Gzip.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Gzip.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.OnTextDataRemoveGzipTextDataEventHandler">
            <summary>Sets the shim of Gzip.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.ReadFileString">
            <summary>Sets the shim of Gzip.ReadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Gzip.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.SetDtCkDateTime">
            <summary>Sets the shim of Gzip.SetDt(CkDateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.ToString01">
            <summary>Sets the shim of Gzip.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UnTarGzAsyncStringStringBoolean">
            <summary>Sets the shim of Gzip.UnTarGzAsync(String tgzFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UnTarGzStringStringBoolean">
            <summary>Sets the shim of Gzip.UnTarGz(String tgzFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressBdAsyncBinData">
            <summary>Sets the shim of Gzip.UncompressBdAsync(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressBdBinData">
            <summary>Sets the shim of Gzip.UncompressBd(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressFileAsyncStringString">
            <summary>Sets the shim of Gzip.UncompressFileAsync(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressFileStringString">
            <summary>Sets the shim of Gzip.UncompressFile(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressFileToMemAsyncString">
            <summary>Sets the shim of Gzip.UncompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressFileToMemString">
            <summary>Sets the shim of Gzip.UncompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressFileToStringAsyncStringString">
            <summary>Sets the shim of Gzip.UncompressFileToStringAsync(String gzFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressFileToStringStringString">
            <summary>Sets the shim of Gzip.UncompressFileToString(String gzFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Gzip.UncompressMemToFileAsync(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressMemToFileByteArrayString">
            <summary>Sets the shim of Gzip.UncompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressMemoryAsyncByteArray">
            <summary>Sets the shim of Gzip.UncompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressMemoryByteArray">
            <summary>Sets the shim of Gzip.UncompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressStringAsyncByteArrayString">
            <summary>Sets the shim of Gzip.UncompressStringAsync(Byte[] inData, String inCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressStringByteArrayString">
            <summary>Sets the shim of Gzip.UncompressString(Byte[] inData, String inCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UncompressStringENCStringStringString">
            <summary>Sets the shim of Gzip.UncompressStringENC(String inStr, String charset, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Gzip.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UseCurrentDateGet">
            <summary>Sets the shim of Gzip.get_UseCurrentDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.UseCurrentDateSetBoolean">
            <summary>Sets the shim of Gzip.set_UseCurrentDate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Gzip.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Gzip.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.VersionGet">
            <summary>Sets the shim of Gzip.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.WriteFileStringByteArray">
            <summary>Sets the shim of Gzip.WriteFile(String path, Byte[] binaryData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances.XfdlToXmlString">
            <summary>Sets the shim of Gzip.XfdlToXml(String xfldData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances._Gzip">
            <summary>Sets the shim of Gzip.!Gzip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.AllInstances._Gzip01">
            <summary>Sets the shim of Gzip.~Gzip()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGzip.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGzip.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimGzip.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CommentGet">
            <summary>Sets the shim of Gzip.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CommentSetString">
            <summary>Sets the shim of Gzip.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressBdAsyncBinData">
            <summary>Sets the shim of Gzip.CompressBdAsync(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressBdBinData">
            <summary>Sets the shim of Gzip.CompressBd(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressFile2AsyncStringStringString">
            <summary>Sets the shim of Gzip.CompressFile2Async(String inFilename, String embeddedFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressFile2StringStringString">
            <summary>Sets the shim of Gzip.CompressFile2(String inFilename, String embeddedFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressFileAsyncStringString">
            <summary>Sets the shim of Gzip.CompressFileAsync(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressFileStringString">
            <summary>Sets the shim of Gzip.CompressFile(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressFileToMemAsyncString">
            <summary>Sets the shim of Gzip.CompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressFileToMemString">
            <summary>Sets the shim of Gzip.CompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Gzip.CompressMemToFileAsync(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressMemToFileByteArrayString">
            <summary>Sets the shim of Gzip.CompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressMemoryAsyncByteArray">
            <summary>Sets the shim of Gzip.CompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressMemoryByteArray">
            <summary>Sets the shim of Gzip.CompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressStringAsyncStringString">
            <summary>Sets the shim of Gzip.CompressStringAsync(String inStr, String destCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressStringENCStringStringString">
            <summary>Sets the shim of Gzip.CompressStringENC(String inStr, String charset, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressStringStringString">
            <summary>Sets the shim of Gzip.CompressString(String inStr, String destCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressStringToFileAsyncStringStringString">
            <summary>Sets the shim of Gzip.CompressStringToFileAsync(String inStr, String destCharset, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressStringToFileStringStringString">
            <summary>Sets the shim of Gzip.CompressStringToFile(String inStr, String destCharset, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressionLevelGet">
            <summary>Sets the shim of Gzip.get_CompressionLevel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.CompressionLevelSetInt32">
            <summary>Sets the shim of Gzip.set_CompressionLevel(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.Constructor">
            <summary>Sets the shim of Gzip.Gzip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.DebugLogFilePathGet">
            <summary>Sets the shim of Gzip.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.DebugLogFilePathSetString">
            <summary>Sets the shim of Gzip.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.DecodeStringString">
            <summary>Sets the shim of Gzip.Decode(String encodedStr, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.DeflateStringENCStringStringString">
            <summary>Sets the shim of Gzip.DeflateStringENC(String inString, String charsetName, String outputEncoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.Dispose">
            <summary>Sets the shim of Gzip.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.DisposeBoolean">
            <summary>Sets the shim of Gzip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.EnableEventsGet">
            <summary>Sets the shim of Gzip.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.EnableEventsSetBoolean">
            <summary>Sets the shim of Gzip.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.EncodeByteArrayString">
            <summary>Sets the shim of Gzip.Encode(Byte[] byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.ExamineFileString">
            <summary>Sets the shim of Gzip.ExamineFile(String inGzFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.ExamineMemoryByteArray">
            <summary>Sets the shim of Gzip.ExamineMemory(Byte[] inGzData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.ExtraDataGet">
            <summary>Sets the shim of Gzip.get_ExtraData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.ExtraDataSetByteArray">
            <summary>Sets the shim of Gzip.set_ExtraData(Byte[] propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FilenameGet">
            <summary>Sets the shim of Gzip.get_Filename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FilenameSetString">
            <summary>Sets the shim of Gzip.set_Filename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Gzip.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Gzip.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Gzip.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Gzip.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Gzip.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Gzip.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.GetDt">
            <summary>Sets the shim of Gzip.GetDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.HeartbeatMsGet">
            <summary>Sets the shim of Gzip.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.HeartbeatMsSetInt32">
            <summary>Sets the shim of Gzip.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.InflateStringENCStringStringString">
            <summary>Sets the shim of Gzip.InflateStringENC(String inString, String convertFromCharset, String inputEncoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.IsUnlocked">
            <summary>Sets the shim of Gzip.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastErrorHtmlGet">
            <summary>Sets the shim of Gzip.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastErrorTextGet">
            <summary>Sets the shim of Gzip.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastErrorXmlGet">
            <summary>Sets the shim of Gzip.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastMethodSuccessGet">
            <summary>Sets the shim of Gzip.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Gzip.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastModGet">
            <summary>Sets the shim of Gzip.get_LastMod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastModSetDateTime">
            <summary>Sets the shim of Gzip.set_LastMod(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastModStrGet">
            <summary>Sets the shim of Gzip.get_LastModStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.LastModStrSetString">
            <summary>Sets the shim of Gzip.set_LastModStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnAbortCheckAddGzipAbortCheckEventHandler">
            <summary>Sets the shim of Gzip.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Gzip.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnAbortCheckRemoveGzipAbortCheckEventHandler">
            <summary>Sets the shim of Gzip.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnBinaryDataAddGzipBinaryDataEventHandler">
            <summary>Sets the shim of Gzip.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Gzip.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnBinaryDataRemoveGzipBinaryDataEventHandler">
            <summary>Sets the shim of Gzip.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnPercentDoneAddGzipPercentDoneEventHandler">
            <summary>Sets the shim of Gzip.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Gzip.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnPercentDoneRemoveGzipPercentDoneEventHandler">
            <summary>Sets the shim of Gzip.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnProgressInfoAddGzipProgressInfoEventHandler">
            <summary>Sets the shim of Gzip.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Gzip.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnProgressInfoRemoveGzipProgressInfoEventHandler">
            <summary>Sets the shim of Gzip.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnTaskCompletedAddGzipTaskCompletedEventHandler">
            <summary>Sets the shim of Gzip.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Gzip.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnTaskCompletedRemoveGzipTaskCompletedEventHandler">
            <summary>Sets the shim of Gzip.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnTextDataAddGzipTextDataEventHandler">
            <summary>Sets the shim of Gzip.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Gzip.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.OnTextDataRemoveGzipTextDataEventHandler">
            <summary>Sets the shim of Gzip.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.ReadFileString">
            <summary>Sets the shim of Gzip.ReadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.SaveLastErrorString">
            <summary>Sets the shim of Gzip.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.SetDtCkDateTime">
            <summary>Sets the shim of Gzip.SetDt(CkDateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.ToString">
            <summary>Sets the shim of Gzip.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UnTarGzAsyncStringStringBoolean">
            <summary>Sets the shim of Gzip.UnTarGzAsync(String tgzFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UnTarGzStringStringBoolean">
            <summary>Sets the shim of Gzip.UnTarGz(String tgzFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressBdAsyncBinData">
            <summary>Sets the shim of Gzip.UncompressBdAsync(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressBdBinData">
            <summary>Sets the shim of Gzip.UncompressBd(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressFileAsyncStringString">
            <summary>Sets the shim of Gzip.UncompressFileAsync(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressFileStringString">
            <summary>Sets the shim of Gzip.UncompressFile(String srcPath, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressFileToMemAsyncString">
            <summary>Sets the shim of Gzip.UncompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressFileToMemString">
            <summary>Sets the shim of Gzip.UncompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressFileToStringAsyncStringString">
            <summary>Sets the shim of Gzip.UncompressFileToStringAsync(String gzFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressFileToStringStringString">
            <summary>Sets the shim of Gzip.UncompressFileToString(String gzFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressMemToFileAsyncByteArrayString">
            <summary>Sets the shim of Gzip.UncompressMemToFileAsync(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressMemToFileByteArrayString">
            <summary>Sets the shim of Gzip.UncompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressMemoryAsyncByteArray">
            <summary>Sets the shim of Gzip.UncompressMemoryAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressMemoryByteArray">
            <summary>Sets the shim of Gzip.UncompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressStringAsyncByteArrayString">
            <summary>Sets the shim of Gzip.UncompressStringAsync(Byte[] inData, String inCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressStringByteArrayString">
            <summary>Sets the shim of Gzip.UncompressString(Byte[] inData, String inCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UncompressStringENCStringStringString">
            <summary>Sets the shim of Gzip.UncompressStringENC(String inStr, String charset, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UnlockComponentString">
            <summary>Sets the shim of Gzip.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UseCurrentDateGet">
            <summary>Sets the shim of Gzip.get_UseCurrentDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.UseCurrentDateSetBoolean">
            <summary>Sets the shim of Gzip.set_UseCurrentDate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.VerboseLoggingGet">
            <summary>Sets the shim of Gzip.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Gzip.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.VersionGet">
            <summary>Sets the shim of Gzip.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.WriteFileStringByteArray">
            <summary>Sets the shim of Gzip.WriteFile(String path, Byte[] binaryData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip.XfdlToXmlString">
            <summary>Sets the shim of Gzip.XfdlToXml(String xfldData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip._Gzip">
            <summary>Sets the shim of Gzip.!Gzip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimGzip._Gzip01">
            <summary>Sets the shim of Gzip.~Gzip()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHashtable">
            <summary>Shim type of Chilkat.Hashtable</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHashtable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHashtable.#ctor(Chilkat.Hashtable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AddFromXmlSbStringBuilder">
            <summary>Sets the shim of Hashtable.AddFromXmlSb(StringBuilder sbXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AddIntStringInt32">
            <summary>Sets the shim of Hashtable.AddInt(String key, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AddQueryParamsString">
            <summary>Sets the shim of Hashtable.AddQueryParams(String queryParams)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AddStrStringString">
            <summary>Sets the shim of Hashtable.AddStr(String key, String value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHashtable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.AddFromXmlSbStringBuilder">
            <summary>Sets the shim of Hashtable.AddFromXmlSb(StringBuilder sbXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.AddIntStringInt32">
            <summary>Sets the shim of Hashtable.AddInt(String key, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.AddQueryParamsString">
            <summary>Sets the shim of Hashtable.AddQueryParams(String queryParams)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.AddStrStringString">
            <summary>Sets the shim of Hashtable.AddStr(String key, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.Clear">
            <summary>Sets the shim of Hashtable.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.ClearWithNewCapacityInt32">
            <summary>Sets the shim of Hashtable.ClearWithNewCapacity(Int32 capacity)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.ContainsIntKeyInt32">
            <summary>Sets the shim of Hashtable.ContainsIntKey(Int32 key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.ContainsString">
            <summary>Sets the shim of Hashtable.Contains(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.Dispose">
            <summary>Sets the shim of Hashtable.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Hashtable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.GetKeysStringTable">
            <summary>Sets the shim of Hashtable.GetKeys(StringTable strTable)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Hashtable.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Hashtable.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.LookupIntString">
            <summary>Sets the shim of Hashtable.LookupInt(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.LookupStrString">
            <summary>Sets the shim of Hashtable.LookupStr(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.RemoveString">
            <summary>Sets the shim of Hashtable.Remove(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.ToString01">
            <summary>Sets the shim of Hashtable.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances.ToXmlSbStringBuilder">
            <summary>Sets the shim of Hashtable.ToXmlSb(StringBuilder sbXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances._Hashtable">
            <summary>Sets the shim of Hashtable.!Hashtable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.AllInstances._Hashtable01">
            <summary>Sets the shim of Hashtable.~Hashtable()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHashtable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHashtable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHashtable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.Clear">
            <summary>Sets the shim of Hashtable.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.ClearWithNewCapacityInt32">
            <summary>Sets the shim of Hashtable.ClearWithNewCapacity(Int32 capacity)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.Constructor">
            <summary>Sets the shim of Hashtable.Hashtable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.ContainsIntKeyInt32">
            <summary>Sets the shim of Hashtable.ContainsIntKey(Int32 key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.ContainsString">
            <summary>Sets the shim of Hashtable.Contains(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.Dispose">
            <summary>Sets the shim of Hashtable.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.DisposeBoolean">
            <summary>Sets the shim of Hashtable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.GetKeysStringTable">
            <summary>Sets the shim of Hashtable.GetKeys(StringTable strTable)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.LastMethodSuccessGet">
            <summary>Sets the shim of Hashtable.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Hashtable.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.LookupIntString">
            <summary>Sets the shim of Hashtable.LookupInt(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.LookupStrString">
            <summary>Sets the shim of Hashtable.LookupStr(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.RemoveString">
            <summary>Sets the shim of Hashtable.Remove(String key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.ToString">
            <summary>Sets the shim of Hashtable.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable.ToXmlSbStringBuilder">
            <summary>Sets the shim of Hashtable.ToXmlSb(StringBuilder sbXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable._Hashtable">
            <summary>Sets the shim of Hashtable.!Hashtable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHashtable._Hashtable01">
            <summary>Sets the shim of Hashtable.~Hashtable()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHtmlToText">
            <summary>Shim type of Chilkat.HtmlToText</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToText.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToText.#ctor(Chilkat.HtmlToText)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHtmlToText.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of HtmlToText.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of HtmlToText.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.DecodeHtmlEntitiesGet">
            <summary>Sets the shim of HtmlToText.get_DecodeHtmlEntities()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.DecodeHtmlEntitiesSetBoolean">
            <summary>Sets the shim of HtmlToText.set_DecodeHtmlEntities(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.Dispose">
            <summary>Sets the shim of HtmlToText.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HtmlToText.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.IsUnlocked">
            <summary>Sets the shim of HtmlToText.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of HtmlToText.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of HtmlToText.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of HtmlToText.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of HtmlToText.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HtmlToText.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.ReadFileToStringStringString">
            <summary>Sets the shim of HtmlToText.ReadFileToString(String filename, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.RightMarginGet">
            <summary>Sets the shim of HtmlToText.get_RightMargin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.RightMarginSetInt32">
            <summary>Sets the shim of HtmlToText.set_RightMargin(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of HtmlToText.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.SuppressLinksGet">
            <summary>Sets the shim of HtmlToText.get_SuppressLinks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.SuppressLinksSetBoolean">
            <summary>Sets the shim of HtmlToText.set_SuppressLinks(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.ToString01">
            <summary>Sets the shim of HtmlToText.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.ToTextString">
            <summary>Sets the shim of HtmlToText.ToText(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.UnlockComponentString">
            <summary>Sets the shim of HtmlToText.UnlockComponent(String code)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of HtmlToText.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HtmlToText.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.VersionGet">
            <summary>Sets the shim of HtmlToText.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances.WriteStringToFileStringStringString">
            <summary>Sets the shim of HtmlToText.WriteStringToFile(String stringToWrite, String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances._HtmlToText">
            <summary>Sets the shim of HtmlToText.!HtmlToText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.AllInstances._HtmlToText01">
            <summary>Sets the shim of HtmlToText.~HtmlToText()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToText.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToText.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToText.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.Constructor">
            <summary>Sets the shim of HtmlToText.HtmlToText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.DebugLogFilePathGet">
            <summary>Sets the shim of HtmlToText.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.DebugLogFilePathSetString">
            <summary>Sets the shim of HtmlToText.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.DecodeHtmlEntitiesGet">
            <summary>Sets the shim of HtmlToText.get_DecodeHtmlEntities()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.DecodeHtmlEntitiesSetBoolean">
            <summary>Sets the shim of HtmlToText.set_DecodeHtmlEntities(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.Dispose">
            <summary>Sets the shim of HtmlToText.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.DisposeBoolean">
            <summary>Sets the shim of HtmlToText.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.IsUnlocked">
            <summary>Sets the shim of HtmlToText.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.LastErrorHtmlGet">
            <summary>Sets the shim of HtmlToText.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.LastErrorTextGet">
            <summary>Sets the shim of HtmlToText.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.LastErrorXmlGet">
            <summary>Sets the shim of HtmlToText.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.LastMethodSuccessGet">
            <summary>Sets the shim of HtmlToText.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HtmlToText.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.ReadFileToStringStringString">
            <summary>Sets the shim of HtmlToText.ReadFileToString(String filename, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.RightMarginGet">
            <summary>Sets the shim of HtmlToText.get_RightMargin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.RightMarginSetInt32">
            <summary>Sets the shim of HtmlToText.set_RightMargin(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.SaveLastErrorString">
            <summary>Sets the shim of HtmlToText.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.SuppressLinksGet">
            <summary>Sets the shim of HtmlToText.get_SuppressLinks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.SuppressLinksSetBoolean">
            <summary>Sets the shim of HtmlToText.set_SuppressLinks(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.ToString">
            <summary>Sets the shim of HtmlToText.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.ToTextString">
            <summary>Sets the shim of HtmlToText.ToText(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.UnlockComponentString">
            <summary>Sets the shim of HtmlToText.UnlockComponent(String code)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.VerboseLoggingGet">
            <summary>Sets the shim of HtmlToText.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HtmlToText.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.VersionGet">
            <summary>Sets the shim of HtmlToText.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText.WriteStringToFileStringStringString">
            <summary>Sets the shim of HtmlToText.WriteStringToFile(String stringToWrite, String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText._HtmlToText">
            <summary>Sets the shim of HtmlToText.!HtmlToText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToText._HtmlToText01">
            <summary>Sets the shim of HtmlToText.~HtmlToText()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHtmlToXml">
            <summary>Shim type of Chilkat.HtmlToXml</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToXml.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToXml.#ctor(Chilkat.HtmlToXml)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHtmlToXml.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.ConvertFileStringString">
            <summary>Sets the shim of HtmlToXml.ConvertFile(String inHtmlPath, String destXmlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of HtmlToXml.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of HtmlToXml.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.Dispose">
            <summary>Sets the shim of HtmlToXml.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HtmlToXml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DropCustomTagsGet">
            <summary>Sets the shim of HtmlToXml.get_DropCustomTags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DropCustomTagsSetBoolean">
            <summary>Sets the shim of HtmlToXml.set_DropCustomTags(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DropTagTypeString">
            <summary>Sets the shim of HtmlToXml.DropTagType(String tagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.DropTextFormattingTags">
            <summary>Sets the shim of HtmlToXml.DropTextFormattingTags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.HtmlGet">
            <summary>Sets the shim of HtmlToXml.get_Html()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.HtmlSetString">
            <summary>Sets the shim of HtmlToXml.set_Html(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.IsUnlocked">
            <summary>Sets the shim of HtmlToXml.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of HtmlToXml.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of HtmlToXml.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of HtmlToXml.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of HtmlToXml.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HtmlToXml.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.NbspGet">
            <summary>Sets the shim of HtmlToXml.get_Nbsp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.NbspSetInt32">
            <summary>Sets the shim of HtmlToXml.set_Nbsp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.ReadFileString">
            <summary>Sets the shim of HtmlToXml.ReadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.ReadFileToStringStringString">
            <summary>Sets the shim of HtmlToXml.ReadFileToString(String filename, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of HtmlToXml.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.SetHtmlBytesByteArray">
            <summary>Sets the shim of HtmlToXml.SetHtmlBytes(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.SetHtmlFromFileString">
            <summary>Sets the shim of HtmlToXml.SetHtmlFromFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.ToString01">
            <summary>Sets the shim of HtmlToXml.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.ToXml">
            <summary>Sets the shim of HtmlToXml.ToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.UndropTagTypeString">
            <summary>Sets the shim of HtmlToXml.UndropTagType(String tagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.UndropTextFormattingTags">
            <summary>Sets the shim of HtmlToXml.UndropTextFormattingTags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.UnlockComponentString">
            <summary>Sets the shim of HtmlToXml.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of HtmlToXml.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HtmlToXml.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.VersionGet">
            <summary>Sets the shim of HtmlToXml.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.WriteFileStringByteArray">
            <summary>Sets the shim of HtmlToXml.WriteFile(String path, Byte[] fileData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.WriteStringToFileStringStringString">
            <summary>Sets the shim of HtmlToXml.WriteStringToFile(String stringToWrite, String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.XmlCharsetGet">
            <summary>Sets the shim of HtmlToXml.get_XmlCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances.XmlCharsetSetString">
            <summary>Sets the shim of HtmlToXml.set_XmlCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances._HtmlToXml">
            <summary>Sets the shim of HtmlToXml.!HtmlToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.AllInstances._HtmlToXml01">
            <summary>Sets the shim of HtmlToXml.~HtmlToXml()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToXml.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToXml.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlToXml.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.Constructor">
            <summary>Sets the shim of HtmlToXml.HtmlToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.ConvertFileStringString">
            <summary>Sets the shim of HtmlToXml.ConvertFile(String inHtmlPath, String destXmlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DebugLogFilePathGet">
            <summary>Sets the shim of HtmlToXml.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DebugLogFilePathSetString">
            <summary>Sets the shim of HtmlToXml.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.Dispose">
            <summary>Sets the shim of HtmlToXml.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DisposeBoolean">
            <summary>Sets the shim of HtmlToXml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DropCustomTagsGet">
            <summary>Sets the shim of HtmlToXml.get_DropCustomTags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DropCustomTagsSetBoolean">
            <summary>Sets the shim of HtmlToXml.set_DropCustomTags(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DropTagTypeString">
            <summary>Sets the shim of HtmlToXml.DropTagType(String tagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.DropTextFormattingTags">
            <summary>Sets the shim of HtmlToXml.DropTextFormattingTags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.HtmlGet">
            <summary>Sets the shim of HtmlToXml.get_Html()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.HtmlSetString">
            <summary>Sets the shim of HtmlToXml.set_Html(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.IsUnlocked">
            <summary>Sets the shim of HtmlToXml.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.LastErrorHtmlGet">
            <summary>Sets the shim of HtmlToXml.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.LastErrorTextGet">
            <summary>Sets the shim of HtmlToXml.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.LastErrorXmlGet">
            <summary>Sets the shim of HtmlToXml.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.LastMethodSuccessGet">
            <summary>Sets the shim of HtmlToXml.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HtmlToXml.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.NbspGet">
            <summary>Sets the shim of HtmlToXml.get_Nbsp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.NbspSetInt32">
            <summary>Sets the shim of HtmlToXml.set_Nbsp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.ReadFileString">
            <summary>Sets the shim of HtmlToXml.ReadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.ReadFileToStringStringString">
            <summary>Sets the shim of HtmlToXml.ReadFileToString(String filename, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.SaveLastErrorString">
            <summary>Sets the shim of HtmlToXml.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.SetHtmlBytesByteArray">
            <summary>Sets the shim of HtmlToXml.SetHtmlBytes(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.SetHtmlFromFileString">
            <summary>Sets the shim of HtmlToXml.SetHtmlFromFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.ToString">
            <summary>Sets the shim of HtmlToXml.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.ToXml">
            <summary>Sets the shim of HtmlToXml.ToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.UndropTagTypeString">
            <summary>Sets the shim of HtmlToXml.UndropTagType(String tagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.UndropTextFormattingTags">
            <summary>Sets the shim of HtmlToXml.UndropTextFormattingTags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.UnlockComponentString">
            <summary>Sets the shim of HtmlToXml.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.VerboseLoggingGet">
            <summary>Sets the shim of HtmlToXml.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HtmlToXml.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.VersionGet">
            <summary>Sets the shim of HtmlToXml.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.WriteFileStringByteArray">
            <summary>Sets the shim of HtmlToXml.WriteFile(String path, Byte[] fileData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.WriteStringToFileStringStringString">
            <summary>Sets the shim of HtmlToXml.WriteStringToFile(String stringToWrite, String filename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.XmlCharsetGet">
            <summary>Sets the shim of HtmlToXml.get_XmlCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml.XmlCharsetSetString">
            <summary>Sets the shim of HtmlToXml.set_XmlCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml._HtmlToXml">
            <summary>Sets the shim of HtmlToXml.!HtmlToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlToXml._HtmlToXml01">
            <summary>Sets the shim of HtmlToXml.~HtmlToXml()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHtmlUtil">
            <summary>Shim type of Chilkat.HtmlUtil</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlUtil.#ctor(Chilkat.HtmlUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHtmlUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.Dispose">
            <summary>Sets the shim of HtmlUtil.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HtmlUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.EntityDecodeString">
            <summary>Sets the shim of HtmlUtil.EntityDecode(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.GetDescriptionString">
            <summary>Sets the shim of HtmlUtil.GetDescription(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.GetHyperlinkedUrlsString">
            <summary>Sets the shim of HtmlUtil.GetHyperlinkedUrls(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.GetKeywordsString">
            <summary>Sets the shim of HtmlUtil.GetKeywords(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.GetMetaRefreshUrlString">
            <summary>Sets the shim of HtmlUtil.GetMetaRefreshUrl(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.GetNonRelativeHrefUrlsString">
            <summary>Sets the shim of HtmlUtil.GetNonRelativeHrefUrls(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances.GetTitleString">
            <summary>Sets the shim of HtmlUtil.GetTitle(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances._HtmlUtil">
            <summary>Sets the shim of HtmlUtil.!HtmlUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.AllInstances._HtmlUtil01">
            <summary>Sets the shim of HtmlUtil.~HtmlUtil()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHtmlUtil.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.Constructor">
            <summary>Sets the shim of HtmlUtil.HtmlUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.Dispose">
            <summary>Sets the shim of HtmlUtil.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.DisposeBoolean">
            <summary>Sets the shim of HtmlUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.EntityDecodeString">
            <summary>Sets the shim of HtmlUtil.EntityDecode(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.GetDescriptionString">
            <summary>Sets the shim of HtmlUtil.GetDescription(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.GetHyperlinkedUrlsString">
            <summary>Sets the shim of HtmlUtil.GetHyperlinkedUrls(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.GetKeywordsString">
            <summary>Sets the shim of HtmlUtil.GetKeywords(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.GetMetaRefreshUrlString">
            <summary>Sets the shim of HtmlUtil.GetMetaRefreshUrl(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.GetNonRelativeHrefUrlsString">
            <summary>Sets the shim of HtmlUtil.GetNonRelativeHrefUrls(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil.GetTitleString">
            <summary>Sets the shim of HtmlUtil.GetTitle(String html)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil._HtmlUtil">
            <summary>Sets the shim of HtmlUtil.!HtmlUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHtmlUtil._HtmlUtil01">
            <summary>Sets the shim of HtmlUtil.~HtmlUtil()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttp">
            <summary>Shim type of Chilkat.Http</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttp.#ctor(Chilkat.Http)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AbortCurrentGet">
            <summary>Sets the shim of Http.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AbortCurrentSetBoolean">
            <summary>Sets the shim of Http.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AcceptCharsetGet">
            <summary>Sets the shim of Http.get_AcceptCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AcceptCharsetSetString">
            <summary>Sets the shim of Http.set_AcceptCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AcceptGet">
            <summary>Sets the shim of Http.get_Accept()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AcceptLanguageGet">
            <summary>Sets the shim of Http.get_AcceptLanguage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AcceptLanguageSetString">
            <summary>Sets the shim of Http.set_AcceptLanguage(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AcceptSetString">
            <summary>Sets the shim of Http.set_Accept(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AddCacheRootString">
            <summary>Sets the shim of Http.AddCacheRoot(String dir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AddQuickHeaderStringString">
            <summary>Sets the shim of Http.AddQuickHeader(String headerFieldName, String headerFieldValue)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Http.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Http.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AcceptCharsetGet">
            <summary>Sets the shim of Http.get_AcceptCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AcceptCharsetSetString">
            <summary>Sets the shim of Http.set_AcceptCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AcceptGet">
            <summary>Sets the shim of Http.get_Accept()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AcceptLanguageGet">
            <summary>Sets the shim of Http.get_AcceptLanguage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AcceptLanguageSetString">
            <summary>Sets the shim of Http.set_AcceptLanguage(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AcceptSetString">
            <summary>Sets the shim of Http.set_Accept(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AddCacheRootString">
            <summary>Sets the shim of Http.AddCacheRoot(String dir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AddQuickHeaderStringString">
            <summary>Sets the shim of Http.AddQuickHeader(String headerFieldName, String headerFieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AllowGzipGet">
            <summary>Sets the shim of Http.get_AllowGzip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AllowGzipSetBoolean">
            <summary>Sets the shim of Http.set_AllowGzip(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AllowHeaderFoldingGet">
            <summary>Sets the shim of Http.get_AllowHeaderFolding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AllowHeaderFoldingSetBoolean">
            <summary>Sets the shim of Http.set_AllowHeaderFolding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AuthTokenGet">
            <summary>Sets the shim of Http.get_AuthToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AuthTokenSetString">
            <summary>Sets the shim of Http.set_AuthToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AutoAddHostHeaderGet">
            <summary>Sets the shim of Http.get_AutoAddHostHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AutoAddHostHeaderSetBoolean">
            <summary>Sets the shim of Http.set_AutoAddHostHeader(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsAccessKeyGet">
            <summary>Sets the shim of Http.get_AwsAccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsAccessKeySetString">
            <summary>Sets the shim of Http.set_AwsAccessKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsEndpointGet">
            <summary>Sets the shim of Http.get_AwsEndpoint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsEndpointSetString">
            <summary>Sets the shim of Http.set_AwsEndpoint(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsRegionGet">
            <summary>Sets the shim of Http.get_AwsRegion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsRegionSetString">
            <summary>Sets the shim of Http.set_AwsRegion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsSecretKeyGet">
            <summary>Sets the shim of Http.get_AwsSecretKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsSecretKeySetString">
            <summary>Sets the shim of Http.set_AwsSecretKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsSignatureVersionGet">
            <summary>Sets the shim of Http.get_AwsSignatureVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsSignatureVersionSetInt32">
            <summary>Sets the shim of Http.set_AwsSignatureVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsSubResourcesGet">
            <summary>Sets the shim of Http.get_AwsSubResources()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.AwsSubResourcesSetString">
            <summary>Sets the shim of Http.set_AwsSubResources(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BandwidthThrottleDownGet">
            <summary>Sets the shim of Http.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of Http.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BandwidthThrottleUpGet">
            <summary>Sets the shim of Http.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Http.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BasicAuthGet">
            <summary>Sets the shim of Http.get_BasicAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BasicAuthSetBoolean">
            <summary>Sets the shim of Http.set_BasicAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgLastErrorTextGet">
            <summary>Sets the shim of Http.get_BgLastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgPercentDoneGet">
            <summary>Sets the shim of Http.get_BgPercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgResponseObject">
            <summary>Sets the shim of Http.BgResponseObject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgResultDataGet">
            <summary>Sets the shim of Http.get_BgResultData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgResultIntGet">
            <summary>Sets the shim of Http.get_BgResultInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgResultStringGet">
            <summary>Sets the shim of Http.get_BgResultString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgTaskAbort">
            <summary>Sets the shim of Http.BgTaskAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgTaskFinishedGet">
            <summary>Sets the shim of Http.get_BgTaskFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgTaskRunningGet">
            <summary>Sets the shim of Http.get_BgTaskRunning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.BgTaskSuccessGet">
            <summary>Sets the shim of Http.get_BgTaskSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ClearBgEventLog">
            <summary>Sets the shim of Http.ClearBgEventLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ClearInMemoryCookies">
            <summary>Sets the shim of Http.ClearInMemoryCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ClearUrlVars">
            <summary>Sets the shim of Http.ClearUrlVars()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of Http.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of Http.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.CloseAllConnections">
            <summary>Sets the shim of Http.CloseAllConnections()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.CloseAllConnectionsAsync">
            <summary>Sets the shim of Http.CloseAllConnectionsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ConnectFailReasonGet">
            <summary>Sets the shim of Http.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ConnectTimeoutGet">
            <summary>Sets the shim of Http.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Http.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ConnectionGet">
            <summary>Sets the shim of Http.get_Connection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ConnectionSetString">
            <summary>Sets the shim of Http.set_Connection(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.CookieDirGet">
            <summary>Sets the shim of Http.get_CookieDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.CookieDirSetString">
            <summary>Sets the shim of Http.set_CookieDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Http.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Http.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DefaultFreshPeriodGet">
            <summary>Sets the shim of Http.get_DefaultFreshPeriod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DefaultFreshPeriodSetInt32">
            <summary>Sets the shim of Http.set_DefaultFreshPeriod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DigestAuthGet">
            <summary>Sets the shim of Http.get_DigestAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DigestAuthSetBoolean">
            <summary>Sets the shim of Http.set_DigestAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.Dispose">
            <summary>Sets the shim of Http.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Http.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DnsCacheClear">
            <summary>Sets the shim of Http.DnsCacheClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadAppendAsyncStringString">
            <summary>Sets the shim of Http.DownloadAppendAsync(String url, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadAppendStringString">
            <summary>Sets the shim of Http.DownloadAppend(String url, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadAsyncStringString">
            <summary>Sets the shim of Http.DownloadAsync(String url, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadBdAsyncStringBinData">
            <summary>Sets the shim of Http.DownloadBdAsync(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadBdStringBinData">
            <summary>Sets the shim of Http.DownloadBd(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadHashAsyncStringStringString">
            <summary>Sets the shim of Http.DownloadHashAsync(String url, String hashAlgorithm, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadHashStringStringString">
            <summary>Sets the shim of Http.DownloadHash(String url, String hashAlgorithm, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Http.DownloadSbAsync(String url, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadSbStringStringStringBuilder">
            <summary>Sets the shim of Http.DownloadSb(String url, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.DownloadStringString">
            <summary>Sets the shim of Http.Download(String url, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Http.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Http.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.EventLogCountGet">
            <summary>Sets the shim of Http.get_EventLogCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.EventLogNameInt32">
            <summary>Sets the shim of Http.EventLogName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.EventLogValueInt32">
            <summary>Sets the shim of Http.EventLogValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ExtractMetaRefreshUrlString">
            <summary>Sets the shim of Http.ExtractMetaRefreshUrl(String htmlContent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FetchFromCacheGet">
            <summary>Sets the shim of Http.get_FetchFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FetchFromCacheSetBoolean">
            <summary>Sets the shim of Http.set_FetchFromCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FinalRedirectUrlGet">
            <summary>Sets the shim of Http.get_FinalRedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Http.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireHttpBeginReceiveObjectEventArgs">
            <summary>Sets the shim of Http.FireHttpBeginReceive(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireHttpBeginSendObjectEventArgs">
            <summary>Sets the shim of Http.FireHttpBeginSend(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireHttpChunkedObjectEventArgs">
            <summary>Sets the shim of Http.FireHttpChunked(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireHttpEndReceiveObjectStatusEventArgs">
            <summary>Sets the shim of Http.FireHttpEndReceive(Object sender, StatusEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireHttpEndSendObjectStatusEventArgs">
            <summary>Sets the shim of Http.FireHttpEndSend(Object sender, StatusEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireHttpRedirectObjectHttpRedirectEventArgs">
            <summary>Sets the shim of Http.FireHttpRedirect(Object sender, HttpRedirectEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Http.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Http.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireReceiveRateObjectDataRateEventArgs">
            <summary>Sets the shim of Http.FireReceiveRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireSendRateObjectDataRateEventArgs">
            <summary>Sets the shim of Http.FireSendRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Http.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FollowRedirectsGet">
            <summary>Sets the shim of Http.get_FollowRedirects()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FollowRedirectsSetBoolean">
            <summary>Sets the shim of Http.set_FollowRedirects(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FreshnessAlgorithmGet">
            <summary>Sets the shim of Http.get_FreshnessAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.FreshnessAlgorithmSetInt32">
            <summary>Sets the shim of Http.set_FreshnessAlgorithm(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.G_SvcOauthAccessToken2AsyncHashtableInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessToken2Async(Hashtable claimParams, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.G_SvcOauthAccessToken2HashtableInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessToken2(Hashtable claimParams, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.G_SvcOauthAccessTokenAsyncStringStringStringInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessTokenAsync(String iss, String scope, String subEmail, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.G_SvcOauthAccessTokenStringStringStringInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessToken(String iss, String scope, String subEmail, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GenTimeStamp">
            <summary>Sets the shim of Http.GenTimeStamp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetCacheRootInt32">
            <summary>Sets the shim of Http.GetCacheRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetCookieXmlString">
            <summary>Sets the shim of Http.GetCookieXml(String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetDomainString">
            <summary>Sets the shim of Http.GetDomain(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetHeadAsyncString">
            <summary>Sets the shim of Http.GetHeadAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetHeadString">
            <summary>Sets the shim of Http.GetHead(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetRequestHeaderString">
            <summary>Sets the shim of Http.GetRequestHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetServerSslCertAsyncStringInt32">
            <summary>Sets the shim of Http.GetServerSslCertAsync(String domain, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetServerSslCertStringInt32">
            <summary>Sets the shim of Http.GetServerSslCert(String domain, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.GetUrlPathString">
            <summary>Sets the shim of Http.GetUrlPath(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.HasRequestHeaderString">
            <summary>Sets the shim of Http.HasRequestHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Http.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Http.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.IgnoreMustRevalidateGet">
            <summary>Sets the shim of Http.get_IgnoreMustRevalidate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.IgnoreMustRevalidateSetBoolean">
            <summary>Sets the shim of Http.set_IgnoreMustRevalidate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.IgnoreNoCacheGet">
            <summary>Sets the shim of Http.get_IgnoreNoCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.IgnoreNoCacheSetBoolean">
            <summary>Sets the shim of Http.set_IgnoreNoCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.IsUnlocked">
            <summary>Sets the shim of Http.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.KeepEventLogGet">
            <summary>Sets the shim of Http.get_KeepEventLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.KeepEventLogSetBoolean">
            <summary>Sets the shim of Http.set_KeepEventLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.KeepResponseBodyGet">
            <summary>Sets the shim of Http.get_KeepResponseBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.KeepResponseBodySetBoolean">
            <summary>Sets the shim of Http.set_KeepResponseBody(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LMFactorGet">
            <summary>Sets the shim of Http.get_LMFactor()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LMFactorSetInt32">
            <summary>Sets the shim of Http.set_LMFactor(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastContentTypeGet">
            <summary>Sets the shim of Http.get_LastContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Http.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Http.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Http.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastHeaderGet">
            <summary>Sets the shim of Http.get_LastHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Http.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Http.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastModDateGet">
            <summary>Sets the shim of Http.get_LastModDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastResponseBodyGet">
            <summary>Sets the shim of Http.get_LastResponseBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastResponseHeaderGet">
            <summary>Sets the shim of Http.get_LastResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastStatusGet">
            <summary>Sets the shim of Http.get_LastStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LastStatusTextGet">
            <summary>Sets the shim of Http.get_LastStatusText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LoginDomainGet">
            <summary>Sets the shim of Http.get_LoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LoginDomainSetString">
            <summary>Sets the shim of Http.set_LoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LoginGet">
            <summary>Sets the shim of Http.get_Login()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.LoginSetString">
            <summary>Sets the shim of Http.set_Login(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxConnectionsGet">
            <summary>Sets the shim of Http.get_MaxConnections()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxConnectionsSetInt32">
            <summary>Sets the shim of Http.set_MaxConnections(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxFreshPeriodGet">
            <summary>Sets the shim of Http.get_MaxFreshPeriod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxFreshPeriodSetInt32">
            <summary>Sets the shim of Http.set_MaxFreshPeriod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxResponseSizeGet">
            <summary>Sets the shim of Http.get_MaxResponseSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxResponseSizeSetUInt32">
            <summary>Sets the shim of Http.set_MaxResponseSize(UInt32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxUrlLenGet">
            <summary>Sets the shim of Http.get_MaxUrlLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MaxUrlLenSetInt32">
            <summary>Sets the shim of Http.set_MaxUrlLen(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MimicFireFoxGet">
            <summary>Sets the shim of Http.get_MimicFireFox()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MimicFireFoxSetBoolean">
            <summary>Sets the shim of Http.set_MimicFireFox(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MimicIEGet">
            <summary>Sets the shim of Http.get_MimicIE()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MimicIESetBoolean">
            <summary>Sets the shim of Http.set_MimicIE(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MinFreshPeriodGet">
            <summary>Sets the shim of Http.get_MinFreshPeriod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.MinFreshPeriodSetInt32">
            <summary>Sets the shim of Http.set_MinFreshPeriod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NegotiateAuthGet">
            <summary>Sets the shim of Http.get_NegotiateAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NegotiateAuthSetBoolean">
            <summary>Sets the shim of Http.set_NegotiateAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NtlmAuthGet">
            <summary>Sets the shim of Http.get_NtlmAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NtlmAuthSetBoolean">
            <summary>Sets the shim of Http.set_NtlmAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NumCacheLevelsGet">
            <summary>Sets the shim of Http.get_NumCacheLevels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NumCacheLevelsSetInt32">
            <summary>Sets the shim of Http.set_NumCacheLevels(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.NumCacheRootsGet">
            <summary>Sets the shim of Http.get_NumCacheRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuth1Get">
            <summary>Sets the shim of Http.get_OAuth1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuth1SetBoolean">
            <summary>Sets the shim of Http.set_OAuth1(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthCallbackGet">
            <summary>Sets the shim of Http.get_OAuthCallback()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthCallbackSetString">
            <summary>Sets the shim of Http.set_OAuthCallback(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthConsumerKeyGet">
            <summary>Sets the shim of Http.get_OAuthConsumerKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthConsumerKeySetString">
            <summary>Sets the shim of Http.set_OAuthConsumerKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthConsumerSecretGet">
            <summary>Sets the shim of Http.get_OAuthConsumerSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthConsumerSecretSetString">
            <summary>Sets the shim of Http.set_OAuthConsumerSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthRealmGet">
            <summary>Sets the shim of Http.get_OAuthRealm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthRealmSetString">
            <summary>Sets the shim of Http.set_OAuthRealm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthSigMethodGet">
            <summary>Sets the shim of Http.get_OAuthSigMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthSigMethodSetString">
            <summary>Sets the shim of Http.set_OAuthSigMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthTokenGet">
            <summary>Sets the shim of Http.get_OAuthToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthTokenSecretGet">
            <summary>Sets the shim of Http.get_OAuthTokenSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthTokenSecretSetString">
            <summary>Sets the shim of Http.set_OAuthTokenSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthTokenSetString">
            <summary>Sets the shim of Http.set_OAuthToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthVerifierGet">
            <summary>Sets the shim of Http.get_OAuthVerifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OAuthVerifierSetString">
            <summary>Sets the shim of Http.set_OAuthVerifier(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnAbortCheckAddHttpAbortCheckEventHandler">
            <summary>Sets the shim of Http.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Http.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnAbortCheckRemoveHttpAbortCheckEventHandler">
            <summary>Sets the shim of Http.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpBeginReceiveAddHttpHttpBeginReceiveEventHandler">
            <summary>Sets the shim of Http.add_OnHttpBeginReceive(HttpBeginReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpBeginReceiveRaiseObjectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpBeginReceive(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpBeginReceiveRemoveHttpHttpBeginReceiveEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpBeginReceive(HttpBeginReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpBeginSendAddHttpHttpBeginSendEventHandler">
            <summary>Sets the shim of Http.add_OnHttpBeginSend(HttpBeginSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpBeginSendRaiseObjectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpBeginSend(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpBeginSendRemoveHttpHttpBeginSendEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpBeginSend(HttpBeginSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpChunkedAddHttpHttpChunkedEventHandler">
            <summary>Sets the shim of Http.add_OnHttpChunked(HttpChunkedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpChunkedRaiseObjectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpChunked(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpChunkedRemoveHttpHttpChunkedEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpChunked(HttpChunkedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpEndReceiveAddHttpHttpEndReceiveEventHandler">
            <summary>Sets the shim of Http.add_OnHttpEndReceive(HttpEndReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpEndReceiveRaiseObjectStatusEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpEndReceive(Object value0, StatusEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpEndReceiveRemoveHttpHttpEndReceiveEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpEndReceive(HttpEndReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpEndSendAddHttpHttpEndSendEventHandler">
            <summary>Sets the shim of Http.add_OnHttpEndSend(HttpEndSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpEndSendRaiseObjectStatusEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpEndSend(Object value0, StatusEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpEndSendRemoveHttpHttpEndSendEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpEndSend(HttpEndSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpRedirectAddHttpHttpRedirectEventHandler">
            <summary>Sets the shim of Http.add_OnHttpRedirect(HttpRedirectEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpRedirectRaiseObjectHttpRedirectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpRedirect(Object value0, HttpRedirectEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnHttpRedirectRemoveHttpHttpRedirectEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpRedirect(HttpRedirectEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnPercentDoneAddHttpPercentDoneEventHandler">
            <summary>Sets the shim of Http.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Http.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnPercentDoneRemoveHttpPercentDoneEventHandler">
            <summary>Sets the shim of Http.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnProgressInfoAddHttpProgressInfoEventHandler">
            <summary>Sets the shim of Http.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Http.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnProgressInfoRemoveHttpProgressInfoEventHandler">
            <summary>Sets the shim of Http.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnReceiveRateAddHttpReceiveRateEventHandler">
            <summary>Sets the shim of Http.add_OnReceiveRate(ReceiveRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnReceiveRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Http.raise_OnReceiveRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnReceiveRateRemoveHttpReceiveRateEventHandler">
            <summary>Sets the shim of Http.remove_OnReceiveRate(ReceiveRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnSendRateAddHttpSendRateEventHandler">
            <summary>Sets the shim of Http.add_OnSendRate(SendRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnSendRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Http.raise_OnSendRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnSendRateRemoveHttpSendRateEventHandler">
            <summary>Sets the shim of Http.remove_OnSendRate(SendRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnTaskCompletedAddHttpTaskCompletedEventHandler">
            <summary>Sets the shim of Http.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Http.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.OnTaskCompletedRemoveHttpTaskCompletedEventHandler">
            <summary>Sets the shim of Http.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PBinaryAsyncStringStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinaryAsync(String verb, String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PBinaryBdAsyncStringStringBinDataStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinaryBdAsync(String verb, String url, BinData data, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PBinaryBdStringStringBinDataStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinaryBd(String verb, String url, BinData data, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PBinaryStringStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinary(String verb, String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PTextAsyncStringStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PTextAsync(String verb, String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PTextSbAsyncStringStringStringBuilderStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PTextSbAsync(String verb, String url, StringBuilder textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PTextSbStringStringStringBuilderStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PTextSb(String verb, String url, StringBuilder textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PTextStringStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PText(String verb, String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PasswordGet">
            <summary>Sets the shim of Http.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PasswordSetString">
            <summary>Sets the shim of Http.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Http.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Http.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostBinaryAsyncStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PostBinaryAsync(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostBinaryStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PostBinary(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostJson2AsyncStringStringString">
            <summary>Sets the shim of Http.PostJson2Async(String url, String contentType, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostJson2StringStringString">
            <summary>Sets the shim of Http.PostJson2(String url, String contentType, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostJson3AsyncStringStringJsonObject">
            <summary>Sets the shim of Http.PostJson3Async(String url, String contentType, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostJson3StringStringJsonObject">
            <summary>Sets the shim of Http.PostJson3(String url, String contentType, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostJsonAsyncStringString">
            <summary>Sets the shim of Http.PostJsonAsync(String url, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostJsonStringString">
            <summary>Sets the shim of Http.PostJson(String url, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostUrlEncodedAsyncStringHttpRequest">
            <summary>Sets the shim of Http.PostUrlEncodedAsync(String url, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostUrlEncodedStringHttpRequest">
            <summary>Sets the shim of Http.PostUrlEncoded(String url, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostXmlAsyncStringStringString">
            <summary>Sets the shim of Http.PostXmlAsync(String endpointUrl, String xmlContent, String xmlCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PostXmlStringStringString">
            <summary>Sets the shim of Http.PostXml(String endpointUrl, String xmlContent, String xmlCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Http.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Http.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyAuthMethodGet">
            <summary>Sets the shim of Http.get_ProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyAuthMethodSetString">
            <summary>Sets the shim of Http.set_ProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyDomainGet">
            <summary>Sets the shim of Http.get_ProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyDomainSetString">
            <summary>Sets the shim of Http.set_ProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyLoginDomainGet">
            <summary>Sets the shim of Http.get_ProxyLoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyLoginDomainSetString">
            <summary>Sets the shim of Http.set_ProxyLoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyLoginGet">
            <summary>Sets the shim of Http.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyLoginSetString">
            <summary>Sets the shim of Http.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyPasswordGet">
            <summary>Sets the shim of Http.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyPasswordSetString">
            <summary>Sets the shim of Http.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyPortGet">
            <summary>Sets the shim of Http.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ProxyPortSetInt32">
            <summary>Sets the shim of Http.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PutBinaryAsyncStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PutBinaryAsync(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PutBinaryStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PutBinary(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PutTextAsyncStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PutTextAsync(String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.PutTextStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PutText(String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickDeleteStrAsyncString">
            <summary>Sets the shim of Http.QuickDeleteStrAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickDeleteStrString">
            <summary>Sets the shim of Http.QuickDeleteStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetAsyncString">
            <summary>Sets the shim of Http.QuickGetAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetBdAsyncStringBinData">
            <summary>Sets the shim of Http.QuickGetBdAsync(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetBdStringBinData">
            <summary>Sets the shim of Http.QuickGetBd(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetObjAsyncString">
            <summary>Sets the shim of Http.QuickGetObjAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetObjString">
            <summary>Sets the shim of Http.QuickGetObj(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetSbAsyncStringStringBuilder">
            <summary>Sets the shim of Http.QuickGetSbAsync(String url, StringBuilder sbContent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetSbStringStringBuilder">
            <summary>Sets the shim of Http.QuickGetSb(String url, StringBuilder sbContent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetStrAsyncString">
            <summary>Sets the shim of Http.QuickGetStrAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetStrString">
            <summary>Sets the shim of Http.QuickGetStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickGetString">
            <summary>Sets the shim of Http.QuickGet(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickPutStrAsyncString">
            <summary>Sets the shim of Http.QuickPutStrAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.QuickPutStrString">
            <summary>Sets the shim of Http.QuickPutStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of Http.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of Http.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RedirectVerbGet">
            <summary>Sets the shim of Http.get_RedirectVerb()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RedirectVerbSetString">
            <summary>Sets the shim of Http.set_RedirectVerb(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RefererGet">
            <summary>Sets the shim of Http.get_Referer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RefererSetString">
            <summary>Sets the shim of Http.set_Referer(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RemoveQuickHeaderString">
            <summary>Sets the shim of Http.RemoveQuickHeader(String headerFieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RemoveRequestHeaderString">
            <summary>Sets the shim of Http.RemoveRequestHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RenderGetString">
            <summary>Sets the shim of Http.RenderGet(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RequireSslCertVerifyGet">
            <summary>Sets the shim of Http.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Http.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RequiredContentTypeGet">
            <summary>Sets the shim of Http.get_RequiredContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.RequiredContentTypeSetString">
            <summary>Sets the shim of Http.set_RequiredContentType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ResumeDownloadAsyncStringString">
            <summary>Sets the shim of Http.ResumeDownloadAsync(String url, String targetFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ResumeDownloadStringString">
            <summary>Sets the shim of Http.ResumeDownload(String url, String targetFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3SslGet">
            <summary>Sets the shim of Http.get_S3Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3SslSetBoolean">
            <summary>Sets the shim of Http.set_S3Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_CreateBucketAsyncString">
            <summary>Sets the shim of Http.S3_CreateBucketAsync(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_CreateBucketString">
            <summary>Sets the shim of Http.S3_CreateBucket(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DeleteBucketAsyncString">
            <summary>Sets the shim of Http.S3_DeleteBucketAsync(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DeleteBucketString">
            <summary>Sets the shim of Http.S3_DeleteBucket(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DeleteMultipleObjectsAsyncStringStringArray">
            <summary>Sets the shim of Http.S3_DeleteMultipleObjectsAsync(String bucketName, StringArray objectNames)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DeleteMultipleObjectsStringStringArray">
            <summary>Sets the shim of Http.S3_DeleteMultipleObjects(String bucketName, StringArray objectNames)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DeleteObjectAsyncStringString">
            <summary>Sets the shim of Http.S3_DeleteObjectAsync(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DeleteObjectStringString">
            <summary>Sets the shim of Http.S3_DeleteObject(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DownloadBytesAsyncStringString">
            <summary>Sets the shim of Http.S3_DownloadBytesAsync(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DownloadBytesStringString">
            <summary>Sets the shim of Http.S3_DownloadBytes(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DownloadFileAsyncStringStringString">
            <summary>Sets the shim of Http.S3_DownloadFileAsync(String bucketPath, String objectName, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DownloadFileStringStringString">
            <summary>Sets the shim of Http.S3_DownloadFile(String bucketPath, String objectName, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DownloadStringAsyncStringStringString">
            <summary>Sets the shim of Http.S3_DownloadStringAsync(String bucketPath, String objectName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_DownloadStringStringStringString">
            <summary>Sets the shim of Http.S3_DownloadString(String bucketPath, String objectName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_FileExistsAsyncStringString">
            <summary>Sets the shim of Http.S3_FileExistsAsync(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_FileExistsStringString">
            <summary>Sets the shim of Http.S3_FileExists(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_GenerateUrlStringStringCkDateTime">
            <summary>Sets the shim of Http.S3_GenerateUrl(String bucket, String path, CkDateTime expire)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_GenerateUrlV4BooleanStringStringInt32String">
            <summary>Sets the shim of Http.S3_GenerateUrlV4(Boolean useHttps, String bucketName, String path, Int32 numSecondsValid, String awsService)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_ListBucketObjectsAsyncString">
            <summary>Sets the shim of Http.S3_ListBucketObjectsAsync(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_ListBucketObjectsString">
            <summary>Sets the shim of Http.S3_ListBucketObjects(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_ListBuckets">
            <summary>Sets the shim of Http.S3_ListBuckets()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_ListBucketsAsync">
            <summary>Sets the shim of Http.S3_ListBucketsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_UploadBytesAsyncByteArrayStringStringString">
            <summary>Sets the shim of Http.S3_UploadBytesAsync(Byte[] contentBytes, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_UploadBytesByteArrayStringStringString">
            <summary>Sets the shim of Http.S3_UploadBytes(Byte[] contentBytes, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_UploadFileAsyncStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadFileAsync(String localFilePath, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_UploadFileStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadFile(String localFilePath, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_UploadStringAsyncStringStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadStringAsync(String objectContent, String charset, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.S3_UploadStringStringStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadString(String objectContent, String charset, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SaveCookiesGet">
            <summary>Sets the shim of Http.get_SaveCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SaveCookiesSetBoolean">
            <summary>Sets the shim of Http.set_SaveCookies(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Http.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of Http.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SendBufferSizeSetInt32">
            <summary>Sets the shim of Http.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SendCookiesGet">
            <summary>Sets the shim of Http.get_SendCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SendCookiesSetBoolean">
            <summary>Sets the shim of Http.set_SendCookies(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SessionLogFilenameGet">
            <summary>Sets the shim of Http.get_SessionLogFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SessionLogFilenameSetString">
            <summary>Sets the shim of Http.set_SessionLogFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetCookieXmlStringString">
            <summary>Sets the shim of Http.SetCookieXml(String domain, String cookieXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetOAuthRsaKeyPrivateKey">
            <summary>Sets the shim of Http.SetOAuthRsaKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetRequestHeaderStringString">
            <summary>Sets the shim of Http.SetRequestHeader(String headerFieldName, String headerFieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetSslClientCertCert">
            <summary>Sets the shim of Http.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetSslClientCertPemStringString">
            <summary>Sets the shim of Http.SetSslClientCertPem(String pemDataOrPath, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Http.SetSslClientCertPfx(String pfxPath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SetUrlVarStringString">
            <summary>Sets the shim of Http.SetUrlVar(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SleepMsInt32">
            <summary>Sets the shim of Http.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of Http.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of Http.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SoSndBufGet">
            <summary>Sets the shim of Http.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of Http.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of Http.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of Http.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of Http.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of Http.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksPortGet">
            <summary>Sets the shim of Http.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of Http.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of Http.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of Http.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksVersionGet">
            <summary>Sets the shim of Http.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of Http.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SslAllowedCiphersGet">
            <summary>Sets the shim of Http.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SslAllowedCiphersSetString">
            <summary>Sets the shim of Http.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SslProtocolGet">
            <summary>Sets the shim of Http.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SslProtocolSetString">
            <summary>Sets the shim of Http.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.StreamResponseBodyPathGet">
            <summary>Sets the shim of Http.get_StreamResponseBodyPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.StreamResponseBodyPathSetString">
            <summary>Sets the shim of Http.set_StreamResponseBodyPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SynchronousRequestAsyncStringInt32BooleanHttpRequest">
            <summary>Sets the shim of Http.SynchronousRequestAsync(String domain, Int32 port, Boolean ssl, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.SynchronousRequestStringInt32BooleanHttpRequest">
            <summary>Sets the shim of Http.SynchronousRequest(String domain, Int32 port, Boolean ssl, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.TlsCipherSuiteGet">
            <summary>Sets the shim of Http.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.TlsPinSetGet">
            <summary>Sets the shim of Http.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.TlsPinSetSetString">
            <summary>Sets the shim of Http.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.TlsVersionGet">
            <summary>Sets the shim of Http.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.ToString01">
            <summary>Sets the shim of Http.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Http.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UpdateCacheGet">
            <summary>Sets the shim of Http.get_UpdateCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UpdateCacheSetBoolean">
            <summary>Sets the shim of Http.set_UpdateCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UrlDecodeString">
            <summary>Sets the shim of Http.UrlDecode(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UrlEncodeString">
            <summary>Sets the shim of Http.UrlEncode(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UseBgThreadGet">
            <summary>Sets the shim of Http.get_UseBgThread()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UseBgThreadSetBoolean">
            <summary>Sets the shim of Http.set_UseBgThread(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UseIEProxyGet">
            <summary>Sets the shim of Http.get_UseIEProxy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UseIEProxySetBoolean">
            <summary>Sets the shim of Http.set_UseIEProxy(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UserAgentGet">
            <summary>Sets the shim of Http.get_UserAgent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.UserAgentSetString">
            <summary>Sets the shim of Http.set_UserAgent(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Http.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Http.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.VersionGet">
            <summary>Sets the shim of Http.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.WasRedirectedGet">
            <summary>Sets the shim of Http.get_WasRedirected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.XmlRpcAsyncStringString">
            <summary>Sets the shim of Http.XmlRpcAsync(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.XmlRpcPutAsyncStringString">
            <summary>Sets the shim of Http.XmlRpcPutAsync(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.XmlRpcPutStringString">
            <summary>Sets the shim of Http.XmlRpcPut(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances.XmlRpcStringString">
            <summary>Sets the shim of Http.XmlRpc(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances._Http">
            <summary>Sets the shim of Http.!Http()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllInstances._Http01">
            <summary>Sets the shim of Http.~Http()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllowGzipGet">
            <summary>Sets the shim of Http.get_AllowGzip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllowGzipSetBoolean">
            <summary>Sets the shim of Http.set_AllowGzip(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllowHeaderFoldingGet">
            <summary>Sets the shim of Http.get_AllowHeaderFolding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AllowHeaderFoldingSetBoolean">
            <summary>Sets the shim of Http.set_AllowHeaderFolding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AuthTokenGet">
            <summary>Sets the shim of Http.get_AuthToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AuthTokenSetString">
            <summary>Sets the shim of Http.set_AuthToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AutoAddHostHeaderGet">
            <summary>Sets the shim of Http.get_AutoAddHostHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AutoAddHostHeaderSetBoolean">
            <summary>Sets the shim of Http.set_AutoAddHostHeader(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsAccessKeyGet">
            <summary>Sets the shim of Http.get_AwsAccessKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsAccessKeySetString">
            <summary>Sets the shim of Http.set_AwsAccessKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsEndpointGet">
            <summary>Sets the shim of Http.get_AwsEndpoint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsEndpointSetString">
            <summary>Sets the shim of Http.set_AwsEndpoint(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsRegionGet">
            <summary>Sets the shim of Http.get_AwsRegion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsRegionSetString">
            <summary>Sets the shim of Http.set_AwsRegion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsSecretKeyGet">
            <summary>Sets the shim of Http.get_AwsSecretKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsSecretKeySetString">
            <summary>Sets the shim of Http.set_AwsSecretKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsSignatureVersionGet">
            <summary>Sets the shim of Http.get_AwsSignatureVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsSignatureVersionSetInt32">
            <summary>Sets the shim of Http.set_AwsSignatureVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsSubResourcesGet">
            <summary>Sets the shim of Http.get_AwsSubResources()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.AwsSubResourcesSetString">
            <summary>Sets the shim of Http.set_AwsSubResources(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BandwidthThrottleDownGet">
            <summary>Sets the shim of Http.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of Http.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BandwidthThrottleUpGet">
            <summary>Sets the shim of Http.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Http.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BasicAuthGet">
            <summary>Sets the shim of Http.get_BasicAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BasicAuthSetBoolean">
            <summary>Sets the shim of Http.set_BasicAuth(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgLastErrorTextGet">
            <summary>Sets the shim of Http.get_BgLastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgPercentDoneGet">
            <summary>Sets the shim of Http.get_BgPercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgResponseObject">
            <summary>Sets the shim of Http.BgResponseObject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgResultDataGet">
            <summary>Sets the shim of Http.get_BgResultData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgResultIntGet">
            <summary>Sets the shim of Http.get_BgResultInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgResultStringGet">
            <summary>Sets the shim of Http.get_BgResultString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgTaskAbort">
            <summary>Sets the shim of Http.BgTaskAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgTaskFinishedGet">
            <summary>Sets the shim of Http.get_BgTaskFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgTaskRunningGet">
            <summary>Sets the shim of Http.get_BgTaskRunning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.BgTaskSuccessGet">
            <summary>Sets the shim of Http.get_BgTaskSuccess()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttp.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ClearBgEventLog">
            <summary>Sets the shim of Http.ClearBgEventLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ClearInMemoryCookies">
            <summary>Sets the shim of Http.ClearInMemoryCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ClearUrlVars">
            <summary>Sets the shim of Http.ClearUrlVars()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ClientIpAddressGet">
            <summary>Sets the shim of Http.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ClientIpAddressSetString">
            <summary>Sets the shim of Http.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.CloseAllConnections">
            <summary>Sets the shim of Http.CloseAllConnections()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.CloseAllConnectionsAsync">
            <summary>Sets the shim of Http.CloseAllConnectionsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ConnectFailReasonGet">
            <summary>Sets the shim of Http.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ConnectTimeoutGet">
            <summary>Sets the shim of Http.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Http.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ConnectionGet">
            <summary>Sets the shim of Http.get_Connection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ConnectionSetString">
            <summary>Sets the shim of Http.set_Connection(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.Constructor">
            <summary>Sets the shim of Http.Http()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.CookieDirGet">
            <summary>Sets the shim of Http.get_CookieDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.CookieDirSetString">
            <summary>Sets the shim of Http.set_CookieDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DebugLogFilePathGet">
            <summary>Sets the shim of Http.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DebugLogFilePathSetString">
            <summary>Sets the shim of Http.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DefaultFreshPeriodGet">
            <summary>Sets the shim of Http.get_DefaultFreshPeriod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DefaultFreshPeriodSetInt32">
            <summary>Sets the shim of Http.set_DefaultFreshPeriod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DigestAuthGet">
            <summary>Sets the shim of Http.get_DigestAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DigestAuthSetBoolean">
            <summary>Sets the shim of Http.set_DigestAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.Dispose">
            <summary>Sets the shim of Http.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DisposeBoolean">
            <summary>Sets the shim of Http.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DnsCacheClear">
            <summary>Sets the shim of Http.DnsCacheClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadAppendAsyncStringString">
            <summary>Sets the shim of Http.DownloadAppendAsync(String url, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadAppendStringString">
            <summary>Sets the shim of Http.DownloadAppend(String url, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadAsyncStringString">
            <summary>Sets the shim of Http.DownloadAsync(String url, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadBdAsyncStringBinData">
            <summary>Sets the shim of Http.DownloadBdAsync(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadBdStringBinData">
            <summary>Sets the shim of Http.DownloadBd(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadHashAsyncStringStringString">
            <summary>Sets the shim of Http.DownloadHashAsync(String url, String hashAlgorithm, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadHashStringStringString">
            <summary>Sets the shim of Http.DownloadHash(String url, String hashAlgorithm, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Http.DownloadSbAsync(String url, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadSbStringStringStringBuilder">
            <summary>Sets the shim of Http.DownloadSb(String url, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.DownloadStringString">
            <summary>Sets the shim of Http.Download(String url, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.EnableEventsGet">
            <summary>Sets the shim of Http.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.EnableEventsSetBoolean">
            <summary>Sets the shim of Http.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.EventLogCountGet">
            <summary>Sets the shim of Http.get_EventLogCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.EventLogNameInt32">
            <summary>Sets the shim of Http.EventLogName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.EventLogValueInt32">
            <summary>Sets the shim of Http.EventLogValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ExtractMetaRefreshUrlString">
            <summary>Sets the shim of Http.ExtractMetaRefreshUrl(String htmlContent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FetchFromCacheGet">
            <summary>Sets the shim of Http.get_FetchFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FetchFromCacheSetBoolean">
            <summary>Sets the shim of Http.set_FetchFromCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FinalRedirectUrlGet">
            <summary>Sets the shim of Http.get_FinalRedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Http.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireHttpBeginReceiveObjectEventArgs">
            <summary>Sets the shim of Http.FireHttpBeginReceive(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireHttpBeginSendObjectEventArgs">
            <summary>Sets the shim of Http.FireHttpBeginSend(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireHttpChunkedObjectEventArgs">
            <summary>Sets the shim of Http.FireHttpChunked(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireHttpEndReceiveObjectStatusEventArgs">
            <summary>Sets the shim of Http.FireHttpEndReceive(Object sender, StatusEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireHttpEndSendObjectStatusEventArgs">
            <summary>Sets the shim of Http.FireHttpEndSend(Object sender, StatusEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireHttpRedirectObjectHttpRedirectEventArgs">
            <summary>Sets the shim of Http.FireHttpRedirect(Object sender, HttpRedirectEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Http.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Http.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireReceiveRateObjectDataRateEventArgs">
            <summary>Sets the shim of Http.FireReceiveRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireSendRateObjectDataRateEventArgs">
            <summary>Sets the shim of Http.FireSendRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Http.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FollowRedirectsGet">
            <summary>Sets the shim of Http.get_FollowRedirects()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FollowRedirectsSetBoolean">
            <summary>Sets the shim of Http.set_FollowRedirects(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FreshnessAlgorithmGet">
            <summary>Sets the shim of Http.get_FreshnessAlgorithm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.FreshnessAlgorithmSetInt32">
            <summary>Sets the shim of Http.set_FreshnessAlgorithm(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.G_SvcOauthAccessToken2AsyncHashtableInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessToken2Async(Hashtable claimParams, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.G_SvcOauthAccessToken2HashtableInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessToken2(Hashtable claimParams, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.G_SvcOauthAccessTokenAsyncStringStringStringInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessTokenAsync(String iss, String scope, String subEmail, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.G_SvcOauthAccessTokenStringStringStringInt32Cert">
            <summary>Sets the shim of Http.G_SvcOauthAccessToken(String iss, String scope, String subEmail, Int32 numSec, Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GenTimeStamp">
            <summary>Sets the shim of Http.GenTimeStamp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetCacheRootInt32">
            <summary>Sets the shim of Http.GetCacheRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetCookieXmlString">
            <summary>Sets the shim of Http.GetCookieXml(String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetDomainString">
            <summary>Sets the shim of Http.GetDomain(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetHeadAsyncString">
            <summary>Sets the shim of Http.GetHeadAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetHeadString">
            <summary>Sets the shim of Http.GetHead(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetRequestHeaderString">
            <summary>Sets the shim of Http.GetRequestHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetServerSslCertAsyncStringInt32">
            <summary>Sets the shim of Http.GetServerSslCertAsync(String domain, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetServerSslCertStringInt32">
            <summary>Sets the shim of Http.GetServerSslCert(String domain, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.GetUrlPathString">
            <summary>Sets the shim of Http.GetUrlPath(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.HasRequestHeaderString">
            <summary>Sets the shim of Http.HasRequestHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.HeartbeatMsGet">
            <summary>Sets the shim of Http.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.HeartbeatMsSetInt32">
            <summary>Sets the shim of Http.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.IgnoreMustRevalidateGet">
            <summary>Sets the shim of Http.get_IgnoreMustRevalidate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.IgnoreMustRevalidateSetBoolean">
            <summary>Sets the shim of Http.set_IgnoreMustRevalidate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.IgnoreNoCacheGet">
            <summary>Sets the shim of Http.get_IgnoreNoCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.IgnoreNoCacheSetBoolean">
            <summary>Sets the shim of Http.set_IgnoreNoCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.IsUnlocked">
            <summary>Sets the shim of Http.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.KeepEventLogGet">
            <summary>Sets the shim of Http.get_KeepEventLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.KeepEventLogSetBoolean">
            <summary>Sets the shim of Http.set_KeepEventLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.KeepResponseBodyGet">
            <summary>Sets the shim of Http.get_KeepResponseBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.KeepResponseBodySetBoolean">
            <summary>Sets the shim of Http.set_KeepResponseBody(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LMFactorGet">
            <summary>Sets the shim of Http.get_LMFactor()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LMFactorSetInt32">
            <summary>Sets the shim of Http.set_LMFactor(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastContentTypeGet">
            <summary>Sets the shim of Http.get_LastContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastErrorHtmlGet">
            <summary>Sets the shim of Http.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastErrorTextGet">
            <summary>Sets the shim of Http.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastErrorXmlGet">
            <summary>Sets the shim of Http.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastHeaderGet">
            <summary>Sets the shim of Http.get_LastHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastMethodSuccessGet">
            <summary>Sets the shim of Http.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Http.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastModDateGet">
            <summary>Sets the shim of Http.get_LastModDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastResponseBodyGet">
            <summary>Sets the shim of Http.get_LastResponseBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastResponseHeaderGet">
            <summary>Sets the shim of Http.get_LastResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastStatusGet">
            <summary>Sets the shim of Http.get_LastStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LastStatusTextGet">
            <summary>Sets the shim of Http.get_LastStatusText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LoginDomainGet">
            <summary>Sets the shim of Http.get_LoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LoginDomainSetString">
            <summary>Sets the shim of Http.set_LoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LoginGet">
            <summary>Sets the shim of Http.get_Login()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.LoginSetString">
            <summary>Sets the shim of Http.set_Login(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxConnectionsGet">
            <summary>Sets the shim of Http.get_MaxConnections()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxConnectionsSetInt32">
            <summary>Sets the shim of Http.set_MaxConnections(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxFreshPeriodGet">
            <summary>Sets the shim of Http.get_MaxFreshPeriod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxFreshPeriodSetInt32">
            <summary>Sets the shim of Http.set_MaxFreshPeriod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxResponseSizeGet">
            <summary>Sets the shim of Http.get_MaxResponseSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxResponseSizeSetUInt32">
            <summary>Sets the shim of Http.set_MaxResponseSize(UInt32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxUrlLenGet">
            <summary>Sets the shim of Http.get_MaxUrlLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MaxUrlLenSetInt32">
            <summary>Sets the shim of Http.set_MaxUrlLen(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MimicFireFoxGet">
            <summary>Sets the shim of Http.get_MimicFireFox()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MimicFireFoxSetBoolean">
            <summary>Sets the shim of Http.set_MimicFireFox(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MimicIEGet">
            <summary>Sets the shim of Http.get_MimicIE()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MimicIESetBoolean">
            <summary>Sets the shim of Http.set_MimicIE(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MinFreshPeriodGet">
            <summary>Sets the shim of Http.get_MinFreshPeriod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.MinFreshPeriodSetInt32">
            <summary>Sets the shim of Http.set_MinFreshPeriod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NegotiateAuthGet">
            <summary>Sets the shim of Http.get_NegotiateAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NegotiateAuthSetBoolean">
            <summary>Sets the shim of Http.set_NegotiateAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NtlmAuthGet">
            <summary>Sets the shim of Http.get_NtlmAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NtlmAuthSetBoolean">
            <summary>Sets the shim of Http.set_NtlmAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NumCacheLevelsGet">
            <summary>Sets the shim of Http.get_NumCacheLevels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NumCacheLevelsSetInt32">
            <summary>Sets the shim of Http.set_NumCacheLevels(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.NumCacheRootsGet">
            <summary>Sets the shim of Http.get_NumCacheRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuth1Get">
            <summary>Sets the shim of Http.get_OAuth1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuth1SetBoolean">
            <summary>Sets the shim of Http.set_OAuth1(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthCallbackGet">
            <summary>Sets the shim of Http.get_OAuthCallback()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthCallbackSetString">
            <summary>Sets the shim of Http.set_OAuthCallback(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthConsumerKeyGet">
            <summary>Sets the shim of Http.get_OAuthConsumerKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthConsumerKeySetString">
            <summary>Sets the shim of Http.set_OAuthConsumerKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthConsumerSecretGet">
            <summary>Sets the shim of Http.get_OAuthConsumerSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthConsumerSecretSetString">
            <summary>Sets the shim of Http.set_OAuthConsumerSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthRealmGet">
            <summary>Sets the shim of Http.get_OAuthRealm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthRealmSetString">
            <summary>Sets the shim of Http.set_OAuthRealm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthSigMethodGet">
            <summary>Sets the shim of Http.get_OAuthSigMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthSigMethodSetString">
            <summary>Sets the shim of Http.set_OAuthSigMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthTokenGet">
            <summary>Sets the shim of Http.get_OAuthToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthTokenSecretGet">
            <summary>Sets the shim of Http.get_OAuthTokenSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthTokenSecretSetString">
            <summary>Sets the shim of Http.set_OAuthTokenSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthTokenSetString">
            <summary>Sets the shim of Http.set_OAuthToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthVerifierGet">
            <summary>Sets the shim of Http.get_OAuthVerifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OAuthVerifierSetString">
            <summary>Sets the shim of Http.set_OAuthVerifier(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnAbortCheckAddHttpAbortCheckEventHandler">
            <summary>Sets the shim of Http.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Http.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnAbortCheckRemoveHttpAbortCheckEventHandler">
            <summary>Sets the shim of Http.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpBeginReceiveAddHttpHttpBeginReceiveEventHandler">
            <summary>Sets the shim of Http.add_OnHttpBeginReceive(HttpBeginReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpBeginReceiveRaiseObjectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpBeginReceive(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpBeginReceiveRemoveHttpHttpBeginReceiveEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpBeginReceive(HttpBeginReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpBeginSendAddHttpHttpBeginSendEventHandler">
            <summary>Sets the shim of Http.add_OnHttpBeginSend(HttpBeginSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpBeginSendRaiseObjectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpBeginSend(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpBeginSendRemoveHttpHttpBeginSendEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpBeginSend(HttpBeginSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpChunkedAddHttpHttpChunkedEventHandler">
            <summary>Sets the shim of Http.add_OnHttpChunked(HttpChunkedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpChunkedRaiseObjectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpChunked(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpChunkedRemoveHttpHttpChunkedEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpChunked(HttpChunkedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpEndReceiveAddHttpHttpEndReceiveEventHandler">
            <summary>Sets the shim of Http.add_OnHttpEndReceive(HttpEndReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpEndReceiveRaiseObjectStatusEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpEndReceive(Object value0, StatusEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpEndReceiveRemoveHttpHttpEndReceiveEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpEndReceive(HttpEndReceiveEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpEndSendAddHttpHttpEndSendEventHandler">
            <summary>Sets the shim of Http.add_OnHttpEndSend(HttpEndSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpEndSendRaiseObjectStatusEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpEndSend(Object value0, StatusEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpEndSendRemoveHttpHttpEndSendEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpEndSend(HttpEndSendEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpRedirectAddHttpHttpRedirectEventHandler">
            <summary>Sets the shim of Http.add_OnHttpRedirect(HttpRedirectEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpRedirectRaiseObjectHttpRedirectEventArgs">
            <summary>Sets the shim of Http.raise_OnHttpRedirect(Object value0, HttpRedirectEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnHttpRedirectRemoveHttpHttpRedirectEventHandler">
            <summary>Sets the shim of Http.remove_OnHttpRedirect(HttpRedirectEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnPercentDoneAddHttpPercentDoneEventHandler">
            <summary>Sets the shim of Http.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Http.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnPercentDoneRemoveHttpPercentDoneEventHandler">
            <summary>Sets the shim of Http.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnProgressInfoAddHttpProgressInfoEventHandler">
            <summary>Sets the shim of Http.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Http.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnProgressInfoRemoveHttpProgressInfoEventHandler">
            <summary>Sets the shim of Http.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnReceiveRateAddHttpReceiveRateEventHandler">
            <summary>Sets the shim of Http.add_OnReceiveRate(ReceiveRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnReceiveRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Http.raise_OnReceiveRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnReceiveRateRemoveHttpReceiveRateEventHandler">
            <summary>Sets the shim of Http.remove_OnReceiveRate(ReceiveRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnSendRateAddHttpSendRateEventHandler">
            <summary>Sets the shim of Http.add_OnSendRate(SendRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnSendRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of Http.raise_OnSendRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnSendRateRemoveHttpSendRateEventHandler">
            <summary>Sets the shim of Http.remove_OnSendRate(SendRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnTaskCompletedAddHttpTaskCompletedEventHandler">
            <summary>Sets the shim of Http.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Http.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.OnTaskCompletedRemoveHttpTaskCompletedEventHandler">
            <summary>Sets the shim of Http.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PBinaryAsyncStringStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinaryAsync(String verb, String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PBinaryBdAsyncStringStringBinDataStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinaryBdAsync(String verb, String url, BinData data, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PBinaryBdStringStringBinDataStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinaryBd(String verb, String url, BinData data, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PBinaryStringStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PBinary(String verb, String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PTextAsyncStringStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PTextAsync(String verb, String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PTextSbAsyncStringStringStringBuilderStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PTextSbAsync(String verb, String url, StringBuilder textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PTextSbStringStringStringBuilderStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PTextSb(String verb, String url, StringBuilder textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PTextStringStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PText(String verb, String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PasswordGet">
            <summary>Sets the shim of Http.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PasswordSetString">
            <summary>Sets the shim of Http.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PercentDoneScaleGet">
            <summary>Sets the shim of Http.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Http.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostBinaryAsyncStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PostBinaryAsync(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostBinaryStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PostBinary(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostJson2AsyncStringStringString">
            <summary>Sets the shim of Http.PostJson2Async(String url, String contentType, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostJson2StringStringString">
            <summary>Sets the shim of Http.PostJson2(String url, String contentType, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostJson3AsyncStringStringJsonObject">
            <summary>Sets the shim of Http.PostJson3Async(String url, String contentType, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostJson3StringStringJsonObject">
            <summary>Sets the shim of Http.PostJson3(String url, String contentType, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostJsonAsyncStringString">
            <summary>Sets the shim of Http.PostJsonAsync(String url, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostJsonStringString">
            <summary>Sets the shim of Http.PostJson(String url, String jsonText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostUrlEncodedAsyncStringHttpRequest">
            <summary>Sets the shim of Http.PostUrlEncodedAsync(String url, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostUrlEncodedStringHttpRequest">
            <summary>Sets the shim of Http.PostUrlEncoded(String url, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostXmlAsyncStringStringString">
            <summary>Sets the shim of Http.PostXmlAsync(String endpointUrl, String xmlContent, String xmlCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PostXmlStringStringString">
            <summary>Sets the shim of Http.PostXml(String endpointUrl, String xmlContent, String xmlCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PreferIpv6Get">
            <summary>Sets the shim of Http.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PreferIpv6SetBoolean">
            <summary>Sets the shim of Http.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyAuthMethodGet">
            <summary>Sets the shim of Http.get_ProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyAuthMethodSetString">
            <summary>Sets the shim of Http.set_ProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyDomainGet">
            <summary>Sets the shim of Http.get_ProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyDomainSetString">
            <summary>Sets the shim of Http.set_ProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyLoginDomainGet">
            <summary>Sets the shim of Http.get_ProxyLoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyLoginDomainSetString">
            <summary>Sets the shim of Http.set_ProxyLoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyLoginGet">
            <summary>Sets the shim of Http.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyLoginSetString">
            <summary>Sets the shim of Http.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyPasswordGet">
            <summary>Sets the shim of Http.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyPasswordSetString">
            <summary>Sets the shim of Http.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyPortGet">
            <summary>Sets the shim of Http.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ProxyPortSetInt32">
            <summary>Sets the shim of Http.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PutBinaryAsyncStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PutBinaryAsync(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PutBinaryStringByteArrayStringBooleanBoolean">
            <summary>Sets the shim of Http.PutBinary(String url, Byte[] byteData, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PutTextAsyncStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PutTextAsync(String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.PutTextStringStringStringStringBooleanBoolean">
            <summary>Sets the shim of Http.PutText(String url, String textData, String charset, String contentType, Boolean md5, Boolean gzip)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickDeleteStrAsyncString">
            <summary>Sets the shim of Http.QuickDeleteStrAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickDeleteStrString">
            <summary>Sets the shim of Http.QuickDeleteStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetAsyncString">
            <summary>Sets the shim of Http.QuickGetAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetBdAsyncStringBinData">
            <summary>Sets the shim of Http.QuickGetBdAsync(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetBdStringBinData">
            <summary>Sets the shim of Http.QuickGetBd(String url, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetObjAsyncString">
            <summary>Sets the shim of Http.QuickGetObjAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetObjString">
            <summary>Sets the shim of Http.QuickGetObj(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetSbAsyncStringStringBuilder">
            <summary>Sets the shim of Http.QuickGetSbAsync(String url, StringBuilder sbContent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetSbStringStringBuilder">
            <summary>Sets the shim of Http.QuickGetSb(String url, StringBuilder sbContent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetStrAsyncString">
            <summary>Sets the shim of Http.QuickGetStrAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetStrString">
            <summary>Sets the shim of Http.QuickGetStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickGetString">
            <summary>Sets the shim of Http.QuickGet(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickPutStrAsyncString">
            <summary>Sets the shim of Http.QuickPutStrAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.QuickPutStrString">
            <summary>Sets the shim of Http.QuickPutStr(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ReadTimeoutGet">
            <summary>Sets the shim of Http.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ReadTimeoutSetInt32">
            <summary>Sets the shim of Http.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RedirectVerbGet">
            <summary>Sets the shim of Http.get_RedirectVerb()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RedirectVerbSetString">
            <summary>Sets the shim of Http.set_RedirectVerb(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RefererGet">
            <summary>Sets the shim of Http.get_Referer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RefererSetString">
            <summary>Sets the shim of Http.set_Referer(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RemoveQuickHeaderString">
            <summary>Sets the shim of Http.RemoveQuickHeader(String headerFieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RemoveRequestHeaderString">
            <summary>Sets the shim of Http.RemoveRequestHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RenderGetString">
            <summary>Sets the shim of Http.RenderGet(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RequireSslCertVerifyGet">
            <summary>Sets the shim of Http.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Http.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RequiredContentTypeGet">
            <summary>Sets the shim of Http.get_RequiredContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.RequiredContentTypeSetString">
            <summary>Sets the shim of Http.set_RequiredContentType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ResumeDownloadAsyncStringString">
            <summary>Sets the shim of Http.ResumeDownloadAsync(String url, String targetFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ResumeDownloadStringString">
            <summary>Sets the shim of Http.ResumeDownload(String url, String targetFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3SslGet">
            <summary>Sets the shim of Http.get_S3Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3SslSetBoolean">
            <summary>Sets the shim of Http.set_S3Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_CreateBucketAsyncString">
            <summary>Sets the shim of Http.S3_CreateBucketAsync(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_CreateBucketString">
            <summary>Sets the shim of Http.S3_CreateBucket(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DeleteBucketAsyncString">
            <summary>Sets the shim of Http.S3_DeleteBucketAsync(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DeleteBucketString">
            <summary>Sets the shim of Http.S3_DeleteBucket(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DeleteMultipleObjectsAsyncStringStringArray">
            <summary>Sets the shim of Http.S3_DeleteMultipleObjectsAsync(String bucketName, StringArray objectNames)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DeleteMultipleObjectsStringStringArray">
            <summary>Sets the shim of Http.S3_DeleteMultipleObjects(String bucketName, StringArray objectNames)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DeleteObjectAsyncStringString">
            <summary>Sets the shim of Http.S3_DeleteObjectAsync(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DeleteObjectStringString">
            <summary>Sets the shim of Http.S3_DeleteObject(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DownloadBytesAsyncStringString">
            <summary>Sets the shim of Http.S3_DownloadBytesAsync(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DownloadBytesStringString">
            <summary>Sets the shim of Http.S3_DownloadBytes(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DownloadFileAsyncStringStringString">
            <summary>Sets the shim of Http.S3_DownloadFileAsync(String bucketPath, String objectName, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DownloadFileStringStringString">
            <summary>Sets the shim of Http.S3_DownloadFile(String bucketPath, String objectName, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DownloadStringAsyncStringStringString">
            <summary>Sets the shim of Http.S3_DownloadStringAsync(String bucketPath, String objectName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_DownloadStringStringStringString">
            <summary>Sets the shim of Http.S3_DownloadString(String bucketPath, String objectName, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_FileExistsAsyncStringString">
            <summary>Sets the shim of Http.S3_FileExistsAsync(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_FileExistsStringString">
            <summary>Sets the shim of Http.S3_FileExists(String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_GenerateUrlStringStringCkDateTime">
            <summary>Sets the shim of Http.S3_GenerateUrl(String bucket, String path, CkDateTime expire)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_GenerateUrlV4BooleanStringStringInt32String">
            <summary>Sets the shim of Http.S3_GenerateUrlV4(Boolean useHttps, String bucketName, String path, Int32 numSecondsValid, String awsService)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_ListBucketObjectsAsyncString">
            <summary>Sets the shim of Http.S3_ListBucketObjectsAsync(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_ListBucketObjectsString">
            <summary>Sets the shim of Http.S3_ListBucketObjects(String bucketPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_ListBuckets">
            <summary>Sets the shim of Http.S3_ListBuckets()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_ListBucketsAsync">
            <summary>Sets the shim of Http.S3_ListBucketsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_UploadBytesAsyncByteArrayStringStringString">
            <summary>Sets the shim of Http.S3_UploadBytesAsync(Byte[] contentBytes, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_UploadBytesByteArrayStringStringString">
            <summary>Sets the shim of Http.S3_UploadBytes(Byte[] contentBytes, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_UploadFileAsyncStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadFileAsync(String localFilePath, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_UploadFileStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadFile(String localFilePath, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_UploadStringAsyncStringStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadStringAsync(String objectContent, String charset, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.S3_UploadStringStringStringStringStringString">
            <summary>Sets the shim of Http.S3_UploadString(String objectContent, String charset, String contentType, String bucketPath, String objectName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SaveCookiesGet">
            <summary>Sets the shim of Http.get_SaveCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SaveCookiesSetBoolean">
            <summary>Sets the shim of Http.set_SaveCookies(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SaveLastErrorString">
            <summary>Sets the shim of Http.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SendBufferSizeGet">
            <summary>Sets the shim of Http.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SendBufferSizeSetInt32">
            <summary>Sets the shim of Http.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SendCookiesGet">
            <summary>Sets the shim of Http.get_SendCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SendCookiesSetBoolean">
            <summary>Sets the shim of Http.set_SendCookies(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SessionLogFilenameGet">
            <summary>Sets the shim of Http.get_SessionLogFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SessionLogFilenameSetString">
            <summary>Sets the shim of Http.set_SessionLogFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetCookieXmlStringString">
            <summary>Sets the shim of Http.SetCookieXml(String domain, String cookieXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetOAuthRsaKeyPrivateKey">
            <summary>Sets the shim of Http.SetOAuthRsaKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetRequestHeaderStringString">
            <summary>Sets the shim of Http.SetRequestHeader(String headerFieldName, String headerFieldValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetSslClientCertCert">
            <summary>Sets the shim of Http.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetSslClientCertPemStringString">
            <summary>Sets the shim of Http.SetSslClientCertPem(String pemDataOrPath, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Http.SetSslClientCertPfx(String pfxPath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SetUrlVarStringString">
            <summary>Sets the shim of Http.SetUrlVar(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SleepMsInt32">
            <summary>Sets the shim of Http.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SoRcvBufGet">
            <summary>Sets the shim of Http.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SoRcvBufSetInt32">
            <summary>Sets the shim of Http.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SoSndBufGet">
            <summary>Sets the shim of Http.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SoSndBufSetInt32">
            <summary>Sets the shim of Http.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksHostnameGet">
            <summary>Sets the shim of Http.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksHostnameSetString">
            <summary>Sets the shim of Http.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksPasswordGet">
            <summary>Sets the shim of Http.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksPasswordSetString">
            <summary>Sets the shim of Http.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksPortGet">
            <summary>Sets the shim of Http.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksPortSetInt32">
            <summary>Sets the shim of Http.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksUsernameGet">
            <summary>Sets the shim of Http.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksUsernameSetString">
            <summary>Sets the shim of Http.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksVersionGet">
            <summary>Sets the shim of Http.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SocksVersionSetInt32">
            <summary>Sets the shim of Http.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SslAllowedCiphersGet">
            <summary>Sets the shim of Http.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SslAllowedCiphersSetString">
            <summary>Sets the shim of Http.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SslProtocolGet">
            <summary>Sets the shim of Http.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SslProtocolSetString">
            <summary>Sets the shim of Http.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.StreamResponseBodyPathGet">
            <summary>Sets the shim of Http.get_StreamResponseBodyPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.StreamResponseBodyPathSetString">
            <summary>Sets the shim of Http.set_StreamResponseBodyPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SynchronousRequestAsyncStringInt32BooleanHttpRequest">
            <summary>Sets the shim of Http.SynchronousRequestAsync(String domain, Int32 port, Boolean ssl, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.SynchronousRequestStringInt32BooleanHttpRequest">
            <summary>Sets the shim of Http.SynchronousRequest(String domain, Int32 port, Boolean ssl, HttpRequest req)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.TlsCipherSuiteGet">
            <summary>Sets the shim of Http.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.TlsPinSetGet">
            <summary>Sets the shim of Http.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.TlsPinSetSetString">
            <summary>Sets the shim of Http.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.TlsVersionGet">
            <summary>Sets the shim of Http.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.ToString">
            <summary>Sets the shim of Http.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UnlockComponentString">
            <summary>Sets the shim of Http.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UpdateCacheGet">
            <summary>Sets the shim of Http.get_UpdateCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UpdateCacheSetBoolean">
            <summary>Sets the shim of Http.set_UpdateCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UrlDecodeString">
            <summary>Sets the shim of Http.UrlDecode(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UrlEncodeString">
            <summary>Sets the shim of Http.UrlEncode(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UseBgThreadGet">
            <summary>Sets the shim of Http.get_UseBgThread()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UseBgThreadSetBoolean">
            <summary>Sets the shim of Http.set_UseBgThread(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UseIEProxyGet">
            <summary>Sets the shim of Http.get_UseIEProxy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UseIEProxySetBoolean">
            <summary>Sets the shim of Http.set_UseIEProxy(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UserAgentGet">
            <summary>Sets the shim of Http.get_UserAgent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.UserAgentSetString">
            <summary>Sets the shim of Http.set_UserAgent(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.VerboseLoggingGet">
            <summary>Sets the shim of Http.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Http.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.VersionGet">
            <summary>Sets the shim of Http.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.WasRedirectedGet">
            <summary>Sets the shim of Http.get_WasRedirected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.XmlRpcAsyncStringString">
            <summary>Sets the shim of Http.XmlRpcAsync(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.XmlRpcPutAsyncStringString">
            <summary>Sets the shim of Http.XmlRpcPutAsync(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.XmlRpcPutStringString">
            <summary>Sets the shim of Http.XmlRpcPut(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp.XmlRpcStringString">
            <summary>Sets the shim of Http.XmlRpc(String urlEndpoint, String xmlIn)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp._Http">
            <summary>Sets the shim of Http.!Http()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttp._Http01">
            <summary>Sets the shim of Http.~Http()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttpRedirectEventArgs">
            <summary>Shim type of Chilkat.HttpRedirectEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRedirectEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRedirectEventArgs.#ctor(Chilkat.HttpRedirectEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AbortGet">
            <summary>Sets the shim of HttpRedirectEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AbortSetBoolean">
            <summary>Sets the shim of HttpRedirectEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances.AbortGet">
            <summary>Sets the shim of HttpRedirectEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances.AbortSetBoolean">
            <summary>Sets the shim of HttpRedirectEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of HttpRedirectEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HttpRedirectEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances.OriginalUrlGet">
            <summary>Sets the shim of HttpRedirectEventArgs.get_OriginalUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances.RedirectUrlGet">
            <summary>Sets the shim of HttpRedirectEventArgs.get_RedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.AllInstances._HttpRedirectEventArgs">
            <summary>Sets the shim of HttpRedirectEventArgs.~HttpRedirectEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRedirectEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRedirectEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRedirectEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.Dispose">
            <summary>Sets the shim of HttpRedirectEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.DisposeBoolean">
            <summary>Sets the shim of HttpRedirectEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.OriginalUrlGet">
            <summary>Sets the shim of HttpRedirectEventArgs.get_OriginalUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs.RedirectUrlGet">
            <summary>Sets the shim of HttpRedirectEventArgs.get_RedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRedirectEventArgs._HttpRedirectEventArgs">
            <summary>Sets the shim of HttpRedirectEventArgs.~HttpRedirectEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttpRequest">
            <summary>Shim type of Chilkat.HttpRequest</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRequest.#ctor(Chilkat.HttpRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddBytesForUpload2StringStringByteArrayString">
            <summary>Sets the shim of HttpRequest.AddBytesForUpload2(String name, String remoteFileName, Byte[] byteData, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddBytesForUploadStringStringByteArray">
            <summary>Sets the shim of HttpRequest.AddBytesForUpload(String name, String remoteFileName, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddFileForUpload2StringStringString">
            <summary>Sets the shim of HttpRequest.AddFileForUpload2(String name, String filePath, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddFileForUploadStringString">
            <summary>Sets the shim of HttpRequest.AddFileForUpload(String name, String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddHeaderStringString">
            <summary>Sets the shim of HttpRequest.AddHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddMwsSignatureStringString">
            <summary>Sets the shim of HttpRequest.AddMwsSignature(String domain, String mwsSecretKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddParamStringString">
            <summary>Sets the shim of HttpRequest.AddParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddStringForUpload2StringStringStringStringString">
            <summary>Sets the shim of HttpRequest.AddStringForUpload2(String name, String filename, String strData, String charset, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddStringForUploadStringStringStringString">
            <summary>Sets the shim of HttpRequest.AddStringForUpload(String name, String filename, String strData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AddSubHeaderInt32StringString">
            <summary>Sets the shim of HttpRequest.AddSubHeader(Int32 index, String name, String value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttpRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddBytesForUpload2StringStringByteArrayString">
            <summary>Sets the shim of HttpRequest.AddBytesForUpload2(String name, String remoteFileName, Byte[] byteData, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddBytesForUploadStringStringByteArray">
            <summary>Sets the shim of HttpRequest.AddBytesForUpload(String name, String remoteFileName, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddFileForUpload2StringStringString">
            <summary>Sets the shim of HttpRequest.AddFileForUpload2(String name, String filePath, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddFileForUploadStringString">
            <summary>Sets the shim of HttpRequest.AddFileForUpload(String name, String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddHeaderStringString">
            <summary>Sets the shim of HttpRequest.AddHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddMwsSignatureStringString">
            <summary>Sets the shim of HttpRequest.AddMwsSignature(String domain, String mwsSecretKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddParamStringString">
            <summary>Sets the shim of HttpRequest.AddParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddStringForUpload2StringStringStringStringString">
            <summary>Sets the shim of HttpRequest.AddStringForUpload2(String name, String filename, String strData, String charset, String contentType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddStringForUploadStringStringStringString">
            <summary>Sets the shim of HttpRequest.AddStringForUpload(String name, String filename, String strData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.AddSubHeaderInt32StringString">
            <summary>Sets the shim of HttpRequest.AddSubHeader(Int32 index, String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.BoundaryGet">
            <summary>Sets the shim of HttpRequest.get_Boundary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.BoundarySetString">
            <summary>Sets the shim of HttpRequest.set_Boundary(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.CharsetGet">
            <summary>Sets the shim of HttpRequest.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.CharsetSetString">
            <summary>Sets the shim of HttpRequest.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.ContentTypeGet">
            <summary>Sets the shim of HttpRequest.get_ContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of HttpRequest.set_ContentType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of HttpRequest.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of HttpRequest.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.Dispose">
            <summary>Sets the shim of HttpRequest.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HttpRequest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.EntireHeaderGet">
            <summary>Sets the shim of HttpRequest.get_EntireHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.EntireHeaderSetString">
            <summary>Sets the shim of HttpRequest.set_EntireHeader(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GenerateRequestFileString">
            <summary>Sets the shim of HttpRequest.GenerateRequestFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GenerateRequestText">
            <summary>Sets the shim of HttpRequest.GenerateRequestText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetHeaderFieldString">
            <summary>Sets the shim of HttpRequest.GetHeaderField(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetHeaderNameInt32">
            <summary>Sets the shim of HttpRequest.GetHeaderName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetHeaderValueInt32">
            <summary>Sets the shim of HttpRequest.GetHeaderValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetParamNameInt32">
            <summary>Sets the shim of HttpRequest.GetParamName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetParamString">
            <summary>Sets the shim of HttpRequest.GetParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetParamValueInt32">
            <summary>Sets the shim of HttpRequest.GetParamValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.GetUrlEncodedParams">
            <summary>Sets the shim of HttpRequest.GetUrlEncodedParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.HttpVerbGet">
            <summary>Sets the shim of HttpRequest.get_HttpVerb()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.HttpVerbSetString">
            <summary>Sets the shim of HttpRequest.set_HttpVerb(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.HttpVersionGet">
            <summary>Sets the shim of HttpRequest.get_HttpVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.HttpVersionSetString">
            <summary>Sets the shim of HttpRequest.set_HttpVersion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of HttpRequest.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of HttpRequest.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of HttpRequest.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of HttpRequest.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HttpRequest.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LoadBodyFromBdBinData">
            <summary>Sets the shim of HttpRequest.LoadBodyFromBd(BinData requestBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LoadBodyFromBytesByteArray">
            <summary>Sets the shim of HttpRequest.LoadBodyFromBytes(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LoadBodyFromFileString">
            <summary>Sets the shim of HttpRequest.LoadBodyFromFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LoadBodyFromSbStringBuilderString">
            <summary>Sets the shim of HttpRequest.LoadBodyFromSb(StringBuilder requestBody, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.LoadBodyFromStringStringString">
            <summary>Sets the shim of HttpRequest.LoadBodyFromString(String bodyStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.NumHeaderFieldsGet">
            <summary>Sets the shim of HttpRequest.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.NumParamsGet">
            <summary>Sets the shim of HttpRequest.get_NumParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.PathGet">
            <summary>Sets the shim of HttpRequest.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.PathSetString">
            <summary>Sets the shim of HttpRequest.set_Path(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.RemoveAllParams">
            <summary>Sets the shim of HttpRequest.RemoveAllParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.RemoveHeaderString">
            <summary>Sets the shim of HttpRequest.RemoveHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.RemoveParamString">
            <summary>Sets the shim of HttpRequest.RemoveParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of HttpRequest.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.SendCharsetGet">
            <summary>Sets the shim of HttpRequest.get_SendCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.SendCharsetSetBoolean">
            <summary>Sets the shim of HttpRequest.set_SendCharset(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.SetFromUrlString">
            <summary>Sets the shim of HttpRequest.SetFromUrl(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.StreamBodyFromFileString">
            <summary>Sets the shim of HttpRequest.StreamBodyFromFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.StreamChunkFromFileStringStringString">
            <summary>Sets the shim of HttpRequest.StreamChunkFromFile(String path, String offset, String numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.ToString01">
            <summary>Sets the shim of HttpRequest.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UseGet">
            <summary>Sets the shim of HttpRequest.UseGet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UseHead">
            <summary>Sets the shim of HttpRequest.UseHead()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UsePost">
            <summary>Sets the shim of HttpRequest.UsePost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UsePostMultipartForm">
            <summary>Sets the shim of HttpRequest.UsePostMultipartForm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UsePut">
            <summary>Sets the shim of HttpRequest.UsePut()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UseUpload">
            <summary>Sets the shim of HttpRequest.UseUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UseUploadPut">
            <summary>Sets the shim of HttpRequest.UseUploadPut()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.UseXmlHttpString">
            <summary>Sets the shim of HttpRequest.UseXmlHttp(String xmlBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of HttpRequest.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HttpRequest.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances.VersionGet">
            <summary>Sets the shim of HttpRequest.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances._HttpRequest">
            <summary>Sets the shim of HttpRequest.!HttpRequest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.AllInstances._HttpRequest01">
            <summary>Sets the shim of HttpRequest.~HttpRequest()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpRequest.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.BoundaryGet">
            <summary>Sets the shim of HttpRequest.get_Boundary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.BoundarySetString">
            <summary>Sets the shim of HttpRequest.set_Boundary(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.CharsetGet">
            <summary>Sets the shim of HttpRequest.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.CharsetSetString">
            <summary>Sets the shim of HttpRequest.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.Constructor">
            <summary>Sets the shim of HttpRequest.HttpRequest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.ContentTypeGet">
            <summary>Sets the shim of HttpRequest.get_ContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.ContentTypeSetString">
            <summary>Sets the shim of HttpRequest.set_ContentType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.DebugLogFilePathGet">
            <summary>Sets the shim of HttpRequest.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.DebugLogFilePathSetString">
            <summary>Sets the shim of HttpRequest.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.Dispose">
            <summary>Sets the shim of HttpRequest.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.DisposeBoolean">
            <summary>Sets the shim of HttpRequest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.EntireHeaderGet">
            <summary>Sets the shim of HttpRequest.get_EntireHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.EntireHeaderSetString">
            <summary>Sets the shim of HttpRequest.set_EntireHeader(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GenerateRequestFileString">
            <summary>Sets the shim of HttpRequest.GenerateRequestFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GenerateRequestText">
            <summary>Sets the shim of HttpRequest.GenerateRequestText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetHeaderFieldString">
            <summary>Sets the shim of HttpRequest.GetHeaderField(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetHeaderNameInt32">
            <summary>Sets the shim of HttpRequest.GetHeaderName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetHeaderValueInt32">
            <summary>Sets the shim of HttpRequest.GetHeaderValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetParamNameInt32">
            <summary>Sets the shim of HttpRequest.GetParamName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetParamString">
            <summary>Sets the shim of HttpRequest.GetParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetParamValueInt32">
            <summary>Sets the shim of HttpRequest.GetParamValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.GetUrlEncodedParams">
            <summary>Sets the shim of HttpRequest.GetUrlEncodedParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.HttpVerbGet">
            <summary>Sets the shim of HttpRequest.get_HttpVerb()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.HttpVerbSetString">
            <summary>Sets the shim of HttpRequest.set_HttpVerb(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.HttpVersionGet">
            <summary>Sets the shim of HttpRequest.get_HttpVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.HttpVersionSetString">
            <summary>Sets the shim of HttpRequest.set_HttpVersion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LastErrorHtmlGet">
            <summary>Sets the shim of HttpRequest.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LastErrorTextGet">
            <summary>Sets the shim of HttpRequest.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LastErrorXmlGet">
            <summary>Sets the shim of HttpRequest.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LastMethodSuccessGet">
            <summary>Sets the shim of HttpRequest.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HttpRequest.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LoadBodyFromBdBinData">
            <summary>Sets the shim of HttpRequest.LoadBodyFromBd(BinData requestBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LoadBodyFromBytesByteArray">
            <summary>Sets the shim of HttpRequest.LoadBodyFromBytes(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LoadBodyFromFileString">
            <summary>Sets the shim of HttpRequest.LoadBodyFromFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LoadBodyFromSbStringBuilderString">
            <summary>Sets the shim of HttpRequest.LoadBodyFromSb(StringBuilder requestBody, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.LoadBodyFromStringStringString">
            <summary>Sets the shim of HttpRequest.LoadBodyFromString(String bodyStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.NumHeaderFieldsGet">
            <summary>Sets the shim of HttpRequest.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.NumParamsGet">
            <summary>Sets the shim of HttpRequest.get_NumParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.PathGet">
            <summary>Sets the shim of HttpRequest.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.PathSetString">
            <summary>Sets the shim of HttpRequest.set_Path(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.RemoveAllParams">
            <summary>Sets the shim of HttpRequest.RemoveAllParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.RemoveHeaderString">
            <summary>Sets the shim of HttpRequest.RemoveHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.RemoveParamString">
            <summary>Sets the shim of HttpRequest.RemoveParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.SaveLastErrorString">
            <summary>Sets the shim of HttpRequest.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.SendCharsetGet">
            <summary>Sets the shim of HttpRequest.get_SendCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.SendCharsetSetBoolean">
            <summary>Sets the shim of HttpRequest.set_SendCharset(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.SetFromUrlString">
            <summary>Sets the shim of HttpRequest.SetFromUrl(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.StreamBodyFromFileString">
            <summary>Sets the shim of HttpRequest.StreamBodyFromFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.StreamChunkFromFileStringStringString">
            <summary>Sets the shim of HttpRequest.StreamChunkFromFile(String path, String offset, String numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.ToString">
            <summary>Sets the shim of HttpRequest.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UseGet">
            <summary>Sets the shim of HttpRequest.UseGet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UseHead">
            <summary>Sets the shim of HttpRequest.UseHead()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UsePost">
            <summary>Sets the shim of HttpRequest.UsePost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UsePostMultipartForm">
            <summary>Sets the shim of HttpRequest.UsePostMultipartForm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UsePut">
            <summary>Sets the shim of HttpRequest.UsePut()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UseUpload">
            <summary>Sets the shim of HttpRequest.UseUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UseUploadPut">
            <summary>Sets the shim of HttpRequest.UseUploadPut()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.UseXmlHttpString">
            <summary>Sets the shim of HttpRequest.UseXmlHttp(String xmlBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.VerboseLoggingGet">
            <summary>Sets the shim of HttpRequest.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HttpRequest.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest.VersionGet">
            <summary>Sets the shim of HttpRequest.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest._HttpRequest">
            <summary>Sets the shim of HttpRequest.!HttpRequest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpRequest._HttpRequest01">
            <summary>Sets the shim of HttpRequest.~HttpRequest()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttpResponse">
            <summary>Shim type of Chilkat.HttpResponse</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpResponse.#ctor(Chilkat.HttpResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimHttpResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.BodyGet">
            <summary>Sets the shim of HttpResponse.get_Body()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.BodyQPGet">
            <summary>Sets the shim of HttpResponse.get_BodyQP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.BodyStrGet">
            <summary>Sets the shim of HttpResponse.get_BodyStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.CharsetGet">
            <summary>Sets the shim of HttpResponse.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.ContentLengthGet">
            <summary>Sets the shim of HttpResponse.get_ContentLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.DateGet">
            <summary>Sets the shim of HttpResponse.get_Date()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.DateStrGet">
            <summary>Sets the shim of HttpResponse.get_DateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of HttpResponse.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of HttpResponse.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.Dispose">
            <summary>Sets the shim of HttpResponse.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.DisposeBoolean">
            <summary>Sets the shim of HttpResponse.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.DomainGet">
            <summary>Sets the shim of HttpResponse.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.FinalRedirectUrlGet">
            <summary>Sets the shim of HttpResponse.get_FinalRedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.FullMimeGet">
            <summary>Sets the shim of HttpResponse.get_FullMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetBodyBdBinData">
            <summary>Sets the shim of HttpResponse.GetBodyBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetBodySbStringBuilder">
            <summary>Sets the shim of HttpResponse.GetBodySb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetCookieDomainInt32">
            <summary>Sets the shim of HttpResponse.GetCookieDomain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetCookieExpiresInt32">
            <summary>Sets the shim of HttpResponse.GetCookieExpires(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetCookieExpiresStrInt32">
            <summary>Sets the shim of HttpResponse.GetCookieExpiresStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetCookieNameInt32">
            <summary>Sets the shim of HttpResponse.GetCookieName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetCookiePathInt32">
            <summary>Sets the shim of HttpResponse.GetCookiePath(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetCookieValueInt32">
            <summary>Sets the shim of HttpResponse.GetCookieValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetHeaderFieldAttrStringString">
            <summary>Sets the shim of HttpResponse.GetHeaderFieldAttr(String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetHeaderFieldString">
            <summary>Sets the shim of HttpResponse.GetHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetHeaderNameInt32">
            <summary>Sets the shim of HttpResponse.GetHeaderName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.GetHeaderValueInt32">
            <summary>Sets the shim of HttpResponse.GetHeaderValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.HeaderGet">
            <summary>Sets the shim of HttpResponse.get_Header()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of HttpResponse.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of HttpResponse.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of HttpResponse.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of HttpResponse.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HttpResponse.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of HttpResponse.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.NumCookiesGet">
            <summary>Sets the shim of HttpResponse.get_NumCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.NumHeaderFieldsGet">
            <summary>Sets the shim of HttpResponse.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.SaveBodyBinaryString">
            <summary>Sets the shim of HttpResponse.SaveBodyBinary(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.SaveBodyTextBooleanString">
            <summary>Sets the shim of HttpResponse.SaveBodyText(Boolean bCrlf, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of HttpResponse.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.StatusCodeGet">
            <summary>Sets the shim of HttpResponse.get_StatusCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.StatusLineGet">
            <summary>Sets the shim of HttpResponse.get_StatusLine()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.StatusTextGet">
            <summary>Sets the shim of HttpResponse.get_StatusText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.ToString01">
            <summary>Sets the shim of HttpResponse.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.UrlEncParamValueStringString">
            <summary>Sets the shim of HttpResponse.UrlEncParamValue(String encodedParamString, String paramName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of HttpResponse.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HttpResponse.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances.VersionGet">
            <summary>Sets the shim of HttpResponse.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances._HttpResponse">
            <summary>Sets the shim of HttpResponse.!HttpResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.AllInstances._HttpResponse01">
            <summary>Sets the shim of HttpResponse.~HttpResponse()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimHttpResponse.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.BodyGet">
            <summary>Sets the shim of HttpResponse.get_Body()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.BodyQPGet">
            <summary>Sets the shim of HttpResponse.get_BodyQP()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.BodyStrGet">
            <summary>Sets the shim of HttpResponse.get_BodyStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.CharsetGet">
            <summary>Sets the shim of HttpResponse.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.Constructor">
            <summary>Sets the shim of HttpResponse.HttpResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.ContentLengthGet">
            <summary>Sets the shim of HttpResponse.get_ContentLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.DateGet">
            <summary>Sets the shim of HttpResponse.get_Date()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.DateStrGet">
            <summary>Sets the shim of HttpResponse.get_DateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.DebugLogFilePathGet">
            <summary>Sets the shim of HttpResponse.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.DebugLogFilePathSetString">
            <summary>Sets the shim of HttpResponse.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.Dispose">
            <summary>Sets the shim of HttpResponse.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.DisposeBoolean">
            <summary>Sets the shim of HttpResponse.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.DomainGet">
            <summary>Sets the shim of HttpResponse.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.FinalRedirectUrlGet">
            <summary>Sets the shim of HttpResponse.get_FinalRedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.FullMimeGet">
            <summary>Sets the shim of HttpResponse.get_FullMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetBodyBdBinData">
            <summary>Sets the shim of HttpResponse.GetBodyBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetBodySbStringBuilder">
            <summary>Sets the shim of HttpResponse.GetBodySb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetCookieDomainInt32">
            <summary>Sets the shim of HttpResponse.GetCookieDomain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetCookieExpiresInt32">
            <summary>Sets the shim of HttpResponse.GetCookieExpires(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetCookieExpiresStrInt32">
            <summary>Sets the shim of HttpResponse.GetCookieExpiresStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetCookieNameInt32">
            <summary>Sets the shim of HttpResponse.GetCookieName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetCookiePathInt32">
            <summary>Sets the shim of HttpResponse.GetCookiePath(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetCookieValueInt32">
            <summary>Sets the shim of HttpResponse.GetCookieValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetHeaderFieldAttrStringString">
            <summary>Sets the shim of HttpResponse.GetHeaderFieldAttr(String fieldName, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetHeaderFieldString">
            <summary>Sets the shim of HttpResponse.GetHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetHeaderNameInt32">
            <summary>Sets the shim of HttpResponse.GetHeaderName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.GetHeaderValueInt32">
            <summary>Sets the shim of HttpResponse.GetHeaderValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.HeaderGet">
            <summary>Sets the shim of HttpResponse.get_Header()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.LastErrorHtmlGet">
            <summary>Sets the shim of HttpResponse.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.LastErrorTextGet">
            <summary>Sets the shim of HttpResponse.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.LastErrorXmlGet">
            <summary>Sets the shim of HttpResponse.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.LastMethodSuccessGet">
            <summary>Sets the shim of HttpResponse.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of HttpResponse.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.LoadTaskResultTask">
            <summary>Sets the shim of HttpResponse.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.NumCookiesGet">
            <summary>Sets the shim of HttpResponse.get_NumCookies()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.NumHeaderFieldsGet">
            <summary>Sets the shim of HttpResponse.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.SaveBodyBinaryString">
            <summary>Sets the shim of HttpResponse.SaveBodyBinary(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.SaveBodyTextBooleanString">
            <summary>Sets the shim of HttpResponse.SaveBodyText(Boolean bCrlf, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.SaveLastErrorString">
            <summary>Sets the shim of HttpResponse.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.StatusCodeGet">
            <summary>Sets the shim of HttpResponse.get_StatusCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.StatusLineGet">
            <summary>Sets the shim of HttpResponse.get_StatusLine()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.StatusTextGet">
            <summary>Sets the shim of HttpResponse.get_StatusText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.ToString">
            <summary>Sets the shim of HttpResponse.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.UrlEncParamValueStringString">
            <summary>Sets the shim of HttpResponse.UrlEncParamValue(String encodedParamString, String paramName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.VerboseLoggingGet">
            <summary>Sets the shim of HttpResponse.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.VerboseLoggingSetBoolean">
            <summary>Sets the shim of HttpResponse.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse.VersionGet">
            <summary>Sets the shim of HttpResponse.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse._HttpResponse">
            <summary>Sets the shim of HttpResponse.!HttpResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimHttpResponse._HttpResponse01">
            <summary>Sets the shim of HttpResponse.~HttpResponse()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimImap">
            <summary>Shim type of Chilkat.Imap</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimImap.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimImap.#ctor(Chilkat.Imap)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AbortCurrentGet">
            <summary>Sets the shim of Imap.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AbortCurrentSetBoolean">
            <summary>Sets the shim of Imap.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Imap.AddPfxSourceData(Byte[] pfxBytes, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AddPfxSourceFileStringString">
            <summary>Sets the shim of Imap.AddPfxSourceFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimImap.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Imap.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Imap.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Imap.AddPfxSourceData(Byte[] pfxBytes, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AddPfxSourceFileStringString">
            <summary>Sets the shim of Imap.AddPfxSourceFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMailAsyncStringEmail">
            <summary>Sets the shim of Imap.AppendMailAsync(String mailbox, Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMailStringEmail">
            <summary>Sets the shim of Imap.AppendMail(String mailbox, Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeAsyncStringString">
            <summary>Sets the shim of Imap.AppendMimeAsync(String mailbox, String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeStringString">
            <summary>Sets the shim of Imap.AppendMime(String mailbox, String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithDateStrAsyncStringStringString">
            <summary>Sets the shim of Imap.AppendMimeWithDateStrAsync(String mailbox, String mimeText, String internalDateStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithDateStrStringStringString">
            <summary>Sets the shim of Imap.AppendMimeWithDateStr(String mailbox, String mimeText, String internalDateStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithDateStringStringDateTime">
            <summary>Sets the shim of Imap.AppendMimeWithDate(String mailbox, String mimeText, DateTime internalDate)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithFlagsAsyncStringStringBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlagsAsync(String mailbox, String mimeText, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithFlagsSbAsyncStringStringBuilderBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlagsSbAsync(String mailbox, StringBuilder sbMime, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithFlagsSbStringStringBuilderBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlagsSb(String mailbox, StringBuilder sbMime, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendMimeWithFlagsStringStringBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlags(String mailbox, String mimeText, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendSeenGet">
            <summary>Sets the shim of Imap.get_AppendSeen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendSeenSetBoolean">
            <summary>Sets the shim of Imap.set_AppendSeen(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AppendUidGet">
            <summary>Sets the shim of Imap.get_AppendUid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AuthMethodGet">
            <summary>Sets the shim of Imap.get_AuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AuthMethodSetString">
            <summary>Sets the shim of Imap.set_AuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AuthzIdGet">
            <summary>Sets the shim of Imap.get_AuthzId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AuthzIdSetString">
            <summary>Sets the shim of Imap.set_AuthzId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AutoDownloadAttachmentsGet">
            <summary>Sets the shim of Imap.get_AutoDownloadAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AutoDownloadAttachmentsSetBoolean">
            <summary>Sets the shim of Imap.set_AutoDownloadAttachments(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AutoFixGet">
            <summary>Sets the shim of Imap.get_AutoFix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.AutoFixSetBoolean">
            <summary>Sets the shim of Imap.set_AutoFix(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.Capability">
            <summary>Sets the shim of Imap.Capability()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CapabilityAsync">
            <summary>Sets the shim of Imap.CapabilityAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CheckConnection">
            <summary>Sets the shim of Imap.CheckConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CheckForNewEmail">
            <summary>Sets the shim of Imap.CheckForNewEmail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CheckForNewEmailAsync">
            <summary>Sets the shim of Imap.CheckForNewEmailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ClearSessionLog">
            <summary>Sets the shim of Imap.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of Imap.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of Imap.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CloseMailboxAsyncString">
            <summary>Sets the shim of Imap.CloseMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CloseMailboxString">
            <summary>Sets the shim of Imap.CloseMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ConnectAsyncString">
            <summary>Sets the shim of Imap.ConnectAsync(String domainName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ConnectString">
            <summary>Sets the shim of Imap.Connect(String domainName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ConnectTimeoutGet">
            <summary>Sets the shim of Imap.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Imap.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ConnectedToHostGet">
            <summary>Sets the shim of Imap.get_ConnectedToHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CopyAsyncInt32BooleanString">
            <summary>Sets the shim of Imap.CopyAsync(Int32 msgId, Boolean bUid, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CopyInt32BooleanString">
            <summary>Sets the shim of Imap.Copy(Int32 msgId, Boolean bUid, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CopyMultipleAsyncMessageSetString">
            <summary>Sets the shim of Imap.CopyMultipleAsync(MessageSet messageSet, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CopyMultipleMessageSetString">
            <summary>Sets the shim of Imap.CopyMultiple(MessageSet messageSet, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CopySequenceAsyncInt32Int32String">
            <summary>Sets the shim of Imap.CopySequenceAsync(Int32 startSeqNum, Int32 count, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CopySequenceInt32Int32String">
            <summary>Sets the shim of Imap.CopySequence(Int32 startSeqNum, Int32 count, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CreateMailboxAsyncString">
            <summary>Sets the shim of Imap.CreateMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.CreateMailboxString">
            <summary>Sets the shim of Imap.CreateMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Imap.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Imap.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DeleteMailboxAsyncString">
            <summary>Sets the shim of Imap.DeleteMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DeleteMailboxString">
            <summary>Sets the shim of Imap.DeleteMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.Disconnect">
            <summary>Sets the shim of Imap.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DisconnectAsync">
            <summary>Sets the shim of Imap.DisconnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.Dispose">
            <summary>Sets the shim of Imap.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Imap.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DomainGet">
            <summary>Sets the shim of Imap.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.DomainSetString">
            <summary>Sets the shim of Imap.set_Domain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Imap.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Imap.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ExamineMailboxAsyncString">
            <summary>Sets the shim of Imap.ExamineMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ExamineMailboxString">
            <summary>Sets the shim of Imap.ExamineMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.Expunge">
            <summary>Sets the shim of Imap.Expunge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ExpungeAndClose">
            <summary>Sets the shim of Imap.ExpungeAndClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ExpungeAndCloseAsync">
            <summary>Sets the shim of Imap.ExpungeAndCloseAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ExpungeAsync">
            <summary>Sets the shim of Imap.ExpungeAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentAsyncEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachmentAsync(Email emailObject, Int32 attachmentIndex, String saveToPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentBdAsyncEmailInt32BinData">
            <summary>Sets the shim of Imap.FetchAttachmentBdAsync(Email email, Int32 attachmentIndex, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentBdEmailInt32BinData">
            <summary>Sets the shim of Imap.FetchAttachmentBd(Email email, Int32 attachmentIndex, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentBytesAsyncEmailInt32">
            <summary>Sets the shim of Imap.FetchAttachmentBytesAsync(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentBytesEmailInt32">
            <summary>Sets the shim of Imap.FetchAttachmentBytes(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachment(Email emailObject, Int32 attachmentIndex, String saveToPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentSbAsyncEmailInt32StringStringBuilder">
            <summary>Sets the shim of Imap.FetchAttachmentSbAsync(Email email, Int32 attachmentIndex, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentSbEmailInt32StringStringBuilder">
            <summary>Sets the shim of Imap.FetchAttachmentSb(Email email, Int32 attachmentIndex, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentStringAsyncEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachmentStringAsync(Email emailObject, Int32 attachmentIndex, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchAttachmentStringEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachmentString(Email emailObject, Int32 attachmentIndex, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchBundleAsMimeAsyncMessageSet">
            <summary>Sets the shim of Imap.FetchBundleAsMimeAsync(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchBundleAsMimeMessageSet">
            <summary>Sets the shim of Imap.FetchBundleAsMime(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchBundleAsyncMessageSet">
            <summary>Sets the shim of Imap.FetchBundleAsync(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchBundleMessageSet">
            <summary>Sets the shim of Imap.FetchBundle(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchChunkAsyncInt32Int32MessageSetMessageSet">
            <summary>Sets the shim of Imap.FetchChunkAsync(Int32 startSeqNum, Int32 count, MessageSet failedSet, MessageSet fetchedSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchChunkInt32Int32MessageSetMessageSet">
            <summary>Sets the shim of Imap.FetchChunk(Int32 startSeqNum, Int32 count, MessageSet failedSet, MessageSet fetchedSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchFlagsAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchFlagsAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchFlagsInt32Boolean">
            <summary>Sets the shim of Imap.FetchFlags(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchHeadersAsyncMessageSet">
            <summary>Sets the shim of Imap.FetchHeadersAsync(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchHeadersMessageSet">
            <summary>Sets the shim of Imap.FetchHeaders(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSequenceAsMimeAsyncInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceAsMimeAsync(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSequenceAsMimeInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceAsMime(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSequenceAsyncInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceAsync(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSequenceHeadersAsyncInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceHeadersAsync(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSequenceHeadersInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceHeaders(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSequenceInt32Int32">
            <summary>Sets the shim of Imap.FetchSequence(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleAsMimeAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleAsMimeAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleAsMimeInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleAsMime(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleAsMimeSbAsyncInt32BooleanStringBuilder">
            <summary>Sets the shim of Imap.FetchSingleAsMimeSbAsync(Int32 msgId, Boolean bUid, StringBuilder sbMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleAsMimeSbInt32BooleanStringBuilder">
            <summary>Sets the shim of Imap.FetchSingleAsMimeSb(Int32 msgId, Boolean bUid, StringBuilder sbMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleHeaderAsMimeAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeaderAsMimeAsync(Int32 msgId, Boolean bUID)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleHeaderAsMimeInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeaderAsMime(Int32 msgId, Boolean bUID)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleHeaderAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeaderAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleHeaderInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeader(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FetchSingleInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingle(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Imap.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Imap.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Imap.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Imap.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Imap.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Imap.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetAllUids">
            <summary>Sets the shim of Imap.GetAllUids()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetAllUidsAsync">
            <summary>Sets the shim of Imap.GetAllUidsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailAttachFilenameEmailInt32">
            <summary>Sets the shim of Imap.GetMailAttachFilename(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailAttachSizeEmailInt32">
            <summary>Sets the shim of Imap.GetMailAttachSize(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailFlagEmailString">
            <summary>Sets the shim of Imap.GetMailFlag(Email email, String flagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailNumAttachEmail">
            <summary>Sets the shim of Imap.GetMailNumAttach(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailSizeEmail">
            <summary>Sets the shim of Imap.GetMailSize(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailboxStatusAsyncString">
            <summary>Sets the shim of Imap.GetMailboxStatusAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetMailboxStatusString">
            <summary>Sets the shim of Imap.GetMailboxStatus(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetQuotaAsyncString">
            <summary>Sets the shim of Imap.GetQuotaAsync(String quotaRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetQuotaRootAsyncString">
            <summary>Sets the shim of Imap.GetQuotaRootAsync(String mailboxName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetQuotaRootString">
            <summary>Sets the shim of Imap.GetQuotaRoot(String mailboxName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetQuotaString">
            <summary>Sets the shim of Imap.GetQuota(String quotaRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.GetSslServerCert">
            <summary>Sets the shim of Imap.GetSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HasCapabilityStringString">
            <summary>Sets the shim of Imap.HasCapability(String name, String capabilityResponse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Imap.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Imap.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Imap.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Imap.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of Imap.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of Imap.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of Imap.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of Imap.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of Imap.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of Imap.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of Imap.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of Imap.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of Imap.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of Imap.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IdleCheckAsyncInt32">
            <summary>Sets the shim of Imap.IdleCheckAsync(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IdleCheckInt32">
            <summary>Sets the shim of Imap.IdleCheck(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IdleDone">
            <summary>Sets the shim of Imap.IdleDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IdleDoneAsync">
            <summary>Sets the shim of Imap.IdleDoneAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IdleStart">
            <summary>Sets the shim of Imap.IdleStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IdleStartAsync">
            <summary>Sets the shim of Imap.IdleStartAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IsConnected">
            <summary>Sets the shim of Imap.IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IsLoggedIn">
            <summary>Sets the shim of Imap.IsLoggedIn()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.IsUnlocked">
            <summary>Sets the shim of Imap.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.KeepSessionLogGet">
            <summary>Sets the shim of Imap.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Imap.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastAppendedMimeGet">
            <summary>Sets the shim of Imap.get_LastAppendedMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastCommandGet">
            <summary>Sets the shim of Imap.get_LastCommand()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Imap.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Imap.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Imap.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastIntermediateResponseGet">
            <summary>Sets the shim of Imap.get_LastIntermediateResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Imap.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Imap.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastResponseCodeGet">
            <summary>Sets the shim of Imap.get_LastResponseCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LastResponseGet">
            <summary>Sets the shim of Imap.get_LastResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ListMailboxesAsyncStringString">
            <summary>Sets the shim of Imap.ListMailboxesAsync(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ListMailboxesStringString">
            <summary>Sets the shim of Imap.ListMailboxes(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ListSubscribedAsyncStringString">
            <summary>Sets the shim of Imap.ListSubscribedAsync(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ListSubscribedStringString">
            <summary>Sets the shim of Imap.ListSubscribed(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LoggedInUserGet">
            <summary>Sets the shim of Imap.get_LoggedInUser()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LoginAsyncStringString">
            <summary>Sets the shim of Imap.LoginAsync(String loginName, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LoginStringString">
            <summary>Sets the shim of Imap.Login(String loginName, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.Logout">
            <summary>Sets the shim of Imap.Logout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.LogoutAsync">
            <summary>Sets the shim of Imap.LogoutAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.MoveMessagesAsyncMessageSetString">
            <summary>Sets the shim of Imap.MoveMessagesAsync(MessageSet messageSet, String destFolder)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.MoveMessagesMessageSetString">
            <summary>Sets the shim of Imap.MoveMessages(MessageSet messageSet, String destFolder)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.Noop">
            <summary>Sets the shim of Imap.Noop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.NoopAsync">
            <summary>Sets the shim of Imap.NoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.NumMessagesGet">
            <summary>Sets the shim of Imap.get_NumMessages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnAbortCheckAddImapAbortCheckEventHandler">
            <summary>Sets the shim of Imap.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Imap.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnAbortCheckRemoveImapAbortCheckEventHandler">
            <summary>Sets the shim of Imap.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnBinaryDataAddImapBinaryDataEventHandler">
            <summary>Sets the shim of Imap.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Imap.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnBinaryDataRemoveImapBinaryDataEventHandler">
            <summary>Sets the shim of Imap.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnPercentDoneAddImapPercentDoneEventHandler">
            <summary>Sets the shim of Imap.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Imap.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnPercentDoneRemoveImapPercentDoneEventHandler">
            <summary>Sets the shim of Imap.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnProgressInfoAddImapProgressInfoEventHandler">
            <summary>Sets the shim of Imap.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Imap.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnProgressInfoRemoveImapProgressInfoEventHandler">
            <summary>Sets the shim of Imap.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnTaskCompletedAddImapTaskCompletedEventHandler">
            <summary>Sets the shim of Imap.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Imap.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnTaskCompletedRemoveImapTaskCompletedEventHandler">
            <summary>Sets the shim of Imap.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnTextDataAddImapTextDataEventHandler">
            <summary>Sets the shim of Imap.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Imap.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.OnTextDataRemoveImapTextDataEventHandler">
            <summary>Sets the shim of Imap.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PeekModeGet">
            <summary>Sets the shim of Imap.get_PeekMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PeekModeSetBoolean">
            <summary>Sets the shim of Imap.set_PeekMode(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Imap.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Imap.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PortGet">
            <summary>Sets the shim of Imap.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PortSetInt32">
            <summary>Sets the shim of Imap.set_Port(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Imap.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Imap.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of Imap.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of Imap.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.RefetchMailFlagsAsyncEmail">
            <summary>Sets the shim of Imap.RefetchMailFlagsAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.RefetchMailFlagsEmail">
            <summary>Sets the shim of Imap.RefetchMailFlags(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.RenameMailboxAsyncStringString">
            <summary>Sets the shim of Imap.RenameMailboxAsync(String fromMailbox, String toMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.RenameMailboxStringString">
            <summary>Sets the shim of Imap.RenameMailbox(String fromMailbox, String toMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.RequireSslCertVerifyGet">
            <summary>Sets the shim of Imap.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Imap.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Imap.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SearchAsyncStringBoolean">
            <summary>Sets the shim of Imap.SearchAsync(String criteria, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SearchCharsetGet">
            <summary>Sets the shim of Imap.get_SearchCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SearchCharsetSetString">
            <summary>Sets the shim of Imap.set_SearchCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SearchStringBoolean">
            <summary>Sets the shim of Imap.Search(String criteria, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SelectMailboxAsyncString">
            <summary>Sets the shim of Imap.SelectMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SelectMailboxString">
            <summary>Sets the shim of Imap.SelectMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SelectedMailboxGet">
            <summary>Sets the shim of Imap.get_SelectedMailbox()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of Imap.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendBufferSizeSetInt32">
            <summary>Sets the shim of Imap.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendRawCommandAsyncString">
            <summary>Sets the shim of Imap.SendRawCommandAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendRawCommandBAsyncString">
            <summary>Sets the shim of Imap.SendRawCommandBAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendRawCommandBString">
            <summary>Sets the shim of Imap.SendRawCommandB(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendRawCommandCAsyncByteArray">
            <summary>Sets the shim of Imap.SendRawCommandCAsync(Byte[] cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendRawCommandCByteArray">
            <summary>Sets the shim of Imap.SendRawCommandC(Byte[] cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SendRawCommandString">
            <summary>Sets the shim of Imap.SendRawCommand(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SeparatorCharGet">
            <summary>Sets the shim of Imap.get_SeparatorChar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SeparatorCharSetString">
            <summary>Sets the shim of Imap.set_SeparatorChar(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SessionLogGet">
            <summary>Sets the shim of Imap.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetCSPCsp">
            <summary>Sets the shim of Imap.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of Imap.SetDecryptCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetDecryptCertCert">
            <summary>Sets the shim of Imap.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetFlagAsyncInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.SetFlagAsync(Int32 msgId, Boolean bUid, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetFlagInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.SetFlag(Int32 msgId, Boolean bUid, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetFlagsAsyncMessageSetStringInt32">
            <summary>Sets the shim of Imap.SetFlagsAsync(MessageSet messageSet, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetFlagsMessageSetStringInt32">
            <summary>Sets the shim of Imap.SetFlags(MessageSet messageSet, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetMailFlagAsyncEmailStringInt32">
            <summary>Sets the shim of Imap.SetMailFlagAsync(Email email, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetMailFlagEmailStringInt32">
            <summary>Sets the shim of Imap.SetMailFlag(Email email, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetQuotaAsyncStringStringInt32">
            <summary>Sets the shim of Imap.SetQuotaAsync(String quotaRoot, String resource, Int32 quota)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetQuotaStringStringInt32">
            <summary>Sets the shim of Imap.SetQuota(String quotaRoot, String resource, Int32 quota)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetSslClientCertCert">
            <summary>Sets the shim of Imap.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetSslClientCertPemStringString">
            <summary>Sets the shim of Imap.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Imap.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of Imap.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of Imap.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SoSndBufGet">
            <summary>Sets the shim of Imap.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of Imap.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of Imap.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of Imap.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of Imap.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of Imap.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksPortGet">
            <summary>Sets the shim of Imap.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of Imap.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of Imap.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of Imap.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksVersionGet">
            <summary>Sets the shim of Imap.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of Imap.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshAuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of Imap.SshAuthenticatePkAsync(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshAuthenticatePkStringSshKey">
            <summary>Sets the shim of Imap.SshAuthenticatePk(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshAuthenticatePwAsyncStringString">
            <summary>Sets the shim of Imap.SshAuthenticatePwAsync(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshAuthenticatePwStringString">
            <summary>Sets the shim of Imap.SshAuthenticatePw(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshCloseTunnel">
            <summary>Sets the shim of Imap.SshCloseTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshCloseTunnelAsync">
            <summary>Sets the shim of Imap.SshCloseTunnelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshOpenTunnelAsyncStringInt32">
            <summary>Sets the shim of Imap.SshOpenTunnelAsync(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SshOpenTunnelStringInt32">
            <summary>Sets the shim of Imap.SshOpenTunnel(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslAllowedCiphersGet">
            <summary>Sets the shim of Imap.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslAllowedCiphersSetString">
            <summary>Sets the shim of Imap.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslGet">
            <summary>Sets the shim of Imap.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslProtocolGet">
            <summary>Sets the shim of Imap.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslProtocolSetString">
            <summary>Sets the shim of Imap.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslServerCertVerifiedGet">
            <summary>Sets the shim of Imap.get_SslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SslSetBoolean">
            <summary>Sets the shim of Imap.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.StartTlsGet">
            <summary>Sets the shim of Imap.get_StartTls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.StartTlsSetBoolean">
            <summary>Sets the shim of Imap.set_StartTls(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.StoreFlagsAsyncInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.StoreFlagsAsync(Int32 msgId, Boolean bUid, String flagNames, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.StoreFlagsInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.StoreFlags(Int32 msgId, Boolean bUid, String flagNames, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SubscribeAsyncString">
            <summary>Sets the shim of Imap.SubscribeAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.SubscribeString">
            <summary>Sets the shim of Imap.Subscribe(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.TlsCipherSuiteGet">
            <summary>Sets the shim of Imap.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.TlsPinSetGet">
            <summary>Sets the shim of Imap.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.TlsPinSetSetString">
            <summary>Sets the shim of Imap.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.TlsVersionGet">
            <summary>Sets the shim of Imap.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.ToString01">
            <summary>Sets the shim of Imap.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UidNextGet">
            <summary>Sets the shim of Imap.get_UidNext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UidValidityGet">
            <summary>Sets the shim of Imap.get_UidValidity()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Imap.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UnsubscribeAsyncString">
            <summary>Sets the shim of Imap.UnsubscribeAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UnsubscribeString">
            <summary>Sets the shim of Imap.Unsubscribe(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Imap.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UseSshSsh">
            <summary>Sets the shim of Imap.UseSsh(Ssh ssh)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.UseSshTunnelSocket">
            <summary>Sets the shim of Imap.UseSshTunnel(Socket tunnel)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Imap.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Imap.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances.VersionGet">
            <summary>Sets the shim of Imap.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances._Imap">
            <summary>Sets the shim of Imap.!Imap()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AllInstances._Imap01">
            <summary>Sets the shim of Imap.~Imap()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMailAsyncStringEmail">
            <summary>Sets the shim of Imap.AppendMailAsync(String mailbox, Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMailStringEmail">
            <summary>Sets the shim of Imap.AppendMail(String mailbox, Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeAsyncStringString">
            <summary>Sets the shim of Imap.AppendMimeAsync(String mailbox, String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeStringString">
            <summary>Sets the shim of Imap.AppendMime(String mailbox, String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithDateStrAsyncStringStringString">
            <summary>Sets the shim of Imap.AppendMimeWithDateStrAsync(String mailbox, String mimeText, String internalDateStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithDateStrStringStringString">
            <summary>Sets the shim of Imap.AppendMimeWithDateStr(String mailbox, String mimeText, String internalDateStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithDateStringStringDateTime">
            <summary>Sets the shim of Imap.AppendMimeWithDate(String mailbox, String mimeText, DateTime internalDate)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithFlagsAsyncStringStringBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlagsAsync(String mailbox, String mimeText, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithFlagsSbAsyncStringStringBuilderBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlagsSbAsync(String mailbox, StringBuilder sbMime, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithFlagsSbStringStringBuilderBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlagsSb(String mailbox, StringBuilder sbMime, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendMimeWithFlagsStringStringBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Imap.AppendMimeWithFlags(String mailbox, String mimeText, Boolean seen, Boolean flagged, Boolean answered, Boolean draft)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendSeenGet">
            <summary>Sets the shim of Imap.get_AppendSeen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendSeenSetBoolean">
            <summary>Sets the shim of Imap.set_AppendSeen(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AppendUidGet">
            <summary>Sets the shim of Imap.get_AppendUid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AuthMethodGet">
            <summary>Sets the shim of Imap.get_AuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AuthMethodSetString">
            <summary>Sets the shim of Imap.set_AuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AuthzIdGet">
            <summary>Sets the shim of Imap.get_AuthzId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AuthzIdSetString">
            <summary>Sets the shim of Imap.set_AuthzId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AutoDownloadAttachmentsGet">
            <summary>Sets the shim of Imap.get_AutoDownloadAttachments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AutoDownloadAttachmentsSetBoolean">
            <summary>Sets the shim of Imap.set_AutoDownloadAttachments(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AutoFixGet">
            <summary>Sets the shim of Imap.get_AutoFix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.AutoFixSetBoolean">
            <summary>Sets the shim of Imap.set_AutoFix(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimImap.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimImap.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimImap.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Capability">
            <summary>Sets the shim of Imap.Capability()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CapabilityAsync">
            <summary>Sets the shim of Imap.CapabilityAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CheckConnection">
            <summary>Sets the shim of Imap.CheckConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CheckForNewEmail">
            <summary>Sets the shim of Imap.CheckForNewEmail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CheckForNewEmailAsync">
            <summary>Sets the shim of Imap.CheckForNewEmailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ClearSessionLog">
            <summary>Sets the shim of Imap.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ClientIpAddressGet">
            <summary>Sets the shim of Imap.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ClientIpAddressSetString">
            <summary>Sets the shim of Imap.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CloseMailboxAsyncString">
            <summary>Sets the shim of Imap.CloseMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CloseMailboxString">
            <summary>Sets the shim of Imap.CloseMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ConnectAsyncString">
            <summary>Sets the shim of Imap.ConnectAsync(String domainName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ConnectString">
            <summary>Sets the shim of Imap.Connect(String domainName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ConnectTimeoutGet">
            <summary>Sets the shim of Imap.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Imap.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ConnectedToHostGet">
            <summary>Sets the shim of Imap.get_ConnectedToHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Constructor">
            <summary>Sets the shim of Imap.Imap()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CopyAsyncInt32BooleanString">
            <summary>Sets the shim of Imap.CopyAsync(Int32 msgId, Boolean bUid, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CopyInt32BooleanString">
            <summary>Sets the shim of Imap.Copy(Int32 msgId, Boolean bUid, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CopyMultipleAsyncMessageSetString">
            <summary>Sets the shim of Imap.CopyMultipleAsync(MessageSet messageSet, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CopyMultipleMessageSetString">
            <summary>Sets the shim of Imap.CopyMultiple(MessageSet messageSet, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CopySequenceAsyncInt32Int32String">
            <summary>Sets the shim of Imap.CopySequenceAsync(Int32 startSeqNum, Int32 count, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CopySequenceInt32Int32String">
            <summary>Sets the shim of Imap.CopySequence(Int32 startSeqNum, Int32 count, String copyToMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CreateMailboxAsyncString">
            <summary>Sets the shim of Imap.CreateMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.CreateMailboxString">
            <summary>Sets the shim of Imap.CreateMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DebugLogFilePathGet">
            <summary>Sets the shim of Imap.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DebugLogFilePathSetString">
            <summary>Sets the shim of Imap.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DeleteMailboxAsyncString">
            <summary>Sets the shim of Imap.DeleteMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DeleteMailboxString">
            <summary>Sets the shim of Imap.DeleteMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Disconnect">
            <summary>Sets the shim of Imap.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DisconnectAsync">
            <summary>Sets the shim of Imap.DisconnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Dispose">
            <summary>Sets the shim of Imap.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DisposeBoolean">
            <summary>Sets the shim of Imap.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DomainGet">
            <summary>Sets the shim of Imap.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.DomainSetString">
            <summary>Sets the shim of Imap.set_Domain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.EnableEventsGet">
            <summary>Sets the shim of Imap.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.EnableEventsSetBoolean">
            <summary>Sets the shim of Imap.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ExamineMailboxAsyncString">
            <summary>Sets the shim of Imap.ExamineMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ExamineMailboxString">
            <summary>Sets the shim of Imap.ExamineMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Expunge">
            <summary>Sets the shim of Imap.Expunge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ExpungeAndClose">
            <summary>Sets the shim of Imap.ExpungeAndClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ExpungeAndCloseAsync">
            <summary>Sets the shim of Imap.ExpungeAndCloseAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ExpungeAsync">
            <summary>Sets the shim of Imap.ExpungeAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentAsyncEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachmentAsync(Email emailObject, Int32 attachmentIndex, String saveToPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentBdAsyncEmailInt32BinData">
            <summary>Sets the shim of Imap.FetchAttachmentBdAsync(Email email, Int32 attachmentIndex, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentBdEmailInt32BinData">
            <summary>Sets the shim of Imap.FetchAttachmentBd(Email email, Int32 attachmentIndex, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentBytesAsyncEmailInt32">
            <summary>Sets the shim of Imap.FetchAttachmentBytesAsync(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentBytesEmailInt32">
            <summary>Sets the shim of Imap.FetchAttachmentBytes(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachment(Email emailObject, Int32 attachmentIndex, String saveToPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentSbAsyncEmailInt32StringStringBuilder">
            <summary>Sets the shim of Imap.FetchAttachmentSbAsync(Email email, Int32 attachmentIndex, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentSbEmailInt32StringStringBuilder">
            <summary>Sets the shim of Imap.FetchAttachmentSb(Email email, Int32 attachmentIndex, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentStringAsyncEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachmentStringAsync(Email emailObject, Int32 attachmentIndex, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchAttachmentStringEmailInt32String">
            <summary>Sets the shim of Imap.FetchAttachmentString(Email emailObject, Int32 attachmentIndex, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchBundleAsMimeAsyncMessageSet">
            <summary>Sets the shim of Imap.FetchBundleAsMimeAsync(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchBundleAsMimeMessageSet">
            <summary>Sets the shim of Imap.FetchBundleAsMime(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchBundleAsyncMessageSet">
            <summary>Sets the shim of Imap.FetchBundleAsync(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchBundleMessageSet">
            <summary>Sets the shim of Imap.FetchBundle(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchChunkAsyncInt32Int32MessageSetMessageSet">
            <summary>Sets the shim of Imap.FetchChunkAsync(Int32 startSeqNum, Int32 count, MessageSet failedSet, MessageSet fetchedSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchChunkInt32Int32MessageSetMessageSet">
            <summary>Sets the shim of Imap.FetchChunk(Int32 startSeqNum, Int32 count, MessageSet failedSet, MessageSet fetchedSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchFlagsAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchFlagsAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchFlagsInt32Boolean">
            <summary>Sets the shim of Imap.FetchFlags(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchHeadersAsyncMessageSet">
            <summary>Sets the shim of Imap.FetchHeadersAsync(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchHeadersMessageSet">
            <summary>Sets the shim of Imap.FetchHeaders(MessageSet messageSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSequenceAsMimeAsyncInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceAsMimeAsync(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSequenceAsMimeInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceAsMime(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSequenceAsyncInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceAsync(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSequenceHeadersAsyncInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceHeadersAsync(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSequenceHeadersInt32Int32">
            <summary>Sets the shim of Imap.FetchSequenceHeaders(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSequenceInt32Int32">
            <summary>Sets the shim of Imap.FetchSequence(Int32 startSeqNum, Int32 numMessages)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleAsMimeAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleAsMimeAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleAsMimeInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleAsMime(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleAsMimeSbAsyncInt32BooleanStringBuilder">
            <summary>Sets the shim of Imap.FetchSingleAsMimeSbAsync(Int32 msgId, Boolean bUid, StringBuilder sbMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleAsMimeSbInt32BooleanStringBuilder">
            <summary>Sets the shim of Imap.FetchSingleAsMimeSb(Int32 msgId, Boolean bUid, StringBuilder sbMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleHeaderAsMimeAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeaderAsMimeAsync(Int32 msgId, Boolean bUID)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleHeaderAsMimeInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeaderAsMime(Int32 msgId, Boolean bUID)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleHeaderAsyncInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeaderAsync(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleHeaderInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingleHeader(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FetchSingleInt32Boolean">
            <summary>Sets the shim of Imap.FetchSingle(Int32 msgId, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Imap.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Imap.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Imap.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Imap.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Imap.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Imap.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetAllUids">
            <summary>Sets the shim of Imap.GetAllUids()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetAllUidsAsync">
            <summary>Sets the shim of Imap.GetAllUidsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailAttachFilenameEmailInt32">
            <summary>Sets the shim of Imap.GetMailAttachFilename(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailAttachSizeEmailInt32">
            <summary>Sets the shim of Imap.GetMailAttachSize(Email email, Int32 attachIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailFlagEmailString">
            <summary>Sets the shim of Imap.GetMailFlag(Email email, String flagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailNumAttachEmail">
            <summary>Sets the shim of Imap.GetMailNumAttach(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailSizeEmail">
            <summary>Sets the shim of Imap.GetMailSize(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailboxStatusAsyncString">
            <summary>Sets the shim of Imap.GetMailboxStatusAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetMailboxStatusString">
            <summary>Sets the shim of Imap.GetMailboxStatus(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetQuotaAsyncString">
            <summary>Sets the shim of Imap.GetQuotaAsync(String quotaRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetQuotaRootAsyncString">
            <summary>Sets the shim of Imap.GetQuotaRootAsync(String mailboxName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetQuotaRootString">
            <summary>Sets the shim of Imap.GetQuotaRoot(String mailboxName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetQuotaString">
            <summary>Sets the shim of Imap.GetQuota(String quotaRoot)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.GetSslServerCert">
            <summary>Sets the shim of Imap.GetSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HasCapabilityStringString">
            <summary>Sets the shim of Imap.HasCapability(String name, String capabilityResponse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HeartbeatMsGet">
            <summary>Sets the shim of Imap.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HeartbeatMsSetInt32">
            <summary>Sets the shim of Imap.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Imap.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Imap.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyDomainGet">
            <summary>Sets the shim of Imap.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyDomainSetString">
            <summary>Sets the shim of Imap.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyHostnameGet">
            <summary>Sets the shim of Imap.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyHostnameSetString">
            <summary>Sets the shim of Imap.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyPasswordGet">
            <summary>Sets the shim of Imap.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyPasswordSetString">
            <summary>Sets the shim of Imap.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyPortGet">
            <summary>Sets the shim of Imap.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyPortSetInt32">
            <summary>Sets the shim of Imap.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyUsernameGet">
            <summary>Sets the shim of Imap.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.HttpProxyUsernameSetString">
            <summary>Sets the shim of Imap.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IdleCheckAsyncInt32">
            <summary>Sets the shim of Imap.IdleCheckAsync(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IdleCheckInt32">
            <summary>Sets the shim of Imap.IdleCheck(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IdleDone">
            <summary>Sets the shim of Imap.IdleDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IdleDoneAsync">
            <summary>Sets the shim of Imap.IdleDoneAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IdleStart">
            <summary>Sets the shim of Imap.IdleStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IdleStartAsync">
            <summary>Sets the shim of Imap.IdleStartAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IsConnected">
            <summary>Sets the shim of Imap.IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IsLoggedIn">
            <summary>Sets the shim of Imap.IsLoggedIn()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.IsUnlocked">
            <summary>Sets the shim of Imap.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.KeepSessionLogGet">
            <summary>Sets the shim of Imap.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Imap.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastAppendedMimeGet">
            <summary>Sets the shim of Imap.get_LastAppendedMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastCommandGet">
            <summary>Sets the shim of Imap.get_LastCommand()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastErrorHtmlGet">
            <summary>Sets the shim of Imap.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastErrorTextGet">
            <summary>Sets the shim of Imap.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastErrorXmlGet">
            <summary>Sets the shim of Imap.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastIntermediateResponseGet">
            <summary>Sets the shim of Imap.get_LastIntermediateResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastMethodSuccessGet">
            <summary>Sets the shim of Imap.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Imap.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastResponseCodeGet">
            <summary>Sets the shim of Imap.get_LastResponseCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LastResponseGet">
            <summary>Sets the shim of Imap.get_LastResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ListMailboxesAsyncStringString">
            <summary>Sets the shim of Imap.ListMailboxesAsync(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ListMailboxesStringString">
            <summary>Sets the shim of Imap.ListMailboxes(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ListSubscribedAsyncStringString">
            <summary>Sets the shim of Imap.ListSubscribedAsync(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ListSubscribedStringString">
            <summary>Sets the shim of Imap.ListSubscribed(String reference, String wildcardedMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LoggedInUserGet">
            <summary>Sets the shim of Imap.get_LoggedInUser()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LoginAsyncStringString">
            <summary>Sets the shim of Imap.LoginAsync(String loginName, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LoginStringString">
            <summary>Sets the shim of Imap.Login(String loginName, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Logout">
            <summary>Sets the shim of Imap.Logout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.LogoutAsync">
            <summary>Sets the shim of Imap.LogoutAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.MoveMessagesAsyncMessageSetString">
            <summary>Sets the shim of Imap.MoveMessagesAsync(MessageSet messageSet, String destFolder)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.MoveMessagesMessageSetString">
            <summary>Sets the shim of Imap.MoveMessages(MessageSet messageSet, String destFolder)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.Noop">
            <summary>Sets the shim of Imap.Noop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.NoopAsync">
            <summary>Sets the shim of Imap.NoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.NumMessagesGet">
            <summary>Sets the shim of Imap.get_NumMessages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnAbortCheckAddImapAbortCheckEventHandler">
            <summary>Sets the shim of Imap.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Imap.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnAbortCheckRemoveImapAbortCheckEventHandler">
            <summary>Sets the shim of Imap.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnBinaryDataAddImapBinaryDataEventHandler">
            <summary>Sets the shim of Imap.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Imap.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnBinaryDataRemoveImapBinaryDataEventHandler">
            <summary>Sets the shim of Imap.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnPercentDoneAddImapPercentDoneEventHandler">
            <summary>Sets the shim of Imap.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Imap.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnPercentDoneRemoveImapPercentDoneEventHandler">
            <summary>Sets the shim of Imap.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnProgressInfoAddImapProgressInfoEventHandler">
            <summary>Sets the shim of Imap.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Imap.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnProgressInfoRemoveImapProgressInfoEventHandler">
            <summary>Sets the shim of Imap.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnTaskCompletedAddImapTaskCompletedEventHandler">
            <summary>Sets the shim of Imap.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Imap.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnTaskCompletedRemoveImapTaskCompletedEventHandler">
            <summary>Sets the shim of Imap.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnTextDataAddImapTextDataEventHandler">
            <summary>Sets the shim of Imap.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Imap.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.OnTextDataRemoveImapTextDataEventHandler">
            <summary>Sets the shim of Imap.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PeekModeGet">
            <summary>Sets the shim of Imap.get_PeekMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PeekModeSetBoolean">
            <summary>Sets the shim of Imap.set_PeekMode(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PercentDoneScaleGet">
            <summary>Sets the shim of Imap.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Imap.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PortGet">
            <summary>Sets the shim of Imap.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PortSetInt32">
            <summary>Sets the shim of Imap.set_Port(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PreferIpv6Get">
            <summary>Sets the shim of Imap.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.PreferIpv6SetBoolean">
            <summary>Sets the shim of Imap.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ReadTimeoutGet">
            <summary>Sets the shim of Imap.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ReadTimeoutSetInt32">
            <summary>Sets the shim of Imap.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.RefetchMailFlagsAsyncEmail">
            <summary>Sets the shim of Imap.RefetchMailFlagsAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.RefetchMailFlagsEmail">
            <summary>Sets the shim of Imap.RefetchMailFlags(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.RenameMailboxAsyncStringString">
            <summary>Sets the shim of Imap.RenameMailboxAsync(String fromMailbox, String toMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.RenameMailboxStringString">
            <summary>Sets the shim of Imap.RenameMailbox(String fromMailbox, String toMailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.RequireSslCertVerifyGet">
            <summary>Sets the shim of Imap.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Imap.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SaveLastErrorString">
            <summary>Sets the shim of Imap.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SearchAsyncStringBoolean">
            <summary>Sets the shim of Imap.SearchAsync(String criteria, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SearchCharsetGet">
            <summary>Sets the shim of Imap.get_SearchCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SearchCharsetSetString">
            <summary>Sets the shim of Imap.set_SearchCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SearchStringBoolean">
            <summary>Sets the shim of Imap.Search(String criteria, Boolean bUid)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SelectMailboxAsyncString">
            <summary>Sets the shim of Imap.SelectMailboxAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SelectMailboxString">
            <summary>Sets the shim of Imap.SelectMailbox(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SelectedMailboxGet">
            <summary>Sets the shim of Imap.get_SelectedMailbox()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendBufferSizeGet">
            <summary>Sets the shim of Imap.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendBufferSizeSetInt32">
            <summary>Sets the shim of Imap.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendRawCommandAsyncString">
            <summary>Sets the shim of Imap.SendRawCommandAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendRawCommandBAsyncString">
            <summary>Sets the shim of Imap.SendRawCommandBAsync(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendRawCommandBString">
            <summary>Sets the shim of Imap.SendRawCommandB(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendRawCommandCAsyncByteArray">
            <summary>Sets the shim of Imap.SendRawCommandCAsync(Byte[] cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendRawCommandCByteArray">
            <summary>Sets the shim of Imap.SendRawCommandC(Byte[] cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SendRawCommandString">
            <summary>Sets the shim of Imap.SendRawCommand(String cmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SeparatorCharGet">
            <summary>Sets the shim of Imap.get_SeparatorChar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SeparatorCharSetString">
            <summary>Sets the shim of Imap.set_SeparatorChar(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SessionLogGet">
            <summary>Sets the shim of Imap.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetCSPCsp">
            <summary>Sets the shim of Imap.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of Imap.SetDecryptCert2(Cert cert, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetDecryptCertCert">
            <summary>Sets the shim of Imap.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetFlagAsyncInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.SetFlagAsync(Int32 msgId, Boolean bUid, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetFlagInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.SetFlag(Int32 msgId, Boolean bUid, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetFlagsAsyncMessageSetStringInt32">
            <summary>Sets the shim of Imap.SetFlagsAsync(MessageSet messageSet, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetFlagsMessageSetStringInt32">
            <summary>Sets the shim of Imap.SetFlags(MessageSet messageSet, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetMailFlagAsyncEmailStringInt32">
            <summary>Sets the shim of Imap.SetMailFlagAsync(Email email, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetMailFlagEmailStringInt32">
            <summary>Sets the shim of Imap.SetMailFlag(Email email, String flagName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetQuotaAsyncStringStringInt32">
            <summary>Sets the shim of Imap.SetQuotaAsync(String quotaRoot, String resource, Int32 quota)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetQuotaStringStringInt32">
            <summary>Sets the shim of Imap.SetQuota(String quotaRoot, String resource, Int32 quota)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetSslClientCertCert">
            <summary>Sets the shim of Imap.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetSslClientCertPemStringString">
            <summary>Sets the shim of Imap.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Imap.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SoRcvBufGet">
            <summary>Sets the shim of Imap.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SoRcvBufSetInt32">
            <summary>Sets the shim of Imap.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SoSndBufGet">
            <summary>Sets the shim of Imap.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SoSndBufSetInt32">
            <summary>Sets the shim of Imap.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksHostnameGet">
            <summary>Sets the shim of Imap.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksHostnameSetString">
            <summary>Sets the shim of Imap.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksPasswordGet">
            <summary>Sets the shim of Imap.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksPasswordSetString">
            <summary>Sets the shim of Imap.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksPortGet">
            <summary>Sets the shim of Imap.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksPortSetInt32">
            <summary>Sets the shim of Imap.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksUsernameGet">
            <summary>Sets the shim of Imap.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksUsernameSetString">
            <summary>Sets the shim of Imap.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksVersionGet">
            <summary>Sets the shim of Imap.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SocksVersionSetInt32">
            <summary>Sets the shim of Imap.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshAuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of Imap.SshAuthenticatePkAsync(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshAuthenticatePkStringSshKey">
            <summary>Sets the shim of Imap.SshAuthenticatePk(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshAuthenticatePwAsyncStringString">
            <summary>Sets the shim of Imap.SshAuthenticatePwAsync(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshAuthenticatePwStringString">
            <summary>Sets the shim of Imap.SshAuthenticatePw(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshCloseTunnel">
            <summary>Sets the shim of Imap.SshCloseTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshCloseTunnelAsync">
            <summary>Sets the shim of Imap.SshCloseTunnelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshOpenTunnelAsyncStringInt32">
            <summary>Sets the shim of Imap.SshOpenTunnelAsync(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SshOpenTunnelStringInt32">
            <summary>Sets the shim of Imap.SshOpenTunnel(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslAllowedCiphersGet">
            <summary>Sets the shim of Imap.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslAllowedCiphersSetString">
            <summary>Sets the shim of Imap.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslGet">
            <summary>Sets the shim of Imap.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslProtocolGet">
            <summary>Sets the shim of Imap.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslProtocolSetString">
            <summary>Sets the shim of Imap.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslServerCertVerifiedGet">
            <summary>Sets the shim of Imap.get_SslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SslSetBoolean">
            <summary>Sets the shim of Imap.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.StartTlsGet">
            <summary>Sets the shim of Imap.get_StartTls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.StartTlsSetBoolean">
            <summary>Sets the shim of Imap.set_StartTls(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.StoreFlagsAsyncInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.StoreFlagsAsync(Int32 msgId, Boolean bUid, String flagNames, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.StoreFlagsInt32BooleanStringInt32">
            <summary>Sets the shim of Imap.StoreFlags(Int32 msgId, Boolean bUid, String flagNames, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SubscribeAsyncString">
            <summary>Sets the shim of Imap.SubscribeAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.SubscribeString">
            <summary>Sets the shim of Imap.Subscribe(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.TlsCipherSuiteGet">
            <summary>Sets the shim of Imap.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.TlsPinSetGet">
            <summary>Sets the shim of Imap.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.TlsPinSetSetString">
            <summary>Sets the shim of Imap.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.TlsVersionGet">
            <summary>Sets the shim of Imap.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.ToString">
            <summary>Sets the shim of Imap.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UidNextGet">
            <summary>Sets the shim of Imap.get_UidNext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UidValidityGet">
            <summary>Sets the shim of Imap.get_UidValidity()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UnlockComponentString">
            <summary>Sets the shim of Imap.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UnsubscribeAsyncString">
            <summary>Sets the shim of Imap.UnsubscribeAsync(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UnsubscribeString">
            <summary>Sets the shim of Imap.Unsubscribe(String mailbox)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Imap.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UseSshSsh">
            <summary>Sets the shim of Imap.UseSsh(Ssh ssh)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.UseSshTunnelSocket">
            <summary>Sets the shim of Imap.UseSshTunnel(Socket tunnel)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.VerboseLoggingGet">
            <summary>Sets the shim of Imap.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Imap.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap.VersionGet">
            <summary>Sets the shim of Imap.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap._Imap">
            <summary>Sets the shim of Imap.!Imap()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimImap._Imap01">
            <summary>Sets the shim of Imap.~Imap()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJavaKeyStore">
            <summary>Shim type of Chilkat.JavaKeyStore</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJavaKeyStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJavaKeyStore.#ctor(Chilkat.JavaKeyStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AddPfxPfxStringString">
            <summary>Sets the shim of JavaKeyStore.AddPfx(Pfx pfx, String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AddPrivateKeyCertStringString">
            <summary>Sets the shim of JavaKeyStore.AddPrivateKey(Cert cert, String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AddSecretKeyStringStringStringStringString">
            <summary>Sets the shim of JavaKeyStore.AddSecretKey(String encodedKeyBytes, String encoding, String algorithm, String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AddTrustedCertCertString">
            <summary>Sets the shim of JavaKeyStore.AddTrustedCert(Cert cert, String alias)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJavaKeyStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.AddPfxPfxStringString">
            <summary>Sets the shim of JavaKeyStore.AddPfx(Pfx pfx, String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.AddPrivateKeyCertStringString">
            <summary>Sets the shim of JavaKeyStore.AddPrivateKey(Cert cert, String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.AddSecretKeyStringStringStringStringString">
            <summary>Sets the shim of JavaKeyStore.AddSecretKey(String encodedKeyBytes, String encoding, String algorithm, String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.AddTrustedCertCertString">
            <summary>Sets the shim of JavaKeyStore.AddTrustedCert(Cert cert, String alias)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ChangePasswordInt32StringString">
            <summary>Sets the shim of JavaKeyStore.ChangePassword(Int32 index, String oldPassword, String newPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of JavaKeyStore.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of JavaKeyStore.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.Dispose">
            <summary>Sets the shim of JavaKeyStore.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.DisposeBoolean">
            <summary>Sets the shim of JavaKeyStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.FindCertChainStringBoolean">
            <summary>Sets the shim of JavaKeyStore.FindCertChain(String alias, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.FindPrivateKeyStringStringBoolean">
            <summary>Sets the shim of JavaKeyStore.FindPrivateKey(String password, String alias, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.FindTrustedCertStringBoolean">
            <summary>Sets the shim of JavaKeyStore.FindTrustedCert(String alias, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetCertChainInt32">
            <summary>Sets the shim of JavaKeyStore.GetCertChain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetPrivateKeyAliasInt32">
            <summary>Sets the shim of JavaKeyStore.GetPrivateKeyAlias(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetPrivateKeyStringInt32">
            <summary>Sets the shim of JavaKeyStore.GetPrivateKey(String password, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetSecretKeyAliasInt32">
            <summary>Sets the shim of JavaKeyStore.GetSecretKeyAlias(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetSecretKeyStringInt32String">
            <summary>Sets the shim of JavaKeyStore.GetSecretKey(String password, Int32 index, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetTrustedCertAliasInt32">
            <summary>Sets the shim of JavaKeyStore.GetTrustedCertAlias(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.GetTrustedCertInt32">
            <summary>Sets the shim of JavaKeyStore.GetTrustedCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of JavaKeyStore.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of JavaKeyStore.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of JavaKeyStore.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of JavaKeyStore.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LoadBinaryStringByteArray">
            <summary>Sets the shim of JavaKeyStore.LoadBinary(String password, Byte[] jksData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LoadEncodedStringStringString">
            <summary>Sets the shim of JavaKeyStore.LoadEncoded(String password, String jksEncData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LoadFileStringString">
            <summary>Sets the shim of JavaKeyStore.LoadFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.LoadJwkSetStringJsonObject">
            <summary>Sets the shim of JavaKeyStore.LoadJwkSet(String password, JsonObject jwkSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.NumPrivateKeysGet">
            <summary>Sets the shim of JavaKeyStore.get_NumPrivateKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.NumSecretKeysGet">
            <summary>Sets the shim of JavaKeyStore.get_NumSecretKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.NumTrustedCertsGet">
            <summary>Sets the shim of JavaKeyStore.get_NumTrustedCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.RemoveEntryInt32Int32">
            <summary>Sets the shim of JavaKeyStore.RemoveEntry(Int32 entryType, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.RequireCompleteChainGet">
            <summary>Sets the shim of JavaKeyStore.get_RequireCompleteChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.RequireCompleteChainSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_RequireCompleteChain(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of JavaKeyStore.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.SetAliasInt32Int32String">
            <summary>Sets the shim of JavaKeyStore.SetAlias(Int32 entryType, Int32 index, String alias)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToBinaryString">
            <summary>Sets the shim of JavaKeyStore.ToBinary(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToEncodedStringStringString">
            <summary>Sets the shim of JavaKeyStore.ToEncodedString(String password, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToFileStringString">
            <summary>Sets the shim of JavaKeyStore.ToFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToJwkSetStringStringBuilder">
            <summary>Sets the shim of JavaKeyStore.ToJwkSet(String password, StringBuilder sbJwkSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToPemString">
            <summary>Sets the shim of JavaKeyStore.ToPem(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToPfxString">
            <summary>Sets the shim of JavaKeyStore.ToPfx(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.ToString01">
            <summary>Sets the shim of JavaKeyStore.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.UnlockComponentString">
            <summary>Sets the shim of JavaKeyStore.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of JavaKeyStore.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of JavaKeyStore.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.VerifyKeyedDigestGet">
            <summary>Sets the shim of JavaKeyStore.get_VerifyKeyedDigest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.VerifyKeyedDigestSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_VerifyKeyedDigest(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances.VersionGet">
            <summary>Sets the shim of JavaKeyStore.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances._JavaKeyStore">
            <summary>Sets the shim of JavaKeyStore.!JavaKeyStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.AllInstances._JavaKeyStore01">
            <summary>Sets the shim of JavaKeyStore.~JavaKeyStore()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJavaKeyStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJavaKeyStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJavaKeyStore.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ChangePasswordInt32StringString">
            <summary>Sets the shim of JavaKeyStore.ChangePassword(Int32 index, String oldPassword, String newPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.Constructor">
            <summary>Sets the shim of JavaKeyStore.JavaKeyStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.DebugLogFilePathGet">
            <summary>Sets the shim of JavaKeyStore.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.DebugLogFilePathSetString">
            <summary>Sets the shim of JavaKeyStore.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.Dispose">
            <summary>Sets the shim of JavaKeyStore.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.DisposeBoolean">
            <summary>Sets the shim of JavaKeyStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.FindCertChainStringBoolean">
            <summary>Sets the shim of JavaKeyStore.FindCertChain(String alias, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.FindPrivateKeyStringStringBoolean">
            <summary>Sets the shim of JavaKeyStore.FindPrivateKey(String password, String alias, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.FindTrustedCertStringBoolean">
            <summary>Sets the shim of JavaKeyStore.FindTrustedCert(String alias, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetCertChainInt32">
            <summary>Sets the shim of JavaKeyStore.GetCertChain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetPrivateKeyAliasInt32">
            <summary>Sets the shim of JavaKeyStore.GetPrivateKeyAlias(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetPrivateKeyStringInt32">
            <summary>Sets the shim of JavaKeyStore.GetPrivateKey(String password, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetSecretKeyAliasInt32">
            <summary>Sets the shim of JavaKeyStore.GetSecretKeyAlias(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetSecretKeyStringInt32String">
            <summary>Sets the shim of JavaKeyStore.GetSecretKey(String password, Int32 index, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetTrustedCertAliasInt32">
            <summary>Sets the shim of JavaKeyStore.GetTrustedCertAlias(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.GetTrustedCertInt32">
            <summary>Sets the shim of JavaKeyStore.GetTrustedCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LastErrorHtmlGet">
            <summary>Sets the shim of JavaKeyStore.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LastErrorTextGet">
            <summary>Sets the shim of JavaKeyStore.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LastErrorXmlGet">
            <summary>Sets the shim of JavaKeyStore.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LastMethodSuccessGet">
            <summary>Sets the shim of JavaKeyStore.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LoadBinaryStringByteArray">
            <summary>Sets the shim of JavaKeyStore.LoadBinary(String password, Byte[] jksData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LoadEncodedStringStringString">
            <summary>Sets the shim of JavaKeyStore.LoadEncoded(String password, String jksEncData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LoadFileStringString">
            <summary>Sets the shim of JavaKeyStore.LoadFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.LoadJwkSetStringJsonObject">
            <summary>Sets the shim of JavaKeyStore.LoadJwkSet(String password, JsonObject jwkSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.NumPrivateKeysGet">
            <summary>Sets the shim of JavaKeyStore.get_NumPrivateKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.NumSecretKeysGet">
            <summary>Sets the shim of JavaKeyStore.get_NumSecretKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.NumTrustedCertsGet">
            <summary>Sets the shim of JavaKeyStore.get_NumTrustedCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.RemoveEntryInt32Int32">
            <summary>Sets the shim of JavaKeyStore.RemoveEntry(Int32 entryType, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.RequireCompleteChainGet">
            <summary>Sets the shim of JavaKeyStore.get_RequireCompleteChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.RequireCompleteChainSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_RequireCompleteChain(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.SaveLastErrorString">
            <summary>Sets the shim of JavaKeyStore.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.SetAliasInt32Int32String">
            <summary>Sets the shim of JavaKeyStore.SetAlias(Int32 entryType, Int32 index, String alias)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToBinaryString">
            <summary>Sets the shim of JavaKeyStore.ToBinary(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToEncodedStringStringString">
            <summary>Sets the shim of JavaKeyStore.ToEncodedString(String password, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToFileStringString">
            <summary>Sets the shim of JavaKeyStore.ToFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToJwkSetStringStringBuilder">
            <summary>Sets the shim of JavaKeyStore.ToJwkSet(String password, StringBuilder sbJwkSet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToPemString">
            <summary>Sets the shim of JavaKeyStore.ToPem(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToPfxString">
            <summary>Sets the shim of JavaKeyStore.ToPfx(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.ToString">
            <summary>Sets the shim of JavaKeyStore.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.UnlockComponentString">
            <summary>Sets the shim of JavaKeyStore.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.UseCertVaultXmlCertVault">
            <summary>Sets the shim of JavaKeyStore.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.VerboseLoggingGet">
            <summary>Sets the shim of JavaKeyStore.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.VerboseLoggingSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.VerifyKeyedDigestGet">
            <summary>Sets the shim of JavaKeyStore.get_VerifyKeyedDigest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.VerifyKeyedDigestSetBoolean">
            <summary>Sets the shim of JavaKeyStore.set_VerifyKeyedDigest(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore.VersionGet">
            <summary>Sets the shim of JavaKeyStore.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore._JavaKeyStore">
            <summary>Sets the shim of JavaKeyStore.!JavaKeyStore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJavaKeyStore._JavaKeyStore01">
            <summary>Sets the shim of JavaKeyStore.~JavaKeyStore()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJsonArray">
            <summary>Shim type of Chilkat.JsonArray</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonArray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonArray.#ctor(Chilkat.JsonArray)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddArrayAtInt32">
            <summary>Sets the shim of JsonArray.AddArrayAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddBoolAtInt32Boolean">
            <summary>Sets the shim of JsonArray.AddBoolAt(Int32 index, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddIntAtInt32Int32">
            <summary>Sets the shim of JsonArray.AddIntAt(Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddNullAtInt32">
            <summary>Sets the shim of JsonArray.AddNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddNumberAtInt32String">
            <summary>Sets the shim of JsonArray.AddNumberAt(Int32 index, String numericStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddObjectAtInt32">
            <summary>Sets the shim of JsonArray.AddObjectAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AddStringAtInt32String">
            <summary>Sets the shim of JsonArray.AddStringAt(Int32 index, String value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJsonArray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddArrayAtInt32">
            <summary>Sets the shim of JsonArray.AddArrayAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddBoolAtInt32Boolean">
            <summary>Sets the shim of JsonArray.AddBoolAt(Int32 index, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddIntAtInt32Int32">
            <summary>Sets the shim of JsonArray.AddIntAt(Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddNullAtInt32">
            <summary>Sets the shim of JsonArray.AddNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddNumberAtInt32String">
            <summary>Sets the shim of JsonArray.AddNumberAt(Int32 index, String numericStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddObjectAtInt32">
            <summary>Sets the shim of JsonArray.AddObjectAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.AddStringAtInt32String">
            <summary>Sets the shim of JsonArray.AddStringAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.ArrayAtInt32">
            <summary>Sets the shim of JsonArray.ArrayAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.BoolAtInt32">
            <summary>Sets the shim of JsonArray.BoolAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of JsonArray.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of JsonArray.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.DeleteAtInt32">
            <summary>Sets the shim of JsonArray.DeleteAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.Dispose">
            <summary>Sets the shim of JsonArray.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.DisposeBoolean">
            <summary>Sets the shim of JsonArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.Emit">
            <summary>Sets the shim of JsonArray.Emit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.EmitCompactGet">
            <summary>Sets the shim of JsonArray.get_EmitCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.EmitCompactSetBoolean">
            <summary>Sets the shim of JsonArray.set_EmitCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.EmitCrlfGet">
            <summary>Sets the shim of JsonArray.get_EmitCrlf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.EmitCrlfSetBoolean">
            <summary>Sets the shim of JsonArray.set_EmitCrlf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.EmitSbStringBuilder">
            <summary>Sets the shim of JsonArray.EmitSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.IntAtInt32">
            <summary>Sets the shim of JsonArray.IntAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.IsNullAtInt32">
            <summary>Sets the shim of JsonArray.IsNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of JsonArray.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of JsonArray.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of JsonArray.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of JsonArray.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of JsonArray.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LoadSbStringBuilder">
            <summary>Sets the shim of JsonArray.LoadSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.LoadString">
            <summary>Sets the shim of JsonArray.Load(String jsonArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.ObjectAtInt32">
            <summary>Sets the shim of JsonArray.ObjectAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of JsonArray.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SetBoolAtInt32Boolean">
            <summary>Sets the shim of JsonArray.SetBoolAt(Int32 index, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SetIntAtInt32Int32">
            <summary>Sets the shim of JsonArray.SetIntAt(Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SetNullAtInt32">
            <summary>Sets the shim of JsonArray.SetNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SetNumberAtInt32String">
            <summary>Sets the shim of JsonArray.SetNumberAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SetStringAtInt32String">
            <summary>Sets the shim of JsonArray.SetStringAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.SizeGet">
            <summary>Sets the shim of JsonArray.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.StringAtInt32">
            <summary>Sets the shim of JsonArray.StringAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.ToString01">
            <summary>Sets the shim of JsonArray.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.TypeAtInt32">
            <summary>Sets the shim of JsonArray.TypeAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of JsonArray.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of JsonArray.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances.VersionGet">
            <summary>Sets the shim of JsonArray.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances._JsonArray">
            <summary>Sets the shim of JsonArray.!JsonArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.AllInstances._JsonArray01">
            <summary>Sets the shim of JsonArray.~JsonArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.ArrayAtInt32">
            <summary>Sets the shim of JsonArray.ArrayAt(Int32 index)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonArray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonArray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonArray.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.BoolAtInt32">
            <summary>Sets the shim of JsonArray.BoolAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.Constructor">
            <summary>Sets the shim of JsonArray.JsonArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.DebugLogFilePathGet">
            <summary>Sets the shim of JsonArray.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.DebugLogFilePathSetString">
            <summary>Sets the shim of JsonArray.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.DeleteAtInt32">
            <summary>Sets the shim of JsonArray.DeleteAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.Dispose">
            <summary>Sets the shim of JsonArray.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.DisposeBoolean">
            <summary>Sets the shim of JsonArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.Emit">
            <summary>Sets the shim of JsonArray.Emit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.EmitCompactGet">
            <summary>Sets the shim of JsonArray.get_EmitCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.EmitCompactSetBoolean">
            <summary>Sets the shim of JsonArray.set_EmitCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.EmitCrlfGet">
            <summary>Sets the shim of JsonArray.get_EmitCrlf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.EmitCrlfSetBoolean">
            <summary>Sets the shim of JsonArray.set_EmitCrlf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.EmitSbStringBuilder">
            <summary>Sets the shim of JsonArray.EmitSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.IntAtInt32">
            <summary>Sets the shim of JsonArray.IntAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.IsNullAtInt32">
            <summary>Sets the shim of JsonArray.IsNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LastErrorHtmlGet">
            <summary>Sets the shim of JsonArray.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LastErrorTextGet">
            <summary>Sets the shim of JsonArray.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LastErrorXmlGet">
            <summary>Sets the shim of JsonArray.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LastMethodSuccessGet">
            <summary>Sets the shim of JsonArray.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of JsonArray.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LoadSbStringBuilder">
            <summary>Sets the shim of JsonArray.LoadSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.LoadString">
            <summary>Sets the shim of JsonArray.Load(String jsonArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.ObjectAtInt32">
            <summary>Sets the shim of JsonArray.ObjectAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SaveLastErrorString">
            <summary>Sets the shim of JsonArray.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SetBoolAtInt32Boolean">
            <summary>Sets the shim of JsonArray.SetBoolAt(Int32 index, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SetIntAtInt32Int32">
            <summary>Sets the shim of JsonArray.SetIntAt(Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SetNullAtInt32">
            <summary>Sets the shim of JsonArray.SetNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SetNumberAtInt32String">
            <summary>Sets the shim of JsonArray.SetNumberAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SetStringAtInt32String">
            <summary>Sets the shim of JsonArray.SetStringAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.SizeGet">
            <summary>Sets the shim of JsonArray.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.StringAtInt32">
            <summary>Sets the shim of JsonArray.StringAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.ToString">
            <summary>Sets the shim of JsonArray.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.TypeAtInt32">
            <summary>Sets the shim of JsonArray.TypeAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.VerboseLoggingGet">
            <summary>Sets the shim of JsonArray.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.VerboseLoggingSetBoolean">
            <summary>Sets the shim of JsonArray.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray.VersionGet">
            <summary>Sets the shim of JsonArray.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray._JsonArray">
            <summary>Sets the shim of JsonArray.!JsonArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonArray._JsonArray01">
            <summary>Sets the shim of JsonArray.~JsonArray()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJsonObject">
            <summary>Shim type of Chilkat.JsonObject</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonObject.#ctor(Chilkat.JsonObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddArrayAtInt32String">
            <summary>Sets the shim of JsonObject.AddArrayAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddBoolAtInt32StringBoolean">
            <summary>Sets the shim of JsonObject.AddBoolAt(Int32 index, String name, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddIntAtInt32StringInt32">
            <summary>Sets the shim of JsonObject.AddIntAt(Int32 index, String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddNullAtInt32String">
            <summary>Sets the shim of JsonObject.AddNullAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddNumberAtInt32StringString">
            <summary>Sets the shim of JsonObject.AddNumberAt(Int32 index, String name, String numericStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddObjectAtInt32String">
            <summary>Sets the shim of JsonObject.AddObjectAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AddStringAtInt32StringString">
            <summary>Sets the shim of JsonObject.AddStringAt(Int32 index, String name, String value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJsonObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddArrayAtInt32String">
            <summary>Sets the shim of JsonObject.AddArrayAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddBoolAtInt32StringBoolean">
            <summary>Sets the shim of JsonObject.AddBoolAt(Int32 index, String name, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddIntAtInt32StringInt32">
            <summary>Sets the shim of JsonObject.AddIntAt(Int32 index, String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddNullAtInt32String">
            <summary>Sets the shim of JsonObject.AddNullAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddNumberAtInt32StringString">
            <summary>Sets the shim of JsonObject.AddNumberAt(Int32 index, String name, String numericStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddObjectAtInt32String">
            <summary>Sets the shim of JsonObject.AddObjectAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AddStringAtInt32StringString">
            <summary>Sets the shim of JsonObject.AddStringAt(Int32 index, String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AppendArrayString">
            <summary>Sets the shim of JsonObject.AppendArray(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AppendBoolStringBoolean">
            <summary>Sets the shim of JsonObject.AppendBool(String name, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AppendIntStringInt32">
            <summary>Sets the shim of JsonObject.AppendInt(String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AppendObjectString">
            <summary>Sets the shim of JsonObject.AppendObject(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AppendStringArrayStringStringTable">
            <summary>Sets the shim of JsonObject.AppendStringArray(String name, StringTable values)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.AppendStringStringString">
            <summary>Sets the shim of JsonObject.AppendString(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.ArrayAtInt32">
            <summary>Sets the shim of JsonObject.ArrayAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.ArrayOfString">
            <summary>Sets the shim of JsonObject.ArrayOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.BoolAtInt32">
            <summary>Sets the shim of JsonObject.BoolAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.BoolOfString">
            <summary>Sets the shim of JsonObject.BoolOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.BytesOfStringStringBinData">
            <summary>Sets the shim of JsonObject.BytesOf(String jsonPath, String encoding, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.Clone">
            <summary>Sets the shim of JsonObject.Clone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of JsonObject.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of JsonObject.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DeleteAtInt32">
            <summary>Sets the shim of JsonObject.DeleteAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DeleteString">
            <summary>Sets the shim of JsonObject.Delete(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DelimiterCharGet">
            <summary>Sets the shim of JsonObject.get_DelimiterChar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DelimiterCharSetString">
            <summary>Sets the shim of JsonObject.set_DelimiterChar(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.Dispose">
            <summary>Sets the shim of JsonObject.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.DisposeBoolean">
            <summary>Sets the shim of JsonObject.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.Emit">
            <summary>Sets the shim of JsonObject.Emit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.EmitCompactGet">
            <summary>Sets the shim of JsonObject.get_EmitCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.EmitCompactSetBoolean">
            <summary>Sets the shim of JsonObject.set_EmitCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.EmitCrLfGet">
            <summary>Sets the shim of JsonObject.get_EmitCrLf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.EmitCrLfSetBoolean">
            <summary>Sets the shim of JsonObject.set_EmitCrLf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.EmitSbStringBuilder">
            <summary>Sets the shim of JsonObject.EmitSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.EmitWithSubsHashtableBoolean">
            <summary>Sets the shim of JsonObject.EmitWithSubs(Hashtable subs, Boolean omitEmpty)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.FindObjectWithMemberString">
            <summary>Sets the shim of JsonObject.FindObjectWithMember(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.FindRecordStringStringStringBoolean">
            <summary>Sets the shim of JsonObject.FindRecord(String arrayPath, String relPath, String value, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.FindRecordStringStringStringStringBooleanString">
            <summary>Sets the shim of JsonObject.FindRecordString(String arrayPath, String relPath, String value, Boolean caseSensitive, String retRelPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.FirebaseApplyEventStringString">
            <summary>Sets the shim of JsonObject.FirebaseApplyEvent(String name, String data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.FirebasePatchStringString">
            <summary>Sets the shim of JsonObject.FirebasePatch(String jsonPath, String jsonData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.FirebasePutStringString">
            <summary>Sets the shim of JsonObject.FirebasePut(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.GetDocRoot">
            <summary>Sets the shim of JsonObject.GetDocRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.HasMemberString">
            <summary>Sets the shim of JsonObject.HasMember(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.IGet">
            <summary>Sets the shim of JsonObject.get_I()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.ISetInt32">
            <summary>Sets the shim of JsonObject.set_I(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.IndexOfString">
            <summary>Sets the shim of JsonObject.IndexOf(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.IntAtInt32">
            <summary>Sets the shim of JsonObject.IntAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.IntOfString">
            <summary>Sets the shim of JsonObject.IntOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.IsNullAtInt32">
            <summary>Sets the shim of JsonObject.IsNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.IsNullOfString">
            <summary>Sets the shim of JsonObject.IsNullOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.JGet">
            <summary>Sets the shim of JsonObject.get_J()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.JSetInt32">
            <summary>Sets the shim of JsonObject.set_J(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.JsonTypeOfString">
            <summary>Sets the shim of JsonObject.JsonTypeOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.KGet">
            <summary>Sets the shim of JsonObject.get_K()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.KSetInt32">
            <summary>Sets the shim of JsonObject.set_K(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of JsonObject.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of JsonObject.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of JsonObject.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of JsonObject.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of JsonObject.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LoadFileString">
            <summary>Sets the shim of JsonObject.LoadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LoadPredefinedString">
            <summary>Sets the shim of JsonObject.LoadPredefined(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LoadSbStringBuilder">
            <summary>Sets the shim of JsonObject.LoadSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.LoadString">
            <summary>Sets the shim of JsonObject.Load(String json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.NameAtInt32">
            <summary>Sets the shim of JsonObject.NameAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.ObjectAtInt32">
            <summary>Sets the shim of JsonObject.ObjectAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.ObjectOfString">
            <summary>Sets the shim of JsonObject.ObjectOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.PredefineString">
            <summary>Sets the shim of JsonObject.Predefine(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.RenameAtInt32String">
            <summary>Sets the shim of JsonObject.RenameAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.RenameStringString">
            <summary>Sets the shim of JsonObject.Rename(String oldName, String newName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of JsonObject.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetBoolAtInt32Boolean">
            <summary>Sets the shim of JsonObject.SetBoolAt(Int32 index, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetBoolOfStringBoolean">
            <summary>Sets the shim of JsonObject.SetBoolOf(String jsonPath, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetIntAtInt32Int32">
            <summary>Sets the shim of JsonObject.SetIntAt(Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetIntOfStringInt32">
            <summary>Sets the shim of JsonObject.SetIntOf(String jsonPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetNullAtInt32">
            <summary>Sets the shim of JsonObject.SetNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetNullOfString">
            <summary>Sets the shim of JsonObject.SetNullOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetNumberAtInt32String">
            <summary>Sets the shim of JsonObject.SetNumberAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetNumberOfStringString">
            <summary>Sets the shim of JsonObject.SetNumberOf(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetStringAtInt32String">
            <summary>Sets the shim of JsonObject.SetStringAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SetStringOfStringString">
            <summary>Sets the shim of JsonObject.SetStringOf(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SizeGet">
            <summary>Sets the shim of JsonObject.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.SizeOfArrayString">
            <summary>Sets the shim of JsonObject.SizeOfArray(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.StringAtInt32">
            <summary>Sets the shim of JsonObject.StringAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.StringOfSbStringStringBuilder">
            <summary>Sets the shim of JsonObject.StringOfSb(String jsonPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.StringOfString">
            <summary>Sets the shim of JsonObject.StringOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.ToString01">
            <summary>Sets the shim of JsonObject.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.TypeAtInt32">
            <summary>Sets the shim of JsonObject.TypeAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateBdStringStringBinData">
            <summary>Sets the shim of JsonObject.UpdateBd(String jsonPath, String encoding, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateBoolStringBoolean">
            <summary>Sets the shim of JsonObject.UpdateBool(String jsonPath, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateIntStringInt32">
            <summary>Sets the shim of JsonObject.UpdateInt(String jsonPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateNullString">
            <summary>Sets the shim of JsonObject.UpdateNull(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateNumberStringString">
            <summary>Sets the shim of JsonObject.UpdateNumber(String jsonPath, String numericStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateSbStringStringBuilder">
            <summary>Sets the shim of JsonObject.UpdateSb(String jsonPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.UpdateStringStringString">
            <summary>Sets the shim of JsonObject.UpdateString(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of JsonObject.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of JsonObject.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances.VersionGet">
            <summary>Sets the shim of JsonObject.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances._JsonObject">
            <summary>Sets the shim of JsonObject.!JsonObject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AllInstances._JsonObject01">
            <summary>Sets the shim of JsonObject.~JsonObject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AppendArrayString">
            <summary>Sets the shim of JsonObject.AppendArray(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AppendBoolStringBoolean">
            <summary>Sets the shim of JsonObject.AppendBool(String name, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AppendIntStringInt32">
            <summary>Sets the shim of JsonObject.AppendInt(String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AppendObjectString">
            <summary>Sets the shim of JsonObject.AppendObject(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AppendStringArrayStringStringTable">
            <summary>Sets the shim of JsonObject.AppendStringArray(String name, StringTable values)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.AppendStringStringString">
            <summary>Sets the shim of JsonObject.AppendString(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.ArrayAtInt32">
            <summary>Sets the shim of JsonObject.ArrayAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.ArrayOfString">
            <summary>Sets the shim of JsonObject.ArrayOf(String jsonPath)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJsonObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.BoolAtInt32">
            <summary>Sets the shim of JsonObject.BoolAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.BoolOfString">
            <summary>Sets the shim of JsonObject.BoolOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.BytesOfStringStringBinData">
            <summary>Sets the shim of JsonObject.BytesOf(String jsonPath, String encoding, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.Clone">
            <summary>Sets the shim of JsonObject.Clone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.Constructor">
            <summary>Sets the shim of JsonObject.JsonObject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DebugLogFilePathGet">
            <summary>Sets the shim of JsonObject.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DebugLogFilePathSetString">
            <summary>Sets the shim of JsonObject.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DeleteAtInt32">
            <summary>Sets the shim of JsonObject.DeleteAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DeleteString">
            <summary>Sets the shim of JsonObject.Delete(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DelimiterCharGet">
            <summary>Sets the shim of JsonObject.get_DelimiterChar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DelimiterCharSetString">
            <summary>Sets the shim of JsonObject.set_DelimiterChar(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.Dispose">
            <summary>Sets the shim of JsonObject.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.DisposeBoolean">
            <summary>Sets the shim of JsonObject.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.Emit">
            <summary>Sets the shim of JsonObject.Emit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.EmitCompactGet">
            <summary>Sets the shim of JsonObject.get_EmitCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.EmitCompactSetBoolean">
            <summary>Sets the shim of JsonObject.set_EmitCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.EmitCrLfGet">
            <summary>Sets the shim of JsonObject.get_EmitCrLf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.EmitCrLfSetBoolean">
            <summary>Sets the shim of JsonObject.set_EmitCrLf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.EmitSbStringBuilder">
            <summary>Sets the shim of JsonObject.EmitSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.EmitWithSubsHashtableBoolean">
            <summary>Sets the shim of JsonObject.EmitWithSubs(Hashtable subs, Boolean omitEmpty)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.FindObjectWithMemberString">
            <summary>Sets the shim of JsonObject.FindObjectWithMember(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.FindRecordStringStringStringBoolean">
            <summary>Sets the shim of JsonObject.FindRecord(String arrayPath, String relPath, String value, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.FindRecordStringStringStringStringBooleanString">
            <summary>Sets the shim of JsonObject.FindRecordString(String arrayPath, String relPath, String value, Boolean caseSensitive, String retRelPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.FirebaseApplyEventStringString">
            <summary>Sets the shim of JsonObject.FirebaseApplyEvent(String name, String data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.FirebasePatchStringString">
            <summary>Sets the shim of JsonObject.FirebasePatch(String jsonPath, String jsonData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.FirebasePutStringString">
            <summary>Sets the shim of JsonObject.FirebasePut(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.GetDocRoot">
            <summary>Sets the shim of JsonObject.GetDocRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.HasMemberString">
            <summary>Sets the shim of JsonObject.HasMember(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.IGet">
            <summary>Sets the shim of JsonObject.get_I()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.ISetInt32">
            <summary>Sets the shim of JsonObject.set_I(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.IndexOfString">
            <summary>Sets the shim of JsonObject.IndexOf(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.IntAtInt32">
            <summary>Sets the shim of JsonObject.IntAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.IntOfString">
            <summary>Sets the shim of JsonObject.IntOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.IsNullAtInt32">
            <summary>Sets the shim of JsonObject.IsNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.IsNullOfString">
            <summary>Sets the shim of JsonObject.IsNullOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.JGet">
            <summary>Sets the shim of JsonObject.get_J()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.JSetInt32">
            <summary>Sets the shim of JsonObject.set_J(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.JsonTypeOfString">
            <summary>Sets the shim of JsonObject.JsonTypeOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.KGet">
            <summary>Sets the shim of JsonObject.get_K()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.KSetInt32">
            <summary>Sets the shim of JsonObject.set_K(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LastErrorHtmlGet">
            <summary>Sets the shim of JsonObject.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LastErrorTextGet">
            <summary>Sets the shim of JsonObject.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LastErrorXmlGet">
            <summary>Sets the shim of JsonObject.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LastMethodSuccessGet">
            <summary>Sets the shim of JsonObject.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of JsonObject.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LoadFileString">
            <summary>Sets the shim of JsonObject.LoadFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LoadPredefinedString">
            <summary>Sets the shim of JsonObject.LoadPredefined(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LoadSbStringBuilder">
            <summary>Sets the shim of JsonObject.LoadSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.LoadString">
            <summary>Sets the shim of JsonObject.Load(String json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.NameAtInt32">
            <summary>Sets the shim of JsonObject.NameAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.ObjectAtInt32">
            <summary>Sets the shim of JsonObject.ObjectAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.ObjectOfString">
            <summary>Sets the shim of JsonObject.ObjectOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.PredefineString">
            <summary>Sets the shim of JsonObject.Predefine(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.RenameAtInt32String">
            <summary>Sets the shim of JsonObject.RenameAt(Int32 index, String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.RenameStringString">
            <summary>Sets the shim of JsonObject.Rename(String oldName, String newName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SaveLastErrorString">
            <summary>Sets the shim of JsonObject.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetBoolAtInt32Boolean">
            <summary>Sets the shim of JsonObject.SetBoolAt(Int32 index, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetBoolOfStringBoolean">
            <summary>Sets the shim of JsonObject.SetBoolOf(String jsonPath, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetIntAtInt32Int32">
            <summary>Sets the shim of JsonObject.SetIntAt(Int32 index, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetIntOfStringInt32">
            <summary>Sets the shim of JsonObject.SetIntOf(String jsonPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetNullAtInt32">
            <summary>Sets the shim of JsonObject.SetNullAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetNullOfString">
            <summary>Sets the shim of JsonObject.SetNullOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetNumberAtInt32String">
            <summary>Sets the shim of JsonObject.SetNumberAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetNumberOfStringString">
            <summary>Sets the shim of JsonObject.SetNumberOf(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetStringAtInt32String">
            <summary>Sets the shim of JsonObject.SetStringAt(Int32 index, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SetStringOfStringString">
            <summary>Sets the shim of JsonObject.SetStringOf(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SizeGet">
            <summary>Sets the shim of JsonObject.get_Size()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.SizeOfArrayString">
            <summary>Sets the shim of JsonObject.SizeOfArray(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.StringAtInt32">
            <summary>Sets the shim of JsonObject.StringAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.StringOfSbStringStringBuilder">
            <summary>Sets the shim of JsonObject.StringOfSb(String jsonPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.StringOfString">
            <summary>Sets the shim of JsonObject.StringOf(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.ToString">
            <summary>Sets the shim of JsonObject.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.TypeAtInt32">
            <summary>Sets the shim of JsonObject.TypeAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateBdStringStringBinData">
            <summary>Sets the shim of JsonObject.UpdateBd(String jsonPath, String encoding, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateBoolStringBoolean">
            <summary>Sets the shim of JsonObject.UpdateBool(String jsonPath, Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateIntStringInt32">
            <summary>Sets the shim of JsonObject.UpdateInt(String jsonPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateNullString">
            <summary>Sets the shim of JsonObject.UpdateNull(String jsonPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateNumberStringString">
            <summary>Sets the shim of JsonObject.UpdateNumber(String jsonPath, String numericStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateSbStringStringBuilder">
            <summary>Sets the shim of JsonObject.UpdateSb(String jsonPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.UpdateStringStringString">
            <summary>Sets the shim of JsonObject.UpdateString(String jsonPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.VerboseLoggingGet">
            <summary>Sets the shim of JsonObject.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.VerboseLoggingSetBoolean">
            <summary>Sets the shim of JsonObject.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject.VersionGet">
            <summary>Sets the shim of JsonObject.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject._JsonObject">
            <summary>Sets the shim of JsonObject.!JsonObject()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJsonObject._JsonObject01">
            <summary>Sets the shim of JsonObject.~JsonObject()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJwe">
            <summary>Shim type of Chilkat.Jwe</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwe.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwe.#ctor(Chilkat.Jwe)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJwe.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Jwe.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Jwe.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.DecryptBdInt32BinData">
            <summary>Sets the shim of Jwe.DecryptBd(Int32 index, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.DecryptInt32String">
            <summary>Sets the shim of Jwe.Decrypt(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.DecryptSbInt32StringStringBuilder">
            <summary>Sets the shim of Jwe.DecryptSb(Int32 index, String charset, StringBuilder contentSb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.Dispose">
            <summary>Sets the shim of Jwe.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Jwe.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.EncryptBdBinDataStringBuilder">
            <summary>Sets the shim of Jwe.EncryptBd(BinData contentBd, StringBuilder jweSb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.EncryptSbStringBuilderStringStringBuilder">
            <summary>Sets the shim of Jwe.EncryptSb(StringBuilder contentSb, String charset, StringBuilder jweSb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.EncryptStringString">
            <summary>Sets the shim of Jwe.Encrypt(String content, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.FindRecipientStringStringBoolean">
            <summary>Sets the shim of Jwe.FindRecipient(String paramName, String paramValue, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Jwe.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Jwe.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Jwe.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Jwe.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Jwe.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LoadJweSbStringBuilder">
            <summary>Sets the shim of Jwe.LoadJweSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.LoadJweString">
            <summary>Sets the shim of Jwe.LoadJwe(String jwe)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.NumRecipientsGet">
            <summary>Sets the shim of Jwe.get_NumRecipients()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.PreferCompactGet">
            <summary>Sets the shim of Jwe.get_PreferCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.PreferCompactSetBoolean">
            <summary>Sets the shim of Jwe.set_PreferCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.PreferFlattenedGet">
            <summary>Sets the shim of Jwe.get_PreferFlattened()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.PreferFlattenedSetBoolean">
            <summary>Sets the shim of Jwe.set_PreferFlattened(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Jwe.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetAadBdBinData">
            <summary>Sets the shim of Jwe.SetAadBd(BinData aad)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetAadStringString">
            <summary>Sets the shim of Jwe.SetAad(String aad, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetPasswordInt32String">
            <summary>Sets the shim of Jwe.SetPassword(Int32 index, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetPrivateKeyInt32PrivateKey">
            <summary>Sets the shim of Jwe.SetPrivateKey(Int32 index, PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetProtectedHeaderJsonObject">
            <summary>Sets the shim of Jwe.SetProtectedHeader(JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetPublicKeyInt32PublicKey">
            <summary>Sets the shim of Jwe.SetPublicKey(Int32 index, PublicKey pubKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetRecipientHeaderInt32JsonObject">
            <summary>Sets the shim of Jwe.SetRecipientHeader(Int32 index, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetUnprotectedHeaderJsonObject">
            <summary>Sets the shim of Jwe.SetUnprotectedHeader(JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.SetWrappingKeyInt32StringString">
            <summary>Sets the shim of Jwe.SetWrappingKey(Int32 index, String encodedKey, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.ToString01">
            <summary>Sets the shim of Jwe.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Jwe.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Jwe.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances.VersionGet">
            <summary>Sets the shim of Jwe.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances._Jwe">
            <summary>Sets the shim of Jwe.!Jwe()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.AllInstances._Jwe01">
            <summary>Sets the shim of Jwe.~Jwe()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwe.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwe.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwe.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.Constructor">
            <summary>Sets the shim of Jwe.Jwe()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.DebugLogFilePathGet">
            <summary>Sets the shim of Jwe.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.DebugLogFilePathSetString">
            <summary>Sets the shim of Jwe.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.DecryptBdInt32BinData">
            <summary>Sets the shim of Jwe.DecryptBd(Int32 index, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.DecryptInt32String">
            <summary>Sets the shim of Jwe.Decrypt(Int32 index, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.DecryptSbInt32StringStringBuilder">
            <summary>Sets the shim of Jwe.DecryptSb(Int32 index, String charset, StringBuilder contentSb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.Dispose">
            <summary>Sets the shim of Jwe.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.DisposeBoolean">
            <summary>Sets the shim of Jwe.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.EncryptBdBinDataStringBuilder">
            <summary>Sets the shim of Jwe.EncryptBd(BinData contentBd, StringBuilder jweSb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.EncryptSbStringBuilderStringStringBuilder">
            <summary>Sets the shim of Jwe.EncryptSb(StringBuilder contentSb, String charset, StringBuilder jweSb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.EncryptStringString">
            <summary>Sets the shim of Jwe.Encrypt(String content, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.FindRecipientStringStringBoolean">
            <summary>Sets the shim of Jwe.FindRecipient(String paramName, String paramValue, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LastErrorHtmlGet">
            <summary>Sets the shim of Jwe.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LastErrorTextGet">
            <summary>Sets the shim of Jwe.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LastErrorXmlGet">
            <summary>Sets the shim of Jwe.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LastMethodSuccessGet">
            <summary>Sets the shim of Jwe.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Jwe.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LoadJweSbStringBuilder">
            <summary>Sets the shim of Jwe.LoadJweSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.LoadJweString">
            <summary>Sets the shim of Jwe.LoadJwe(String jwe)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.NumRecipientsGet">
            <summary>Sets the shim of Jwe.get_NumRecipients()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.PreferCompactGet">
            <summary>Sets the shim of Jwe.get_PreferCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.PreferCompactSetBoolean">
            <summary>Sets the shim of Jwe.set_PreferCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.PreferFlattenedGet">
            <summary>Sets the shim of Jwe.get_PreferFlattened()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.PreferFlattenedSetBoolean">
            <summary>Sets the shim of Jwe.set_PreferFlattened(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SaveLastErrorString">
            <summary>Sets the shim of Jwe.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetAadBdBinData">
            <summary>Sets the shim of Jwe.SetAadBd(BinData aad)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetAadStringString">
            <summary>Sets the shim of Jwe.SetAad(String aad, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetPasswordInt32String">
            <summary>Sets the shim of Jwe.SetPassword(Int32 index, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetPrivateKeyInt32PrivateKey">
            <summary>Sets the shim of Jwe.SetPrivateKey(Int32 index, PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetProtectedHeaderJsonObject">
            <summary>Sets the shim of Jwe.SetProtectedHeader(JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetPublicKeyInt32PublicKey">
            <summary>Sets the shim of Jwe.SetPublicKey(Int32 index, PublicKey pubKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetRecipientHeaderInt32JsonObject">
            <summary>Sets the shim of Jwe.SetRecipientHeader(Int32 index, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetUnprotectedHeaderJsonObject">
            <summary>Sets the shim of Jwe.SetUnprotectedHeader(JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.SetWrappingKeyInt32StringString">
            <summary>Sets the shim of Jwe.SetWrappingKey(Int32 index, String encodedKey, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.ToString">
            <summary>Sets the shim of Jwe.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.VerboseLoggingGet">
            <summary>Sets the shim of Jwe.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Jwe.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe.VersionGet">
            <summary>Sets the shim of Jwe.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe._Jwe">
            <summary>Sets the shim of Jwe.!Jwe()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwe._Jwe01">
            <summary>Sets the shim of Jwe.~Jwe()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJws">
            <summary>Shim type of Chilkat.Jws</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJws.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJws.#ctor(Chilkat.Jws)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJws.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.CreateJws">
            <summary>Sets the shim of Jws.CreateJws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.CreateJwsSbStringBuilder">
            <summary>Sets the shim of Jws.CreateJwsSb(StringBuilder sbJws)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Jws.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Jws.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.Dispose">
            <summary>Sets the shim of Jws.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Jws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.GetPayloadBdBinData">
            <summary>Sets the shim of Jws.GetPayloadBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.GetPayloadSbStringStringBuilder">
            <summary>Sets the shim of Jws.GetPayloadSb(String charset, StringBuilder sbPayload)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.GetPayloadString">
            <summary>Sets the shim of Jws.GetPayload(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.GetProtectedHeaderInt32">
            <summary>Sets the shim of Jws.GetProtectedHeader(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.GetUnprotectedHeaderInt32">
            <summary>Sets the shim of Jws.GetUnprotectedHeader(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Jws.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Jws.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Jws.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Jws.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Jws.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LoadJwsSbStringBuilder">
            <summary>Sets the shim of Jws.LoadJwsSb(StringBuilder sbJws)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.LoadJwsString">
            <summary>Sets the shim of Jws.LoadJws(String jwsStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.NumSignaturesGet">
            <summary>Sets the shim of Jws.get_NumSignatures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.PreferCompactGet">
            <summary>Sets the shim of Jws.get_PreferCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.PreferCompactSetBoolean">
            <summary>Sets the shim of Jws.set_PreferCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.PreferFlattenedGet">
            <summary>Sets the shim of Jws.get_PreferFlattened()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.PreferFlattenedSetBoolean">
            <summary>Sets the shim of Jws.set_PreferFlattened(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Jws.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetMacKeyBdInt32BinData">
            <summary>Sets the shim of Jws.SetMacKeyBd(Int32 index, BinData key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetMacKeyInt32StringString">
            <summary>Sets the shim of Jws.SetMacKey(Int32 index, String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetPayloadBdBinData">
            <summary>Sets the shim of Jws.SetPayloadBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetPayloadSbStringBuilderStringBoolean">
            <summary>Sets the shim of Jws.SetPayloadSb(StringBuilder sbPayload, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetPayloadStringStringBoolean">
            <summary>Sets the shim of Jws.SetPayload(String payload, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetPrivateKeyInt32PrivateKey">
            <summary>Sets the shim of Jws.SetPrivateKey(Int32 index, PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetProtectedHeaderInt32JsonObject">
            <summary>Sets the shim of Jws.SetProtectedHeader(Int32 index, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetPublicKeyInt32PublicKey">
            <summary>Sets the shim of Jws.SetPublicKey(Int32 index, PublicKey pubKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.SetUnprotectedHeaderInt32JsonObject">
            <summary>Sets the shim of Jws.SetUnprotectedHeader(Int32 index, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.ToString01">
            <summary>Sets the shim of Jws.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.ValidateInt32">
            <summary>Sets the shim of Jws.Validate(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Jws.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Jws.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances.VersionGet">
            <summary>Sets the shim of Jws.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances._Jws">
            <summary>Sets the shim of Jws.!Jws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.AllInstances._Jws01">
            <summary>Sets the shim of Jws.~Jws()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJws.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJws.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJws.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.Constructor">
            <summary>Sets the shim of Jws.Jws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.CreateJws">
            <summary>Sets the shim of Jws.CreateJws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.CreateJwsSbStringBuilder">
            <summary>Sets the shim of Jws.CreateJwsSb(StringBuilder sbJws)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.DebugLogFilePathGet">
            <summary>Sets the shim of Jws.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.DebugLogFilePathSetString">
            <summary>Sets the shim of Jws.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.Dispose">
            <summary>Sets the shim of Jws.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.DisposeBoolean">
            <summary>Sets the shim of Jws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.GetPayloadBdBinData">
            <summary>Sets the shim of Jws.GetPayloadBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.GetPayloadSbStringStringBuilder">
            <summary>Sets the shim of Jws.GetPayloadSb(String charset, StringBuilder sbPayload)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.GetPayloadString">
            <summary>Sets the shim of Jws.GetPayload(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.GetProtectedHeaderInt32">
            <summary>Sets the shim of Jws.GetProtectedHeader(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.GetUnprotectedHeaderInt32">
            <summary>Sets the shim of Jws.GetUnprotectedHeader(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LastErrorHtmlGet">
            <summary>Sets the shim of Jws.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LastErrorTextGet">
            <summary>Sets the shim of Jws.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LastErrorXmlGet">
            <summary>Sets the shim of Jws.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LastMethodSuccessGet">
            <summary>Sets the shim of Jws.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Jws.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LoadJwsSbStringBuilder">
            <summary>Sets the shim of Jws.LoadJwsSb(StringBuilder sbJws)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.LoadJwsString">
            <summary>Sets the shim of Jws.LoadJws(String jwsStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.NumSignaturesGet">
            <summary>Sets the shim of Jws.get_NumSignatures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.PreferCompactGet">
            <summary>Sets the shim of Jws.get_PreferCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.PreferCompactSetBoolean">
            <summary>Sets the shim of Jws.set_PreferCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.PreferFlattenedGet">
            <summary>Sets the shim of Jws.get_PreferFlattened()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.PreferFlattenedSetBoolean">
            <summary>Sets the shim of Jws.set_PreferFlattened(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SaveLastErrorString">
            <summary>Sets the shim of Jws.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetMacKeyBdInt32BinData">
            <summary>Sets the shim of Jws.SetMacKeyBd(Int32 index, BinData key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetMacKeyInt32StringString">
            <summary>Sets the shim of Jws.SetMacKey(Int32 index, String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetPayloadBdBinData">
            <summary>Sets the shim of Jws.SetPayloadBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetPayloadSbStringBuilderStringBoolean">
            <summary>Sets the shim of Jws.SetPayloadSb(StringBuilder sbPayload, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetPayloadStringStringBoolean">
            <summary>Sets the shim of Jws.SetPayload(String payload, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetPrivateKeyInt32PrivateKey">
            <summary>Sets the shim of Jws.SetPrivateKey(Int32 index, PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetProtectedHeaderInt32JsonObject">
            <summary>Sets the shim of Jws.SetProtectedHeader(Int32 index, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetPublicKeyInt32PublicKey">
            <summary>Sets the shim of Jws.SetPublicKey(Int32 index, PublicKey pubKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.SetUnprotectedHeaderInt32JsonObject">
            <summary>Sets the shim of Jws.SetUnprotectedHeader(Int32 index, JsonObject json)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.ToString">
            <summary>Sets the shim of Jws.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.ValidateInt32">
            <summary>Sets the shim of Jws.Validate(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.VerboseLoggingGet">
            <summary>Sets the shim of Jws.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Jws.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws.VersionGet">
            <summary>Sets the shim of Jws.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws._Jws">
            <summary>Sets the shim of Jws.!Jws()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJws._Jws01">
            <summary>Sets the shim of Jws.~Jws()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJwt">
            <summary>Shim type of Chilkat.Jwt</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwt.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwt.#ctor(Chilkat.Jwt)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimJwt.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.AutoCompactGet">
            <summary>Sets the shim of Jwt.get_AutoCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.AutoCompactSetBoolean">
            <summary>Sets the shim of Jwt.set_AutoCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.CreateJwtPkStringStringPrivateKey">
            <summary>Sets the shim of Jwt.CreateJwtPk(String header, String payload, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.CreateJwtStringStringString">
            <summary>Sets the shim of Jwt.CreateJwt(String header, String payload, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Jwt.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Jwt.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.Dispose">
            <summary>Sets the shim of Jwt.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Jwt.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.GenNumericDateInt32">
            <summary>Sets the shim of Jwt.GenNumericDate(Int32 numSecOffset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.GetHeaderString">
            <summary>Sets the shim of Jwt.GetHeader(String token)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.GetPayloadString">
            <summary>Sets the shim of Jwt.GetPayload(String token)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.IsTimeValidStringInt32">
            <summary>Sets the shim of Jwt.IsTimeValid(String jwt, Int32 leeway)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Jwt.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Jwt.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Jwt.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Jwt.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Jwt.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Jwt.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.ToString01">
            <summary>Sets the shim of Jwt.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Jwt.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Jwt.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.VerifyJwtPkStringPublicKey">
            <summary>Sets the shim of Jwt.VerifyJwtPk(String token, PublicKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.VerifyJwtStringString">
            <summary>Sets the shim of Jwt.VerifyJwt(String token, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances.VersionGet">
            <summary>Sets the shim of Jwt.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances._Jwt">
            <summary>Sets the shim of Jwt.!Jwt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AllInstances._Jwt01">
            <summary>Sets the shim of Jwt.~Jwt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AutoCompactGet">
            <summary>Sets the shim of Jwt.get_AutoCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.AutoCompactSetBoolean">
            <summary>Sets the shim of Jwt.set_AutoCompact(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwt.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwt.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimJwt.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.Constructor">
            <summary>Sets the shim of Jwt.Jwt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.CreateJwtPkStringStringPrivateKey">
            <summary>Sets the shim of Jwt.CreateJwtPk(String header, String payload, PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.CreateJwtStringStringString">
            <summary>Sets the shim of Jwt.CreateJwt(String header, String payload, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.DebugLogFilePathGet">
            <summary>Sets the shim of Jwt.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.DebugLogFilePathSetString">
            <summary>Sets the shim of Jwt.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.Dispose">
            <summary>Sets the shim of Jwt.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.DisposeBoolean">
            <summary>Sets the shim of Jwt.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.GenNumericDateInt32">
            <summary>Sets the shim of Jwt.GenNumericDate(Int32 numSecOffset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.GetHeaderString">
            <summary>Sets the shim of Jwt.GetHeader(String token)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.GetPayloadString">
            <summary>Sets the shim of Jwt.GetPayload(String token)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.IsTimeValidStringInt32">
            <summary>Sets the shim of Jwt.IsTimeValid(String jwt, Int32 leeway)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.LastErrorHtmlGet">
            <summary>Sets the shim of Jwt.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.LastErrorTextGet">
            <summary>Sets the shim of Jwt.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.LastErrorXmlGet">
            <summary>Sets the shim of Jwt.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.LastMethodSuccessGet">
            <summary>Sets the shim of Jwt.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Jwt.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.SaveLastErrorString">
            <summary>Sets the shim of Jwt.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.ToString">
            <summary>Sets the shim of Jwt.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.VerboseLoggingGet">
            <summary>Sets the shim of Jwt.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Jwt.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.VerifyJwtPkStringPublicKey">
            <summary>Sets the shim of Jwt.VerifyJwtPk(String token, PublicKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.VerifyJwtStringString">
            <summary>Sets the shim of Jwt.VerifyJwt(String token, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt.VersionGet">
            <summary>Sets the shim of Jwt.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt._Jwt">
            <summary>Sets the shim of Jwt.!Jwt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimJwt._Jwt01">
            <summary>Sets the shim of Jwt.~Jwt()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimKeyContainer">
            <summary>Shim type of Chilkat.KeyContainer</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimKeyContainer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimKeyContainer.#ctor(Chilkat.KeyContainer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimKeyContainer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.CloseContainer">
            <summary>Sets the shim of KeyContainer.CloseContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.ContainerNameGet">
            <summary>Sets the shim of KeyContainer.get_ContainerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.CreateContainerStringBoolean">
            <summary>Sets the shim of KeyContainer.CreateContainer(String name, Boolean machineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of KeyContainer.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of KeyContainer.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.DeleteContainer">
            <summary>Sets the shim of KeyContainer.DeleteContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.Dispose">
            <summary>Sets the shim of KeyContainer.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of KeyContainer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.FetchContainerNamesBoolean">
            <summary>Sets the shim of KeyContainer.FetchContainerNames(Boolean bMachineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.GenerateKeyPairBooleanInt32">
            <summary>Sets the shim of KeyContainer.GenerateKeyPair(Boolean bKeyExchangePair, Int32 keyLengthInBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.GenerateUuid">
            <summary>Sets the shim of KeyContainer.GenerateUuid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.GetNthContainerNameBooleanInt32">
            <summary>Sets the shim of KeyContainer.GetNthContainerName(Boolean bMachineKeyset, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.GetNumContainersBoolean">
            <summary>Sets the shim of KeyContainer.GetNumContainers(Boolean bMachineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.GetPrivateKeyBoolean">
            <summary>Sets the shim of KeyContainer.GetPrivateKey(Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.GetPublicKeyBoolean">
            <summary>Sets the shim of KeyContainer.GetPublicKey(Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.ImportPrivateKeyPrivateKeyBoolean">
            <summary>Sets the shim of KeyContainer.ImportPrivateKey(PrivateKey key, Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.ImportPublicKeyPublicKeyBoolean">
            <summary>Sets the shim of KeyContainer.ImportPublicKey(PublicKey key, Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.IsMachineKeysetGet">
            <summary>Sets the shim of KeyContainer.get_IsMachineKeyset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.IsOpenGet">
            <summary>Sets the shim of KeyContainer.get_IsOpen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of KeyContainer.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of KeyContainer.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of KeyContainer.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of KeyContainer.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of KeyContainer.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.OpenContainerStringBooleanBoolean">
            <summary>Sets the shim of KeyContainer.OpenContainer(String name, Boolean needPrivateKeyAccess, Boolean machineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of KeyContainer.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.ToString01">
            <summary>Sets the shim of KeyContainer.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of KeyContainer.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of KeyContainer.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances.VersionGet">
            <summary>Sets the shim of KeyContainer.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances._KeyContainer">
            <summary>Sets the shim of KeyContainer.!KeyContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.AllInstances._KeyContainer01">
            <summary>Sets the shim of KeyContainer.~KeyContainer()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimKeyContainer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimKeyContainer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimKeyContainer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.CloseContainer">
            <summary>Sets the shim of KeyContainer.CloseContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.Constructor">
            <summary>Sets the shim of KeyContainer.KeyContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.ContainerNameGet">
            <summary>Sets the shim of KeyContainer.get_ContainerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.CreateContainerStringBoolean">
            <summary>Sets the shim of KeyContainer.CreateContainer(String name, Boolean machineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.DebugLogFilePathGet">
            <summary>Sets the shim of KeyContainer.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.DebugLogFilePathSetString">
            <summary>Sets the shim of KeyContainer.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.DeleteContainer">
            <summary>Sets the shim of KeyContainer.DeleteContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.Dispose">
            <summary>Sets the shim of KeyContainer.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.DisposeBoolean">
            <summary>Sets the shim of KeyContainer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.FetchContainerNamesBoolean">
            <summary>Sets the shim of KeyContainer.FetchContainerNames(Boolean bMachineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.GenerateKeyPairBooleanInt32">
            <summary>Sets the shim of KeyContainer.GenerateKeyPair(Boolean bKeyExchangePair, Int32 keyLengthInBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.GenerateUuid">
            <summary>Sets the shim of KeyContainer.GenerateUuid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.GetNthContainerNameBooleanInt32">
            <summary>Sets the shim of KeyContainer.GetNthContainerName(Boolean bMachineKeyset, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.GetNumContainersBoolean">
            <summary>Sets the shim of KeyContainer.GetNumContainers(Boolean bMachineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.GetPrivateKeyBoolean">
            <summary>Sets the shim of KeyContainer.GetPrivateKey(Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.GetPublicKeyBoolean">
            <summary>Sets the shim of KeyContainer.GetPublicKey(Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.ImportPrivateKeyPrivateKeyBoolean">
            <summary>Sets the shim of KeyContainer.ImportPrivateKey(PrivateKey key, Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.ImportPublicKeyPublicKeyBoolean">
            <summary>Sets the shim of KeyContainer.ImportPublicKey(PublicKey key, Boolean bKeyExchangePair)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.IsMachineKeysetGet">
            <summary>Sets the shim of KeyContainer.get_IsMachineKeyset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.IsOpenGet">
            <summary>Sets the shim of KeyContainer.get_IsOpen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.LastErrorHtmlGet">
            <summary>Sets the shim of KeyContainer.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.LastErrorTextGet">
            <summary>Sets the shim of KeyContainer.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.LastErrorXmlGet">
            <summary>Sets the shim of KeyContainer.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.LastMethodSuccessGet">
            <summary>Sets the shim of KeyContainer.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of KeyContainer.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.OpenContainerStringBooleanBoolean">
            <summary>Sets the shim of KeyContainer.OpenContainer(String name, Boolean needPrivateKeyAccess, Boolean machineKeyset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.SaveLastErrorString">
            <summary>Sets the shim of KeyContainer.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.ToString">
            <summary>Sets the shim of KeyContainer.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.VerboseLoggingGet">
            <summary>Sets the shim of KeyContainer.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.VerboseLoggingSetBoolean">
            <summary>Sets the shim of KeyContainer.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer.VersionGet">
            <summary>Sets the shim of KeyContainer.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer._KeyContainer">
            <summary>Sets the shim of KeyContainer.!KeyContainer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimKeyContainer._KeyContainer01">
            <summary>Sets the shim of KeyContainer.~KeyContainer()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimLog">
            <summary>Shim type of Chilkat.Log</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimLog.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimLog.#ctor(Chilkat.Log)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimLog.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.ClearString">
            <summary>Sets the shim of Log.Clear(String initialTag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Log.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Log.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.Dispose">
            <summary>Sets the shim of Log.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Log.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.EnterContextString">
            <summary>Sets the shim of Log.EnterContext(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Log.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Log.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Log.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Log.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Log.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LeaveContext">
            <summary>Sets the shim of Log.LeaveContext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogDataBase64StringByteArray">
            <summary>Sets the shim of Log.LogDataBase64(String tag, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogDataHexStringByteArray">
            <summary>Sets the shim of Log.LogDataHex(String tag, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogDataMaxStringStringInt32">
            <summary>Sets the shim of Log.LogDataMax(String tag, String message, Int32 maxNumChars)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogDataStringString">
            <summary>Sets the shim of Log.LogData(String tag, String message)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogDateTimeStringBoolean">
            <summary>Sets the shim of Log.LogDateTime(String tag, Boolean gmt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogErrorString">
            <summary>Sets the shim of Log.LogError(String message)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogInfoString">
            <summary>Sets the shim of Log.LogInfo(String message)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogInt64StringInt64">
            <summary>Sets the shim of Log.LogInt64(String tag, Int64 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogIntStringInt32">
            <summary>Sets the shim of Log.LogInt(String tag, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.LogTimestampString">
            <summary>Sets the shim of Log.LogTimestamp(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Log.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.ToString01">
            <summary>Sets the shim of Log.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Log.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Log.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances.VersionGet">
            <summary>Sets the shim of Log.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances._Log">
            <summary>Sets the shim of Log.!Log()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.AllInstances._Log01">
            <summary>Sets the shim of Log.~Log()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimLog.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimLog.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimLog.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.ClearString">
            <summary>Sets the shim of Log.Clear(String initialTag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.Constructor">
            <summary>Sets the shim of Log.Log()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.DebugLogFilePathGet">
            <summary>Sets the shim of Log.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.DebugLogFilePathSetString">
            <summary>Sets the shim of Log.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.Dispose">
            <summary>Sets the shim of Log.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.DisposeBoolean">
            <summary>Sets the shim of Log.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.EnterContextString">
            <summary>Sets the shim of Log.EnterContext(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LastErrorHtmlGet">
            <summary>Sets the shim of Log.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LastErrorTextGet">
            <summary>Sets the shim of Log.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LastErrorXmlGet">
            <summary>Sets the shim of Log.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LastMethodSuccessGet">
            <summary>Sets the shim of Log.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Log.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LeaveContext">
            <summary>Sets the shim of Log.LeaveContext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogDataBase64StringByteArray">
            <summary>Sets the shim of Log.LogDataBase64(String tag, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogDataHexStringByteArray">
            <summary>Sets the shim of Log.LogDataHex(String tag, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogDataMaxStringStringInt32">
            <summary>Sets the shim of Log.LogDataMax(String tag, String message, Int32 maxNumChars)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogDataStringString">
            <summary>Sets the shim of Log.LogData(String tag, String message)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogDateTimeStringBoolean">
            <summary>Sets the shim of Log.LogDateTime(String tag, Boolean gmt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogErrorString">
            <summary>Sets the shim of Log.LogError(String message)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogInfoString">
            <summary>Sets the shim of Log.LogInfo(String message)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogInt64StringInt64">
            <summary>Sets the shim of Log.LogInt64(String tag, Int64 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogIntStringInt32">
            <summary>Sets the shim of Log.LogInt(String tag, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.LogTimestampString">
            <summary>Sets the shim of Log.LogTimestamp(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.SaveLastErrorString">
            <summary>Sets the shim of Log.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.ToString">
            <summary>Sets the shim of Log.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.VerboseLoggingGet">
            <summary>Sets the shim of Log.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Log.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog.VersionGet">
            <summary>Sets the shim of Log.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog._Log">
            <summary>Sets the shim of Log.!Log()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimLog._Log01">
            <summary>Sets the shim of Log.~Log()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMailMan">
            <summary>Shim type of Chilkat.MailMan</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailMan.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailMan.#ctor(Chilkat.MailMan)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AbortCurrentGet">
            <summary>Sets the shim of MailMan.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AbortCurrentSetBoolean">
            <summary>Sets the shim of MailMan.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of MailMan.AddPfxSourceData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AddPfxSourceFileStringString">
            <summary>Sets the shim of MailMan.AddPfxSourceFile(String pfxFilePath, String password)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMailMan.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of MailMan.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of MailMan.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of MailMan.AddPfxSourceData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AddPfxSourceFileStringString">
            <summary>Sets the shim of MailMan.AddPfxSourceFile(String pfxFilePath, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AllOrNoneGet">
            <summary>Sets the shim of MailMan.get_AllOrNone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AllOrNoneSetBoolean">
            <summary>Sets the shim of MailMan.set_AllOrNone(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoFixGet">
            <summary>Sets the shim of MailMan.get_AutoFix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoFixSetBoolean">
            <summary>Sets the shim of MailMan.set_AutoFix(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoGenMessageIdGet">
            <summary>Sets the shim of MailMan.get_AutoGenMessageId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoGenMessageIdSetBoolean">
            <summary>Sets the shim of MailMan.set_AutoGenMessageId(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoSmtpRsetGet">
            <summary>Sets the shim of MailMan.get_AutoSmtpRset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoSmtpRsetSetBoolean">
            <summary>Sets the shim of MailMan.set_AutoSmtpRset(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoUnwrapSecurityGet">
            <summary>Sets the shim of MailMan.get_AutoUnwrapSecurity()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.AutoUnwrapSecuritySetBoolean">
            <summary>Sets the shim of MailMan.set_AutoUnwrapSecurity(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.CheckMail">
            <summary>Sets the shim of MailMan.CheckMail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.CheckMailAsync">
            <summary>Sets the shim of MailMan.CheckMailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ClearBadEmailAddresses">
            <summary>Sets the shim of MailMan.ClearBadEmailAddresses()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ClearPop3SessionLog">
            <summary>Sets the shim of MailMan.ClearPop3SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ClearSmtpSessionLog">
            <summary>Sets the shim of MailMan.ClearSmtpSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of MailMan.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of MailMan.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.CloseSmtpConnection">
            <summary>Sets the shim of MailMan.CloseSmtpConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.CloseSmtpConnectionAsync">
            <summary>Sets the shim of MailMan.CloseSmtpConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ConnectFailReasonGet">
            <summary>Sets the shim of MailMan.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ConnectTimeoutGet">
            <summary>Sets the shim of MailMan.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ConnectTimeoutSetInt32">
            <summary>Sets the shim of MailMan.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.CopyMail">
            <summary>Sets the shim of MailMan.CopyMail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.CopyMailAsync">
            <summary>Sets the shim of MailMan.CopyMailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of MailMan.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of MailMan.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteBundleAsyncEmailBundle">
            <summary>Sets the shim of MailMan.DeleteBundleAsync(EmailBundle emailBundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteBundleEmailBundle">
            <summary>Sets the shim of MailMan.DeleteBundle(EmailBundle emailBundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteByMsgnumAsyncInt32">
            <summary>Sets the shim of MailMan.DeleteByMsgnumAsync(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteByMsgnumInt32">
            <summary>Sets the shim of MailMan.DeleteByMsgnum(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteByUidlAsyncString">
            <summary>Sets the shim of MailMan.DeleteByUidlAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteByUidlString">
            <summary>Sets the shim of MailMan.DeleteByUidl(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteEmailAsyncEmail">
            <summary>Sets the shim of MailMan.DeleteEmailAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteEmailEmail">
            <summary>Sets the shim of MailMan.DeleteEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteMultipleAsyncStringArray">
            <summary>Sets the shim of MailMan.DeleteMultipleAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DeleteMultipleStringArray">
            <summary>Sets the shim of MailMan.DeleteMultiple(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Dispose">
            <summary>Sets the shim of MailMan.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MailMan.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DsnEnvidGet">
            <summary>Sets the shim of MailMan.get_DsnEnvid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DsnEnvidSetString">
            <summary>Sets the shim of MailMan.set_DsnEnvid(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DsnNotifyGet">
            <summary>Sets the shim of MailMan.get_DsnNotify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DsnNotifySetString">
            <summary>Sets the shim of MailMan.set_DsnNotify(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DsnRetGet">
            <summary>Sets the shim of MailMan.get_DsnRet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.DsnRetSetString">
            <summary>Sets the shim of MailMan.set_DsnRet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.EmbedCertChainGet">
            <summary>Sets the shim of MailMan.get_EmbedCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.EmbedCertChainSetBoolean">
            <summary>Sets the shim of MailMan.set_EmbedCertChain(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.EnableEventsGet">
            <summary>Sets the shim of MailMan.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of MailMan.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchByMsgnumAsyncInt32">
            <summary>Sets the shim of MailMan.FetchByMsgnumAsync(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchByMsgnumInt32">
            <summary>Sets the shim of MailMan.FetchByMsgnum(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchEmailAsyncString">
            <summary>Sets the shim of MailMan.FetchEmailAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchEmailString">
            <summary>Sets the shim of MailMan.FetchEmail(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMimeAsyncString">
            <summary>Sets the shim of MailMan.FetchMimeAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMimeByMsgnumAsyncInt32">
            <summary>Sets the shim of MailMan.FetchMimeByMsgnumAsync(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMimeByMsgnumInt32">
            <summary>Sets the shim of MailMan.FetchMimeByMsgnum(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMimeString">
            <summary>Sets the shim of MailMan.FetchMime(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMultipleAsyncStringArray">
            <summary>Sets the shim of MailMan.FetchMultipleAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMultipleHeadersAsyncStringArrayInt32">
            <summary>Sets the shim of MailMan.FetchMultipleHeadersAsync(StringArray uidlArray, Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMultipleHeadersStringArrayInt32">
            <summary>Sets the shim of MailMan.FetchMultipleHeaders(StringArray uidlArray, Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMultipleMimeAsyncStringArray">
            <summary>Sets the shim of MailMan.FetchMultipleMimeAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMultipleMimeStringArray">
            <summary>Sets the shim of MailMan.FetchMultipleMime(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchMultipleStringArray">
            <summary>Sets the shim of MailMan.FetchMultiple(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchSingleHeaderAsyncInt32Int32">
            <summary>Sets the shim of MailMan.FetchSingleHeaderAsync(Int32 numBodyLines, Int32 messageNumber)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchSingleHeaderByUidlAsyncInt32String">
            <summary>Sets the shim of MailMan.FetchSingleHeaderByUidlAsync(Int32 numBodyLines, String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchSingleHeaderByUidlInt32String">
            <summary>Sets the shim of MailMan.FetchSingleHeaderByUidl(Int32 numBodyLines, String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FetchSingleHeaderInt32Int32">
            <summary>Sets the shim of MailMan.FetchSingleHeader(Int32 numBodyLines, Int32 messageNumber)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FilterGet">
            <summary>Sets the shim of MailMan.get_Filter()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FilterSetString">
            <summary>Sets the shim of MailMan.set_Filter(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of MailMan.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FireEmailReceivedObjectEmailEventArgs">
            <summary>Sets the shim of MailMan.FireEmailReceived(Object sender, EmailEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of MailMan.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of MailMan.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of MailMan.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetAllHeadersAsyncInt32">
            <summary>Sets the shim of MailMan.GetAllHeadersAsync(Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetAllHeadersInt32">
            <summary>Sets the shim of MailMan.GetAllHeaders(Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetBadEmailAddrs">
            <summary>Sets the shim of MailMan.GetBadEmailAddrs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetFullEmailAsyncEmail">
            <summary>Sets the shim of MailMan.GetFullEmailAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetFullEmailEmail">
            <summary>Sets the shim of MailMan.GetFullEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetHeadersAsyncInt32Int32Int32">
            <summary>Sets the shim of MailMan.GetHeadersAsync(Int32 numBodyLines, Int32 fromIndex, Int32 toIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetHeadersInt32Int32Int32">
            <summary>Sets the shim of MailMan.GetHeaders(Int32 numBodyLines, Int32 fromIndex, Int32 toIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetMailboxCount">
            <summary>Sets the shim of MailMan.GetMailboxCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetMailboxCountAsync">
            <summary>Sets the shim of MailMan.GetMailboxCountAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetMailboxInfoXml">
            <summary>Sets the shim of MailMan.GetMailboxInfoXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetMailboxInfoXmlAsync">
            <summary>Sets the shim of MailMan.GetMailboxInfoXmlAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetMailboxSize">
            <summary>Sets the shim of MailMan.GetMailboxSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetMailboxSizeAsync">
            <summary>Sets the shim of MailMan.GetMailboxSizeAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetPop3SslServerCert">
            <summary>Sets the shim of MailMan.GetPop3SslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetSentToEmailAddrs">
            <summary>Sets the shim of MailMan.GetSentToEmailAddrs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetSizeByUidlAsyncString">
            <summary>Sets the shim of MailMan.GetSizeByUidlAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetSizeByUidlString">
            <summary>Sets the shim of MailMan.GetSizeByUidl(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetSmtpSslServerCert">
            <summary>Sets the shim of MailMan.GetSmtpSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetUidls">
            <summary>Sets the shim of MailMan.GetUidls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.GetUidlsAsync">
            <summary>Sets the shim of MailMan.GetUidlsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of MailMan.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of MailMan.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HeloHostnameGet">
            <summary>Sets the shim of MailMan.get_HeloHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HeloHostnameSetString">
            <summary>Sets the shim of MailMan.set_HeloHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of MailMan.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of MailMan.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of MailMan.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of MailMan.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of MailMan.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of MailMan.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of MailMan.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ImmediateDeleteGet">
            <summary>Sets the shim of MailMan.get_ImmediateDelete()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ImmediateDeleteSetBoolean">
            <summary>Sets the shim of MailMan.set_ImmediateDelete(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IncludeRootCertGet">
            <summary>Sets the shim of MailMan.get_IncludeRootCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IncludeRootCertSetBoolean">
            <summary>Sets the shim of MailMan.set_IncludeRootCert(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IsPop3ConnectedGet">
            <summary>Sets the shim of MailMan.get_IsPop3Connected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IsSmtpConnectedGet">
            <summary>Sets the shim of MailMan.get_IsSmtpConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IsSmtpDsnCapable">
            <summary>Sets the shim of MailMan.IsSmtpDsnCapable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IsSmtpDsnCapableAsync">
            <summary>Sets the shim of MailMan.IsSmtpDsnCapableAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.IsUnlocked">
            <summary>Sets the shim of MailMan.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of MailMan.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of MailMan.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of MailMan.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastJsonData">
            <summary>Sets the shim of MailMan.LastJsonData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of MailMan.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of MailMan.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastSendQFilenameGet">
            <summary>Sets the shim of MailMan.get_LastSendQFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LastSmtpStatusGet">
            <summary>Sets the shim of MailMan.get_LastSmtpStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadEmlString">
            <summary>Sets the shim of MailMan.LoadEml(String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadMbxString">
            <summary>Sets the shim of MailMan.LoadMbx(String mbxFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadMimeString">
            <summary>Sets the shim of MailMan.LoadMime(String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadQueuedEmailString">
            <summary>Sets the shim of MailMan.LoadQueuedEmail(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadXmlEmailString">
            <summary>Sets the shim of MailMan.LoadXmlEmail(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadXmlEmailStringString">
            <summary>Sets the shim of MailMan.LoadXmlEmailString(String xmlString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadXmlFileString">
            <summary>Sets the shim of MailMan.LoadXmlFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LoadXmlStringString">
            <summary>Sets the shim of MailMan.LoadXmlString(String xmlString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LogMailReceivedFilenameGet">
            <summary>Sets the shim of MailMan.get_LogMailReceivedFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LogMailReceivedFilenameSetString">
            <summary>Sets the shim of MailMan.set_LogMailReceivedFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LogMailSentFilenameGet">
            <summary>Sets the shim of MailMan.get_LogMailSentFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.LogMailSentFilenameSetString">
            <summary>Sets the shim of MailMan.set_LogMailSentFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MailHostGet">
            <summary>Sets the shim of MailMan.get_MailHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MailHostSetString">
            <summary>Sets the shim of MailMan.set_MailHost(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MailPortGet">
            <summary>Sets the shim of MailMan.get_MailPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MailPortSetInt32">
            <summary>Sets the shim of MailMan.set_MailPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MaxCountGet">
            <summary>Sets the shim of MailMan.get_MaxCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MaxCountSetInt32">
            <summary>Sets the shim of MailMan.set_MaxCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MxLookupAllString">
            <summary>Sets the shim of MailMan.MxLookupAll(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.MxLookupString">
            <summary>Sets the shim of MailMan.MxLookup(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OAuth2AccessTokenGet">
            <summary>Sets the shim of MailMan.get_OAuth2AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OAuth2AccessTokenSetString">
            <summary>Sets the shim of MailMan.set_OAuth2AccessToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnAbortCheckAddMailManAbortCheckEventHandler">
            <summary>Sets the shim of MailMan.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of MailMan.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnAbortCheckRemoveMailManAbortCheckEventHandler">
            <summary>Sets the shim of MailMan.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnEmailReceivedAddMailManEmailReceivedEventHandler">
            <summary>Sets the shim of MailMan.add_OnEmailReceived(EmailReceivedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnEmailReceivedRaiseObjectEmailEventArgs">
            <summary>Sets the shim of MailMan.raise_OnEmailReceived(Object value0, EmailEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnEmailReceivedRemoveMailManEmailReceivedEventHandler">
            <summary>Sets the shim of MailMan.remove_OnEmailReceived(EmailReceivedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnPercentDoneAddMailManPercentDoneEventHandler">
            <summary>Sets the shim of MailMan.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of MailMan.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnPercentDoneRemoveMailManPercentDoneEventHandler">
            <summary>Sets the shim of MailMan.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnProgressInfoAddMailManProgressInfoEventHandler">
            <summary>Sets the shim of MailMan.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of MailMan.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnProgressInfoRemoveMailManProgressInfoEventHandler">
            <summary>Sets the shim of MailMan.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnTaskCompletedAddMailManTaskCompletedEventHandler">
            <summary>Sets the shim of MailMan.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of MailMan.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OnTaskCompletedRemoveMailManTaskCompletedEventHandler">
            <summary>Sets the shim of MailMan.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OpaqueSigningGet">
            <summary>Sets the shim of MailMan.get_OpaqueSigning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OpaqueSigningSetBoolean">
            <summary>Sets the shim of MailMan.set_OpaqueSigning(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OpenSmtpConnection">
            <summary>Sets the shim of MailMan.OpenSmtpConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.OpenSmtpConnectionAsync">
            <summary>Sets the shim of MailMan.OpenSmtpConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.P7mEncryptAttachFilenameGet">
            <summary>Sets the shim of MailMan.get_P7mEncryptAttachFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.P7mEncryptAttachFilenameSetString">
            <summary>Sets the shim of MailMan.set_P7mEncryptAttachFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.P7mSigAttachFilenameGet">
            <summary>Sets the shim of MailMan.get_P7mSigAttachFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.P7mSigAttachFilenameSetString">
            <summary>Sets the shim of MailMan.set_P7mSigAttachFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.P7sSigAttachFilenameGet">
            <summary>Sets the shim of MailMan.get_P7sSigAttachFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.P7sSigAttachFilenameSetString">
            <summary>Sets the shim of MailMan.set_P7sSigAttachFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of MailMan.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of MailMan.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3Authenticate">
            <summary>Sets the shim of MailMan.Pop3Authenticate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3AuthenticateAsync">
            <summary>Sets the shim of MailMan.Pop3AuthenticateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3BeginSession">
            <summary>Sets the shim of MailMan.Pop3BeginSession()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3BeginSessionAsync">
            <summary>Sets the shim of MailMan.Pop3BeginSessionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3Connect">
            <summary>Sets the shim of MailMan.Pop3Connect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3ConnectAsync">
            <summary>Sets the shim of MailMan.Pop3ConnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3EndSession">
            <summary>Sets the shim of MailMan.Pop3EndSession()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3EndSessionAsync">
            <summary>Sets the shim of MailMan.Pop3EndSessionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3EndSessionNoQuit">
            <summary>Sets the shim of MailMan.Pop3EndSessionNoQuit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3EndSessionNoQuitAsync">
            <summary>Sets the shim of MailMan.Pop3EndSessionNoQuitAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3Noop">
            <summary>Sets the shim of MailMan.Pop3Noop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3NoopAsync">
            <summary>Sets the shim of MailMan.Pop3NoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3Reset">
            <summary>Sets the shim of MailMan.Pop3Reset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3ResetAsync">
            <summary>Sets the shim of MailMan.Pop3ResetAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SPAGet">
            <summary>Sets the shim of MailMan.get_Pop3SPA()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SPASetBoolean">
            <summary>Sets the shim of MailMan.set_Pop3SPA(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SendRawCommandAsyncStringString">
            <summary>Sets the shim of MailMan.Pop3SendRawCommandAsync(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SendRawCommandStringString">
            <summary>Sets the shim of MailMan.Pop3SendRawCommand(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SessionIdGet">
            <summary>Sets the shim of MailMan.get_Pop3SessionId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SessionLogGet">
            <summary>Sets the shim of MailMan.get_Pop3SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3SslServerCertVerifiedGet">
            <summary>Sets the shim of MailMan.get_Pop3SslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3StlsGet">
            <summary>Sets the shim of MailMan.get_Pop3Stls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.Pop3StlsSetBoolean">
            <summary>Sets the shim of MailMan.set_Pop3Stls(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopPasswordBase64Get">
            <summary>Sets the shim of MailMan.get_PopPasswordBase64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopPasswordBase64SetString">
            <summary>Sets the shim of MailMan.set_PopPasswordBase64(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopPasswordGet">
            <summary>Sets the shim of MailMan.get_PopPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopPasswordSetString">
            <summary>Sets the shim of MailMan.set_PopPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopSslGet">
            <summary>Sets the shim of MailMan.get_PopSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopSslSetBoolean">
            <summary>Sets the shim of MailMan.set_PopSsl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopUsernameGet">
            <summary>Sets the shim of MailMan.get_PopUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PopUsernameSetString">
            <summary>Sets the shim of MailMan.set_PopUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of MailMan.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of MailMan.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.QuickSendAsyncStringStringStringStringString">
            <summary>Sets the shim of MailMan.QuickSendAsync(String fromAddr, String toAddr, String subject, String body, String smtpServer)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.QuickSendStringStringStringStringString">
            <summary>Sets the shim of MailMan.QuickSend(String fromAddr, String toAddr, String subject, String body, String smtpServer)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of MailMan.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of MailMan.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.RenderToMimeBdEmailBinData">
            <summary>Sets the shim of MailMan.RenderToMimeBd(Email email, BinData renderedMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.RenderToMimeBytesEmail">
            <summary>Sets the shim of MailMan.RenderToMimeBytes(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.RenderToMimeEmail">
            <summary>Sets the shim of MailMan.RenderToMime(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.RenderToMimeSbEmailStringBuilder">
            <summary>Sets the shim of MailMan.RenderToMimeSb(Email email, StringBuilder renderedMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.RequireSslCertVerifyGet">
            <summary>Sets the shim of MailMan.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of MailMan.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ResetDateOnLoadGet">
            <summary>Sets the shim of MailMan.get_ResetDateOnLoad()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ResetDateOnLoadSetBoolean">
            <summary>Sets the shim of MailMan.set_ResetDateOnLoad(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of MailMan.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendBufferSizeGet">
            <summary>Sets the shim of MailMan.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendBufferSizeSetInt32">
            <summary>Sets the shim of MailMan.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendBundleAsyncEmailBundle">
            <summary>Sets the shim of MailMan.SendBundleAsync(EmailBundle bundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendBundleEmailBundle">
            <summary>Sets the shim of MailMan.SendBundle(EmailBundle bundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendEmailAsyncEmail">
            <summary>Sets the shim of MailMan.SendEmailAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendEmailEmail">
            <summary>Sets the shim of MailMan.SendEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendIndividualGet">
            <summary>Sets the shim of MailMan.get_SendIndividual()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendIndividualSetBoolean">
            <summary>Sets the shim of MailMan.set_SendIndividual(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeAsyncStringStringString">
            <summary>Sets the shim of MailMan.SendMimeAsync(String fromAddr, String recipients, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeBytesAsyncStringStringByteArray">
            <summary>Sets the shim of MailMan.SendMimeBytesAsync(String fromAddr, String recipients, Byte[] mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeBytesQStringStringByteArray">
            <summary>Sets the shim of MailMan.SendMimeBytesQ(String from, String recipients, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeBytesStringStringByteArray">
            <summary>Sets the shim of MailMan.SendMimeBytes(String fromAddr, String recipients, Byte[] mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeQStringStringString">
            <summary>Sets the shim of MailMan.SendMimeQ(String fromAddr, String recipients, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeStringStringString">
            <summary>Sets the shim of MailMan.SendMime(String fromAddr, String recipients, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeToListAsyncStringStringString">
            <summary>Sets the shim of MailMan.SendMimeToListAsync(String fromAddr, String distListFilename, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendMimeToListStringStringString">
            <summary>Sets the shim of MailMan.SendMimeToList(String fromAddr, String distListFilename, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendQ2EmailString">
            <summary>Sets the shim of MailMan.SendQ2(Email email, String queueDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendQEmail">
            <summary>Sets the shim of MailMan.SendQ(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendToDistributionListAsyncEmailStringArray">
            <summary>Sets the shim of MailMan.SendToDistributionListAsync(Email emailObj, StringArray recipientList)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SendToDistributionListEmailStringArray">
            <summary>Sets the shim of MailMan.SendToDistributionList(Email emailObj, StringArray recipientList)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SetCSPCsp">
            <summary>Sets the shim of MailMan.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of MailMan.SetDecryptCert2(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SetDecryptCertCert">
            <summary>Sets the shim of MailMan.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SetSslClientCertCert">
            <summary>Sets the shim of MailMan.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SetSslClientCertPemStringString">
            <summary>Sets the shim of MailMan.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SetSslClientCertPfxStringString">
            <summary>Sets the shim of MailMan.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SizeLimitGet">
            <summary>Sets the shim of MailMan.get_SizeLimit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SizeLimitSetInt32">
            <summary>Sets the shim of MailMan.set_SizeLimit(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpAuthMethodGet">
            <summary>Sets the shim of MailMan.get_SmtpAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpAuthMethodSetString">
            <summary>Sets the shim of MailMan.set_SmtpAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpAuthenticate">
            <summary>Sets the shim of MailMan.SmtpAuthenticate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpAuthenticateAsync">
            <summary>Sets the shim of MailMan.SmtpAuthenticateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpConnect">
            <summary>Sets the shim of MailMan.SmtpConnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpConnectAsync">
            <summary>Sets the shim of MailMan.SmtpConnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpFailReasonGet">
            <summary>Sets the shim of MailMan.get_SmtpFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpHostGet">
            <summary>Sets the shim of MailMan.get_SmtpHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpHostSetString">
            <summary>Sets the shim of MailMan.set_SmtpHost(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpLoginDomainGet">
            <summary>Sets the shim of MailMan.get_SmtpLoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpLoginDomainSetString">
            <summary>Sets the shim of MailMan.set_SmtpLoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpNoop">
            <summary>Sets the shim of MailMan.SmtpNoop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpNoopAsync">
            <summary>Sets the shim of MailMan.SmtpNoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpPasswordGet">
            <summary>Sets the shim of MailMan.get_SmtpPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpPasswordSetString">
            <summary>Sets the shim of MailMan.set_SmtpPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpPipeliningGet">
            <summary>Sets the shim of MailMan.get_SmtpPipelining()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpPipeliningSetBoolean">
            <summary>Sets the shim of MailMan.set_SmtpPipelining(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpPortGet">
            <summary>Sets the shim of MailMan.get_SmtpPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpPortSetInt32">
            <summary>Sets the shim of MailMan.set_SmtpPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpReset">
            <summary>Sets the shim of MailMan.SmtpReset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpResetAsync">
            <summary>Sets the shim of MailMan.SmtpResetAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpSendRawCommandAsyncStringStringBoolean">
            <summary>Sets the shim of MailMan.SmtpSendRawCommandAsync(String command, String charset, Boolean bEncodeBase64)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpSendRawCommandStringStringBoolean">
            <summary>Sets the shim of MailMan.SmtpSendRawCommand(String command, String charset, Boolean bEncodeBase64)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpSessionLogGet">
            <summary>Sets the shim of MailMan.get_SmtpSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpSslGet">
            <summary>Sets the shim of MailMan.get_SmtpSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpSslServerCertVerifiedGet">
            <summary>Sets the shim of MailMan.get_SmtpSslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpSslSetBoolean">
            <summary>Sets the shim of MailMan.set_SmtpSsl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpUsernameGet">
            <summary>Sets the shim of MailMan.get_SmtpUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SmtpUsernameSetString">
            <summary>Sets the shim of MailMan.set_SmtpUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of MailMan.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of MailMan.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SoSndBufGet">
            <summary>Sets the shim of MailMan.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of MailMan.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of MailMan.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of MailMan.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of MailMan.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of MailMan.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksPortGet">
            <summary>Sets the shim of MailMan.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of MailMan.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of MailMan.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of MailMan.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksVersionGet">
            <summary>Sets the shim of MailMan.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of MailMan.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshAuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of MailMan.SshAuthenticatePkAsync(String sshLogin, SshKey sshUsername)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshAuthenticatePkStringSshKey">
            <summary>Sets the shim of MailMan.SshAuthenticatePk(String sshLogin, SshKey sshUsername)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshAuthenticatePwAsyncStringString">
            <summary>Sets the shim of MailMan.SshAuthenticatePwAsync(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshAuthenticatePwStringString">
            <summary>Sets the shim of MailMan.SshAuthenticatePw(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshCloseTunnel">
            <summary>Sets the shim of MailMan.SshCloseTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshCloseTunnelAsync">
            <summary>Sets the shim of MailMan.SshCloseTunnelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshOpenTunnelAsyncStringInt32">
            <summary>Sets the shim of MailMan.SshOpenTunnelAsync(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SshOpenTunnelStringInt32">
            <summary>Sets the shim of MailMan.SshOpenTunnel(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SslAllowedCiphersGet">
            <summary>Sets the shim of MailMan.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SslAllowedCiphersSetString">
            <summary>Sets the shim of MailMan.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SslProtocolGet">
            <summary>Sets the shim of MailMan.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.SslProtocolSetString">
            <summary>Sets the shim of MailMan.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.StartTLSGet">
            <summary>Sets the shim of MailMan.get_StartTLS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.StartTLSSetBoolean">
            <summary>Sets the shim of MailMan.set_StartTLS(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.StartTLSifPossibleGet">
            <summary>Sets the shim of MailMan.get_StartTLSifPossible()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.StartTLSifPossibleSetBoolean">
            <summary>Sets the shim of MailMan.set_StartTLSifPossible(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TlsCipherSuiteGet">
            <summary>Sets the shim of MailMan.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TlsPinSetGet">
            <summary>Sets the shim of MailMan.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TlsPinSetSetString">
            <summary>Sets the shim of MailMan.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TlsVersionGet">
            <summary>Sets the shim of MailMan.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.ToString01">
            <summary>Sets the shim of MailMan.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TransferMail">
            <summary>Sets the shim of MailMan.TransferMail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TransferMailAsync">
            <summary>Sets the shim of MailMan.TransferMailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TransferMultipleMimeAsyncStringArray">
            <summary>Sets the shim of MailMan.TransferMultipleMimeAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.TransferMultipleMimeStringArray">
            <summary>Sets the shim of MailMan.TransferMultipleMime(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.UnlockComponentString">
            <summary>Sets the shim of MailMan.UnlockComponent(String code)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.UseApopGet">
            <summary>Sets the shim of MailMan.get_UseApop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.UseApopSetBoolean">
            <summary>Sets the shim of MailMan.set_UseApop(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of MailMan.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.UseSshSsh">
            <summary>Sets the shim of MailMan.UseSsh(Ssh ssh)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.UseSshTunnelSocket">
            <summary>Sets the shim of MailMan.UseSshTunnel(Socket tunnel)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of MailMan.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of MailMan.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifyPopConnection">
            <summary>Sets the shim of MailMan.VerifyPopConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifyPopConnectionAsync">
            <summary>Sets the shim of MailMan.VerifyPopConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifyPopLogin">
            <summary>Sets the shim of MailMan.VerifyPopLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifyPopLoginAsync">
            <summary>Sets the shim of MailMan.VerifyPopLoginAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifyRecipsAsyncEmailStringArray">
            <summary>Sets the shim of MailMan.VerifyRecipsAsync(Email email, StringArray badAddrs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifyRecipsEmailStringArray">
            <summary>Sets the shim of MailMan.VerifyRecips(Email email, StringArray badAddrs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifySmtpConnection">
            <summary>Sets the shim of MailMan.VerifySmtpConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifySmtpConnectionAsync">
            <summary>Sets the shim of MailMan.VerifySmtpConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifySmtpLogin">
            <summary>Sets the shim of MailMan.VerifySmtpLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VerifySmtpLoginAsync">
            <summary>Sets the shim of MailMan.VerifySmtpLoginAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances.VersionGet">
            <summary>Sets the shim of MailMan.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances._MailMan">
            <summary>Sets the shim of MailMan.!MailMan()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllInstances._MailMan01">
            <summary>Sets the shim of MailMan.~MailMan()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllOrNoneGet">
            <summary>Sets the shim of MailMan.get_AllOrNone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AllOrNoneSetBoolean">
            <summary>Sets the shim of MailMan.set_AllOrNone(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoFixGet">
            <summary>Sets the shim of MailMan.get_AutoFix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoFixSetBoolean">
            <summary>Sets the shim of MailMan.set_AutoFix(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoGenMessageIdGet">
            <summary>Sets the shim of MailMan.get_AutoGenMessageId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoGenMessageIdSetBoolean">
            <summary>Sets the shim of MailMan.set_AutoGenMessageId(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoSmtpRsetGet">
            <summary>Sets the shim of MailMan.get_AutoSmtpRset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoSmtpRsetSetBoolean">
            <summary>Sets the shim of MailMan.set_AutoSmtpRset(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoUnwrapSecurityGet">
            <summary>Sets the shim of MailMan.get_AutoUnwrapSecurity()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.AutoUnwrapSecuritySetBoolean">
            <summary>Sets the shim of MailMan.set_AutoUnwrapSecurity(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailMan.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailMan.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailMan.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.CheckMail">
            <summary>Sets the shim of MailMan.CheckMail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.CheckMailAsync">
            <summary>Sets the shim of MailMan.CheckMailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ClearBadEmailAddresses">
            <summary>Sets the shim of MailMan.ClearBadEmailAddresses()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ClearPop3SessionLog">
            <summary>Sets the shim of MailMan.ClearPop3SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ClearSmtpSessionLog">
            <summary>Sets the shim of MailMan.ClearSmtpSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ClientIpAddressGet">
            <summary>Sets the shim of MailMan.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ClientIpAddressSetString">
            <summary>Sets the shim of MailMan.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.CloseSmtpConnection">
            <summary>Sets the shim of MailMan.CloseSmtpConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.CloseSmtpConnectionAsync">
            <summary>Sets the shim of MailMan.CloseSmtpConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ConnectFailReasonGet">
            <summary>Sets the shim of MailMan.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ConnectTimeoutGet">
            <summary>Sets the shim of MailMan.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ConnectTimeoutSetInt32">
            <summary>Sets the shim of MailMan.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Constructor">
            <summary>Sets the shim of MailMan.MailMan()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.CopyMail">
            <summary>Sets the shim of MailMan.CopyMail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.CopyMailAsync">
            <summary>Sets the shim of MailMan.CopyMailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DebugLogFilePathGet">
            <summary>Sets the shim of MailMan.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DebugLogFilePathSetString">
            <summary>Sets the shim of MailMan.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteBundleAsyncEmailBundle">
            <summary>Sets the shim of MailMan.DeleteBundleAsync(EmailBundle emailBundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteBundleEmailBundle">
            <summary>Sets the shim of MailMan.DeleteBundle(EmailBundle emailBundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteByMsgnumAsyncInt32">
            <summary>Sets the shim of MailMan.DeleteByMsgnumAsync(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteByMsgnumInt32">
            <summary>Sets the shim of MailMan.DeleteByMsgnum(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteByUidlAsyncString">
            <summary>Sets the shim of MailMan.DeleteByUidlAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteByUidlString">
            <summary>Sets the shim of MailMan.DeleteByUidl(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteEmailAsyncEmail">
            <summary>Sets the shim of MailMan.DeleteEmailAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteEmailEmail">
            <summary>Sets the shim of MailMan.DeleteEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteMultipleAsyncStringArray">
            <summary>Sets the shim of MailMan.DeleteMultipleAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DeleteMultipleStringArray">
            <summary>Sets the shim of MailMan.DeleteMultiple(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Dispose">
            <summary>Sets the shim of MailMan.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DisposeBoolean">
            <summary>Sets the shim of MailMan.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DsnEnvidGet">
            <summary>Sets the shim of MailMan.get_DsnEnvid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DsnEnvidSetString">
            <summary>Sets the shim of MailMan.set_DsnEnvid(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DsnNotifyGet">
            <summary>Sets the shim of MailMan.get_DsnNotify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DsnNotifySetString">
            <summary>Sets the shim of MailMan.set_DsnNotify(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DsnRetGet">
            <summary>Sets the shim of MailMan.get_DsnRet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.DsnRetSetString">
            <summary>Sets the shim of MailMan.set_DsnRet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.EmbedCertChainGet">
            <summary>Sets the shim of MailMan.get_EmbedCertChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.EmbedCertChainSetBoolean">
            <summary>Sets the shim of MailMan.set_EmbedCertChain(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.EnableEventsGet">
            <summary>Sets the shim of MailMan.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.EnableEventsSetBoolean">
            <summary>Sets the shim of MailMan.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchByMsgnumAsyncInt32">
            <summary>Sets the shim of MailMan.FetchByMsgnumAsync(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchByMsgnumInt32">
            <summary>Sets the shim of MailMan.FetchByMsgnum(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchEmailAsyncString">
            <summary>Sets the shim of MailMan.FetchEmailAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchEmailString">
            <summary>Sets the shim of MailMan.FetchEmail(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMimeAsyncString">
            <summary>Sets the shim of MailMan.FetchMimeAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMimeByMsgnumAsyncInt32">
            <summary>Sets the shim of MailMan.FetchMimeByMsgnumAsync(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMimeByMsgnumInt32">
            <summary>Sets the shim of MailMan.FetchMimeByMsgnum(Int32 msgnum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMimeString">
            <summary>Sets the shim of MailMan.FetchMime(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMultipleAsyncStringArray">
            <summary>Sets the shim of MailMan.FetchMultipleAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMultipleHeadersAsyncStringArrayInt32">
            <summary>Sets the shim of MailMan.FetchMultipleHeadersAsync(StringArray uidlArray, Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMultipleHeadersStringArrayInt32">
            <summary>Sets the shim of MailMan.FetchMultipleHeaders(StringArray uidlArray, Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMultipleMimeAsyncStringArray">
            <summary>Sets the shim of MailMan.FetchMultipleMimeAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMultipleMimeStringArray">
            <summary>Sets the shim of MailMan.FetchMultipleMime(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchMultipleStringArray">
            <summary>Sets the shim of MailMan.FetchMultiple(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchSingleHeaderAsyncInt32Int32">
            <summary>Sets the shim of MailMan.FetchSingleHeaderAsync(Int32 numBodyLines, Int32 messageNumber)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchSingleHeaderByUidlAsyncInt32String">
            <summary>Sets the shim of MailMan.FetchSingleHeaderByUidlAsync(Int32 numBodyLines, String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchSingleHeaderByUidlInt32String">
            <summary>Sets the shim of MailMan.FetchSingleHeaderByUidl(Int32 numBodyLines, String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FetchSingleHeaderInt32Int32">
            <summary>Sets the shim of MailMan.FetchSingleHeader(Int32 numBodyLines, Int32 messageNumber)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FilterGet">
            <summary>Sets the shim of MailMan.get_Filter()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FilterSetString">
            <summary>Sets the shim of MailMan.set_Filter(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of MailMan.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FireEmailReceivedObjectEmailEventArgs">
            <summary>Sets the shim of MailMan.FireEmailReceived(Object sender, EmailEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of MailMan.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of MailMan.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of MailMan.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetAllHeadersAsyncInt32">
            <summary>Sets the shim of MailMan.GetAllHeadersAsync(Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetAllHeadersInt32">
            <summary>Sets the shim of MailMan.GetAllHeaders(Int32 numBodyLines)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetBadEmailAddrs">
            <summary>Sets the shim of MailMan.GetBadEmailAddrs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetFullEmailAsyncEmail">
            <summary>Sets the shim of MailMan.GetFullEmailAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetFullEmailEmail">
            <summary>Sets the shim of MailMan.GetFullEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetHeadersAsyncInt32Int32Int32">
            <summary>Sets the shim of MailMan.GetHeadersAsync(Int32 numBodyLines, Int32 fromIndex, Int32 toIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetHeadersInt32Int32Int32">
            <summary>Sets the shim of MailMan.GetHeaders(Int32 numBodyLines, Int32 fromIndex, Int32 toIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetMailboxCount">
            <summary>Sets the shim of MailMan.GetMailboxCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetMailboxCountAsync">
            <summary>Sets the shim of MailMan.GetMailboxCountAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetMailboxInfoXml">
            <summary>Sets the shim of MailMan.GetMailboxInfoXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetMailboxInfoXmlAsync">
            <summary>Sets the shim of MailMan.GetMailboxInfoXmlAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetMailboxSize">
            <summary>Sets the shim of MailMan.GetMailboxSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetMailboxSizeAsync">
            <summary>Sets the shim of MailMan.GetMailboxSizeAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetPop3SslServerCert">
            <summary>Sets the shim of MailMan.GetPop3SslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetSentToEmailAddrs">
            <summary>Sets the shim of MailMan.GetSentToEmailAddrs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetSizeByUidlAsyncString">
            <summary>Sets the shim of MailMan.GetSizeByUidlAsync(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetSizeByUidlString">
            <summary>Sets the shim of MailMan.GetSizeByUidl(String uidl)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetSmtpSslServerCert">
            <summary>Sets the shim of MailMan.GetSmtpSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetUidls">
            <summary>Sets the shim of MailMan.GetUidls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.GetUidlsAsync">
            <summary>Sets the shim of MailMan.GetUidlsAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HeartbeatMsGet">
            <summary>Sets the shim of MailMan.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HeartbeatMsSetInt32">
            <summary>Sets the shim of MailMan.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HeloHostnameGet">
            <summary>Sets the shim of MailMan.get_HeloHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HeloHostnameSetString">
            <summary>Sets the shim of MailMan.set_HeloHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyAuthMethodGet">
            <summary>Sets the shim of MailMan.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyDomainGet">
            <summary>Sets the shim of MailMan.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyDomainSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyHostnameGet">
            <summary>Sets the shim of MailMan.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyHostnameSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyPasswordGet">
            <summary>Sets the shim of MailMan.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyPasswordSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyPortGet">
            <summary>Sets the shim of MailMan.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyPortSetInt32">
            <summary>Sets the shim of MailMan.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyUsernameGet">
            <summary>Sets the shim of MailMan.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.HttpProxyUsernameSetString">
            <summary>Sets the shim of MailMan.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ImmediateDeleteGet">
            <summary>Sets the shim of MailMan.get_ImmediateDelete()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ImmediateDeleteSetBoolean">
            <summary>Sets the shim of MailMan.set_ImmediateDelete(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IncludeRootCertGet">
            <summary>Sets the shim of MailMan.get_IncludeRootCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IncludeRootCertSetBoolean">
            <summary>Sets the shim of MailMan.set_IncludeRootCert(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IsPop3ConnectedGet">
            <summary>Sets the shim of MailMan.get_IsPop3Connected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IsSmtpConnectedGet">
            <summary>Sets the shim of MailMan.get_IsSmtpConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IsSmtpDsnCapable">
            <summary>Sets the shim of MailMan.IsSmtpDsnCapable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IsSmtpDsnCapableAsync">
            <summary>Sets the shim of MailMan.IsSmtpDsnCapableAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.IsUnlocked">
            <summary>Sets the shim of MailMan.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastErrorHtmlGet">
            <summary>Sets the shim of MailMan.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastErrorTextGet">
            <summary>Sets the shim of MailMan.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastErrorXmlGet">
            <summary>Sets the shim of MailMan.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastJsonData">
            <summary>Sets the shim of MailMan.LastJsonData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastMethodSuccessGet">
            <summary>Sets the shim of MailMan.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of MailMan.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastSendQFilenameGet">
            <summary>Sets the shim of MailMan.get_LastSendQFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LastSmtpStatusGet">
            <summary>Sets the shim of MailMan.get_LastSmtpStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadEmlString">
            <summary>Sets the shim of MailMan.LoadEml(String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadMbxString">
            <summary>Sets the shim of MailMan.LoadMbx(String mbxFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadMimeString">
            <summary>Sets the shim of MailMan.LoadMime(String mimeText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadQueuedEmailString">
            <summary>Sets the shim of MailMan.LoadQueuedEmail(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadXmlEmailString">
            <summary>Sets the shim of MailMan.LoadXmlEmail(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadXmlEmailStringString">
            <summary>Sets the shim of MailMan.LoadXmlEmailString(String xmlString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadXmlFileString">
            <summary>Sets the shim of MailMan.LoadXmlFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LoadXmlStringString">
            <summary>Sets the shim of MailMan.LoadXmlString(String xmlString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LogMailReceivedFilenameGet">
            <summary>Sets the shim of MailMan.get_LogMailReceivedFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LogMailReceivedFilenameSetString">
            <summary>Sets the shim of MailMan.set_LogMailReceivedFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LogMailSentFilenameGet">
            <summary>Sets the shim of MailMan.get_LogMailSentFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.LogMailSentFilenameSetString">
            <summary>Sets the shim of MailMan.set_LogMailSentFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MailHostGet">
            <summary>Sets the shim of MailMan.get_MailHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MailHostSetString">
            <summary>Sets the shim of MailMan.set_MailHost(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MailPortGet">
            <summary>Sets the shim of MailMan.get_MailPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MailPortSetInt32">
            <summary>Sets the shim of MailMan.set_MailPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MaxCountGet">
            <summary>Sets the shim of MailMan.get_MaxCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MaxCountSetInt32">
            <summary>Sets the shim of MailMan.set_MaxCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MxLookupAllString">
            <summary>Sets the shim of MailMan.MxLookupAll(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.MxLookupString">
            <summary>Sets the shim of MailMan.MxLookup(String emailAddress)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OAuth2AccessTokenGet">
            <summary>Sets the shim of MailMan.get_OAuth2AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OAuth2AccessTokenSetString">
            <summary>Sets the shim of MailMan.set_OAuth2AccessToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnAbortCheckAddMailManAbortCheckEventHandler">
            <summary>Sets the shim of MailMan.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of MailMan.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnAbortCheckRemoveMailManAbortCheckEventHandler">
            <summary>Sets the shim of MailMan.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnEmailReceivedAddMailManEmailReceivedEventHandler">
            <summary>Sets the shim of MailMan.add_OnEmailReceived(EmailReceivedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnEmailReceivedRaiseObjectEmailEventArgs">
            <summary>Sets the shim of MailMan.raise_OnEmailReceived(Object value0, EmailEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnEmailReceivedRemoveMailManEmailReceivedEventHandler">
            <summary>Sets the shim of MailMan.remove_OnEmailReceived(EmailReceivedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnPercentDoneAddMailManPercentDoneEventHandler">
            <summary>Sets the shim of MailMan.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of MailMan.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnPercentDoneRemoveMailManPercentDoneEventHandler">
            <summary>Sets the shim of MailMan.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnProgressInfoAddMailManProgressInfoEventHandler">
            <summary>Sets the shim of MailMan.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of MailMan.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnProgressInfoRemoveMailManProgressInfoEventHandler">
            <summary>Sets the shim of MailMan.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnTaskCompletedAddMailManTaskCompletedEventHandler">
            <summary>Sets the shim of MailMan.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of MailMan.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OnTaskCompletedRemoveMailManTaskCompletedEventHandler">
            <summary>Sets the shim of MailMan.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OpaqueSigningGet">
            <summary>Sets the shim of MailMan.get_OpaqueSigning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OpaqueSigningSetBoolean">
            <summary>Sets the shim of MailMan.set_OpaqueSigning(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OpenSmtpConnection">
            <summary>Sets the shim of MailMan.OpenSmtpConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.OpenSmtpConnectionAsync">
            <summary>Sets the shim of MailMan.OpenSmtpConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.P7mEncryptAttachFilenameGet">
            <summary>Sets the shim of MailMan.get_P7mEncryptAttachFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.P7mEncryptAttachFilenameSetString">
            <summary>Sets the shim of MailMan.set_P7mEncryptAttachFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.P7mSigAttachFilenameGet">
            <summary>Sets the shim of MailMan.get_P7mSigAttachFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.P7mSigAttachFilenameSetString">
            <summary>Sets the shim of MailMan.set_P7mSigAttachFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.P7sSigAttachFilenameGet">
            <summary>Sets the shim of MailMan.get_P7sSigAttachFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.P7sSigAttachFilenameSetString">
            <summary>Sets the shim of MailMan.set_P7sSigAttachFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PercentDoneScaleGet">
            <summary>Sets the shim of MailMan.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PercentDoneScaleSetInt32">
            <summary>Sets the shim of MailMan.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3Authenticate">
            <summary>Sets the shim of MailMan.Pop3Authenticate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3AuthenticateAsync">
            <summary>Sets the shim of MailMan.Pop3AuthenticateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3BeginSession">
            <summary>Sets the shim of MailMan.Pop3BeginSession()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3BeginSessionAsync">
            <summary>Sets the shim of MailMan.Pop3BeginSessionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3Connect">
            <summary>Sets the shim of MailMan.Pop3Connect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3ConnectAsync">
            <summary>Sets the shim of MailMan.Pop3ConnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3EndSession">
            <summary>Sets the shim of MailMan.Pop3EndSession()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3EndSessionAsync">
            <summary>Sets the shim of MailMan.Pop3EndSessionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3EndSessionNoQuit">
            <summary>Sets the shim of MailMan.Pop3EndSessionNoQuit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3EndSessionNoQuitAsync">
            <summary>Sets the shim of MailMan.Pop3EndSessionNoQuitAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3Noop">
            <summary>Sets the shim of MailMan.Pop3Noop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3NoopAsync">
            <summary>Sets the shim of MailMan.Pop3NoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3Reset">
            <summary>Sets the shim of MailMan.Pop3Reset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3ResetAsync">
            <summary>Sets the shim of MailMan.Pop3ResetAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SPAGet">
            <summary>Sets the shim of MailMan.get_Pop3SPA()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SPASetBoolean">
            <summary>Sets the shim of MailMan.set_Pop3SPA(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SendRawCommandAsyncStringString">
            <summary>Sets the shim of MailMan.Pop3SendRawCommandAsync(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SendRawCommandStringString">
            <summary>Sets the shim of MailMan.Pop3SendRawCommand(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SessionIdGet">
            <summary>Sets the shim of MailMan.get_Pop3SessionId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SessionLogGet">
            <summary>Sets the shim of MailMan.get_Pop3SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3SslServerCertVerifiedGet">
            <summary>Sets the shim of MailMan.get_Pop3SslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3StlsGet">
            <summary>Sets the shim of MailMan.get_Pop3Stls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.Pop3StlsSetBoolean">
            <summary>Sets the shim of MailMan.set_Pop3Stls(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopPasswordBase64Get">
            <summary>Sets the shim of MailMan.get_PopPasswordBase64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopPasswordBase64SetString">
            <summary>Sets the shim of MailMan.set_PopPasswordBase64(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopPasswordGet">
            <summary>Sets the shim of MailMan.get_PopPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopPasswordSetString">
            <summary>Sets the shim of MailMan.set_PopPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopSslGet">
            <summary>Sets the shim of MailMan.get_PopSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopSslSetBoolean">
            <summary>Sets the shim of MailMan.set_PopSsl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopUsernameGet">
            <summary>Sets the shim of MailMan.get_PopUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PopUsernameSetString">
            <summary>Sets the shim of MailMan.set_PopUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PreferIpv6Get">
            <summary>Sets the shim of MailMan.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.PreferIpv6SetBoolean">
            <summary>Sets the shim of MailMan.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.QuickSendAsyncStringStringStringStringString">
            <summary>Sets the shim of MailMan.QuickSendAsync(String fromAddr, String toAddr, String subject, String body, String smtpServer)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.QuickSendStringStringStringStringString">
            <summary>Sets the shim of MailMan.QuickSend(String fromAddr, String toAddr, String subject, String body, String smtpServer)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ReadTimeoutGet">
            <summary>Sets the shim of MailMan.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ReadTimeoutSetInt32">
            <summary>Sets the shim of MailMan.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.RenderToMimeBdEmailBinData">
            <summary>Sets the shim of MailMan.RenderToMimeBd(Email email, BinData renderedMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.RenderToMimeBytesEmail">
            <summary>Sets the shim of MailMan.RenderToMimeBytes(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.RenderToMimeEmail">
            <summary>Sets the shim of MailMan.RenderToMime(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.RenderToMimeSbEmailStringBuilder">
            <summary>Sets the shim of MailMan.RenderToMimeSb(Email email, StringBuilder renderedMime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.RequireSslCertVerifyGet">
            <summary>Sets the shim of MailMan.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of MailMan.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ResetDateOnLoadGet">
            <summary>Sets the shim of MailMan.get_ResetDateOnLoad()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ResetDateOnLoadSetBoolean">
            <summary>Sets the shim of MailMan.set_ResetDateOnLoad(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SaveLastErrorString">
            <summary>Sets the shim of MailMan.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendBufferSizeGet">
            <summary>Sets the shim of MailMan.get_SendBufferSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendBufferSizeSetInt32">
            <summary>Sets the shim of MailMan.set_SendBufferSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendBundleAsyncEmailBundle">
            <summary>Sets the shim of MailMan.SendBundleAsync(EmailBundle bundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendBundleEmailBundle">
            <summary>Sets the shim of MailMan.SendBundle(EmailBundle bundle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendEmailAsyncEmail">
            <summary>Sets the shim of MailMan.SendEmailAsync(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendEmailEmail">
            <summary>Sets the shim of MailMan.SendEmail(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendIndividualGet">
            <summary>Sets the shim of MailMan.get_SendIndividual()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendIndividualSetBoolean">
            <summary>Sets the shim of MailMan.set_SendIndividual(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeAsyncStringStringString">
            <summary>Sets the shim of MailMan.SendMimeAsync(String fromAddr, String recipients, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeBytesAsyncStringStringByteArray">
            <summary>Sets the shim of MailMan.SendMimeBytesAsync(String fromAddr, String recipients, Byte[] mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeBytesQStringStringByteArray">
            <summary>Sets the shim of MailMan.SendMimeBytesQ(String from, String recipients, Byte[] mimeData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeBytesStringStringByteArray">
            <summary>Sets the shim of MailMan.SendMimeBytes(String fromAddr, String recipients, Byte[] mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeQStringStringString">
            <summary>Sets the shim of MailMan.SendMimeQ(String fromAddr, String recipients, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeStringStringString">
            <summary>Sets the shim of MailMan.SendMime(String fromAddr, String recipients, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeToListAsyncStringStringString">
            <summary>Sets the shim of MailMan.SendMimeToListAsync(String fromAddr, String distListFilename, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendMimeToListStringStringString">
            <summary>Sets the shim of MailMan.SendMimeToList(String fromAddr, String distListFilename, String mimeSource)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendQ2EmailString">
            <summary>Sets the shim of MailMan.SendQ2(Email email, String queueDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendQEmail">
            <summary>Sets the shim of MailMan.SendQ(Email email)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendToDistributionListAsyncEmailStringArray">
            <summary>Sets the shim of MailMan.SendToDistributionListAsync(Email emailObj, StringArray recipientList)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SendToDistributionListEmailStringArray">
            <summary>Sets the shim of MailMan.SendToDistributionList(Email emailObj, StringArray recipientList)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SetCSPCsp">
            <summary>Sets the shim of MailMan.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SetDecryptCert2CertPrivateKey">
            <summary>Sets the shim of MailMan.SetDecryptCert2(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SetDecryptCertCert">
            <summary>Sets the shim of MailMan.SetDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SetSslClientCertCert">
            <summary>Sets the shim of MailMan.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SetSslClientCertPemStringString">
            <summary>Sets the shim of MailMan.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SetSslClientCertPfxStringString">
            <summary>Sets the shim of MailMan.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SizeLimitGet">
            <summary>Sets the shim of MailMan.get_SizeLimit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SizeLimitSetInt32">
            <summary>Sets the shim of MailMan.set_SizeLimit(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpAuthMethodGet">
            <summary>Sets the shim of MailMan.get_SmtpAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpAuthMethodSetString">
            <summary>Sets the shim of MailMan.set_SmtpAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpAuthenticate">
            <summary>Sets the shim of MailMan.SmtpAuthenticate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpAuthenticateAsync">
            <summary>Sets the shim of MailMan.SmtpAuthenticateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpConnect">
            <summary>Sets the shim of MailMan.SmtpConnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpConnectAsync">
            <summary>Sets the shim of MailMan.SmtpConnectAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpFailReasonGet">
            <summary>Sets the shim of MailMan.get_SmtpFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpHostGet">
            <summary>Sets the shim of MailMan.get_SmtpHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpHostSetString">
            <summary>Sets the shim of MailMan.set_SmtpHost(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpLoginDomainGet">
            <summary>Sets the shim of MailMan.get_SmtpLoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpLoginDomainSetString">
            <summary>Sets the shim of MailMan.set_SmtpLoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpNoop">
            <summary>Sets the shim of MailMan.SmtpNoop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpNoopAsync">
            <summary>Sets the shim of MailMan.SmtpNoopAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpPasswordGet">
            <summary>Sets the shim of MailMan.get_SmtpPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpPasswordSetString">
            <summary>Sets the shim of MailMan.set_SmtpPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpPipeliningGet">
            <summary>Sets the shim of MailMan.get_SmtpPipelining()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpPipeliningSetBoolean">
            <summary>Sets the shim of MailMan.set_SmtpPipelining(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpPortGet">
            <summary>Sets the shim of MailMan.get_SmtpPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpPortSetInt32">
            <summary>Sets the shim of MailMan.set_SmtpPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpReset">
            <summary>Sets the shim of MailMan.SmtpReset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpResetAsync">
            <summary>Sets the shim of MailMan.SmtpResetAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpSendRawCommandAsyncStringStringBoolean">
            <summary>Sets the shim of MailMan.SmtpSendRawCommandAsync(String command, String charset, Boolean bEncodeBase64)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpSendRawCommandStringStringBoolean">
            <summary>Sets the shim of MailMan.SmtpSendRawCommand(String command, String charset, Boolean bEncodeBase64)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpSessionLogGet">
            <summary>Sets the shim of MailMan.get_SmtpSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpSslGet">
            <summary>Sets the shim of MailMan.get_SmtpSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpSslServerCertVerifiedGet">
            <summary>Sets the shim of MailMan.get_SmtpSslServerCertVerified()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpSslSetBoolean">
            <summary>Sets the shim of MailMan.set_SmtpSsl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpUsernameGet">
            <summary>Sets the shim of MailMan.get_SmtpUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SmtpUsernameSetString">
            <summary>Sets the shim of MailMan.set_SmtpUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SoRcvBufGet">
            <summary>Sets the shim of MailMan.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SoRcvBufSetInt32">
            <summary>Sets the shim of MailMan.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SoSndBufGet">
            <summary>Sets the shim of MailMan.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SoSndBufSetInt32">
            <summary>Sets the shim of MailMan.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksHostnameGet">
            <summary>Sets the shim of MailMan.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksHostnameSetString">
            <summary>Sets the shim of MailMan.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksPasswordGet">
            <summary>Sets the shim of MailMan.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksPasswordSetString">
            <summary>Sets the shim of MailMan.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksPortGet">
            <summary>Sets the shim of MailMan.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksPortSetInt32">
            <summary>Sets the shim of MailMan.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksUsernameGet">
            <summary>Sets the shim of MailMan.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksUsernameSetString">
            <summary>Sets the shim of MailMan.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksVersionGet">
            <summary>Sets the shim of MailMan.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SocksVersionSetInt32">
            <summary>Sets the shim of MailMan.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshAuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of MailMan.SshAuthenticatePkAsync(String sshLogin, SshKey sshUsername)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshAuthenticatePkStringSshKey">
            <summary>Sets the shim of MailMan.SshAuthenticatePk(String sshLogin, SshKey sshUsername)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshAuthenticatePwAsyncStringString">
            <summary>Sets the shim of MailMan.SshAuthenticatePwAsync(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshAuthenticatePwStringString">
            <summary>Sets the shim of MailMan.SshAuthenticatePw(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshCloseTunnel">
            <summary>Sets the shim of MailMan.SshCloseTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshCloseTunnelAsync">
            <summary>Sets the shim of MailMan.SshCloseTunnelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshOpenTunnelAsyncStringInt32">
            <summary>Sets the shim of MailMan.SshOpenTunnelAsync(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SshOpenTunnelStringInt32">
            <summary>Sets the shim of MailMan.SshOpenTunnel(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SslAllowedCiphersGet">
            <summary>Sets the shim of MailMan.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SslAllowedCiphersSetString">
            <summary>Sets the shim of MailMan.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SslProtocolGet">
            <summary>Sets the shim of MailMan.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.SslProtocolSetString">
            <summary>Sets the shim of MailMan.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.StartTLSGet">
            <summary>Sets the shim of MailMan.get_StartTLS()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.StartTLSSetBoolean">
            <summary>Sets the shim of MailMan.set_StartTLS(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.StartTLSifPossibleGet">
            <summary>Sets the shim of MailMan.get_StartTLSifPossible()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.StartTLSifPossibleSetBoolean">
            <summary>Sets the shim of MailMan.set_StartTLSifPossible(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TlsCipherSuiteGet">
            <summary>Sets the shim of MailMan.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TlsPinSetGet">
            <summary>Sets the shim of MailMan.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TlsPinSetSetString">
            <summary>Sets the shim of MailMan.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TlsVersionGet">
            <summary>Sets the shim of MailMan.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.ToString">
            <summary>Sets the shim of MailMan.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TransferMail">
            <summary>Sets the shim of MailMan.TransferMail()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TransferMailAsync">
            <summary>Sets the shim of MailMan.TransferMailAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TransferMultipleMimeAsyncStringArray">
            <summary>Sets the shim of MailMan.TransferMultipleMimeAsync(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.TransferMultipleMimeStringArray">
            <summary>Sets the shim of MailMan.TransferMultipleMime(StringArray uidlArray)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.UnlockComponentString">
            <summary>Sets the shim of MailMan.UnlockComponent(String code)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.UseApopGet">
            <summary>Sets the shim of MailMan.get_UseApop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.UseApopSetBoolean">
            <summary>Sets the shim of MailMan.set_UseApop(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.UseCertVaultXmlCertVault">
            <summary>Sets the shim of MailMan.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.UseSshSsh">
            <summary>Sets the shim of MailMan.UseSsh(Ssh ssh)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.UseSshTunnelSocket">
            <summary>Sets the shim of MailMan.UseSshTunnel(Socket tunnel)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerboseLoggingGet">
            <summary>Sets the shim of MailMan.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerboseLoggingSetBoolean">
            <summary>Sets the shim of MailMan.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifyPopConnection">
            <summary>Sets the shim of MailMan.VerifyPopConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifyPopConnectionAsync">
            <summary>Sets the shim of MailMan.VerifyPopConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifyPopLogin">
            <summary>Sets the shim of MailMan.VerifyPopLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifyPopLoginAsync">
            <summary>Sets the shim of MailMan.VerifyPopLoginAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifyRecipsAsyncEmailStringArray">
            <summary>Sets the shim of MailMan.VerifyRecipsAsync(Email email, StringArray badAddrs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifyRecipsEmailStringArray">
            <summary>Sets the shim of MailMan.VerifyRecips(Email email, StringArray badAddrs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifySmtpConnection">
            <summary>Sets the shim of MailMan.VerifySmtpConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifySmtpConnectionAsync">
            <summary>Sets the shim of MailMan.VerifySmtpConnectionAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifySmtpLogin">
            <summary>Sets the shim of MailMan.VerifySmtpLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VerifySmtpLoginAsync">
            <summary>Sets the shim of MailMan.VerifySmtpLoginAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan.VersionGet">
            <summary>Sets the shim of MailMan.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan._MailMan">
            <summary>Sets the shim of MailMan.!MailMan()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailMan._MailMan01">
            <summary>Sets the shim of MailMan.~MailMan()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMailboxes">
            <summary>Shim type of Chilkat.Mailboxes</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailboxes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailboxes.#ctor(Chilkat.Mailboxes)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMailboxes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.CountGet">
            <summary>Sets the shim of Mailboxes.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.Dispose">
            <summary>Sets the shim of Mailboxes.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Mailboxes.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.GetFlagsInt32">
            <summary>Sets the shim of Mailboxes.GetFlags(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.GetMailboxIndexString">
            <summary>Sets the shim of Mailboxes.GetMailboxIndex(String mbxName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.GetNameInt32">
            <summary>Sets the shim of Mailboxes.GetName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.GetNthFlagInt32Int32">
            <summary>Sets the shim of Mailboxes.GetNthFlag(Int32 index, Int32 flagIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.GetNumFlagsInt32">
            <summary>Sets the shim of Mailboxes.GetNumFlags(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.HasFlagInt32String">
            <summary>Sets the shim of Mailboxes.HasFlag(Int32 index, String flagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.HasInferiorsInt32">
            <summary>Sets the shim of Mailboxes.HasInferiors(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.IsMarkedInt32">
            <summary>Sets the shim of Mailboxes.IsMarked(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.IsSelectableInt32">
            <summary>Sets the shim of Mailboxes.IsSelectable(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Mailboxes.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Mailboxes.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of Mailboxes.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances.ToString01">
            <summary>Sets the shim of Mailboxes.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances._Mailboxes">
            <summary>Sets the shim of Mailboxes.!Mailboxes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.AllInstances._Mailboxes01">
            <summary>Sets the shim of Mailboxes.~Mailboxes()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailboxes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailboxes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMailboxes.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.Constructor">
            <summary>Sets the shim of Mailboxes.Mailboxes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.CountGet">
            <summary>Sets the shim of Mailboxes.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.Dispose">
            <summary>Sets the shim of Mailboxes.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.DisposeBoolean">
            <summary>Sets the shim of Mailboxes.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.GetFlagsInt32">
            <summary>Sets the shim of Mailboxes.GetFlags(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.GetMailboxIndexString">
            <summary>Sets the shim of Mailboxes.GetMailboxIndex(String mbxName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.GetNameInt32">
            <summary>Sets the shim of Mailboxes.GetName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.GetNthFlagInt32Int32">
            <summary>Sets the shim of Mailboxes.GetNthFlag(Int32 index, Int32 flagIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.GetNumFlagsInt32">
            <summary>Sets the shim of Mailboxes.GetNumFlags(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.HasFlagInt32String">
            <summary>Sets the shim of Mailboxes.HasFlag(Int32 index, String flagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.HasInferiorsInt32">
            <summary>Sets the shim of Mailboxes.HasInferiors(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.IsMarkedInt32">
            <summary>Sets the shim of Mailboxes.IsMarked(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.IsSelectableInt32">
            <summary>Sets the shim of Mailboxes.IsSelectable(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.LastMethodSuccessGet">
            <summary>Sets the shim of Mailboxes.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Mailboxes.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.LoadTaskResultTask">
            <summary>Sets the shim of Mailboxes.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes.ToString">
            <summary>Sets the shim of Mailboxes.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes._Mailboxes">
            <summary>Sets the shim of Mailboxes.!Mailboxes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMailboxes._Mailboxes01">
            <summary>Sets the shim of Mailboxes.~Mailboxes()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMessageSet">
            <summary>Shim type of Chilkat.MessageSet</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMessageSet.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMessageSet.#ctor(Chilkat.MessageSet)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMessageSet.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.ContainsIdInt32">
            <summary>Sets the shim of MessageSet.ContainsId(Int32 msgId)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.CountGet">
            <summary>Sets the shim of MessageSet.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.Dispose">
            <summary>Sets the shim of MessageSet.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MessageSet.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.FromCompactStringString">
            <summary>Sets the shim of MessageSet.FromCompactString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.GetIdInt32">
            <summary>Sets the shim of MessageSet.GetId(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.HasUidsGet">
            <summary>Sets the shim of MessageSet.get_HasUids()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.HasUidsSetBoolean">
            <summary>Sets the shim of MessageSet.set_HasUids(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.InsertIdInt32">
            <summary>Sets the shim of MessageSet.InsertId(Int32 id)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of MessageSet.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of MessageSet.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of MessageSet.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.RemoveIdInt32">
            <summary>Sets the shim of MessageSet.RemoveId(Int32 id)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.ToCommaSeparatedStr">
            <summary>Sets the shim of MessageSet.ToCommaSeparatedStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.ToCompactString">
            <summary>Sets the shim of MessageSet.ToCompactString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances.ToString01">
            <summary>Sets the shim of MessageSet.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances._MessageSet">
            <summary>Sets the shim of MessageSet.!MessageSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.AllInstances._MessageSet01">
            <summary>Sets the shim of MessageSet.~MessageSet()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMessageSet.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMessageSet.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMessageSet.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.Constructor">
            <summary>Sets the shim of MessageSet.MessageSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.ContainsIdInt32">
            <summary>Sets the shim of MessageSet.ContainsId(Int32 msgId)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.CountGet">
            <summary>Sets the shim of MessageSet.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.Dispose">
            <summary>Sets the shim of MessageSet.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.DisposeBoolean">
            <summary>Sets the shim of MessageSet.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.FromCompactStringString">
            <summary>Sets the shim of MessageSet.FromCompactString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.GetIdInt32">
            <summary>Sets the shim of MessageSet.GetId(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.HasUidsGet">
            <summary>Sets the shim of MessageSet.get_HasUids()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.HasUidsSetBoolean">
            <summary>Sets the shim of MessageSet.set_HasUids(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.InsertIdInt32">
            <summary>Sets the shim of MessageSet.InsertId(Int32 id)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.LastMethodSuccessGet">
            <summary>Sets the shim of MessageSet.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of MessageSet.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.LoadTaskResultTask">
            <summary>Sets the shim of MessageSet.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.RemoveIdInt32">
            <summary>Sets the shim of MessageSet.RemoveId(Int32 id)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.ToCommaSeparatedStr">
            <summary>Sets the shim of MessageSet.ToCommaSeparatedStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.ToCompactString">
            <summary>Sets the shim of MessageSet.ToCompactString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet.ToString">
            <summary>Sets the shim of MessageSet.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet._MessageSet">
            <summary>Sets the shim of MessageSet.!MessageSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMessageSet._MessageSet01">
            <summary>Sets the shim of MessageSet.~MessageSet()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMht">
            <summary>Shim type of Chilkat.Mht</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMht.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMht.#ctor(Chilkat.Mht)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AbortCurrentGet">
            <summary>Sets the shim of Mht.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AbortCurrentSetBoolean">
            <summary>Sets the shim of Mht.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AddCacheRootString">
            <summary>Sets the shim of Mht.AddCacheRoot(String dir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AddCustomHeaderStringString">
            <summary>Sets the shim of Mht.AddCustomHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AddExternalStyleSheetString">
            <summary>Sets the shim of Mht.AddExternalStyleSheet(String url)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMht.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Mht.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Mht.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.AddCacheRootString">
            <summary>Sets the shim of Mht.AddCacheRoot(String dir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.AddCustomHeaderStringString">
            <summary>Sets the shim of Mht.AddCustomHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.AddExternalStyleSheetString">
            <summary>Sets the shim of Mht.AddExternalStyleSheet(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.BaseUrlGet">
            <summary>Sets the shim of Mht.get_BaseUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.BaseUrlSetString">
            <summary>Sets the shim of Mht.set_BaseUrl(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ClearCustomHeaders">
            <summary>Sets the shim of Mht.ClearCustomHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ConnectTimeoutGet">
            <summary>Sets the shim of Mht.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Mht.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugHtmlAfterGet">
            <summary>Sets the shim of Mht.get_DebugHtmlAfter()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugHtmlAfterSetString">
            <summary>Sets the shim of Mht.set_DebugHtmlAfter(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugHtmlBeforeGet">
            <summary>Sets the shim of Mht.get_DebugHtmlBefore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugHtmlBeforeSetString">
            <summary>Sets the shim of Mht.set_DebugHtmlBefore(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Mht.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Mht.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugTagCleaningGet">
            <summary>Sets the shim of Mht.get_DebugTagCleaning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DebugTagCleaningSetBoolean">
            <summary>Sets the shim of Mht.set_DebugTagCleaning(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.Dispose">
            <summary>Sets the shim of Mht.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Mht.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.EmbedImagesGet">
            <summary>Sets the shim of Mht.get_EmbedImages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.EmbedImagesSetBoolean">
            <summary>Sets the shim of Mht.set_EmbedImages(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.EmbedLocalOnlyGet">
            <summary>Sets the shim of Mht.get_EmbedLocalOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.EmbedLocalOnlySetBoolean">
            <summary>Sets the shim of Mht.set_EmbedLocalOnly(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Mht.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Mht.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ExcludeImagesMatchingString">
            <summary>Sets the shim of Mht.ExcludeImagesMatching(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FetchFromCacheGet">
            <summary>Sets the shim of Mht.get_FetchFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FetchFromCacheSetBoolean">
            <summary>Sets the shim of Mht.set_FetchFromCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Mht.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Mht.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Mht.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Mht.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Mht.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Mht.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndSaveEMLAsyncStringString">
            <summary>Sets the shim of Mht.GetAndSaveEMLAsync(String url_or_htmlFilepath, String emlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndSaveEMLStringString">
            <summary>Sets the shim of Mht.GetAndSaveEML(String url_or_htmlFilepath, String emlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndSaveMHTAsyncStringString">
            <summary>Sets the shim of Mht.GetAndSaveMHTAsync(String url_or_htmlFilepath, String mhtPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndSaveMHTStringString">
            <summary>Sets the shim of Mht.GetAndSaveMHT(String url_or_htmlFilepath, String mhtPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndZipEMLAsyncStringStringString">
            <summary>Sets the shim of Mht.GetAndZipEMLAsync(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndZipEMLStringStringString">
            <summary>Sets the shim of Mht.GetAndZipEML(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndZipMHTAsyncStringStringString">
            <summary>Sets the shim of Mht.GetAndZipMHTAsync(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetAndZipMHTStringStringString">
            <summary>Sets the shim of Mht.GetAndZipMHT(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetCacheRootInt32">
            <summary>Sets the shim of Mht.GetCacheRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetEMLAsyncString">
            <summary>Sets the shim of Mht.GetEMLAsync(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetEMLString">
            <summary>Sets the shim of Mht.GetEML(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetMHTAsyncString">
            <summary>Sets the shim of Mht.GetMHTAsync(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.GetMHTString">
            <summary>Sets the shim of Mht.GetMHT(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Mht.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Mht.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToEMLAsyncString">
            <summary>Sets the shim of Mht.HtmlToEMLAsync(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToEMLFileAsyncStringString">
            <summary>Sets the shim of Mht.HtmlToEMLFileAsync(String html, String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToEMLFileStringString">
            <summary>Sets the shim of Mht.HtmlToEMLFile(String html, String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToEMLString">
            <summary>Sets the shim of Mht.HtmlToEML(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToMHTAsyncString">
            <summary>Sets the shim of Mht.HtmlToMHTAsync(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToMHTFileAsyncStringString">
            <summary>Sets the shim of Mht.HtmlToMHTFileAsync(String html, String mhtFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToMHTFileStringString">
            <summary>Sets the shim of Mht.HtmlToMHTFile(String html, String mhtFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.HtmlToMHTString">
            <summary>Sets the shim of Mht.HtmlToMHT(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.IgnoreMustRevalidateGet">
            <summary>Sets the shim of Mht.get_IgnoreMustRevalidate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.IgnoreMustRevalidateSetBoolean">
            <summary>Sets the shim of Mht.set_IgnoreMustRevalidate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.IgnoreNoCacheGet">
            <summary>Sets the shim of Mht.get_IgnoreNoCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.IgnoreNoCacheSetBoolean">
            <summary>Sets the shim of Mht.set_IgnoreNoCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.IsUnlocked">
            <summary>Sets the shim of Mht.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Mht.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Mht.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Mht.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Mht.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Mht.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NoScriptsGet">
            <summary>Sets the shim of Mht.get_NoScripts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NoScriptsSetBoolean">
            <summary>Sets the shim of Mht.set_NoScripts(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NtlmAuthGet">
            <summary>Sets the shim of Mht.get_NtlmAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NtlmAuthSetBoolean">
            <summary>Sets the shim of Mht.set_NtlmAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NumCacheLevelsGet">
            <summary>Sets the shim of Mht.get_NumCacheLevels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NumCacheLevelsSetInt32">
            <summary>Sets the shim of Mht.set_NumCacheLevels(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.NumCacheRootsGet">
            <summary>Sets the shim of Mht.get_NumCacheRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnAbortCheckAddMhtAbortCheckEventHandler">
            <summary>Sets the shim of Mht.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Mht.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnAbortCheckRemoveMhtAbortCheckEventHandler">
            <summary>Sets the shim of Mht.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnBinaryDataAddMhtBinaryDataEventHandler">
            <summary>Sets the shim of Mht.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Mht.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnBinaryDataRemoveMhtBinaryDataEventHandler">
            <summary>Sets the shim of Mht.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnPercentDoneAddMhtPercentDoneEventHandler">
            <summary>Sets the shim of Mht.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Mht.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnPercentDoneRemoveMhtPercentDoneEventHandler">
            <summary>Sets the shim of Mht.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnProgressInfoAddMhtProgressInfoEventHandler">
            <summary>Sets the shim of Mht.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Mht.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnProgressInfoRemoveMhtProgressInfoEventHandler">
            <summary>Sets the shim of Mht.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnTaskCompletedAddMhtTaskCompletedEventHandler">
            <summary>Sets the shim of Mht.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Mht.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnTaskCompletedRemoveMhtTaskCompletedEventHandler">
            <summary>Sets the shim of Mht.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnTextDataAddMhtTextDataEventHandler">
            <summary>Sets the shim of Mht.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Mht.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.OnTextDataRemoveMhtTextDataEventHandler">
            <summary>Sets the shim of Mht.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Mht.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Mht.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.PreferMHTScriptsGet">
            <summary>Sets the shim of Mht.get_PreferMHTScripts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.PreferMHTScriptsSetBoolean">
            <summary>Sets the shim of Mht.set_PreferMHTScripts(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ProxyGet">
            <summary>Sets the shim of Mht.get_Proxy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ProxyLoginGet">
            <summary>Sets the shim of Mht.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ProxyLoginSetString">
            <summary>Sets the shim of Mht.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ProxyPasswordGet">
            <summary>Sets the shim of Mht.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ProxyPasswordSetString">
            <summary>Sets the shim of Mht.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ProxySetString">
            <summary>Sets the shim of Mht.set_Proxy(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of Mht.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of Mht.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.RemoveCustomHeaderString">
            <summary>Sets the shim of Mht.RemoveCustomHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.RequireSslCertVerifyGet">
            <summary>Sets the shim of Mht.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Mht.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.RestoreDefaults">
            <summary>Sets the shim of Mht.RestoreDefaults()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Mht.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of Mht.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of Mht.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of Mht.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of Mht.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksPortGet">
            <summary>Sets the shim of Mht.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of Mht.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of Mht.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of Mht.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksVersionGet">
            <summary>Sets the shim of Mht.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of Mht.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.ToString01">
            <summary>Sets the shim of Mht.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Mht.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnpackDirectGet">
            <summary>Sets the shim of Mht.get_UnpackDirect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnpackDirectSetBoolean">
            <summary>Sets the shim of Mht.set_UnpackDirect(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnpackMHTStringStringStringString">
            <summary>Sets the shim of Mht.UnpackMHT(String mhtFilename, String unpackDir, String htmlFilename, String partsSubDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnpackMHTStringStringStringStringString">
            <summary>Sets the shim of Mht.UnpackMHTString(String mhtString, String unpackDir, String htmlFilename, String partsSubDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnpackUseRelPathsGet">
            <summary>Sets the shim of Mht.get_UnpackUseRelPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UnpackUseRelPathsSetBoolean">
            <summary>Sets the shim of Mht.set_UnpackUseRelPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UpdateCacheGet">
            <summary>Sets the shim of Mht.get_UpdateCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UpdateCacheSetBoolean">
            <summary>Sets the shim of Mht.set_UpdateCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseCidsGet">
            <summary>Sets the shim of Mht.get_UseCids()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseCidsSetBoolean">
            <summary>Sets the shim of Mht.set_UseCids(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseFilenameGet">
            <summary>Sets the shim of Mht.get_UseFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseFilenameSetBoolean">
            <summary>Sets the shim of Mht.set_UseFilename(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseIEProxyGet">
            <summary>Sets the shim of Mht.get_UseIEProxy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseIEProxySetBoolean">
            <summary>Sets the shim of Mht.set_UseIEProxy(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseInlineGet">
            <summary>Sets the shim of Mht.get_UseInline()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.UseInlineSetBoolean">
            <summary>Sets the shim of Mht.set_UseInline(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Mht.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Mht.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.VersionGet">
            <summary>Sets the shim of Mht.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.WebSiteLoginDomainGet">
            <summary>Sets the shim of Mht.get_WebSiteLoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.WebSiteLoginDomainSetString">
            <summary>Sets the shim of Mht.set_WebSiteLoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.WebSiteLoginGet">
            <summary>Sets the shim of Mht.get_WebSiteLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.WebSiteLoginSetString">
            <summary>Sets the shim of Mht.set_WebSiteLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.WebSitePasswordGet">
            <summary>Sets the shim of Mht.get_WebSitePassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances.WebSitePasswordSetString">
            <summary>Sets the shim of Mht.set_WebSitePassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances._Mht">
            <summary>Sets the shim of Mht.!Mht()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.AllInstances._Mht01">
            <summary>Sets the shim of Mht.~Mht()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.BaseUrlGet">
            <summary>Sets the shim of Mht.get_BaseUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.BaseUrlSetString">
            <summary>Sets the shim of Mht.set_BaseUrl(String propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMht.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMht.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMht.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ClearCustomHeaders">
            <summary>Sets the shim of Mht.ClearCustomHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ConnectTimeoutGet">
            <summary>Sets the shim of Mht.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Mht.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.Constructor">
            <summary>Sets the shim of Mht.Mht()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugHtmlAfterGet">
            <summary>Sets the shim of Mht.get_DebugHtmlAfter()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugHtmlAfterSetString">
            <summary>Sets the shim of Mht.set_DebugHtmlAfter(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugHtmlBeforeGet">
            <summary>Sets the shim of Mht.get_DebugHtmlBefore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugHtmlBeforeSetString">
            <summary>Sets the shim of Mht.set_DebugHtmlBefore(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugLogFilePathGet">
            <summary>Sets the shim of Mht.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugLogFilePathSetString">
            <summary>Sets the shim of Mht.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugTagCleaningGet">
            <summary>Sets the shim of Mht.get_DebugTagCleaning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DebugTagCleaningSetBoolean">
            <summary>Sets the shim of Mht.set_DebugTagCleaning(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.Dispose">
            <summary>Sets the shim of Mht.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.DisposeBoolean">
            <summary>Sets the shim of Mht.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.EmbedImagesGet">
            <summary>Sets the shim of Mht.get_EmbedImages()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.EmbedImagesSetBoolean">
            <summary>Sets the shim of Mht.set_EmbedImages(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.EmbedLocalOnlyGet">
            <summary>Sets the shim of Mht.get_EmbedLocalOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.EmbedLocalOnlySetBoolean">
            <summary>Sets the shim of Mht.set_EmbedLocalOnly(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.EnableEventsGet">
            <summary>Sets the shim of Mht.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.EnableEventsSetBoolean">
            <summary>Sets the shim of Mht.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ExcludeImagesMatchingString">
            <summary>Sets the shim of Mht.ExcludeImagesMatching(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FetchFromCacheGet">
            <summary>Sets the shim of Mht.get_FetchFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FetchFromCacheSetBoolean">
            <summary>Sets the shim of Mht.set_FetchFromCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Mht.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Mht.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Mht.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Mht.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Mht.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Mht.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndSaveEMLAsyncStringString">
            <summary>Sets the shim of Mht.GetAndSaveEMLAsync(String url_or_htmlFilepath, String emlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndSaveEMLStringString">
            <summary>Sets the shim of Mht.GetAndSaveEML(String url_or_htmlFilepath, String emlPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndSaveMHTAsyncStringString">
            <summary>Sets the shim of Mht.GetAndSaveMHTAsync(String url_or_htmlFilepath, String mhtPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndSaveMHTStringString">
            <summary>Sets the shim of Mht.GetAndSaveMHT(String url_or_htmlFilepath, String mhtPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndZipEMLAsyncStringStringString">
            <summary>Sets the shim of Mht.GetAndZipEMLAsync(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndZipEMLStringStringString">
            <summary>Sets the shim of Mht.GetAndZipEML(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndZipMHTAsyncStringStringString">
            <summary>Sets the shim of Mht.GetAndZipMHTAsync(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetAndZipMHTStringStringString">
            <summary>Sets the shim of Mht.GetAndZipMHT(String url_or_htmlFilepath, String zipEntryFilename, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetCacheRootInt32">
            <summary>Sets the shim of Mht.GetCacheRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetEMLAsyncString">
            <summary>Sets the shim of Mht.GetEMLAsync(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetEMLString">
            <summary>Sets the shim of Mht.GetEML(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetMHTAsyncString">
            <summary>Sets the shim of Mht.GetMHTAsync(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.GetMHTString">
            <summary>Sets the shim of Mht.GetMHT(String url_or_htmlFilepath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HeartbeatMsGet">
            <summary>Sets the shim of Mht.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HeartbeatMsSetInt32">
            <summary>Sets the shim of Mht.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToEMLAsyncString">
            <summary>Sets the shim of Mht.HtmlToEMLAsync(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToEMLFileAsyncStringString">
            <summary>Sets the shim of Mht.HtmlToEMLFileAsync(String html, String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToEMLFileStringString">
            <summary>Sets the shim of Mht.HtmlToEMLFile(String html, String emlFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToEMLString">
            <summary>Sets the shim of Mht.HtmlToEML(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToMHTAsyncString">
            <summary>Sets the shim of Mht.HtmlToMHTAsync(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToMHTFileAsyncStringString">
            <summary>Sets the shim of Mht.HtmlToMHTFileAsync(String html, String mhtFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToMHTFileStringString">
            <summary>Sets the shim of Mht.HtmlToMHTFile(String html, String mhtFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.HtmlToMHTString">
            <summary>Sets the shim of Mht.HtmlToMHT(String htmlText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.IgnoreMustRevalidateGet">
            <summary>Sets the shim of Mht.get_IgnoreMustRevalidate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.IgnoreMustRevalidateSetBoolean">
            <summary>Sets the shim of Mht.set_IgnoreMustRevalidate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.IgnoreNoCacheGet">
            <summary>Sets the shim of Mht.get_IgnoreNoCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.IgnoreNoCacheSetBoolean">
            <summary>Sets the shim of Mht.set_IgnoreNoCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.IsUnlocked">
            <summary>Sets the shim of Mht.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.LastErrorHtmlGet">
            <summary>Sets the shim of Mht.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.LastErrorTextGet">
            <summary>Sets the shim of Mht.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.LastErrorXmlGet">
            <summary>Sets the shim of Mht.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.LastMethodSuccessGet">
            <summary>Sets the shim of Mht.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Mht.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NoScriptsGet">
            <summary>Sets the shim of Mht.get_NoScripts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NoScriptsSetBoolean">
            <summary>Sets the shim of Mht.set_NoScripts(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NtlmAuthGet">
            <summary>Sets the shim of Mht.get_NtlmAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NtlmAuthSetBoolean">
            <summary>Sets the shim of Mht.set_NtlmAuth(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NumCacheLevelsGet">
            <summary>Sets the shim of Mht.get_NumCacheLevels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NumCacheLevelsSetInt32">
            <summary>Sets the shim of Mht.set_NumCacheLevels(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.NumCacheRootsGet">
            <summary>Sets the shim of Mht.get_NumCacheRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnAbortCheckAddMhtAbortCheckEventHandler">
            <summary>Sets the shim of Mht.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Mht.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnAbortCheckRemoveMhtAbortCheckEventHandler">
            <summary>Sets the shim of Mht.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnBinaryDataAddMhtBinaryDataEventHandler">
            <summary>Sets the shim of Mht.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Mht.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnBinaryDataRemoveMhtBinaryDataEventHandler">
            <summary>Sets the shim of Mht.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnPercentDoneAddMhtPercentDoneEventHandler">
            <summary>Sets the shim of Mht.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Mht.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnPercentDoneRemoveMhtPercentDoneEventHandler">
            <summary>Sets the shim of Mht.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnProgressInfoAddMhtProgressInfoEventHandler">
            <summary>Sets the shim of Mht.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Mht.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnProgressInfoRemoveMhtProgressInfoEventHandler">
            <summary>Sets the shim of Mht.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnTaskCompletedAddMhtTaskCompletedEventHandler">
            <summary>Sets the shim of Mht.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Mht.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnTaskCompletedRemoveMhtTaskCompletedEventHandler">
            <summary>Sets the shim of Mht.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnTextDataAddMhtTextDataEventHandler">
            <summary>Sets the shim of Mht.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Mht.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.OnTextDataRemoveMhtTextDataEventHandler">
            <summary>Sets the shim of Mht.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.PreferIpv6Get">
            <summary>Sets the shim of Mht.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.PreferIpv6SetBoolean">
            <summary>Sets the shim of Mht.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.PreferMHTScriptsGet">
            <summary>Sets the shim of Mht.get_PreferMHTScripts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.PreferMHTScriptsSetBoolean">
            <summary>Sets the shim of Mht.set_PreferMHTScripts(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ProxyGet">
            <summary>Sets the shim of Mht.get_Proxy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ProxyLoginGet">
            <summary>Sets the shim of Mht.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ProxyLoginSetString">
            <summary>Sets the shim of Mht.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ProxyPasswordGet">
            <summary>Sets the shim of Mht.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ProxyPasswordSetString">
            <summary>Sets the shim of Mht.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ProxySetString">
            <summary>Sets the shim of Mht.set_Proxy(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ReadTimeoutGet">
            <summary>Sets the shim of Mht.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ReadTimeoutSetInt32">
            <summary>Sets the shim of Mht.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.RemoveCustomHeaderString">
            <summary>Sets the shim of Mht.RemoveCustomHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.RequireSslCertVerifyGet">
            <summary>Sets the shim of Mht.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Mht.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.RestoreDefaults">
            <summary>Sets the shim of Mht.RestoreDefaults()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SaveLastErrorString">
            <summary>Sets the shim of Mht.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksHostnameGet">
            <summary>Sets the shim of Mht.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksHostnameSetString">
            <summary>Sets the shim of Mht.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksPasswordGet">
            <summary>Sets the shim of Mht.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksPasswordSetString">
            <summary>Sets the shim of Mht.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksPortGet">
            <summary>Sets the shim of Mht.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksPortSetInt32">
            <summary>Sets the shim of Mht.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksUsernameGet">
            <summary>Sets the shim of Mht.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksUsernameSetString">
            <summary>Sets the shim of Mht.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksVersionGet">
            <summary>Sets the shim of Mht.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.SocksVersionSetInt32">
            <summary>Sets the shim of Mht.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.ToString">
            <summary>Sets the shim of Mht.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnlockComponentString">
            <summary>Sets the shim of Mht.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnpackDirectGet">
            <summary>Sets the shim of Mht.get_UnpackDirect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnpackDirectSetBoolean">
            <summary>Sets the shim of Mht.set_UnpackDirect(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnpackMHTStringStringStringString">
            <summary>Sets the shim of Mht.UnpackMHT(String mhtFilename, String unpackDir, String htmlFilename, String partsSubDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnpackMHTStringStringStringStringString">
            <summary>Sets the shim of Mht.UnpackMHTString(String mhtString, String unpackDir, String htmlFilename, String partsSubDir)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnpackUseRelPathsGet">
            <summary>Sets the shim of Mht.get_UnpackUseRelPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UnpackUseRelPathsSetBoolean">
            <summary>Sets the shim of Mht.set_UnpackUseRelPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UpdateCacheGet">
            <summary>Sets the shim of Mht.get_UpdateCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UpdateCacheSetBoolean">
            <summary>Sets the shim of Mht.set_UpdateCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseCidsGet">
            <summary>Sets the shim of Mht.get_UseCids()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseCidsSetBoolean">
            <summary>Sets the shim of Mht.set_UseCids(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseFilenameGet">
            <summary>Sets the shim of Mht.get_UseFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseFilenameSetBoolean">
            <summary>Sets the shim of Mht.set_UseFilename(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseIEProxyGet">
            <summary>Sets the shim of Mht.get_UseIEProxy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseIEProxySetBoolean">
            <summary>Sets the shim of Mht.set_UseIEProxy(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseInlineGet">
            <summary>Sets the shim of Mht.get_UseInline()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.UseInlineSetBoolean">
            <summary>Sets the shim of Mht.set_UseInline(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.VerboseLoggingGet">
            <summary>Sets the shim of Mht.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Mht.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.VersionGet">
            <summary>Sets the shim of Mht.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.WebSiteLoginDomainGet">
            <summary>Sets the shim of Mht.get_WebSiteLoginDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.WebSiteLoginDomainSetString">
            <summary>Sets the shim of Mht.set_WebSiteLoginDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.WebSiteLoginGet">
            <summary>Sets the shim of Mht.get_WebSiteLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.WebSiteLoginSetString">
            <summary>Sets the shim of Mht.set_WebSiteLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.WebSitePasswordGet">
            <summary>Sets the shim of Mht.get_WebSitePassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht.WebSitePasswordSetString">
            <summary>Sets the shim of Mht.set_WebSitePassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht._Mht">
            <summary>Sets the shim of Mht.!Mht()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMht._Mht01">
            <summary>Sets the shim of Mht.~Mht()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMime">
            <summary>Shim type of Chilkat.Mime</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMime.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMime.#ctor(Chilkat.Mime)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddContentLength">
            <summary>Sets the shim of Mime.AddContentLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddDecryptCertCert">
            <summary>Sets the shim of Mime.AddDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddDetachedSignature2CertBoolean">
            <summary>Sets the shim of Mime.AddDetachedSignature2(Cert cert, Boolean transferHeaderFields)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddDetachedSignatureCert">
            <summary>Sets the shim of Mime.AddDetachedSignature(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddDetachedSignaturePk2CertPrivateKeyBoolean">
            <summary>Sets the shim of Mime.AddDetachedSignaturePk2(Cert cert, PrivateKey privateKey, Boolean transferHeaderFields)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddDetachedSignaturePkCertPrivateKey">
            <summary>Sets the shim of Mime.AddDetachedSignaturePk(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddEncryptCertCert">
            <summary>Sets the shim of Mime.AddEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddHeaderFieldStringString">
            <summary>Sets the shim of Mime.AddHeaderField(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Mime.AddPfxSourceData(Byte[] pfxFileData, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AddPfxSourceFileStringString">
            <summary>Sets the shim of Mime.AddPfxSourceFile(String pfxFilePath, String password)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimMime.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddContentLength">
            <summary>Sets the shim of Mime.AddContentLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddDecryptCertCert">
            <summary>Sets the shim of Mime.AddDecryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddDetachedSignature2CertBoolean">
            <summary>Sets the shim of Mime.AddDetachedSignature2(Cert cert, Boolean transferHeaderFields)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddDetachedSignatureCert">
            <summary>Sets the shim of Mime.AddDetachedSignature(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddDetachedSignaturePk2CertPrivateKeyBoolean">
            <summary>Sets the shim of Mime.AddDetachedSignaturePk2(Cert cert, PrivateKey privateKey, Boolean transferHeaderFields)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddDetachedSignaturePkCertPrivateKey">
            <summary>Sets the shim of Mime.AddDetachedSignaturePk(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddEncryptCertCert">
            <summary>Sets the shim of Mime.AddEncryptCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddHeaderFieldStringString">
            <summary>Sets the shim of Mime.AddHeaderField(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddPfxSourceDataByteArrayString">
            <summary>Sets the shim of Mime.AddPfxSourceData(Byte[] pfxFileData, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AddPfxSourceFileStringString">
            <summary>Sets the shim of Mime.AddPfxSourceFile(String pfxFilePath, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AppendPartFromFileString">
            <summary>Sets the shim of Mime.AppendPartFromFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AppendPartMime">
            <summary>Sets the shim of Mime.AppendPart(Mime mime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.AsnBodyToXml">
            <summary>Sets the shim of Mime.AsnBodyToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.BoundaryGet">
            <summary>Sets the shim of Mime.get_Boundary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.BoundarySetString">
            <summary>Sets the shim of Mime.set_Boundary(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.CharsetGet">
            <summary>Sets the shim of Mime.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.CharsetSetString">
            <summary>Sets the shim of Mime.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ClearEncryptCerts">
            <summary>Sets the shim of Mime.ClearEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ContainsEncryptedParts">
            <summary>Sets the shim of Mime.ContainsEncryptedParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ContainsSignedParts">
            <summary>Sets the shim of Mime.ContainsSignedParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ContentTypeGet">
            <summary>Sets the shim of Mime.get_ContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of Mime.set_ContentType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Convert8Bit">
            <summary>Sets the shim of Mime.Convert8Bit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ConvertToMultipartAlt">
            <summary>Sets the shim of Mime.ConvertToMultipartAlt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ConvertToMultipartMixed">
            <summary>Sets the shim of Mime.ConvertToMultipartMixed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ConvertToSignedCert">
            <summary>Sets the shim of Mime.ConvertToSigned(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ConvertToSignedPkCertPrivateKey">
            <summary>Sets the shim of Mime.ConvertToSignedPk(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.CurrentDateTimeGet">
            <summary>Sets the shim of Mime.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Mime.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Mime.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Decrypt">
            <summary>Sets the shim of Mime.Decrypt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Decrypt2CertPrivateKey">
            <summary>Sets the shim of Mime.Decrypt2(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DecryptUsingCertCert">
            <summary>Sets the shim of Mime.DecryptUsingCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DecryptUsingPfxDataByteArrayString">
            <summary>Sets the shim of Mime.DecryptUsingPfxData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DecryptUsingPfxFileStringString">
            <summary>Sets the shim of Mime.DecryptUsingPfxFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Dispose">
            <summary>Sets the shim of Mime.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Mime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DispositionGet">
            <summary>Sets the shim of Mime.get_Disposition()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.DispositionSetString">
            <summary>Sets the shim of Mime.set_Disposition(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.EncodingGet">
            <summary>Sets the shim of Mime.get_Encoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.EncodingSetString">
            <summary>Sets the shim of Mime.set_Encoding(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.EncryptCert">
            <summary>Sets the shim of Mime.Encrypt(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.EncryptN">
            <summary>Sets the shim of Mime.EncryptN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ExtractPartsToFilesString">
            <summary>Sets the shim of Mime.ExtractPartsToFiles(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.FilenameGet">
            <summary>Sets the shim of Mime.get_Filename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.FilenameSetString">
            <summary>Sets the shim of Mime.set_Filename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.FindIssuerCert">
            <summary>Sets the shim of Mime.FindIssuer(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetBodyBdBinData">
            <summary>Sets the shim of Mime.GetBodyBd(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetBodyBinary">
            <summary>Sets the shim of Mime.GetBodyBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetBodyDecoded">
            <summary>Sets the shim of Mime.GetBodyDecoded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetBodyEncoded">
            <summary>Sets the shim of Mime.GetBodyEncoded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetEncryptCertInt32">
            <summary>Sets the shim of Mime.GetEncryptCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetEntireBody">
            <summary>Sets the shim of Mime.GetEntireBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetEntireHead">
            <summary>Sets the shim of Mime.GetEntireHead()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetHeaderFieldAttributeStringString">
            <summary>Sets the shim of Mime.GetHeaderFieldAttribute(String name, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetHeaderFieldNameInt32">
            <summary>Sets the shim of Mime.GetHeaderFieldName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetHeaderFieldString">
            <summary>Sets the shim of Mime.GetHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetHeaderFieldValueInt32">
            <summary>Sets the shim of Mime.GetHeaderFieldValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetMime">
            <summary>Sets the shim of Mime.GetMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetMimeBdBinData">
            <summary>Sets the shim of Mime.GetMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetMimeBytes">
            <summary>Sets the shim of Mime.GetMimeBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetMimeSbStringBuilder">
            <summary>Sets the shim of Mime.GetMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetPartInt32">
            <summary>Sets the shim of Mime.GetPart(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetSignatureSigningTimeInt32">
            <summary>Sets the shim of Mime.GetSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetSignatureSigningTimeStrInt32">
            <summary>Sets the shim of Mime.GetSignatureSigningTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetSignerCertChainInt32">
            <summary>Sets the shim of Mime.GetSignerCertChain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetSignerCertInt32">
            <summary>Sets the shim of Mime.GetSignerCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetStructureString">
            <summary>Sets the shim of Mime.GetStructure(String fmt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.GetXml">
            <summary>Sets the shim of Mime.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.HasSignatureSigningTimeInt32">
            <summary>Sets the shim of Mime.HasSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsApplicationData">
            <summary>Sets the shim of Mime.IsApplicationData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsAttachment">
            <summary>Sets the shim of Mime.IsAttachment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsAudio">
            <summary>Sets the shim of Mime.IsAudio()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsEncrypted">
            <summary>Sets the shim of Mime.IsEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsHtml">
            <summary>Sets the shim of Mime.IsHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsImage">
            <summary>Sets the shim of Mime.IsImage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsMultipart">
            <summary>Sets the shim of Mime.IsMultipart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsMultipartAlternative">
            <summary>Sets the shim of Mime.IsMultipartAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsMultipartMixed">
            <summary>Sets the shim of Mime.IsMultipartMixed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsMultipartRelated">
            <summary>Sets the shim of Mime.IsMultipartRelated()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsPlainText">
            <summary>Sets the shim of Mime.IsPlainText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsSigned">
            <summary>Sets the shim of Mime.IsSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsText">
            <summary>Sets the shim of Mime.IsText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsUnlocked">
            <summary>Sets the shim of Mime.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsVideo">
            <summary>Sets the shim of Mime.IsVideo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.IsXml">
            <summary>Sets the shim of Mime.IsXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Mime.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Mime.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Mime.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LastJsonData">
            <summary>Sets the shim of Mime.LastJsonData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Mime.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Mime.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadMimeBdBinData">
            <summary>Sets the shim of Mime.LoadMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadMimeBytesByteArray">
            <summary>Sets the shim of Mime.LoadMimeBytes(Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadMimeFileString">
            <summary>Sets the shim of Mime.LoadMimeFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadMimeSbStringBuilder">
            <summary>Sets the shim of Mime.LoadMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadMimeString">
            <summary>Sets the shim of Mime.LoadMime(String mimeMsg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadXmlFileString">
            <summary>Sets the shim of Mime.LoadXmlFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.LoadXmlString">
            <summary>Sets the shim of Mime.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.MicalgGet">
            <summary>Sets the shim of Mime.get_Micalg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.MicalgSetString">
            <summary>Sets the shim of Mime.set_Micalg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NameGet">
            <summary>Sets the shim of Mime.get_Name()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NameSetString">
            <summary>Sets the shim of Mime.set_Name(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NewMessageRfc822Mime">
            <summary>Sets the shim of Mime.NewMessageRfc822(Mime mimeObject)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NewMultipartAlternative">
            <summary>Sets the shim of Mime.NewMultipartAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NewMultipartMixed">
            <summary>Sets the shim of Mime.NewMultipartMixed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NewMultipartRelated">
            <summary>Sets the shim of Mime.NewMultipartRelated()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NumEncryptCertsGet">
            <summary>Sets the shim of Mime.get_NumEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NumHeaderFieldsGet">
            <summary>Sets the shim of Mime.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NumPartsGet">
            <summary>Sets the shim of Mime.get_NumParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.NumSignerCertsGet">
            <summary>Sets the shim of Mime.get_NumSignerCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.OaepHashGet">
            <summary>Sets the shim of Mime.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.OaepHashSetString">
            <summary>Sets the shim of Mime.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.OaepPaddingGet">
            <summary>Sets the shim of Mime.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.OaepPaddingSetBoolean">
            <summary>Sets the shim of Mime.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Pkcs7CryptAlgGet">
            <summary>Sets the shim of Mime.get_Pkcs7CryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Pkcs7CryptAlgSetString">
            <summary>Sets the shim of Mime.set_Pkcs7CryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Pkcs7KeyLengthGet">
            <summary>Sets the shim of Mime.get_Pkcs7KeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Pkcs7KeyLengthSetInt32">
            <summary>Sets the shim of Mime.set_Pkcs7KeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ProtocolGet">
            <summary>Sets the shim of Mime.get_Protocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ProtocolSetString">
            <summary>Sets the shim of Mime.set_Protocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.RemoveHeaderFieldStringBoolean">
            <summary>Sets the shim of Mime.RemoveHeaderField(String fieldName, Boolean bAllOccurrences)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.RemovePartInt32">
            <summary>Sets the shim of Mime.RemovePart(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SaveBodyString">
            <summary>Sets the shim of Mime.SaveBody(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Mime.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SaveMimeString">
            <summary>Sets the shim of Mime.SaveMime(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SaveXmlString">
            <summary>Sets the shim of Mime.SaveXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyFromBinaryByteArray">
            <summary>Sets the shim of Mime.SetBodyFromBinary(Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyFromEncodedStringString">
            <summary>Sets the shim of Mime.SetBodyFromEncoded(String encoding, String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyFromFileString">
            <summary>Sets the shim of Mime.SetBodyFromFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyFromHtmlString">
            <summary>Sets the shim of Mime.SetBodyFromHtml(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyFromPlainTextString">
            <summary>Sets the shim of Mime.SetBodyFromPlainText(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyFromXmlString">
            <summary>Sets the shim of Mime.SetBodyFromXml(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetBodyString">
            <summary>Sets the shim of Mime.SetBody(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetCSPCsp">
            <summary>Sets the shim of Mime.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetHeaderFieldStringString">
            <summary>Sets the shim of Mime.SetHeaderField(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SetVerifyCertCert">
            <summary>Sets the shim of Mime.SetVerifyCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SigningAlgGet">
            <summary>Sets the shim of Mime.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SigningAlgSetString">
            <summary>Sets the shim of Mime.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SigningHashAlgGet">
            <summary>Sets the shim of Mime.get_SigningHashAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.SigningHashAlgSetString">
            <summary>Sets the shim of Mime.set_SigningHashAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.ToString01">
            <summary>Sets the shim of Mime.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Mime.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UnwrapExtrasGet">
            <summary>Sets the shim of Mime.get_UnwrapExtras()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UnwrapExtrasSetBoolean">
            <summary>Sets the shim of Mime.set_UnwrapExtras(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UnwrapSecurity">
            <summary>Sets the shim of Mime.UnwrapSecurity()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UrlEncodeBodyString">
            <summary>Sets the shim of Mime.UrlEncodeBody(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Mime.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UseMmDescriptionGet">
            <summary>Sets the shim of Mime.get_UseMmDescription()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UseMmDescriptionSetBoolean">
            <summary>Sets the shim of Mime.set_UseMmDescription(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UseXPkcs7Get">
            <summary>Sets the shim of Mime.get_UseXPkcs7()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.UseXPkcs7SetBoolean">
            <summary>Sets the shim of Mime.set_UseXPkcs7(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Mime.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Mime.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.Verify">
            <summary>Sets the shim of Mime.Verify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances.VersionGet">
            <summary>Sets the shim of Mime.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances._Mime">
            <summary>Sets the shim of Mime.!Mime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AllInstances._Mime01">
            <summary>Sets the shim of Mime.~Mime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AppendPartFromFileString">
            <summary>Sets the shim of Mime.AppendPartFromFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AppendPartMime">
            <summary>Sets the shim of Mime.AppendPart(Mime mime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.AsnBodyToXml">
            <summary>Sets the shim of Mime.AsnBodyToXml()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMime.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMime.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimMime.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.BoundaryGet">
            <summary>Sets the shim of Mime.get_Boundary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.BoundarySetString">
            <summary>Sets the shim of Mime.set_Boundary(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.CharsetGet">
            <summary>Sets the shim of Mime.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.CharsetSetString">
            <summary>Sets the shim of Mime.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ClearEncryptCerts">
            <summary>Sets the shim of Mime.ClearEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Constructor">
            <summary>Sets the shim of Mime.Mime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ContainsEncryptedParts">
            <summary>Sets the shim of Mime.ContainsEncryptedParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ContainsSignedParts">
            <summary>Sets the shim of Mime.ContainsSignedParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ContentTypeGet">
            <summary>Sets the shim of Mime.get_ContentType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ContentTypeSetString">
            <summary>Sets the shim of Mime.set_ContentType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Convert8Bit">
            <summary>Sets the shim of Mime.Convert8Bit()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ConvertToMultipartAlt">
            <summary>Sets the shim of Mime.ConvertToMultipartAlt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ConvertToMultipartMixed">
            <summary>Sets the shim of Mime.ConvertToMultipartMixed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ConvertToSignedCert">
            <summary>Sets the shim of Mime.ConvertToSigned(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ConvertToSignedPkCertPrivateKey">
            <summary>Sets the shim of Mime.ConvertToSignedPk(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.CurrentDateTimeGet">
            <summary>Sets the shim of Mime.get_CurrentDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DebugLogFilePathGet">
            <summary>Sets the shim of Mime.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DebugLogFilePathSetString">
            <summary>Sets the shim of Mime.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Decrypt">
            <summary>Sets the shim of Mime.Decrypt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Decrypt2CertPrivateKey">
            <summary>Sets the shim of Mime.Decrypt2(Cert cert, PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DecryptUsingCertCert">
            <summary>Sets the shim of Mime.DecryptUsingCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DecryptUsingPfxDataByteArrayString">
            <summary>Sets the shim of Mime.DecryptUsingPfxData(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DecryptUsingPfxFileStringString">
            <summary>Sets the shim of Mime.DecryptUsingPfxFile(String pfxFilePath, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Dispose">
            <summary>Sets the shim of Mime.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DisposeBoolean">
            <summary>Sets the shim of Mime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DispositionGet">
            <summary>Sets the shim of Mime.get_Disposition()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.DispositionSetString">
            <summary>Sets the shim of Mime.set_Disposition(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.EncodingGet">
            <summary>Sets the shim of Mime.get_Encoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.EncodingSetString">
            <summary>Sets the shim of Mime.set_Encoding(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.EncryptCert">
            <summary>Sets the shim of Mime.Encrypt(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.EncryptN">
            <summary>Sets the shim of Mime.EncryptN()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ExtractPartsToFilesString">
            <summary>Sets the shim of Mime.ExtractPartsToFiles(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.FilenameGet">
            <summary>Sets the shim of Mime.get_Filename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.FilenameSetString">
            <summary>Sets the shim of Mime.set_Filename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.FindIssuerCert">
            <summary>Sets the shim of Mime.FindIssuer(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetBodyBdBinData">
            <summary>Sets the shim of Mime.GetBodyBd(BinData binDat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetBodyBinary">
            <summary>Sets the shim of Mime.GetBodyBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetBodyDecoded">
            <summary>Sets the shim of Mime.GetBodyDecoded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetBodyEncoded">
            <summary>Sets the shim of Mime.GetBodyEncoded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetEncryptCertInt32">
            <summary>Sets the shim of Mime.GetEncryptCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetEntireBody">
            <summary>Sets the shim of Mime.GetEntireBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetEntireHead">
            <summary>Sets the shim of Mime.GetEntireHead()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetHeaderFieldAttributeStringString">
            <summary>Sets the shim of Mime.GetHeaderFieldAttribute(String name, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetHeaderFieldNameInt32">
            <summary>Sets the shim of Mime.GetHeaderFieldName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetHeaderFieldString">
            <summary>Sets the shim of Mime.GetHeaderField(String fieldName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetHeaderFieldValueInt32">
            <summary>Sets the shim of Mime.GetHeaderFieldValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetMime">
            <summary>Sets the shim of Mime.GetMime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetMimeBdBinData">
            <summary>Sets the shim of Mime.GetMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetMimeBytes">
            <summary>Sets the shim of Mime.GetMimeBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetMimeSbStringBuilder">
            <summary>Sets the shim of Mime.GetMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetPartInt32">
            <summary>Sets the shim of Mime.GetPart(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetSignatureSigningTimeInt32">
            <summary>Sets the shim of Mime.GetSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetSignatureSigningTimeStrInt32">
            <summary>Sets the shim of Mime.GetSignatureSigningTimeStr(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetSignerCertChainInt32">
            <summary>Sets the shim of Mime.GetSignerCertChain(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetSignerCertInt32">
            <summary>Sets the shim of Mime.GetSignerCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetStructureString">
            <summary>Sets the shim of Mime.GetStructure(String fmt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.GetXml">
            <summary>Sets the shim of Mime.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.HasSignatureSigningTimeInt32">
            <summary>Sets the shim of Mime.HasSignatureSigningTime(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsApplicationData">
            <summary>Sets the shim of Mime.IsApplicationData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsAttachment">
            <summary>Sets the shim of Mime.IsAttachment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsAudio">
            <summary>Sets the shim of Mime.IsAudio()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsEncrypted">
            <summary>Sets the shim of Mime.IsEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsHtml">
            <summary>Sets the shim of Mime.IsHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsImage">
            <summary>Sets the shim of Mime.IsImage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsMultipart">
            <summary>Sets the shim of Mime.IsMultipart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsMultipartAlternative">
            <summary>Sets the shim of Mime.IsMultipartAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsMultipartMixed">
            <summary>Sets the shim of Mime.IsMultipartMixed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsMultipartRelated">
            <summary>Sets the shim of Mime.IsMultipartRelated()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsPlainText">
            <summary>Sets the shim of Mime.IsPlainText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsSigned">
            <summary>Sets the shim of Mime.IsSigned()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsText">
            <summary>Sets the shim of Mime.IsText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsUnlocked">
            <summary>Sets the shim of Mime.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsVideo">
            <summary>Sets the shim of Mime.IsVideo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.IsXml">
            <summary>Sets the shim of Mime.IsXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LastErrorHtmlGet">
            <summary>Sets the shim of Mime.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LastErrorTextGet">
            <summary>Sets the shim of Mime.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LastErrorXmlGet">
            <summary>Sets the shim of Mime.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LastJsonData">
            <summary>Sets the shim of Mime.LastJsonData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LastMethodSuccessGet">
            <summary>Sets the shim of Mime.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Mime.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadMimeBdBinData">
            <summary>Sets the shim of Mime.LoadMimeBd(BinData bindat)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadMimeBytesByteArray">
            <summary>Sets the shim of Mime.LoadMimeBytes(Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadMimeFileString">
            <summary>Sets the shim of Mime.LoadMimeFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadMimeSbStringBuilder">
            <summary>Sets the shim of Mime.LoadMimeSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadMimeString">
            <summary>Sets the shim of Mime.LoadMime(String mimeMsg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadXmlFileString">
            <summary>Sets the shim of Mime.LoadXmlFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.LoadXmlString">
            <summary>Sets the shim of Mime.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.MicalgGet">
            <summary>Sets the shim of Mime.get_Micalg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.MicalgSetString">
            <summary>Sets the shim of Mime.set_Micalg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NameGet">
            <summary>Sets the shim of Mime.get_Name()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NameSetString">
            <summary>Sets the shim of Mime.set_Name(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NewMessageRfc822Mime">
            <summary>Sets the shim of Mime.NewMessageRfc822(Mime mimeObject)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NewMultipartAlternative">
            <summary>Sets the shim of Mime.NewMultipartAlternative()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NewMultipartMixed">
            <summary>Sets the shim of Mime.NewMultipartMixed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NewMultipartRelated">
            <summary>Sets the shim of Mime.NewMultipartRelated()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NumEncryptCertsGet">
            <summary>Sets the shim of Mime.get_NumEncryptCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NumHeaderFieldsGet">
            <summary>Sets the shim of Mime.get_NumHeaderFields()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NumPartsGet">
            <summary>Sets the shim of Mime.get_NumParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.NumSignerCertsGet">
            <summary>Sets the shim of Mime.get_NumSignerCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.OaepHashGet">
            <summary>Sets the shim of Mime.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.OaepHashSetString">
            <summary>Sets the shim of Mime.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.OaepPaddingGet">
            <summary>Sets the shim of Mime.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.OaepPaddingSetBoolean">
            <summary>Sets the shim of Mime.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Pkcs7CryptAlgGet">
            <summary>Sets the shim of Mime.get_Pkcs7CryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Pkcs7CryptAlgSetString">
            <summary>Sets the shim of Mime.set_Pkcs7CryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Pkcs7KeyLengthGet">
            <summary>Sets the shim of Mime.get_Pkcs7KeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Pkcs7KeyLengthSetInt32">
            <summary>Sets the shim of Mime.set_Pkcs7KeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ProtocolGet">
            <summary>Sets the shim of Mime.get_Protocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ProtocolSetString">
            <summary>Sets the shim of Mime.set_Protocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.RemoveHeaderFieldStringBoolean">
            <summary>Sets the shim of Mime.RemoveHeaderField(String fieldName, Boolean bAllOccurrences)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.RemovePartInt32">
            <summary>Sets the shim of Mime.RemovePart(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SaveBodyString">
            <summary>Sets the shim of Mime.SaveBody(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SaveLastErrorString">
            <summary>Sets the shim of Mime.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SaveMimeString">
            <summary>Sets the shim of Mime.SaveMime(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SaveXmlString">
            <summary>Sets the shim of Mime.SaveXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyFromBinaryByteArray">
            <summary>Sets the shim of Mime.SetBodyFromBinary(Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyFromEncodedStringString">
            <summary>Sets the shim of Mime.SetBodyFromEncoded(String encoding, String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyFromFileString">
            <summary>Sets the shim of Mime.SetBodyFromFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyFromHtmlString">
            <summary>Sets the shim of Mime.SetBodyFromHtml(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyFromPlainTextString">
            <summary>Sets the shim of Mime.SetBodyFromPlainText(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyFromXmlString">
            <summary>Sets the shim of Mime.SetBodyFromXml(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetBodyString">
            <summary>Sets the shim of Mime.SetBody(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetCSPCsp">
            <summary>Sets the shim of Mime.SetCSP(Csp csp)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetHeaderFieldStringString">
            <summary>Sets the shim of Mime.SetHeaderField(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SetVerifyCertCert">
            <summary>Sets the shim of Mime.SetVerifyCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SigningAlgGet">
            <summary>Sets the shim of Mime.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SigningAlgSetString">
            <summary>Sets the shim of Mime.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SigningHashAlgGet">
            <summary>Sets the shim of Mime.get_SigningHashAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.SigningHashAlgSetString">
            <summary>Sets the shim of Mime.set_SigningHashAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.ToString">
            <summary>Sets the shim of Mime.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UnlockComponentString">
            <summary>Sets the shim of Mime.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UnwrapExtrasGet">
            <summary>Sets the shim of Mime.get_UnwrapExtras()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UnwrapExtrasSetBoolean">
            <summary>Sets the shim of Mime.set_UnwrapExtras(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UnwrapSecurity">
            <summary>Sets the shim of Mime.UnwrapSecurity()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UrlEncodeBodyString">
            <summary>Sets the shim of Mime.UrlEncodeBody(String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Mime.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UseMmDescriptionGet">
            <summary>Sets the shim of Mime.get_UseMmDescription()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UseMmDescriptionSetBoolean">
            <summary>Sets the shim of Mime.set_UseMmDescription(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UseXPkcs7Get">
            <summary>Sets the shim of Mime.get_UseXPkcs7()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.UseXPkcs7SetBoolean">
            <summary>Sets the shim of Mime.set_UseXPkcs7(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.VerboseLoggingGet">
            <summary>Sets the shim of Mime.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Mime.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.Verify">
            <summary>Sets the shim of Mime.Verify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime.VersionGet">
            <summary>Sets the shim of Mime.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime._Mime">
            <summary>Sets the shim of Mime.!Mime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimMime._Mime01">
            <summary>Sets the shim of Mime.~Mime()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimNextTarFileEventArgs">
            <summary>Shim type of Chilkat.NextTarFileEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNextTarFileEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNextTarFileEventArgs.#ctor(Chilkat.NextTarFileEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of NextTarFileEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of NextTarFileEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.SkipGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_Skip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances.SkipSetBoolean">
            <summary>Sets the shim of NextTarFileEventArgs.set_Skip(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.AllInstances._NextTarFileEventArgs">
            <summary>Sets the shim of NextTarFileEventArgs.~NextTarFileEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNextTarFileEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNextTarFileEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNextTarFileEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.Dispose">
            <summary>Sets the shim of NextTarFileEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.DisposeBoolean">
            <summary>Sets the shim of NextTarFileEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.FileNameGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.FileSizeGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.IsDirectoryGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.SkipGet">
            <summary>Sets the shim of NextTarFileEventArgs.get_Skip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs.SkipSetBoolean">
            <summary>Sets the shim of NextTarFileEventArgs.set_Skip(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNextTarFileEventArgs._NextTarFileEventArgs">
            <summary>Sets the shim of NextTarFileEventArgs.~NextTarFileEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimNtlm">
            <summary>Shim type of Chilkat.Ntlm</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNtlm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNtlm.#ctor(Chilkat.Ntlm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimNtlm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ClientChallengeGet">
            <summary>Sets the shim of Ntlm.get_ClientChallenge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ClientChallengeSetString">
            <summary>Sets the shim of Ntlm.set_ClientChallenge(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.CompareType3StringString">
            <summary>Sets the shim of Ntlm.CompareType3(String msg1, String msg2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Ntlm.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Ntlm.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.Dispose">
            <summary>Sets the shim of Ntlm.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Ntlm.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DnsComputerNameGet">
            <summary>Sets the shim of Ntlm.get_DnsComputerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DnsComputerNameSetString">
            <summary>Sets the shim of Ntlm.set_DnsComputerName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DnsDomainNameGet">
            <summary>Sets the shim of Ntlm.get_DnsDomainName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DnsDomainNameSetString">
            <summary>Sets the shim of Ntlm.set_DnsDomainName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DomainGet">
            <summary>Sets the shim of Ntlm.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.DomainSetString">
            <summary>Sets the shim of Ntlm.set_Domain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.EncodingModeGet">
            <summary>Sets the shim of Ntlm.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.EncodingModeSetString">
            <summary>Sets the shim of Ntlm.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.FlagsGet">
            <summary>Sets the shim of Ntlm.get_Flags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.FlagsSetString">
            <summary>Sets the shim of Ntlm.set_Flags(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.GenType1">
            <summary>Sets the shim of Ntlm.GenType1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.GenType2String">
            <summary>Sets the shim of Ntlm.GenType2(String type1Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.GenType3String">
            <summary>Sets the shim of Ntlm.GenType3(String type2Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Ntlm.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Ntlm.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Ntlm.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Ntlm.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ntlm.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.LoadType3String">
            <summary>Sets the shim of Ntlm.LoadType3(String type3Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.NetBiosComputerNameGet">
            <summary>Sets the shim of Ntlm.get_NetBiosComputerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.NetBiosComputerNameSetString">
            <summary>Sets the shim of Ntlm.set_NetBiosComputerName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.NetBiosDomainNameGet">
            <summary>Sets the shim of Ntlm.get_NetBiosDomainName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.NetBiosDomainNameSetString">
            <summary>Sets the shim of Ntlm.set_NetBiosDomainName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.NtlmVersionGet">
            <summary>Sets the shim of Ntlm.get_NtlmVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.NtlmVersionSetInt32">
            <summary>Sets the shim of Ntlm.set_NtlmVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.OemCodePageGet">
            <summary>Sets the shim of Ntlm.get_OemCodePage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.OemCodePageSetInt32">
            <summary>Sets the shim of Ntlm.set_OemCodePage(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ParseType1String">
            <summary>Sets the shim of Ntlm.ParseType1(String type1Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ParseType2String">
            <summary>Sets the shim of Ntlm.ParseType2(String type2Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ParseType3String">
            <summary>Sets the shim of Ntlm.ParseType3(String type3Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.PasswordGet">
            <summary>Sets the shim of Ntlm.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.PasswordSetString">
            <summary>Sets the shim of Ntlm.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Ntlm.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ServerChallengeGet">
            <summary>Sets the shim of Ntlm.get_ServerChallenge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ServerChallengeSetString">
            <summary>Sets the shim of Ntlm.set_ServerChallenge(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.SetFlagStringBoolean">
            <summary>Sets the shim of Ntlm.SetFlag(String flagLetter, Boolean onOrOff)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.TargetNameGet">
            <summary>Sets the shim of Ntlm.get_TargetName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.TargetNameSetString">
            <summary>Sets the shim of Ntlm.set_TargetName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.ToString01">
            <summary>Sets the shim of Ntlm.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Ntlm.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.UserNameGet">
            <summary>Sets the shim of Ntlm.get_UserName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.UserNameSetString">
            <summary>Sets the shim of Ntlm.set_UserName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Ntlm.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ntlm.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.VersionGet">
            <summary>Sets the shim of Ntlm.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.WorkstationGet">
            <summary>Sets the shim of Ntlm.get_Workstation()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances.WorkstationSetString">
            <summary>Sets the shim of Ntlm.set_Workstation(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances._Ntlm">
            <summary>Sets the shim of Ntlm.!Ntlm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.AllInstances._Ntlm01">
            <summary>Sets the shim of Ntlm.~Ntlm()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNtlm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNtlm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimNtlm.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ClientChallengeGet">
            <summary>Sets the shim of Ntlm.get_ClientChallenge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ClientChallengeSetString">
            <summary>Sets the shim of Ntlm.set_ClientChallenge(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.CompareType3StringString">
            <summary>Sets the shim of Ntlm.CompareType3(String msg1, String msg2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.Constructor">
            <summary>Sets the shim of Ntlm.Ntlm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DebugLogFilePathGet">
            <summary>Sets the shim of Ntlm.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DebugLogFilePathSetString">
            <summary>Sets the shim of Ntlm.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.Dispose">
            <summary>Sets the shim of Ntlm.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DisposeBoolean">
            <summary>Sets the shim of Ntlm.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DnsComputerNameGet">
            <summary>Sets the shim of Ntlm.get_DnsComputerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DnsComputerNameSetString">
            <summary>Sets the shim of Ntlm.set_DnsComputerName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DnsDomainNameGet">
            <summary>Sets the shim of Ntlm.get_DnsDomainName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DnsDomainNameSetString">
            <summary>Sets the shim of Ntlm.set_DnsDomainName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DomainGet">
            <summary>Sets the shim of Ntlm.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.DomainSetString">
            <summary>Sets the shim of Ntlm.set_Domain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.EncodingModeGet">
            <summary>Sets the shim of Ntlm.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.EncodingModeSetString">
            <summary>Sets the shim of Ntlm.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.FlagsGet">
            <summary>Sets the shim of Ntlm.get_Flags()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.FlagsSetString">
            <summary>Sets the shim of Ntlm.set_Flags(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.GenType1">
            <summary>Sets the shim of Ntlm.GenType1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.GenType2String">
            <summary>Sets the shim of Ntlm.GenType2(String type1Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.GenType3String">
            <summary>Sets the shim of Ntlm.GenType3(String type2Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.LastErrorHtmlGet">
            <summary>Sets the shim of Ntlm.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.LastErrorTextGet">
            <summary>Sets the shim of Ntlm.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.LastErrorXmlGet">
            <summary>Sets the shim of Ntlm.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.LastMethodSuccessGet">
            <summary>Sets the shim of Ntlm.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ntlm.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.LoadType3String">
            <summary>Sets the shim of Ntlm.LoadType3(String type3Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.NetBiosComputerNameGet">
            <summary>Sets the shim of Ntlm.get_NetBiosComputerName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.NetBiosComputerNameSetString">
            <summary>Sets the shim of Ntlm.set_NetBiosComputerName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.NetBiosDomainNameGet">
            <summary>Sets the shim of Ntlm.get_NetBiosDomainName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.NetBiosDomainNameSetString">
            <summary>Sets the shim of Ntlm.set_NetBiosDomainName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.NtlmVersionGet">
            <summary>Sets the shim of Ntlm.get_NtlmVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.NtlmVersionSetInt32">
            <summary>Sets the shim of Ntlm.set_NtlmVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.OemCodePageGet">
            <summary>Sets the shim of Ntlm.get_OemCodePage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.OemCodePageSetInt32">
            <summary>Sets the shim of Ntlm.set_OemCodePage(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ParseType1String">
            <summary>Sets the shim of Ntlm.ParseType1(String type1Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ParseType2String">
            <summary>Sets the shim of Ntlm.ParseType2(String type2Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ParseType3String">
            <summary>Sets the shim of Ntlm.ParseType3(String type3Msg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.PasswordGet">
            <summary>Sets the shim of Ntlm.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.PasswordSetString">
            <summary>Sets the shim of Ntlm.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.SaveLastErrorString">
            <summary>Sets the shim of Ntlm.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ServerChallengeGet">
            <summary>Sets the shim of Ntlm.get_ServerChallenge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ServerChallengeSetString">
            <summary>Sets the shim of Ntlm.set_ServerChallenge(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.SetFlagStringBoolean">
            <summary>Sets the shim of Ntlm.SetFlag(String flagLetter, Boolean onOrOff)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.TargetNameGet">
            <summary>Sets the shim of Ntlm.get_TargetName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.TargetNameSetString">
            <summary>Sets the shim of Ntlm.set_TargetName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.ToString">
            <summary>Sets the shim of Ntlm.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.UnlockComponentString">
            <summary>Sets the shim of Ntlm.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.UserNameGet">
            <summary>Sets the shim of Ntlm.get_UserName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.UserNameSetString">
            <summary>Sets the shim of Ntlm.set_UserName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.VerboseLoggingGet">
            <summary>Sets the shim of Ntlm.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ntlm.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.VersionGet">
            <summary>Sets the shim of Ntlm.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.WorkstationGet">
            <summary>Sets the shim of Ntlm.get_Workstation()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm.WorkstationSetString">
            <summary>Sets the shim of Ntlm.set_Workstation(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm._Ntlm">
            <summary>Sets the shim of Ntlm.!Ntlm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimNtlm._Ntlm01">
            <summary>Sets the shim of Ntlm.~Ntlm()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimOAuth1">
            <summary>Shim type of Chilkat.OAuth1</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth1.#ctor(Chilkat.OAuth1)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AddParamStringString">
            <summary>Sets the shim of OAuth1.AddParam(String name, String value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimOAuth1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.AddParamStringString">
            <summary>Sets the shim of OAuth1.AddParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.AuthorizationHeaderGet">
            <summary>Sets the shim of OAuth1.get_AuthorizationHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.BaseStringGet">
            <summary>Sets the shim of OAuth1.get_BaseString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.ConsumerKeyGet">
            <summary>Sets the shim of OAuth1.get_ConsumerKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.ConsumerKeySetString">
            <summary>Sets the shim of OAuth1.set_ConsumerKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.ConsumerSecretGet">
            <summary>Sets the shim of OAuth1.get_ConsumerSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.ConsumerSecretSetString">
            <summary>Sets the shim of OAuth1.set_ConsumerSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of OAuth1.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of OAuth1.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.Dispose">
            <summary>Sets the shim of OAuth1.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of OAuth1.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.EncodedSignatureGet">
            <summary>Sets the shim of OAuth1.get_EncodedSignature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.GenNonceInt32">
            <summary>Sets the shim of OAuth1.GenNonce(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.GenTimestamp">
            <summary>Sets the shim of OAuth1.GenTimestamp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.Generate">
            <summary>Sets the shim of OAuth1.Generate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.GeneratedUrlGet">
            <summary>Sets the shim of OAuth1.get_GeneratedUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.HmacKeyGet">
            <summary>Sets the shim of OAuth1.get_HmacKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of OAuth1.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of OAuth1.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of OAuth1.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of OAuth1.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of OAuth1.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.NonceGet">
            <summary>Sets the shim of OAuth1.get_Nonce()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.NonceSetString">
            <summary>Sets the shim of OAuth1.set_Nonce(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.OauthMethodGet">
            <summary>Sets the shim of OAuth1.get_OauthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.OauthMethodSetString">
            <summary>Sets the shim of OAuth1.set_OauthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.OauthUrlGet">
            <summary>Sets the shim of OAuth1.get_OauthUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.OauthUrlSetString">
            <summary>Sets the shim of OAuth1.set_OauthUrl(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.OauthVersionGet">
            <summary>Sets the shim of OAuth1.get_OauthVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.OauthVersionSetString">
            <summary>Sets the shim of OAuth1.set_OauthVersion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.QueryStringGet">
            <summary>Sets the shim of OAuth1.get_QueryString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.RealmGet">
            <summary>Sets the shim of OAuth1.get_Realm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.RealmSetString">
            <summary>Sets the shim of OAuth1.set_Realm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.RemoveParamString">
            <summary>Sets the shim of OAuth1.RemoveParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of OAuth1.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.SetRsaKeyPrivateKey">
            <summary>Sets the shim of OAuth1.SetRsaKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.SignatureGet">
            <summary>Sets the shim of OAuth1.get_Signature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.SignatureMethodGet">
            <summary>Sets the shim of OAuth1.get_SignatureMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.SignatureMethodSetString">
            <summary>Sets the shim of OAuth1.set_SignatureMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.TimestampGet">
            <summary>Sets the shim of OAuth1.get_Timestamp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.TimestampSetString">
            <summary>Sets the shim of OAuth1.set_Timestamp(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.ToString01">
            <summary>Sets the shim of OAuth1.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.TokenGet">
            <summary>Sets the shim of OAuth1.get_Token()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.TokenSecretGet">
            <summary>Sets the shim of OAuth1.get_TokenSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.TokenSecretSetString">
            <summary>Sets the shim of OAuth1.set_TokenSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.TokenSetString">
            <summary>Sets the shim of OAuth1.set_Token(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of OAuth1.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of OAuth1.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances.VersionGet">
            <summary>Sets the shim of OAuth1.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances._OAuth1">
            <summary>Sets the shim of OAuth1.!OAuth1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AllInstances._OAuth101">
            <summary>Sets the shim of OAuth1.~OAuth1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.AuthorizationHeaderGet">
            <summary>Sets the shim of OAuth1.get_AuthorizationHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.BaseStringGet">
            <summary>Sets the shim of OAuth1.get_BaseString()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.Constructor">
            <summary>Sets the shim of OAuth1.OAuth1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.ConsumerKeyGet">
            <summary>Sets the shim of OAuth1.get_ConsumerKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.ConsumerKeySetString">
            <summary>Sets the shim of OAuth1.set_ConsumerKey(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.ConsumerSecretGet">
            <summary>Sets the shim of OAuth1.get_ConsumerSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.ConsumerSecretSetString">
            <summary>Sets the shim of OAuth1.set_ConsumerSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.DebugLogFilePathGet">
            <summary>Sets the shim of OAuth1.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.DebugLogFilePathSetString">
            <summary>Sets the shim of OAuth1.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.Dispose">
            <summary>Sets the shim of OAuth1.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.DisposeBoolean">
            <summary>Sets the shim of OAuth1.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.EncodedSignatureGet">
            <summary>Sets the shim of OAuth1.get_EncodedSignature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.GenNonceInt32">
            <summary>Sets the shim of OAuth1.GenNonce(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.GenTimestamp">
            <summary>Sets the shim of OAuth1.GenTimestamp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.Generate">
            <summary>Sets the shim of OAuth1.Generate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.GeneratedUrlGet">
            <summary>Sets the shim of OAuth1.get_GeneratedUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.HmacKeyGet">
            <summary>Sets the shim of OAuth1.get_HmacKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.LastErrorHtmlGet">
            <summary>Sets the shim of OAuth1.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.LastErrorTextGet">
            <summary>Sets the shim of OAuth1.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.LastErrorXmlGet">
            <summary>Sets the shim of OAuth1.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.LastMethodSuccessGet">
            <summary>Sets the shim of OAuth1.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of OAuth1.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.NonceGet">
            <summary>Sets the shim of OAuth1.get_Nonce()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.NonceSetString">
            <summary>Sets the shim of OAuth1.set_Nonce(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.OauthMethodGet">
            <summary>Sets the shim of OAuth1.get_OauthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.OauthMethodSetString">
            <summary>Sets the shim of OAuth1.set_OauthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.OauthUrlGet">
            <summary>Sets the shim of OAuth1.get_OauthUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.OauthUrlSetString">
            <summary>Sets the shim of OAuth1.set_OauthUrl(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.OauthVersionGet">
            <summary>Sets the shim of OAuth1.get_OauthVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.OauthVersionSetString">
            <summary>Sets the shim of OAuth1.set_OauthVersion(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.QueryStringGet">
            <summary>Sets the shim of OAuth1.get_QueryString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.RealmGet">
            <summary>Sets the shim of OAuth1.get_Realm()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.RealmSetString">
            <summary>Sets the shim of OAuth1.set_Realm(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.RemoveParamString">
            <summary>Sets the shim of OAuth1.RemoveParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.SaveLastErrorString">
            <summary>Sets the shim of OAuth1.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.SetRsaKeyPrivateKey">
            <summary>Sets the shim of OAuth1.SetRsaKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.SignatureGet">
            <summary>Sets the shim of OAuth1.get_Signature()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.SignatureMethodGet">
            <summary>Sets the shim of OAuth1.get_SignatureMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.SignatureMethodSetString">
            <summary>Sets the shim of OAuth1.set_SignatureMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.TimestampGet">
            <summary>Sets the shim of OAuth1.get_Timestamp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.TimestampSetString">
            <summary>Sets the shim of OAuth1.set_Timestamp(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.ToString">
            <summary>Sets the shim of OAuth1.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.TokenGet">
            <summary>Sets the shim of OAuth1.get_Token()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.TokenSecretGet">
            <summary>Sets the shim of OAuth1.get_TokenSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.TokenSecretSetString">
            <summary>Sets the shim of OAuth1.set_TokenSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.TokenSetString">
            <summary>Sets the shim of OAuth1.set_Token(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.VerboseLoggingGet">
            <summary>Sets the shim of OAuth1.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.VerboseLoggingSetBoolean">
            <summary>Sets the shim of OAuth1.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1.VersionGet">
            <summary>Sets the shim of OAuth1.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1._OAuth1">
            <summary>Sets the shim of OAuth1.!OAuth1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth1._OAuth101">
            <summary>Sets the shim of OAuth1.~OAuth1()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimOAuth2">
            <summary>Shim type of Chilkat.OAuth2</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth2.#ctor(Chilkat.OAuth2)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AccessTokenGet">
            <summary>Sets the shim of OAuth2.get_AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AccessTokenResponseGet">
            <summary>Sets the shim of OAuth2.get_AccessTokenResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AccessTokenSetString">
            <summary>Sets the shim of OAuth2.set_AccessToken(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimOAuth2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.AccessTokenGet">
            <summary>Sets the shim of OAuth2.get_AccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.AccessTokenResponseGet">
            <summary>Sets the shim of OAuth2.get_AccessTokenResponse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.AccessTokenSetString">
            <summary>Sets the shim of OAuth2.set_AccessToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.AuthFlowStateGet">
            <summary>Sets the shim of OAuth2.get_AuthFlowState()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.AuthorizationEndpointGet">
            <summary>Sets the shim of OAuth2.get_AuthorizationEndpoint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.AuthorizationEndpointSetString">
            <summary>Sets the shim of OAuth2.set_AuthorizationEndpoint(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.Cancel">
            <summary>Sets the shim of OAuth2.Cancel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ClientIdGet">
            <summary>Sets the shim of OAuth2.get_ClientId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ClientIdSetString">
            <summary>Sets the shim of OAuth2.set_ClientId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ClientSecretGet">
            <summary>Sets the shim of OAuth2.get_ClientSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ClientSecretSetString">
            <summary>Sets the shim of OAuth2.set_ClientSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.CodeChallengeGet">
            <summary>Sets the shim of OAuth2.get_CodeChallenge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.CodeChallengeMethodGet">
            <summary>Sets the shim of OAuth2.get_CodeChallengeMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.CodeChallengeMethodSetString">
            <summary>Sets the shim of OAuth2.set_CodeChallengeMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.CodeChallengeSetBoolean">
            <summary>Sets the shim of OAuth2.set_CodeChallenge(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of OAuth2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of OAuth2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.Dispose">
            <summary>Sets the shim of OAuth2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.DisposeBoolean">
            <summary>Sets the shim of OAuth2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.EnableEventsGet">
            <summary>Sets the shim of OAuth2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of OAuth2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FailureInfoGet">
            <summary>Sets the shim of OAuth2.get_FailureInfo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of OAuth2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of OAuth2.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of OAuth2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of OAuth2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of OAuth2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of OAuth2.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.GetRedirectRequestParamString">
            <summary>Sets the shim of OAuth2.GetRedirectRequestParam(String paramName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of OAuth2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of OAuth2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of OAuth2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of OAuth2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of OAuth2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ListenPortGet">
            <summary>Sets the shim of OAuth2.get_ListenPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ListenPortRangeEndGet">
            <summary>Sets the shim of OAuth2.get_ListenPortRangeEnd()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ListenPortRangeEndSetInt32">
            <summary>Sets the shim of OAuth2.set_ListenPortRangeEnd(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ListenPortSetInt32">
            <summary>Sets the shim of OAuth2.set_ListenPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LocalHostGet">
            <summary>Sets the shim of OAuth2.get_LocalHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.LocalHostSetString">
            <summary>Sets the shim of OAuth2.set_LocalHost(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.Monitor">
            <summary>Sets the shim of OAuth2.Monitor()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.MonitorAsync">
            <summary>Sets the shim of OAuth2.MonitorAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnAbortCheckAddOAuth2AbortCheckEventHandler">
            <summary>Sets the shim of OAuth2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnAbortCheckRemoveOAuth2AbortCheckEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnBinaryDataAddOAuth2BinaryDataEventHandler">
            <summary>Sets the shim of OAuth2.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnBinaryDataRemoveOAuth2BinaryDataEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnPercentDoneAddOAuth2PercentDoneEventHandler">
            <summary>Sets the shim of OAuth2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnPercentDoneRemoveOAuth2PercentDoneEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnProgressInfoAddOAuth2ProgressInfoEventHandler">
            <summary>Sets the shim of OAuth2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnProgressInfoRemoveOAuth2ProgressInfoEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnTaskCompletedAddOAuth2TaskCompletedEventHandler">
            <summary>Sets the shim of OAuth2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnTaskCompletedRemoveOAuth2TaskCompletedEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnTextDataAddOAuth2TextDataEventHandler">
            <summary>Sets the shim of OAuth2.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.OnTextDataRemoveOAuth2TextDataEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RedirectAllowHtmlGet">
            <summary>Sets the shim of OAuth2.get_RedirectAllowHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RedirectAllowHtmlSetString">
            <summary>Sets the shim of OAuth2.set_RedirectAllowHtml(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RedirectDenyHtmlGet">
            <summary>Sets the shim of OAuth2.get_RedirectDenyHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RedirectDenyHtmlSetString">
            <summary>Sets the shim of OAuth2.set_RedirectDenyHtml(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RefreshAccessToken">
            <summary>Sets the shim of OAuth2.RefreshAccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RefreshAccessTokenAsync">
            <summary>Sets the shim of OAuth2.RefreshAccessTokenAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RefreshTokenGet">
            <summary>Sets the shim of OAuth2.get_RefreshToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.RefreshTokenSetString">
            <summary>Sets the shim of OAuth2.set_RefreshToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ResourceGet">
            <summary>Sets the shim of OAuth2.get_Resource()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ResourceSetString">
            <summary>Sets the shim of OAuth2.set_Resource(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of OAuth2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ScopeGet">
            <summary>Sets the shim of OAuth2.get_Scope()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ScopeSetString">
            <summary>Sets the shim of OAuth2.set_Scope(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.SleepMsInt32">
            <summary>Sets the shim of OAuth2.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.StartAuth">
            <summary>Sets the shim of OAuth2.StartAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.ToString01">
            <summary>Sets the shim of OAuth2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.TokenEndpointGet">
            <summary>Sets the shim of OAuth2.get_TokenEndpoint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.TokenEndpointSetString">
            <summary>Sets the shim of OAuth2.set_TokenEndpoint(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.TokenTypeGet">
            <summary>Sets the shim of OAuth2.get_TokenType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.TokenTypeSetString">
            <summary>Sets the shim of OAuth2.set_TokenType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.UseConnectionSocket">
            <summary>Sets the shim of OAuth2.UseConnection(Socket sock)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of OAuth2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of OAuth2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances.VersionGet">
            <summary>Sets the shim of OAuth2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances._OAuth2">
            <summary>Sets the shim of OAuth2.!OAuth2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AllInstances._OAuth201">
            <summary>Sets the shim of OAuth2.~OAuth2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AuthFlowStateGet">
            <summary>Sets the shim of OAuth2.get_AuthFlowState()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AuthorizationEndpointGet">
            <summary>Sets the shim of OAuth2.get_AuthorizationEndpoint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.AuthorizationEndpointSetString">
            <summary>Sets the shim of OAuth2.set_AuthorizationEndpoint(String propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimOAuth2.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.Cancel">
            <summary>Sets the shim of OAuth2.Cancel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ClientIdGet">
            <summary>Sets the shim of OAuth2.get_ClientId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ClientIdSetString">
            <summary>Sets the shim of OAuth2.set_ClientId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ClientSecretGet">
            <summary>Sets the shim of OAuth2.get_ClientSecret()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ClientSecretSetString">
            <summary>Sets the shim of OAuth2.set_ClientSecret(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.CodeChallengeGet">
            <summary>Sets the shim of OAuth2.get_CodeChallenge()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.CodeChallengeMethodGet">
            <summary>Sets the shim of OAuth2.get_CodeChallengeMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.CodeChallengeMethodSetString">
            <summary>Sets the shim of OAuth2.set_CodeChallengeMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.CodeChallengeSetBoolean">
            <summary>Sets the shim of OAuth2.set_CodeChallenge(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.Constructor">
            <summary>Sets the shim of OAuth2.OAuth2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.DebugLogFilePathGet">
            <summary>Sets the shim of OAuth2.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.DebugLogFilePathSetString">
            <summary>Sets the shim of OAuth2.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.Dispose">
            <summary>Sets the shim of OAuth2.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.DisposeBoolean">
            <summary>Sets the shim of OAuth2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.EnableEventsGet">
            <summary>Sets the shim of OAuth2.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.EnableEventsSetBoolean">
            <summary>Sets the shim of OAuth2.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FailureInfoGet">
            <summary>Sets the shim of OAuth2.get_FailureInfo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of OAuth2.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of OAuth2.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of OAuth2.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of OAuth2.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of OAuth2.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of OAuth2.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.GetRedirectRequestParamString">
            <summary>Sets the shim of OAuth2.GetRedirectRequestParam(String paramName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LastErrorHtmlGet">
            <summary>Sets the shim of OAuth2.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LastErrorTextGet">
            <summary>Sets the shim of OAuth2.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LastErrorXmlGet">
            <summary>Sets the shim of OAuth2.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LastMethodSuccessGet">
            <summary>Sets the shim of OAuth2.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of OAuth2.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ListenPortGet">
            <summary>Sets the shim of OAuth2.get_ListenPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ListenPortRangeEndGet">
            <summary>Sets the shim of OAuth2.get_ListenPortRangeEnd()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ListenPortRangeEndSetInt32">
            <summary>Sets the shim of OAuth2.set_ListenPortRangeEnd(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ListenPortSetInt32">
            <summary>Sets the shim of OAuth2.set_ListenPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LocalHostGet">
            <summary>Sets the shim of OAuth2.get_LocalHost()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.LocalHostSetString">
            <summary>Sets the shim of OAuth2.set_LocalHost(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.Monitor">
            <summary>Sets the shim of OAuth2.Monitor()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.MonitorAsync">
            <summary>Sets the shim of OAuth2.MonitorAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnAbortCheckAddOAuth2AbortCheckEventHandler">
            <summary>Sets the shim of OAuth2.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnAbortCheckRemoveOAuth2AbortCheckEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnBinaryDataAddOAuth2BinaryDataEventHandler">
            <summary>Sets the shim of OAuth2.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnBinaryDataRemoveOAuth2BinaryDataEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnPercentDoneAddOAuth2PercentDoneEventHandler">
            <summary>Sets the shim of OAuth2.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnPercentDoneRemoveOAuth2PercentDoneEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnProgressInfoAddOAuth2ProgressInfoEventHandler">
            <summary>Sets the shim of OAuth2.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnProgressInfoRemoveOAuth2ProgressInfoEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnTaskCompletedAddOAuth2TaskCompletedEventHandler">
            <summary>Sets the shim of OAuth2.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnTaskCompletedRemoveOAuth2TaskCompletedEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnTextDataAddOAuth2TextDataEventHandler">
            <summary>Sets the shim of OAuth2.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of OAuth2.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.OnTextDataRemoveOAuth2TextDataEventHandler">
            <summary>Sets the shim of OAuth2.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RedirectAllowHtmlGet">
            <summary>Sets the shim of OAuth2.get_RedirectAllowHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RedirectAllowHtmlSetString">
            <summary>Sets the shim of OAuth2.set_RedirectAllowHtml(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RedirectDenyHtmlGet">
            <summary>Sets the shim of OAuth2.get_RedirectDenyHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RedirectDenyHtmlSetString">
            <summary>Sets the shim of OAuth2.set_RedirectDenyHtml(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RefreshAccessToken">
            <summary>Sets the shim of OAuth2.RefreshAccessToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RefreshAccessTokenAsync">
            <summary>Sets the shim of OAuth2.RefreshAccessTokenAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RefreshTokenGet">
            <summary>Sets the shim of OAuth2.get_RefreshToken()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.RefreshTokenSetString">
            <summary>Sets the shim of OAuth2.set_RefreshToken(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ResourceGet">
            <summary>Sets the shim of OAuth2.get_Resource()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ResourceSetString">
            <summary>Sets the shim of OAuth2.set_Resource(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.SaveLastErrorString">
            <summary>Sets the shim of OAuth2.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ScopeGet">
            <summary>Sets the shim of OAuth2.get_Scope()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ScopeSetString">
            <summary>Sets the shim of OAuth2.set_Scope(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.SleepMsInt32">
            <summary>Sets the shim of OAuth2.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.StartAuth">
            <summary>Sets the shim of OAuth2.StartAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.ToString">
            <summary>Sets the shim of OAuth2.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.TokenEndpointGet">
            <summary>Sets the shim of OAuth2.get_TokenEndpoint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.TokenEndpointSetString">
            <summary>Sets the shim of OAuth2.set_TokenEndpoint(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.TokenTypeGet">
            <summary>Sets the shim of OAuth2.get_TokenType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.TokenTypeSetString">
            <summary>Sets the shim of OAuth2.set_TokenType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.UseConnectionSocket">
            <summary>Sets the shim of OAuth2.UseConnection(Socket sock)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.VerboseLoggingGet">
            <summary>Sets the shim of OAuth2.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.VerboseLoggingSetBoolean">
            <summary>Sets the shim of OAuth2.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2.VersionGet">
            <summary>Sets the shim of OAuth2.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2._OAuth2">
            <summary>Sets the shim of OAuth2.!OAuth2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimOAuth2._OAuth201">
            <summary>Sets the shim of OAuth2.~OAuth2()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPem">
            <summary>Shim type of Chilkat.Pem</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPem.#ctor(Chilkat.Pem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AddCertCertBoolean">
            <summary>Sets the shim of Pem.AddCert(Cert cert, Boolean includeChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AddItemStringStringString">
            <summary>Sets the shim of Pem.AddItem(String itemType, String encoding, String itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AddPrivateKey2PrivateKeyCertChain">
            <summary>Sets the shim of Pem.AddPrivateKey2(PrivateKey privKey, CertChain certChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AddPrivateKeyPrivateKey">
            <summary>Sets the shim of Pem.AddPrivateKey(PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AddPublicKeyPublicKey">
            <summary>Sets the shim of Pem.AddPublicKey(PublicKey pubkey)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AddCertCertBoolean">
            <summary>Sets the shim of Pem.AddCert(Cert cert, Boolean includeChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AddItemStringStringString">
            <summary>Sets the shim of Pem.AddItem(String itemType, String encoding, String itemData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AddPrivateKey2PrivateKeyCertChain">
            <summary>Sets the shim of Pem.AddPrivateKey2(PrivateKey privKey, CertChain certChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AddPrivateKeyPrivateKey">
            <summary>Sets the shim of Pem.AddPrivateKey(PrivateKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AddPublicKeyPublicKey">
            <summary>Sets the shim of Pem.AddPublicKey(PublicKey pubkey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AppendModeGet">
            <summary>Sets the shim of Pem.get_AppendMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.AppendModeSetBoolean">
            <summary>Sets the shim of Pem.set_AppendMode(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.Clear">
            <summary>Sets the shim of Pem.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Pem.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Pem.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.Dispose">
            <summary>Sets the shim of Pem.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Pem.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Pem.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Pem.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Pem.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Pem.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Pem.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Pem.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Pem.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Pem.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.GetCertInt32">
            <summary>Sets the shim of Pem.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.GetEncodedItemStringStringStringInt32">
            <summary>Sets the shim of Pem.GetEncodedItem(String itemType, String itemSubType, String encoding, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.GetPrivateKeyInt32">
            <summary>Sets the shim of Pem.GetPrivateKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.GetPublicKeyInt32">
            <summary>Sets the shim of Pem.GetPublicKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Pem.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Pem.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Pem.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Pem.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Pem.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Pem.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Pem.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadP7bAsyncByteArray">
            <summary>Sets the shim of Pem.LoadP7bAsync(Byte[] p7bData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadP7bByteArray">
            <summary>Sets the shim of Pem.LoadP7b(Byte[] p7bData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadP7bFileAsyncString">
            <summary>Sets the shim of Pem.LoadP7bFileAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadP7bFileString">
            <summary>Sets the shim of Pem.LoadP7bFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadPemAsyncStringString">
            <summary>Sets the shim of Pem.LoadPemAsync(String pemContent, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadPemFileAsyncStringString">
            <summary>Sets the shim of Pem.LoadPemFileAsync(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadPemFileStringString">
            <summary>Sets the shim of Pem.LoadPemFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.LoadPemStringString">
            <summary>Sets the shim of Pem.LoadPem(String pemContent, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.NumCertsGet">
            <summary>Sets the shim of Pem.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.NumCsrsGet">
            <summary>Sets the shim of Pem.get_NumCsrs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.NumPrivateKeysGet">
            <summary>Sets the shim of Pem.get_NumPrivateKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.NumPublicKeysGet">
            <summary>Sets the shim of Pem.get_NumPublicKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnAbortCheckAddPemAbortCheckEventHandler">
            <summary>Sets the shim of Pem.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Pem.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnAbortCheckRemovePemAbortCheckEventHandler">
            <summary>Sets the shim of Pem.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnBinaryDataAddPemBinaryDataEventHandler">
            <summary>Sets the shim of Pem.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Pem.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnBinaryDataRemovePemBinaryDataEventHandler">
            <summary>Sets the shim of Pem.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnPercentDoneAddPemPercentDoneEventHandler">
            <summary>Sets the shim of Pem.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Pem.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnPercentDoneRemovePemPercentDoneEventHandler">
            <summary>Sets the shim of Pem.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnProgressInfoAddPemProgressInfoEventHandler">
            <summary>Sets the shim of Pem.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Pem.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnProgressInfoRemovePemProgressInfoEventHandler">
            <summary>Sets the shim of Pem.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnTaskCompletedAddPemTaskCompletedEventHandler">
            <summary>Sets the shim of Pem.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Pem.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnTaskCompletedRemovePemTaskCompletedEventHandler">
            <summary>Sets the shim of Pem.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnTextDataAddPemTextDataEventHandler">
            <summary>Sets the shim of Pem.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Pem.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.OnTextDataRemovePemTextDataEventHandler">
            <summary>Sets the shim of Pem.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.PrivateKeyFormatGet">
            <summary>Sets the shim of Pem.get_PrivateKeyFormat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.PrivateKeyFormatSetString">
            <summary>Sets the shim of Pem.set_PrivateKeyFormat(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.PublicKeyFormatGet">
            <summary>Sets the shim of Pem.get_PublicKeyFormat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.PublicKeyFormatSetString">
            <summary>Sets the shim of Pem.set_PublicKeyFormat(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.RemoveCertInt32">
            <summary>Sets the shim of Pem.RemoveCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.RemovePrivateKeyInt32">
            <summary>Sets the shim of Pem.RemovePrivateKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Pem.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.ToJksStringString">
            <summary>Sets the shim of Pem.ToJks(String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.ToPem">
            <summary>Sets the shim of Pem.ToPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.ToPemExBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of Pem.ToPemEx(Boolean extendedAttrs, Boolean noKeys, Boolean noCerts, Boolean noCaCerts, String encryptAlg, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.ToPfx">
            <summary>Sets the shim of Pem.ToPfx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.ToString01">
            <summary>Sets the shim of Pem.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Pem.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Pem.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances.VersionGet">
            <summary>Sets the shim of Pem.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances._Pem">
            <summary>Sets the shim of Pem.!Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AllInstances._Pem01">
            <summary>Sets the shim of Pem.~Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AppendModeGet">
            <summary>Sets the shim of Pem.get_AppendMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.AppendModeSetBoolean">
            <summary>Sets the shim of Pem.set_AppendMode(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPem.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.Clear">
            <summary>Sets the shim of Pem.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.Constructor">
            <summary>Sets the shim of Pem.Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.DebugLogFilePathGet">
            <summary>Sets the shim of Pem.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.DebugLogFilePathSetString">
            <summary>Sets the shim of Pem.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.Dispose">
            <summary>Sets the shim of Pem.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.DisposeBoolean">
            <summary>Sets the shim of Pem.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.EnableEventsGet">
            <summary>Sets the shim of Pem.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.EnableEventsSetBoolean">
            <summary>Sets the shim of Pem.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Pem.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Pem.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Pem.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Pem.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Pem.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Pem.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.GetCertInt32">
            <summary>Sets the shim of Pem.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.GetEncodedItemStringStringStringInt32">
            <summary>Sets the shim of Pem.GetEncodedItem(String itemType, String itemSubType, String encoding, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.GetPrivateKeyInt32">
            <summary>Sets the shim of Pem.GetPrivateKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.GetPublicKeyInt32">
            <summary>Sets the shim of Pem.GetPublicKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.HeartbeatMsGet">
            <summary>Sets the shim of Pem.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.HeartbeatMsSetInt32">
            <summary>Sets the shim of Pem.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LastErrorHtmlGet">
            <summary>Sets the shim of Pem.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LastErrorTextGet">
            <summary>Sets the shim of Pem.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LastErrorXmlGet">
            <summary>Sets the shim of Pem.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LastMethodSuccessGet">
            <summary>Sets the shim of Pem.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Pem.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadP7bAsyncByteArray">
            <summary>Sets the shim of Pem.LoadP7bAsync(Byte[] p7bData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadP7bByteArray">
            <summary>Sets the shim of Pem.LoadP7b(Byte[] p7bData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadP7bFileAsyncString">
            <summary>Sets the shim of Pem.LoadP7bFileAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadP7bFileString">
            <summary>Sets the shim of Pem.LoadP7bFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadPemAsyncStringString">
            <summary>Sets the shim of Pem.LoadPemAsync(String pemContent, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadPemFileAsyncStringString">
            <summary>Sets the shim of Pem.LoadPemFileAsync(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadPemFileStringString">
            <summary>Sets the shim of Pem.LoadPemFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.LoadPemStringString">
            <summary>Sets the shim of Pem.LoadPem(String pemContent, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.NumCertsGet">
            <summary>Sets the shim of Pem.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.NumCsrsGet">
            <summary>Sets the shim of Pem.get_NumCsrs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.NumPrivateKeysGet">
            <summary>Sets the shim of Pem.get_NumPrivateKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.NumPublicKeysGet">
            <summary>Sets the shim of Pem.get_NumPublicKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnAbortCheckAddPemAbortCheckEventHandler">
            <summary>Sets the shim of Pem.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Pem.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnAbortCheckRemovePemAbortCheckEventHandler">
            <summary>Sets the shim of Pem.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnBinaryDataAddPemBinaryDataEventHandler">
            <summary>Sets the shim of Pem.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Pem.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnBinaryDataRemovePemBinaryDataEventHandler">
            <summary>Sets the shim of Pem.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnPercentDoneAddPemPercentDoneEventHandler">
            <summary>Sets the shim of Pem.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Pem.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnPercentDoneRemovePemPercentDoneEventHandler">
            <summary>Sets the shim of Pem.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnProgressInfoAddPemProgressInfoEventHandler">
            <summary>Sets the shim of Pem.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Pem.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnProgressInfoRemovePemProgressInfoEventHandler">
            <summary>Sets the shim of Pem.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnTaskCompletedAddPemTaskCompletedEventHandler">
            <summary>Sets the shim of Pem.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Pem.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnTaskCompletedRemovePemTaskCompletedEventHandler">
            <summary>Sets the shim of Pem.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnTextDataAddPemTextDataEventHandler">
            <summary>Sets the shim of Pem.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Pem.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.OnTextDataRemovePemTextDataEventHandler">
            <summary>Sets the shim of Pem.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.PrivateKeyFormatGet">
            <summary>Sets the shim of Pem.get_PrivateKeyFormat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.PrivateKeyFormatSetString">
            <summary>Sets the shim of Pem.set_PrivateKeyFormat(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.PublicKeyFormatGet">
            <summary>Sets the shim of Pem.get_PublicKeyFormat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.PublicKeyFormatSetString">
            <summary>Sets the shim of Pem.set_PublicKeyFormat(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.RemoveCertInt32">
            <summary>Sets the shim of Pem.RemoveCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.RemovePrivateKeyInt32">
            <summary>Sets the shim of Pem.RemovePrivateKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.SaveLastErrorString">
            <summary>Sets the shim of Pem.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.ToJksStringString">
            <summary>Sets the shim of Pem.ToJks(String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.ToPem">
            <summary>Sets the shim of Pem.ToPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.ToPemExBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of Pem.ToPemEx(Boolean extendedAttrs, Boolean noKeys, Boolean noCerts, Boolean noCaCerts, String encryptAlg, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.ToPfx">
            <summary>Sets the shim of Pem.ToPfx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.ToString">
            <summary>Sets the shim of Pem.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.VerboseLoggingGet">
            <summary>Sets the shim of Pem.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Pem.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem.VersionGet">
            <summary>Sets the shim of Pem.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem._Pem">
            <summary>Sets the shim of Pem.!Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPem._Pem01">
            <summary>Sets the shim of Pem.~Pem()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPercentDoneEventArgs">
            <summary>Shim type of Chilkat.PercentDoneEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPercentDoneEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPercentDoneEventArgs.#ctor(Chilkat.PercentDoneEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AbortGet">
            <summary>Sets the shim of PercentDoneEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AbortSetBoolean">
            <summary>Sets the shim of PercentDoneEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances.AbortGet">
            <summary>Sets the shim of PercentDoneEventArgs.get_Abort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances.AbortSetBoolean">
            <summary>Sets the shim of PercentDoneEventArgs.set_Abort(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of PercentDoneEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PercentDoneEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances.PercentDoneGet">
            <summary>Sets the shim of PercentDoneEventArgs.get_PercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.AllInstances._PercentDoneEventArgs">
            <summary>Sets the shim of PercentDoneEventArgs.~PercentDoneEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPercentDoneEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPercentDoneEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPercentDoneEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.ConstructorInt32">
            <summary>Sets the shim of PercentDoneEventArgs.PercentDoneEventArgs(Int32 pctDone)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.Dispose">
            <summary>Sets the shim of PercentDoneEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.DisposeBoolean">
            <summary>Sets the shim of PercentDoneEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs.PercentDoneGet">
            <summary>Sets the shim of PercentDoneEventArgs.get_PercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPercentDoneEventArgs._PercentDoneEventArgs">
            <summary>Sets the shim of PercentDoneEventArgs.~PercentDoneEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPfx">
            <summary>Shim type of Chilkat.Pfx</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPfx.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPfx.#ctor(Chilkat.Pfx)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AddCertCertBoolean">
            <summary>Sets the shim of Pfx.AddCert(Cert cert, Boolean includeChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AddPrivateKeyPrivateKeyCertChain">
            <summary>Sets the shim of Pfx.AddPrivateKey(PrivateKey privKey, CertChain certChain)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPfx.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.AddCertCertBoolean">
            <summary>Sets the shim of Pfx.AddCert(Cert cert, Boolean includeChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.AddPrivateKeyPrivateKeyCertChain">
            <summary>Sets the shim of Pfx.AddPrivateKey(PrivateKey privKey, CertChain certChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Pfx.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Pfx.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.Dispose">
            <summary>Sets the shim of Pfx.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Pfx.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.GetCertInt32">
            <summary>Sets the shim of Pfx.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.GetPrivateKeyInt32">
            <summary>Sets the shim of Pfx.GetPrivateKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Pfx.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Pfx.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Pfx.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Pfx.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Pfx.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LoadPemStringString">
            <summary>Sets the shim of Pfx.LoadPem(String pemStr, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LoadPfxBytesByteArrayString">
            <summary>Sets the shim of Pfx.LoadPfxBytes(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LoadPfxEncodedStringStringString">
            <summary>Sets the shim of Pfx.LoadPfxEncoded(String encodedData, String encoding, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.LoadPfxFileStringString">
            <summary>Sets the shim of Pfx.LoadPfxFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.NumCertsGet">
            <summary>Sets the shim of Pfx.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.NumPrivateKeysGet">
            <summary>Sets the shim of Pfx.get_NumPrivateKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Pfx.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToBinaryString">
            <summary>Sets the shim of Pfx.ToBinary(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToEncodedStringStringString">
            <summary>Sets the shim of Pfx.ToEncodedString(String password, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToFileStringString">
            <summary>Sets the shim of Pfx.ToFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToJavaKeyStoreStringString">
            <summary>Sets the shim of Pfx.ToJavaKeyStore(String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToPem">
            <summary>Sets the shim of Pfx.ToPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToPemExBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of Pfx.ToPemEx(Boolean extendedAttrs, Boolean noKeys, Boolean noCerts, Boolean noCaCerts, String encryptAlg, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.ToString01">
            <summary>Sets the shim of Pfx.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Pfx.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Pfx.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Pfx.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances.VersionGet">
            <summary>Sets the shim of Pfx.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances._Pfx">
            <summary>Sets the shim of Pfx.!Pfx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.AllInstances._Pfx01">
            <summary>Sets the shim of Pfx.~Pfx()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPfx.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPfx.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPfx.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.Constructor">
            <summary>Sets the shim of Pfx.Pfx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.DebugLogFilePathGet">
            <summary>Sets the shim of Pfx.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.DebugLogFilePathSetString">
            <summary>Sets the shim of Pfx.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.Dispose">
            <summary>Sets the shim of Pfx.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.DisposeBoolean">
            <summary>Sets the shim of Pfx.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.GetCertInt32">
            <summary>Sets the shim of Pfx.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.GetPrivateKeyInt32">
            <summary>Sets the shim of Pfx.GetPrivateKey(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LastErrorHtmlGet">
            <summary>Sets the shim of Pfx.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LastErrorTextGet">
            <summary>Sets the shim of Pfx.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LastErrorXmlGet">
            <summary>Sets the shim of Pfx.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LastMethodSuccessGet">
            <summary>Sets the shim of Pfx.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Pfx.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LoadPemStringString">
            <summary>Sets the shim of Pfx.LoadPem(String pemStr, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LoadPfxBytesByteArrayString">
            <summary>Sets the shim of Pfx.LoadPfxBytes(Byte[] pfxData, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LoadPfxEncodedStringStringString">
            <summary>Sets the shim of Pfx.LoadPfxEncoded(String encodedData, String encoding, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.LoadPfxFileStringString">
            <summary>Sets the shim of Pfx.LoadPfxFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.NumCertsGet">
            <summary>Sets the shim of Pfx.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.NumPrivateKeysGet">
            <summary>Sets the shim of Pfx.get_NumPrivateKeys()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.SaveLastErrorString">
            <summary>Sets the shim of Pfx.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToBinaryString">
            <summary>Sets the shim of Pfx.ToBinary(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToEncodedStringStringString">
            <summary>Sets the shim of Pfx.ToEncodedString(String password, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToFileStringString">
            <summary>Sets the shim of Pfx.ToFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToJavaKeyStoreStringString">
            <summary>Sets the shim of Pfx.ToJavaKeyStore(String alias, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToPem">
            <summary>Sets the shim of Pfx.ToPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToPemExBooleanBooleanBooleanBooleanStringString">
            <summary>Sets the shim of Pfx.ToPemEx(Boolean extendedAttrs, Boolean noKeys, Boolean noCerts, Boolean noCaCerts, String encryptAlg, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.ToString">
            <summary>Sets the shim of Pfx.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.UseCertVaultXmlCertVault">
            <summary>Sets the shim of Pfx.UseCertVault(XmlCertVault vault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.VerboseLoggingGet">
            <summary>Sets the shim of Pfx.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Pfx.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx.VersionGet">
            <summary>Sets the shim of Pfx.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx._Pfx">
            <summary>Sets the shim of Pfx.!Pfx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPfx._Pfx01">
            <summary>Sets the shim of Pfx.~Pfx()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPrivateKey">
            <summary>Shim type of Chilkat.PrivateKey</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrivateKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrivateKey.#ctor(Chilkat.PrivateKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPrivateKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.BitLengthGet">
            <summary>Sets the shim of PrivateKey.get_BitLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of PrivateKey.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of PrivateKey.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.Dispose">
            <summary>Sets the shim of PrivateKey.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PrivateKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetJwk">
            <summary>Sets the shim of PrivateKey.GetJwk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetJwkThumbprintString">
            <summary>Sets the shim of PrivateKey.GetJwkThumbprint(String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs1">
            <summary>Sets the shim of PrivateKey.GetPkcs1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs1ENCString">
            <summary>Sets the shim of PrivateKey.GetPkcs1ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs1Pem">
            <summary>Sets the shim of PrivateKey.GetPkcs1Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs8">
            <summary>Sets the shim of PrivateKey.GetPkcs8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs8ENCString">
            <summary>Sets the shim of PrivateKey.GetPkcs8ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs8EncryptedENCStringString">
            <summary>Sets the shim of PrivateKey.GetPkcs8EncryptedENC(String encoding, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs8EncryptedPemString">
            <summary>Sets the shim of PrivateKey.GetPkcs8EncryptedPem(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs8EncryptedString">
            <summary>Sets the shim of PrivateKey.GetPkcs8Encrypted(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPkcs8Pem">
            <summary>Sets the shim of PrivateKey.GetPkcs8Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetPublicKey">
            <summary>Sets the shim of PrivateKey.GetPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetRsaDer">
            <summary>Sets the shim of PrivateKey.GetRsaDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetRsaPem">
            <summary>Sets the shim of PrivateKey.GetRsaPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.GetXml">
            <summary>Sets the shim of PrivateKey.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.KeyTypeGet">
            <summary>Sets the shim of PrivateKey.get_KeyType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of PrivateKey.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of PrivateKey.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of PrivateKey.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of PrivateKey.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of PrivateKey.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadEncryptedPemFileStringString">
            <summary>Sets the shim of PrivateKey.LoadEncryptedPemFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadEncryptedPemStringString">
            <summary>Sets the shim of PrivateKey.LoadEncryptedPem(String pemStr, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadJwkString">
            <summary>Sets the shim of PrivateKey.LoadJwk(String jsonStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPemFileString">
            <summary>Sets the shim of PrivateKey.LoadPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPemString">
            <summary>Sets the shim of PrivateKey.LoadPem(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPkcs1ByteArray">
            <summary>Sets the shim of PrivateKey.LoadPkcs1(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPkcs1FileString">
            <summary>Sets the shim of PrivateKey.LoadPkcs1File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPkcs8ByteArray">
            <summary>Sets the shim of PrivateKey.LoadPkcs8(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPkcs8EncryptedByteArrayString">
            <summary>Sets the shim of PrivateKey.LoadPkcs8Encrypted(Byte[] data, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPkcs8EncryptedFileStringString">
            <summary>Sets the shim of PrivateKey.LoadPkcs8EncryptedFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPkcs8FileString">
            <summary>Sets the shim of PrivateKey.LoadPkcs8File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPvkByteArrayString">
            <summary>Sets the shim of PrivateKey.LoadPvk(Byte[] data, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadPvkFileStringString">
            <summary>Sets the shim of PrivateKey.LoadPvkFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadRsaDerByteArray">
            <summary>Sets the shim of PrivateKey.LoadRsaDer(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadRsaDerFileString">
            <summary>Sets the shim of PrivateKey.LoadRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadXmlFileString">
            <summary>Sets the shim of PrivateKey.LoadXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.LoadXmlString">
            <summary>Sets the shim of PrivateKey.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.Pkcs8EncryptAlgGet">
            <summary>Sets the shim of PrivateKey.get_Pkcs8EncryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.Pkcs8EncryptAlgSetString">
            <summary>Sets the shim of PrivateKey.set_Pkcs8EncryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of PrivateKey.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SavePemFileString">
            <summary>Sets the shim of PrivateKey.SavePemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SavePkcs1FileString">
            <summary>Sets the shim of PrivateKey.SavePkcs1File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SavePkcs8EncryptedFileStringString">
            <summary>Sets the shim of PrivateKey.SavePkcs8EncryptedFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SavePkcs8EncryptedPemFileStringString">
            <summary>Sets the shim of PrivateKey.SavePkcs8EncryptedPemFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SavePkcs8FileString">
            <summary>Sets the shim of PrivateKey.SavePkcs8File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SavePkcs8PemFileString">
            <summary>Sets the shim of PrivateKey.SavePkcs8PemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SaveRsaDerFileString">
            <summary>Sets the shim of PrivateKey.SaveRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SaveRsaPemFileString">
            <summary>Sets the shim of PrivateKey.SaveRsaPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.SaveXmlFileString">
            <summary>Sets the shim of PrivateKey.SaveXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.ToString01">
            <summary>Sets the shim of PrivateKey.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of PrivateKey.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of PrivateKey.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances.VersionGet">
            <summary>Sets the shim of PrivateKey.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances._PrivateKey">
            <summary>Sets the shim of PrivateKey.!PrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.AllInstances._PrivateKey01">
            <summary>Sets the shim of PrivateKey.~PrivateKey()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrivateKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrivateKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrivateKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.BitLengthGet">
            <summary>Sets the shim of PrivateKey.get_BitLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.Constructor">
            <summary>Sets the shim of PrivateKey.PrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.DebugLogFilePathGet">
            <summary>Sets the shim of PrivateKey.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.DebugLogFilePathSetString">
            <summary>Sets the shim of PrivateKey.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.Dispose">
            <summary>Sets the shim of PrivateKey.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.DisposeBoolean">
            <summary>Sets the shim of PrivateKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetJwk">
            <summary>Sets the shim of PrivateKey.GetJwk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetJwkThumbprintString">
            <summary>Sets the shim of PrivateKey.GetJwkThumbprint(String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs1">
            <summary>Sets the shim of PrivateKey.GetPkcs1()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs1ENCString">
            <summary>Sets the shim of PrivateKey.GetPkcs1ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs1Pem">
            <summary>Sets the shim of PrivateKey.GetPkcs1Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs8">
            <summary>Sets the shim of PrivateKey.GetPkcs8()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs8ENCString">
            <summary>Sets the shim of PrivateKey.GetPkcs8ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs8EncryptedENCStringString">
            <summary>Sets the shim of PrivateKey.GetPkcs8EncryptedENC(String encoding, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs8EncryptedPemString">
            <summary>Sets the shim of PrivateKey.GetPkcs8EncryptedPem(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs8EncryptedString">
            <summary>Sets the shim of PrivateKey.GetPkcs8Encrypted(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPkcs8Pem">
            <summary>Sets the shim of PrivateKey.GetPkcs8Pem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetPublicKey">
            <summary>Sets the shim of PrivateKey.GetPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetRsaDer">
            <summary>Sets the shim of PrivateKey.GetRsaDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetRsaPem">
            <summary>Sets the shim of PrivateKey.GetRsaPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.GetXml">
            <summary>Sets the shim of PrivateKey.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.KeyTypeGet">
            <summary>Sets the shim of PrivateKey.get_KeyType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LastErrorHtmlGet">
            <summary>Sets the shim of PrivateKey.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LastErrorTextGet">
            <summary>Sets the shim of PrivateKey.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LastErrorXmlGet">
            <summary>Sets the shim of PrivateKey.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LastMethodSuccessGet">
            <summary>Sets the shim of PrivateKey.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of PrivateKey.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadEncryptedPemFileStringString">
            <summary>Sets the shim of PrivateKey.LoadEncryptedPemFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadEncryptedPemStringString">
            <summary>Sets the shim of PrivateKey.LoadEncryptedPem(String pemStr, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadJwkString">
            <summary>Sets the shim of PrivateKey.LoadJwk(String jsonStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPemFileString">
            <summary>Sets the shim of PrivateKey.LoadPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPemString">
            <summary>Sets the shim of PrivateKey.LoadPem(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPkcs1ByteArray">
            <summary>Sets the shim of PrivateKey.LoadPkcs1(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPkcs1FileString">
            <summary>Sets the shim of PrivateKey.LoadPkcs1File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPkcs8ByteArray">
            <summary>Sets the shim of PrivateKey.LoadPkcs8(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPkcs8EncryptedByteArrayString">
            <summary>Sets the shim of PrivateKey.LoadPkcs8Encrypted(Byte[] data, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPkcs8EncryptedFileStringString">
            <summary>Sets the shim of PrivateKey.LoadPkcs8EncryptedFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPkcs8FileString">
            <summary>Sets the shim of PrivateKey.LoadPkcs8File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPvkByteArrayString">
            <summary>Sets the shim of PrivateKey.LoadPvk(Byte[] data, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadPvkFileStringString">
            <summary>Sets the shim of PrivateKey.LoadPvkFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadRsaDerByteArray">
            <summary>Sets the shim of PrivateKey.LoadRsaDer(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadRsaDerFileString">
            <summary>Sets the shim of PrivateKey.LoadRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadXmlFileString">
            <summary>Sets the shim of PrivateKey.LoadXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.LoadXmlString">
            <summary>Sets the shim of PrivateKey.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.Pkcs8EncryptAlgGet">
            <summary>Sets the shim of PrivateKey.get_Pkcs8EncryptAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.Pkcs8EncryptAlgSetString">
            <summary>Sets the shim of PrivateKey.set_Pkcs8EncryptAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SaveLastErrorString">
            <summary>Sets the shim of PrivateKey.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SavePemFileString">
            <summary>Sets the shim of PrivateKey.SavePemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SavePkcs1FileString">
            <summary>Sets the shim of PrivateKey.SavePkcs1File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SavePkcs8EncryptedFileStringString">
            <summary>Sets the shim of PrivateKey.SavePkcs8EncryptedFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SavePkcs8EncryptedPemFileStringString">
            <summary>Sets the shim of PrivateKey.SavePkcs8EncryptedPemFile(String password, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SavePkcs8FileString">
            <summary>Sets the shim of PrivateKey.SavePkcs8File(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SavePkcs8PemFileString">
            <summary>Sets the shim of PrivateKey.SavePkcs8PemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SaveRsaDerFileString">
            <summary>Sets the shim of PrivateKey.SaveRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SaveRsaPemFileString">
            <summary>Sets the shim of PrivateKey.SaveRsaPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.SaveXmlFileString">
            <summary>Sets the shim of PrivateKey.SaveXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.ToString">
            <summary>Sets the shim of PrivateKey.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.VerboseLoggingGet">
            <summary>Sets the shim of PrivateKey.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.VerboseLoggingSetBoolean">
            <summary>Sets the shim of PrivateKey.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey.VersionGet">
            <summary>Sets the shim of PrivateKey.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey._PrivateKey">
            <summary>Sets the shim of PrivateKey.!PrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrivateKey._PrivateKey01">
            <summary>Sets the shim of PrivateKey.~PrivateKey()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPrng">
            <summary>Shim type of Chilkat.Prng</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrng.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrng.#ctor(Chilkat.Prng)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AddEntropyBytesByteArray">
            <summary>Sets the shim of Prng.AddEntropyBytes(Byte[] entropy)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AddEntropyStringString">
            <summary>Sets the shim of Prng.AddEntropy(String entropy, String encoding)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPrng.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.AddEntropyBytesByteArray">
            <summary>Sets the shim of Prng.AddEntropyBytes(Byte[] entropy)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.AddEntropyStringString">
            <summary>Sets the shim of Prng.AddEntropy(String entropy, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Prng.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Prng.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.Dispose">
            <summary>Sets the shim of Prng.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Prng.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.ExportEntropy">
            <summary>Sets the shim of Prng.ExportEntropy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.FirebasePushId">
            <summary>Sets the shim of Prng.FirebasePushId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.GenRandomBdInt32BinData">
            <summary>Sets the shim of Prng.GenRandomBd(Int32 numBytes, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.GenRandomBytesInt32">
            <summary>Sets the shim of Prng.GenRandomBytes(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.GenRandomInt32String">
            <summary>Sets the shim of Prng.GenRandom(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.GetEntropyBytesInt32">
            <summary>Sets the shim of Prng.GetEntropyBytes(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.GetEntropyInt32String">
            <summary>Sets the shim of Prng.GetEntropy(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.ImportEntropyString">
            <summary>Sets the shim of Prng.ImportEntropy(String entropy)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Prng.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Prng.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Prng.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Prng.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Prng.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.PrngNameGet">
            <summary>Sets the shim of Prng.get_PrngName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.PrngNameSetString">
            <summary>Sets the shim of Prng.set_PrngName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.RandomIntInt32Int32">
            <summary>Sets the shim of Prng.RandomInt(Int32 low, Int32 high)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.RandomPasswordInt32BooleanBooleanStringString">
            <summary>Sets the shim of Prng.RandomPassword(Int32 length, Boolean mustIncludeDigit, Boolean upperAndLowercase, String mustHaveOneOf, String excludeChars)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.RandomStringInt32BooleanBooleanBoolean">
            <summary>Sets the shim of Prng.RandomString(Int32 length, Boolean bDigits, Boolean bLower, Boolean bUpper)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Prng.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.ToString01">
            <summary>Sets the shim of Prng.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Prng.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Prng.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances.VersionGet">
            <summary>Sets the shim of Prng.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances._Prng">
            <summary>Sets the shim of Prng.!Prng()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.AllInstances._Prng01">
            <summary>Sets the shim of Prng.~Prng()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrng.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrng.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPrng.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.Constructor">
            <summary>Sets the shim of Prng.Prng()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.DebugLogFilePathGet">
            <summary>Sets the shim of Prng.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.DebugLogFilePathSetString">
            <summary>Sets the shim of Prng.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.Dispose">
            <summary>Sets the shim of Prng.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.DisposeBoolean">
            <summary>Sets the shim of Prng.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.ExportEntropy">
            <summary>Sets the shim of Prng.ExportEntropy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.FirebasePushId">
            <summary>Sets the shim of Prng.FirebasePushId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.GenRandomBdInt32BinData">
            <summary>Sets the shim of Prng.GenRandomBd(Int32 numBytes, BinData bd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.GenRandomBytesInt32">
            <summary>Sets the shim of Prng.GenRandomBytes(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.GenRandomInt32String">
            <summary>Sets the shim of Prng.GenRandom(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.GetEntropyBytesInt32">
            <summary>Sets the shim of Prng.GetEntropyBytes(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.GetEntropyInt32String">
            <summary>Sets the shim of Prng.GetEntropy(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.ImportEntropyString">
            <summary>Sets the shim of Prng.ImportEntropy(String entropy)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.LastErrorHtmlGet">
            <summary>Sets the shim of Prng.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.LastErrorTextGet">
            <summary>Sets the shim of Prng.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.LastErrorXmlGet">
            <summary>Sets the shim of Prng.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.LastMethodSuccessGet">
            <summary>Sets the shim of Prng.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Prng.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.PrngNameGet">
            <summary>Sets the shim of Prng.get_PrngName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.PrngNameSetString">
            <summary>Sets the shim of Prng.set_PrngName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.RandomIntInt32Int32">
            <summary>Sets the shim of Prng.RandomInt(Int32 low, Int32 high)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.RandomPasswordInt32BooleanBooleanStringString">
            <summary>Sets the shim of Prng.RandomPassword(Int32 length, Boolean mustIncludeDigit, Boolean upperAndLowercase, String mustHaveOneOf, String excludeChars)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.RandomStringInt32BooleanBooleanBoolean">
            <summary>Sets the shim of Prng.RandomString(Int32 length, Boolean bDigits, Boolean bLower, Boolean bUpper)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.SaveLastErrorString">
            <summary>Sets the shim of Prng.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.ToString">
            <summary>Sets the shim of Prng.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.VerboseLoggingGet">
            <summary>Sets the shim of Prng.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Prng.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng.VersionGet">
            <summary>Sets the shim of Prng.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng._Prng">
            <summary>Sets the shim of Prng.!Prng()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPrng._Prng01">
            <summary>Sets the shim of Prng.~Prng()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimProgressInfoEventArgs">
            <summary>Shim type of Chilkat.ProgressInfoEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimProgressInfoEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimProgressInfoEventArgs.#ctor(Chilkat.ProgressInfoEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimProgressInfoEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of ProgressInfoEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ProgressInfoEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.AllInstances.NameGet">
            <summary>Sets the shim of ProgressInfoEventArgs.get_Name()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.AllInstances.ValueGet">
            <summary>Sets the shim of ProgressInfoEventArgs.get_Value()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.AllInstances._ProgressInfoEventArgs">
            <summary>Sets the shim of ProgressInfoEventArgs.~ProgressInfoEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimProgressInfoEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimProgressInfoEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimProgressInfoEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.Dispose">
            <summary>Sets the shim of ProgressInfoEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.DisposeBoolean">
            <summary>Sets the shim of ProgressInfoEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.NameGet">
            <summary>Sets the shim of ProgressInfoEventArgs.get_Name()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs.ValueGet">
            <summary>Sets the shim of ProgressInfoEventArgs.get_Value()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimProgressInfoEventArgs._ProgressInfoEventArgs">
            <summary>Sets the shim of ProgressInfoEventArgs.~ProgressInfoEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPublicKey">
            <summary>Shim type of Chilkat.PublicKey</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPublicKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPublicKey.#ctor(Chilkat.PublicKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimPublicKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of PublicKey.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of PublicKey.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.Dispose">
            <summary>Sets the shim of PublicKey.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of PublicKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetDerBoolean">
            <summary>Sets the shim of PublicKey.GetDer(Boolean preferPkcs1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetEncodedBooleanString">
            <summary>Sets the shim of PublicKey.GetEncoded(Boolean preferPkcs1, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetJwk">
            <summary>Sets the shim of PublicKey.GetJwk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetJwkThumbprintString">
            <summary>Sets the shim of PublicKey.GetJwkThumbprint(String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetOpenSslDer">
            <summary>Sets the shim of PublicKey.GetOpenSslDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetOpenSslPem">
            <summary>Sets the shim of PublicKey.GetOpenSslPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetPemBoolean">
            <summary>Sets the shim of PublicKey.GetPem(Boolean preferPkcs1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetPkcs1ENCString">
            <summary>Sets the shim of PublicKey.GetPkcs1ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetPkcs8ENCString">
            <summary>Sets the shim of PublicKey.GetPkcs8ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetRsaDer">
            <summary>Sets the shim of PublicKey.GetRsaDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.GetXml">
            <summary>Sets the shim of PublicKey.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.KeySizeGet">
            <summary>Sets the shim of PublicKey.get_KeySize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.KeyTypeGet">
            <summary>Sets the shim of PublicKey.get_KeyType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of PublicKey.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of PublicKey.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of PublicKey.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of PublicKey.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of PublicKey.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadBase64String">
            <summary>Sets the shim of PublicKey.LoadBase64(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadFromBinaryByteArray">
            <summary>Sets the shim of PublicKey.LoadFromBinary(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadFromFileString">
            <summary>Sets the shim of PublicKey.LoadFromFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadFromStringString">
            <summary>Sets the shim of PublicKey.LoadFromString(String keyString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadOpenSslDerByteArray">
            <summary>Sets the shim of PublicKey.LoadOpenSslDer(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadOpenSslDerFileString">
            <summary>Sets the shim of PublicKey.LoadOpenSslDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadOpenSslPemFileString">
            <summary>Sets the shim of PublicKey.LoadOpenSslPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadOpenSslPemString">
            <summary>Sets the shim of PublicKey.LoadOpenSslPem(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadPkcs1PemString">
            <summary>Sets the shim of PublicKey.LoadPkcs1Pem(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadRsaDerByteArray">
            <summary>Sets the shim of PublicKey.LoadRsaDer(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadRsaDerFileString">
            <summary>Sets the shim of PublicKey.LoadRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadXmlFileString">
            <summary>Sets the shim of PublicKey.LoadXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.LoadXmlString">
            <summary>Sets the shim of PublicKey.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SaveDerFileBooleanString">
            <summary>Sets the shim of PublicKey.SaveDerFile(Boolean preferPkcs1, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of PublicKey.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SaveOpenSslDerFileString">
            <summary>Sets the shim of PublicKey.SaveOpenSslDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SaveOpenSslPemFileString">
            <summary>Sets the shim of PublicKey.SaveOpenSslPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SavePemFileBooleanString">
            <summary>Sets the shim of PublicKey.SavePemFile(Boolean preferPkcs1, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SaveRsaDerFileString">
            <summary>Sets the shim of PublicKey.SaveRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.SaveXmlFileString">
            <summary>Sets the shim of PublicKey.SaveXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.ToString01">
            <summary>Sets the shim of PublicKey.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of PublicKey.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of PublicKey.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances.VersionGet">
            <summary>Sets the shim of PublicKey.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances._PublicKey">
            <summary>Sets the shim of PublicKey.!PublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.AllInstances._PublicKey01">
            <summary>Sets the shim of PublicKey.~PublicKey()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPublicKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPublicKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimPublicKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.Constructor">
            <summary>Sets the shim of PublicKey.PublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.DebugLogFilePathGet">
            <summary>Sets the shim of PublicKey.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.DebugLogFilePathSetString">
            <summary>Sets the shim of PublicKey.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.Dispose">
            <summary>Sets the shim of PublicKey.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.DisposeBoolean">
            <summary>Sets the shim of PublicKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetDerBoolean">
            <summary>Sets the shim of PublicKey.GetDer(Boolean preferPkcs1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetEncodedBooleanString">
            <summary>Sets the shim of PublicKey.GetEncoded(Boolean preferPkcs1, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetJwk">
            <summary>Sets the shim of PublicKey.GetJwk()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetJwkThumbprintString">
            <summary>Sets the shim of PublicKey.GetJwkThumbprint(String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetOpenSslDer">
            <summary>Sets the shim of PublicKey.GetOpenSslDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetOpenSslPem">
            <summary>Sets the shim of PublicKey.GetOpenSslPem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetPemBoolean">
            <summary>Sets the shim of PublicKey.GetPem(Boolean preferPkcs1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetPkcs1ENCString">
            <summary>Sets the shim of PublicKey.GetPkcs1ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetPkcs8ENCString">
            <summary>Sets the shim of PublicKey.GetPkcs8ENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetRsaDer">
            <summary>Sets the shim of PublicKey.GetRsaDer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.GetXml">
            <summary>Sets the shim of PublicKey.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.KeySizeGet">
            <summary>Sets the shim of PublicKey.get_KeySize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.KeyTypeGet">
            <summary>Sets the shim of PublicKey.get_KeyType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LastErrorHtmlGet">
            <summary>Sets the shim of PublicKey.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LastErrorTextGet">
            <summary>Sets the shim of PublicKey.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LastErrorXmlGet">
            <summary>Sets the shim of PublicKey.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LastMethodSuccessGet">
            <summary>Sets the shim of PublicKey.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of PublicKey.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadBase64String">
            <summary>Sets the shim of PublicKey.LoadBase64(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadFromBinaryByteArray">
            <summary>Sets the shim of PublicKey.LoadFromBinary(Byte[] keyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadFromFileString">
            <summary>Sets the shim of PublicKey.LoadFromFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadFromStringString">
            <summary>Sets the shim of PublicKey.LoadFromString(String keyString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadOpenSslDerByteArray">
            <summary>Sets the shim of PublicKey.LoadOpenSslDer(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadOpenSslDerFileString">
            <summary>Sets the shim of PublicKey.LoadOpenSslDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadOpenSslPemFileString">
            <summary>Sets the shim of PublicKey.LoadOpenSslPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadOpenSslPemString">
            <summary>Sets the shim of PublicKey.LoadOpenSslPem(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadPkcs1PemString">
            <summary>Sets the shim of PublicKey.LoadPkcs1Pem(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadRsaDerByteArray">
            <summary>Sets the shim of PublicKey.LoadRsaDer(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadRsaDerFileString">
            <summary>Sets the shim of PublicKey.LoadRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadXmlFileString">
            <summary>Sets the shim of PublicKey.LoadXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.LoadXmlString">
            <summary>Sets the shim of PublicKey.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SaveDerFileBooleanString">
            <summary>Sets the shim of PublicKey.SaveDerFile(Boolean preferPkcs1, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SaveLastErrorString">
            <summary>Sets the shim of PublicKey.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SaveOpenSslDerFileString">
            <summary>Sets the shim of PublicKey.SaveOpenSslDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SaveOpenSslPemFileString">
            <summary>Sets the shim of PublicKey.SaveOpenSslPemFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SavePemFileBooleanString">
            <summary>Sets the shim of PublicKey.SavePemFile(Boolean preferPkcs1, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SaveRsaDerFileString">
            <summary>Sets the shim of PublicKey.SaveRsaDerFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.SaveXmlFileString">
            <summary>Sets the shim of PublicKey.SaveXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.ToString">
            <summary>Sets the shim of PublicKey.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.VerboseLoggingGet">
            <summary>Sets the shim of PublicKey.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.VerboseLoggingSetBoolean">
            <summary>Sets the shim of PublicKey.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey.VersionGet">
            <summary>Sets the shim of PublicKey.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey._PublicKey">
            <summary>Sets the shim of PublicKey.!PublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimPublicKey._PublicKey01">
            <summary>Sets the shim of PublicKey.~PublicKey()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimRest">
            <summary>Shim type of Chilkat.Rest</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRest.#ctor(Chilkat.Rest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AddHeaderStringString">
            <summary>Sets the shim of Rest.AddHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AddMwsSignatureStringStringStringString">
            <summary>Sets the shim of Rest.AddMwsSignature(String httpVerb, String uriPath, String domain, String mwsSecretKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AddPathParamStringString">
            <summary>Sets the shim of Rest.AddPathParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AddQueryParamSbStringStringBuilder">
            <summary>Sets the shim of Rest.AddQueryParamSb(String name, StringBuilder value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AddQueryParamStringString">
            <summary>Sets the shim of Rest.AddQueryParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AddQueryParamsString">
            <summary>Sets the shim of Rest.AddQueryParams(String queryString)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimRest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AddHeaderStringString">
            <summary>Sets the shim of Rest.AddHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AddMwsSignatureStringStringStringString">
            <summary>Sets the shim of Rest.AddMwsSignature(String httpVerb, String uriPath, String domain, String mwsSecretKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AddPathParamStringString">
            <summary>Sets the shim of Rest.AddPathParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AddQueryParamSbStringStringBuilder">
            <summary>Sets the shim of Rest.AddQueryParamSb(String name, StringBuilder value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AddQueryParamStringString">
            <summary>Sets the shim of Rest.AddQueryParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AddQueryParamsString">
            <summary>Sets the shim of Rest.AddQueryParams(String queryString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AllowHeaderFoldingGet">
            <summary>Sets the shim of Rest.get_AllowHeaderFolding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AllowHeaderFoldingSetBoolean">
            <summary>Sets the shim of Rest.set_AllowHeaderFolding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AllowHeaderQBGet">
            <summary>Sets the shim of Rest.get_AllowHeaderQB()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AllowHeaderQBSetBoolean">
            <summary>Sets the shim of Rest.set_AllowHeaderQB(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AuthorizationGet">
            <summary>Sets the shim of Rest.get_Authorization()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.AuthorizationSetString">
            <summary>Sets the shim of Rest.set_Authorization(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ClearAllHeaders">
            <summary>Sets the shim of Rest.ClearAllHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ClearAllParts">
            <summary>Sets the shim of Rest.ClearAllParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ClearAllPathParams">
            <summary>Sets the shim of Rest.ClearAllPathParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ClearAllQueryParams">
            <summary>Sets the shim of Rest.ClearAllQueryParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ClearAuth">
            <summary>Sets the shim of Rest.ClearAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ClearResponseBodyStream">
            <summary>Sets the shim of Rest.ClearResponseBodyStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ConnectAsyncStringInt32BooleanBoolean">
            <summary>Sets the shim of Rest.ConnectAsync(String hostname, Int32 port, Boolean tls, Boolean autoReconnect)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ConnectFailReasonGet">
            <summary>Sets the shim of Rest.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ConnectStringInt32BooleanBoolean">
            <summary>Sets the shim of Rest.Connect(String hostname, Int32 port, Boolean tls, Boolean autoReconnect)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Rest.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Rest.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.DisconnectAsyncInt32">
            <summary>Sets the shim of Rest.DisconnectAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.DisconnectInt32">
            <summary>Sets the shim of Rest.Disconnect(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.Dispose">
            <summary>Sets the shim of Rest.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Rest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Rest.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Rest.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rest.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rest.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rest.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rest.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rest.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Rest.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestBdAsyncStringStringBinDataStringBuilder">
            <summary>Sets the shim of Rest.FullRequestBdAsync(String httpVerb, String uriPath, BinData binData, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestBdStringStringBinDataStringBuilder">
            <summary>Sets the shim of Rest.FullRequestBd(String httpVerb, String uriPath, BinData binData, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestBinaryAsyncStringStringByteArray">
            <summary>Sets the shim of Rest.FullRequestBinaryAsync(String httpVerb, String uriPath, Byte[] bodyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestBinaryStringStringByteArray">
            <summary>Sets the shim of Rest.FullRequestBinary(String httpVerb, String uriPath, Byte[] bodyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestFormUrlEncodedAsyncStringString">
            <summary>Sets the shim of Rest.FullRequestFormUrlEncodedAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestFormUrlEncodedStringString">
            <summary>Sets the shim of Rest.FullRequestFormUrlEncoded(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestMultipartAsyncStringString">
            <summary>Sets the shim of Rest.FullRequestMultipartAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestMultipartStringString">
            <summary>Sets the shim of Rest.FullRequestMultipart(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestNoBodyAsyncStringString">
            <summary>Sets the shim of Rest.FullRequestNoBodyAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestNoBodyBdAsyncStringStringBinData">
            <summary>Sets the shim of Rest.FullRequestNoBodyBdAsync(String httpVerb, String uriPath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestNoBodyBdStringStringBinData">
            <summary>Sets the shim of Rest.FullRequestNoBodyBd(String httpVerb, String uriPath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestNoBodySbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Rest.FullRequestNoBodySbAsync(String httpVerb, String uriPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestNoBodySbStringStringStringBuilder">
            <summary>Sets the shim of Rest.FullRequestNoBodySb(String httpVerb, String uriPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestNoBodyStringString">
            <summary>Sets the shim of Rest.FullRequestNoBody(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestSbAsyncStringStringStringBuilderStringBuilder">
            <summary>Sets the shim of Rest.FullRequestSbAsync(String httpVerb, String uriPath, StringBuilder requestBody, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestSbStringStringStringBuilderStringBuilder">
            <summary>Sets the shim of Rest.FullRequestSb(String httpVerb, String uriPath, StringBuilder requestBody, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestStreamAsyncStringStringStream">
            <summary>Sets the shim of Rest.FullRequestStreamAsync(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestStreamStringStringStream">
            <summary>Sets the shim of Rest.FullRequestStream(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestStringAsyncStringStringString">
            <summary>Sets the shim of Rest.FullRequestStringAsync(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.FullRequestStringStringStringString">
            <summary>Sets the shim of Rest.FullRequestString(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Rest.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Rest.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.HostGet">
            <summary>Sets the shim of Rest.get_Host()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.HostSetString">
            <summary>Sets the shim of Rest.set_Host(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of Rest.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Rest.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Rest.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Rest.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Rest.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Rest.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Rest.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastRequestHeaderGet">
            <summary>Sets the shim of Rest.get_LastRequestHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.LastRequestStartLineGet">
            <summary>Sets the shim of Rest.get_LastRequestStartLine()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.NumResponseHeadersGet">
            <summary>Sets the shim of Rest.get_NumResponseHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnAbortCheckAddRestAbortCheckEventHandler">
            <summary>Sets the shim of Rest.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rest.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnAbortCheckRemoveRestAbortCheckEventHandler">
            <summary>Sets the shim of Rest.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnBinaryDataAddRestBinaryDataEventHandler">
            <summary>Sets the shim of Rest.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rest.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnBinaryDataRemoveRestBinaryDataEventHandler">
            <summary>Sets the shim of Rest.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnPercentDoneAddRestPercentDoneEventHandler">
            <summary>Sets the shim of Rest.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rest.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnPercentDoneRemoveRestPercentDoneEventHandler">
            <summary>Sets the shim of Rest.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnProgressInfoAddRestProgressInfoEventHandler">
            <summary>Sets the shim of Rest.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rest.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnProgressInfoRemoveRestProgressInfoEventHandler">
            <summary>Sets the shim of Rest.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnTaskCompletedAddRestTaskCompletedEventHandler">
            <summary>Sets the shim of Rest.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rest.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnTaskCompletedRemoveRestTaskCompletedEventHandler">
            <summary>Sets the shim of Rest.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnTextDataAddRestTextDataEventHandler">
            <summary>Sets the shim of Rest.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Rest.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.OnTextDataRemoveRestTextDataEventHandler">
            <summary>Sets the shim of Rest.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.PartSelectorGet">
            <summary>Sets the shim of Rest.get_PartSelector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.PartSelectorSetString">
            <summary>Sets the shim of Rest.set_PartSelector(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.PercentDoneOnSendGet">
            <summary>Sets the shim of Rest.get_PercentDoneOnSend()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.PercentDoneOnSendSetBoolean">
            <summary>Sets the shim of Rest.set_PercentDoneOnSend(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBdAsyncBinData">
            <summary>Sets the shim of Rest.ReadRespBdAsync(BinData responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBdBinData">
            <summary>Sets the shim of Rest.ReadRespBd(BinData responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBodyBinary">
            <summary>Sets the shim of Rest.ReadRespBodyBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBodyBinaryAsync">
            <summary>Sets the shim of Rest.ReadRespBodyBinaryAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBodyStreamAsyncStreamBoolean">
            <summary>Sets the shim of Rest.ReadRespBodyStreamAsync(Stream stream, Boolean autoSetStreamCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBodyStreamStreamBoolean">
            <summary>Sets the shim of Rest.ReadRespBodyStream(Stream stream, Boolean autoSetStreamCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBodyString">
            <summary>Sets the shim of Rest.ReadRespBodyString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespBodyStringAsync">
            <summary>Sets the shim of Rest.ReadRespBodyStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespSbAsyncStringBuilder">
            <summary>Sets the shim of Rest.ReadRespSbAsync(StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadRespSbStringBuilder">
            <summary>Sets the shim of Rest.ReadRespSb(StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadResponseHeader">
            <summary>Sets the shim of Rest.ReadResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ReadResponseHeaderAsync">
            <summary>Sets the shim of Rest.ReadResponseHeaderAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.RedirectUrl">
            <summary>Sets the shim of Rest.RedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.RemoveHeaderString">
            <summary>Sets the shim of Rest.RemoveHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.RemoveQueryParamString">
            <summary>Sets the shim of Rest.RemoveQueryParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ResponseHdrByNameString">
            <summary>Sets the shim of Rest.ResponseHdrByName(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ResponseHdrNameInt32">
            <summary>Sets the shim of Rest.ResponseHdrName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ResponseHdrValueInt32">
            <summary>Sets the shim of Rest.ResponseHdrValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ResponseHeaderGet">
            <summary>Sets the shim of Rest.get_ResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ResponseStatusCodeGet">
            <summary>Sets the shim of Rest.get_ResponseStatusCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ResponseStatusTextGet">
            <summary>Sets the shim of Rest.get_ResponseStatusText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Rest.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqBdAsyncStringStringBinData">
            <summary>Sets the shim of Rest.SendReqBdAsync(String httpVerb, String uriPath, BinData body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqBdStringStringBinData">
            <summary>Sets the shim of Rest.SendReqBd(String httpVerb, String uriPath, BinData body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqBinaryBodyAsyncStringStringByteArray">
            <summary>Sets the shim of Rest.SendReqBinaryBodyAsync(String httpVerb, String uriPath, Byte[] body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqBinaryBodyStringStringByteArray">
            <summary>Sets the shim of Rest.SendReqBinaryBody(String httpVerb, String uriPath, Byte[] body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqFormUrlEncodedAsyncStringString">
            <summary>Sets the shim of Rest.SendReqFormUrlEncodedAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqFormUrlEncodedStringString">
            <summary>Sets the shim of Rest.SendReqFormUrlEncoded(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqMultipartAsyncStringString">
            <summary>Sets the shim of Rest.SendReqMultipartAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqMultipartStringString">
            <summary>Sets the shim of Rest.SendReqMultipart(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqNoBodyAsyncStringString">
            <summary>Sets the shim of Rest.SendReqNoBodyAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqNoBodyStringString">
            <summary>Sets the shim of Rest.SendReqNoBody(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Rest.SendReqSbAsync(String httpVerb, String uriPath, StringBuilder bodySb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqSbStringStringStringBuilder">
            <summary>Sets the shim of Rest.SendReqSb(String httpVerb, String uriPath, StringBuilder bodySb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqStreamBodyAsyncStringStringStream">
            <summary>Sets the shim of Rest.SendReqStreamBodyAsync(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqStreamBodyStringStringStream">
            <summary>Sets the shim of Rest.SendReqStreamBody(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqStringBodyAsyncStringStringString">
            <summary>Sets the shim of Rest.SendReqStringBodyAsync(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SendReqStringBodyStringStringString">
            <summary>Sets the shim of Rest.SendReqStringBody(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthAwsAuthAws">
            <summary>Sets the shim of Rest.SetAuthAws(AuthAws authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthAzureADAuthAzureAD">
            <summary>Sets the shim of Rest.SetAuthAzureAD(AuthAzureAD authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthAzureSasAuthAzureSAS">
            <summary>Sets the shim of Rest.SetAuthAzureSas(AuthAzureSAS authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthAzureStorageAuthAzureStorage">
            <summary>Sets the shim of Rest.SetAuthAzureStorage(AuthAzureStorage authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthBasicStringString">
            <summary>Sets the shim of Rest.SetAuthBasic(String username, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthGoogleAuthGoogle">
            <summary>Sets the shim of Rest.SetAuthGoogle(AuthGoogle authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthOAuth1OAuth1Boolean">
            <summary>Sets the shim of Rest.SetAuthOAuth1(OAuth1 authProvider, Boolean useQueryParams)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetAuthOAuth2OAuth2">
            <summary>Sets the shim of Rest.SetAuthOAuth2(OAuth2 authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetMultipartBodyBdBinData">
            <summary>Sets the shim of Rest.SetMultipartBodyBd(BinData bodyData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetMultipartBodyBinaryByteArray">
            <summary>Sets the shim of Rest.SetMultipartBodyBinary(Byte[] bodyData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetMultipartBodySbStringBuilder">
            <summary>Sets the shim of Rest.SetMultipartBodySb(StringBuilder bodySb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetMultipartBodyStreamStream">
            <summary>Sets the shim of Rest.SetMultipartBodyStream(Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetMultipartBodyStringString">
            <summary>Sets the shim of Rest.SetMultipartBodyString(String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.SetResponseBodyStreamInt32BooleanStream">
            <summary>Sets the shim of Rest.SetResponseBodyStream(Int32 expectedStatus, Boolean autoSetStreamCharset, Stream responseStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.StreamNonChunkedGet">
            <summary>Sets the shim of Rest.get_StreamNonChunked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.StreamNonChunkedSetBoolean">
            <summary>Sets the shim of Rest.set_StreamNonChunked(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.ToString01">
            <summary>Sets the shim of Rest.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.UseConnectionSocketBoolean">
            <summary>Sets the shim of Rest.UseConnection(Socket connection, Boolean autoReconnect)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Rest.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Rest.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances.VersionGet">
            <summary>Sets the shim of Rest.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances._Rest">
            <summary>Sets the shim of Rest.!Rest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllInstances._Rest01">
            <summary>Sets the shim of Rest.~Rest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllowHeaderFoldingGet">
            <summary>Sets the shim of Rest.get_AllowHeaderFolding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllowHeaderFoldingSetBoolean">
            <summary>Sets the shim of Rest.set_AllowHeaderFolding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllowHeaderQBGet">
            <summary>Sets the shim of Rest.get_AllowHeaderQB()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AllowHeaderQBSetBoolean">
            <summary>Sets the shim of Rest.set_AllowHeaderQB(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AuthorizationGet">
            <summary>Sets the shim of Rest.get_Authorization()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.AuthorizationSetString">
            <summary>Sets the shim of Rest.set_Authorization(String propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRest.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ClearAllHeaders">
            <summary>Sets the shim of Rest.ClearAllHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ClearAllParts">
            <summary>Sets the shim of Rest.ClearAllParts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ClearAllPathParams">
            <summary>Sets the shim of Rest.ClearAllPathParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ClearAllQueryParams">
            <summary>Sets the shim of Rest.ClearAllQueryParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ClearAuth">
            <summary>Sets the shim of Rest.ClearAuth()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ClearResponseBodyStream">
            <summary>Sets the shim of Rest.ClearResponseBodyStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ConnectAsyncStringInt32BooleanBoolean">
            <summary>Sets the shim of Rest.ConnectAsync(String hostname, Int32 port, Boolean tls, Boolean autoReconnect)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ConnectFailReasonGet">
            <summary>Sets the shim of Rest.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ConnectStringInt32BooleanBoolean">
            <summary>Sets the shim of Rest.Connect(String hostname, Int32 port, Boolean tls, Boolean autoReconnect)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.Constructor">
            <summary>Sets the shim of Rest.Rest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.DebugLogFilePathGet">
            <summary>Sets the shim of Rest.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.DebugLogFilePathSetString">
            <summary>Sets the shim of Rest.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.DisconnectAsyncInt32">
            <summary>Sets the shim of Rest.DisconnectAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.DisconnectInt32">
            <summary>Sets the shim of Rest.Disconnect(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.Dispose">
            <summary>Sets the shim of Rest.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.DisposeBoolean">
            <summary>Sets the shim of Rest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.EnableEventsGet">
            <summary>Sets the shim of Rest.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.EnableEventsSetBoolean">
            <summary>Sets the shim of Rest.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rest.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rest.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rest.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rest.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rest.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Rest.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestBdAsyncStringStringBinDataStringBuilder">
            <summary>Sets the shim of Rest.FullRequestBdAsync(String httpVerb, String uriPath, BinData binData, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestBdStringStringBinDataStringBuilder">
            <summary>Sets the shim of Rest.FullRequestBd(String httpVerb, String uriPath, BinData binData, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestBinaryAsyncStringStringByteArray">
            <summary>Sets the shim of Rest.FullRequestBinaryAsync(String httpVerb, String uriPath, Byte[] bodyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestBinaryStringStringByteArray">
            <summary>Sets the shim of Rest.FullRequestBinary(String httpVerb, String uriPath, Byte[] bodyBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestFormUrlEncodedAsyncStringString">
            <summary>Sets the shim of Rest.FullRequestFormUrlEncodedAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestFormUrlEncodedStringString">
            <summary>Sets the shim of Rest.FullRequestFormUrlEncoded(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestMultipartAsyncStringString">
            <summary>Sets the shim of Rest.FullRequestMultipartAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestMultipartStringString">
            <summary>Sets the shim of Rest.FullRequestMultipart(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestNoBodyAsyncStringString">
            <summary>Sets the shim of Rest.FullRequestNoBodyAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestNoBodyBdAsyncStringStringBinData">
            <summary>Sets the shim of Rest.FullRequestNoBodyBdAsync(String httpVerb, String uriPath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestNoBodyBdStringStringBinData">
            <summary>Sets the shim of Rest.FullRequestNoBodyBd(String httpVerb, String uriPath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestNoBodySbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Rest.FullRequestNoBodySbAsync(String httpVerb, String uriPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestNoBodySbStringStringStringBuilder">
            <summary>Sets the shim of Rest.FullRequestNoBodySb(String httpVerb, String uriPath, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestNoBodyStringString">
            <summary>Sets the shim of Rest.FullRequestNoBody(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestSbAsyncStringStringStringBuilderStringBuilder">
            <summary>Sets the shim of Rest.FullRequestSbAsync(String httpVerb, String uriPath, StringBuilder requestBody, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestSbStringStringStringBuilderStringBuilder">
            <summary>Sets the shim of Rest.FullRequestSb(String httpVerb, String uriPath, StringBuilder requestBody, StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestStreamAsyncStringStringStream">
            <summary>Sets the shim of Rest.FullRequestStreamAsync(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestStreamStringStringStream">
            <summary>Sets the shim of Rest.FullRequestStream(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestStringAsyncStringStringString">
            <summary>Sets the shim of Rest.FullRequestStringAsync(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.FullRequestStringStringStringString">
            <summary>Sets the shim of Rest.FullRequestString(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.HeartbeatMsGet">
            <summary>Sets the shim of Rest.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.HeartbeatMsSetInt32">
            <summary>Sets the shim of Rest.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.HostGet">
            <summary>Sets the shim of Rest.get_Host()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.HostSetString">
            <summary>Sets the shim of Rest.set_Host(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.IdleTimeoutMsGet">
            <summary>Sets the shim of Rest.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Rest.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastErrorHtmlGet">
            <summary>Sets the shim of Rest.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastErrorTextGet">
            <summary>Sets the shim of Rest.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastErrorXmlGet">
            <summary>Sets the shim of Rest.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastMethodSuccessGet">
            <summary>Sets the shim of Rest.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Rest.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastRequestHeaderGet">
            <summary>Sets the shim of Rest.get_LastRequestHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.LastRequestStartLineGet">
            <summary>Sets the shim of Rest.get_LastRequestStartLine()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.NumResponseHeadersGet">
            <summary>Sets the shim of Rest.get_NumResponseHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnAbortCheckAddRestAbortCheckEventHandler">
            <summary>Sets the shim of Rest.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rest.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnAbortCheckRemoveRestAbortCheckEventHandler">
            <summary>Sets the shim of Rest.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnBinaryDataAddRestBinaryDataEventHandler">
            <summary>Sets the shim of Rest.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rest.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnBinaryDataRemoveRestBinaryDataEventHandler">
            <summary>Sets the shim of Rest.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnPercentDoneAddRestPercentDoneEventHandler">
            <summary>Sets the shim of Rest.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rest.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnPercentDoneRemoveRestPercentDoneEventHandler">
            <summary>Sets the shim of Rest.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnProgressInfoAddRestProgressInfoEventHandler">
            <summary>Sets the shim of Rest.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rest.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnProgressInfoRemoveRestProgressInfoEventHandler">
            <summary>Sets the shim of Rest.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnTaskCompletedAddRestTaskCompletedEventHandler">
            <summary>Sets the shim of Rest.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rest.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnTaskCompletedRemoveRestTaskCompletedEventHandler">
            <summary>Sets the shim of Rest.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnTextDataAddRestTextDataEventHandler">
            <summary>Sets the shim of Rest.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Rest.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.OnTextDataRemoveRestTextDataEventHandler">
            <summary>Sets the shim of Rest.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.PartSelectorGet">
            <summary>Sets the shim of Rest.get_PartSelector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.PartSelectorSetString">
            <summary>Sets the shim of Rest.set_PartSelector(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.PercentDoneOnSendGet">
            <summary>Sets the shim of Rest.get_PercentDoneOnSend()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.PercentDoneOnSendSetBoolean">
            <summary>Sets the shim of Rest.set_PercentDoneOnSend(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBdAsyncBinData">
            <summary>Sets the shim of Rest.ReadRespBdAsync(BinData responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBdBinData">
            <summary>Sets the shim of Rest.ReadRespBd(BinData responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBodyBinary">
            <summary>Sets the shim of Rest.ReadRespBodyBinary()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBodyBinaryAsync">
            <summary>Sets the shim of Rest.ReadRespBodyBinaryAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBodyStreamAsyncStreamBoolean">
            <summary>Sets the shim of Rest.ReadRespBodyStreamAsync(Stream stream, Boolean autoSetStreamCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBodyStreamStreamBoolean">
            <summary>Sets the shim of Rest.ReadRespBodyStream(Stream stream, Boolean autoSetStreamCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBodyString">
            <summary>Sets the shim of Rest.ReadRespBodyString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespBodyStringAsync">
            <summary>Sets the shim of Rest.ReadRespBodyStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespSbAsyncStringBuilder">
            <summary>Sets the shim of Rest.ReadRespSbAsync(StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadRespSbStringBuilder">
            <summary>Sets the shim of Rest.ReadRespSb(StringBuilder responseBody)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadResponseHeader">
            <summary>Sets the shim of Rest.ReadResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ReadResponseHeaderAsync">
            <summary>Sets the shim of Rest.ReadResponseHeaderAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.RedirectUrl">
            <summary>Sets the shim of Rest.RedirectUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.RemoveHeaderString">
            <summary>Sets the shim of Rest.RemoveHeader(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.RemoveQueryParamString">
            <summary>Sets the shim of Rest.RemoveQueryParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ResponseHdrByNameString">
            <summary>Sets the shim of Rest.ResponseHdrByName(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ResponseHdrNameInt32">
            <summary>Sets the shim of Rest.ResponseHdrName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ResponseHdrValueInt32">
            <summary>Sets the shim of Rest.ResponseHdrValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ResponseHeaderGet">
            <summary>Sets the shim of Rest.get_ResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ResponseStatusCodeGet">
            <summary>Sets the shim of Rest.get_ResponseStatusCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ResponseStatusTextGet">
            <summary>Sets the shim of Rest.get_ResponseStatusText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SaveLastErrorString">
            <summary>Sets the shim of Rest.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqBdAsyncStringStringBinData">
            <summary>Sets the shim of Rest.SendReqBdAsync(String httpVerb, String uriPath, BinData body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqBdStringStringBinData">
            <summary>Sets the shim of Rest.SendReqBd(String httpVerb, String uriPath, BinData body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqBinaryBodyAsyncStringStringByteArray">
            <summary>Sets the shim of Rest.SendReqBinaryBodyAsync(String httpVerb, String uriPath, Byte[] body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqBinaryBodyStringStringByteArray">
            <summary>Sets the shim of Rest.SendReqBinaryBody(String httpVerb, String uriPath, Byte[] body)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqFormUrlEncodedAsyncStringString">
            <summary>Sets the shim of Rest.SendReqFormUrlEncodedAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqFormUrlEncodedStringString">
            <summary>Sets the shim of Rest.SendReqFormUrlEncoded(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqMultipartAsyncStringString">
            <summary>Sets the shim of Rest.SendReqMultipartAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqMultipartStringString">
            <summary>Sets the shim of Rest.SendReqMultipart(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqNoBodyAsyncStringString">
            <summary>Sets the shim of Rest.SendReqNoBodyAsync(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqNoBodyStringString">
            <summary>Sets the shim of Rest.SendReqNoBody(String httpVerb, String uriPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of Rest.SendReqSbAsync(String httpVerb, String uriPath, StringBuilder bodySb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqSbStringStringStringBuilder">
            <summary>Sets the shim of Rest.SendReqSb(String httpVerb, String uriPath, StringBuilder bodySb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqStreamBodyAsyncStringStringStream">
            <summary>Sets the shim of Rest.SendReqStreamBodyAsync(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqStreamBodyStringStringStream">
            <summary>Sets the shim of Rest.SendReqStreamBody(String httpVerb, String uriPath, Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqStringBodyAsyncStringStringString">
            <summary>Sets the shim of Rest.SendReqStringBodyAsync(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SendReqStringBodyStringStringString">
            <summary>Sets the shim of Rest.SendReqStringBody(String httpVerb, String uriPath, String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthAwsAuthAws">
            <summary>Sets the shim of Rest.SetAuthAws(AuthAws authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthAzureADAuthAzureAD">
            <summary>Sets the shim of Rest.SetAuthAzureAD(AuthAzureAD authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthAzureSasAuthAzureSAS">
            <summary>Sets the shim of Rest.SetAuthAzureSas(AuthAzureSAS authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthAzureStorageAuthAzureStorage">
            <summary>Sets the shim of Rest.SetAuthAzureStorage(AuthAzureStorage authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthBasicStringString">
            <summary>Sets the shim of Rest.SetAuthBasic(String username, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthGoogleAuthGoogle">
            <summary>Sets the shim of Rest.SetAuthGoogle(AuthGoogle authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthOAuth1OAuth1Boolean">
            <summary>Sets the shim of Rest.SetAuthOAuth1(OAuth1 authProvider, Boolean useQueryParams)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetAuthOAuth2OAuth2">
            <summary>Sets the shim of Rest.SetAuthOAuth2(OAuth2 authProvider)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetMultipartBodyBdBinData">
            <summary>Sets the shim of Rest.SetMultipartBodyBd(BinData bodyData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetMultipartBodyBinaryByteArray">
            <summary>Sets the shim of Rest.SetMultipartBodyBinary(Byte[] bodyData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetMultipartBodySbStringBuilder">
            <summary>Sets the shim of Rest.SetMultipartBodySb(StringBuilder bodySb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetMultipartBodyStreamStream">
            <summary>Sets the shim of Rest.SetMultipartBodyStream(Stream stream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetMultipartBodyStringString">
            <summary>Sets the shim of Rest.SetMultipartBodyString(String bodyText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.SetResponseBodyStreamInt32BooleanStream">
            <summary>Sets the shim of Rest.SetResponseBodyStream(Int32 expectedStatus, Boolean autoSetStreamCharset, Stream responseStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.StreamNonChunkedGet">
            <summary>Sets the shim of Rest.get_StreamNonChunked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.StreamNonChunkedSetBoolean">
            <summary>Sets the shim of Rest.set_StreamNonChunked(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.ToString">
            <summary>Sets the shim of Rest.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.UseConnectionSocketBoolean">
            <summary>Sets the shim of Rest.UseConnection(Socket connection, Boolean autoReconnect)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.VerboseLoggingGet">
            <summary>Sets the shim of Rest.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Rest.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest.VersionGet">
            <summary>Sets the shim of Rest.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest._Rest">
            <summary>Sets the shim of Rest.!Rest()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRest._Rest01">
            <summary>Sets the shim of Rest.~Rest()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimRsa">
            <summary>Shim type of Chilkat.Rsa</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRsa.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRsa.#ctor(Chilkat.Rsa)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimRsa.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.CharsetGet">
            <summary>Sets the shim of Rsa.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.CharsetSetString">
            <summary>Sets the shim of Rsa.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Rsa.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Rsa.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DecryptBytesByteArrayBoolean">
            <summary>Sets the shim of Rsa.DecryptBytes(Byte[] inData, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DecryptBytesENCStringBoolean">
            <summary>Sets the shim of Rsa.DecryptBytesENC(String str, Boolean bUsePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DecryptStringByteArrayBoolean">
            <summary>Sets the shim of Rsa.DecryptString(Byte[] binarySig, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DecryptStringENCStringBoolean">
            <summary>Sets the shim of Rsa.DecryptStringENC(String encodedSig, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.Dispose">
            <summary>Sets the shim of Rsa.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Rsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.EncodingModeGet">
            <summary>Sets the shim of Rsa.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.EncodingModeSetString">
            <summary>Sets the shim of Rsa.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.EncryptBytesByteArrayBoolean">
            <summary>Sets the shim of Rsa.EncryptBytes(Byte[] binaryData, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.EncryptBytesENCByteArrayBoolean">
            <summary>Sets the shim of Rsa.EncryptBytesENC(Byte[] data, Boolean bUsePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.EncryptStringENCStringBoolean">
            <summary>Sets the shim of Rsa.EncryptStringENC(String str, Boolean bUsePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.EncryptStringStringBoolean">
            <summary>Sets the shim of Rsa.EncryptString(String stringToEncrypt, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ExportPrivateKey">
            <summary>Sets the shim of Rsa.ExportPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ExportPrivateKeyObj">
            <summary>Sets the shim of Rsa.ExportPrivateKeyObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ExportPublicKey">
            <summary>Sets the shim of Rsa.ExportPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ExportPublicKeyObj">
            <summary>Sets the shim of Rsa.ExportPublicKeyObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.GenerateKeyInt32">
            <summary>Sets the shim of Rsa.GenerateKey(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ImportPrivateKeyObjPrivateKey">
            <summary>Sets the shim of Rsa.ImportPrivateKeyObj(PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ImportPrivateKeyString">
            <summary>Sets the shim of Rsa.ImportPrivateKey(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ImportPublicKeyObjPublicKey">
            <summary>Sets the shim of Rsa.ImportPublicKeyObj(PublicKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ImportPublicKeyString">
            <summary>Sets the shim of Rsa.ImportPublicKey(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Rsa.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Rsa.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Rsa.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Rsa.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Rsa.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LittleEndianGet">
            <summary>Sets the shim of Rsa.get_LittleEndian()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.LittleEndianSetBoolean">
            <summary>Sets the shim of Rsa.set_LittleEndian(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.NoUnpadGet">
            <summary>Sets the shim of Rsa.get_NoUnpad()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.NoUnpadSetBoolean">
            <summary>Sets the shim of Rsa.set_NoUnpad(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.NumBitsGet">
            <summary>Sets the shim of Rsa.get_NumBits()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OaepHashGet">
            <summary>Sets the shim of Rsa.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OaepHashSetString">
            <summary>Sets the shim of Rsa.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OaepPaddingGet">
            <summary>Sets the shim of Rsa.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OaepPaddingSetBoolean">
            <summary>Sets the shim of Rsa.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslSignBytesByteArray">
            <summary>Sets the shim of Rsa.OpenSslSignBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslSignBytesENCByteArray">
            <summary>Sets the shim of Rsa.OpenSslSignBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslSignStringENCString">
            <summary>Sets the shim of Rsa.OpenSslSignStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslSignStringString">
            <summary>Sets the shim of Rsa.OpenSslSignString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslVerifyBytesByteArray">
            <summary>Sets the shim of Rsa.OpenSslVerifyBytes(Byte[] signature)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslVerifyBytesENCString">
            <summary>Sets the shim of Rsa.OpenSslVerifyBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslVerifyStringByteArray">
            <summary>Sets the shim of Rsa.OpenSslVerifyString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.OpenSslVerifyStringENCString">
            <summary>Sets the shim of Rsa.OpenSslVerifyStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Rsa.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SignBytesByteArrayString">
            <summary>Sets the shim of Rsa.SignBytes(Byte[] binaryData, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SignBytesENCByteArrayString">
            <summary>Sets the shim of Rsa.SignBytesENC(Byte[] binaryData, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SignHashByteArrayString">
            <summary>Sets the shim of Rsa.SignHash(Byte[] hashBytes, String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SignHashENCStringString">
            <summary>Sets the shim of Rsa.SignHashENC(String encodedHash, String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SignStringENCStringString">
            <summary>Sets the shim of Rsa.SignStringENC(String strToBeHashed, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SignStringStringString">
            <summary>Sets the shim of Rsa.SignString(String strToBeHashed, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.SnkToXmlString">
            <summary>Sets the shim of Rsa.SnkToXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.ToString01">
            <summary>Sets the shim of Rsa.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Rsa.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Rsa.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Rsa.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyBytesByteArrayStringByteArray">
            <summary>Sets the shim of Rsa.VerifyBytes(Byte[] originalData, String hashAlgorithm, Byte[] signatureBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyBytesENCByteArrayStringString">
            <summary>Sets the shim of Rsa.VerifyBytesENC(Byte[] originalData, String hashAlgorithm, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyHashByteArrayStringByteArray">
            <summary>Sets the shim of Rsa.VerifyHash(Byte[] hashBytes, String hashAlg, Byte[] sigBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyHashENCStringStringString">
            <summary>Sets the shim of Rsa.VerifyHashENC(String encodedHash, String hashAlg, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyPrivateKeyString">
            <summary>Sets the shim of Rsa.VerifyPrivateKey(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyStringENCStringStringString">
            <summary>Sets the shim of Rsa.VerifyStringENC(String originalString, String hashAlgorithm, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VerifyStringStringStringByteArray">
            <summary>Sets the shim of Rsa.VerifyString(String originalString, String hashAlgorithm, Byte[] binarySig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances.VersionGet">
            <summary>Sets the shim of Rsa.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances._Rsa">
            <summary>Sets the shim of Rsa.!Rsa()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.AllInstances._Rsa01">
            <summary>Sets the shim of Rsa.~Rsa()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRsa.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRsa.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRsa.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.CharsetGet">
            <summary>Sets the shim of Rsa.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.CharsetSetString">
            <summary>Sets the shim of Rsa.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.Constructor">
            <summary>Sets the shim of Rsa.Rsa()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DebugLogFilePathGet">
            <summary>Sets the shim of Rsa.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DebugLogFilePathSetString">
            <summary>Sets the shim of Rsa.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DecryptBytesByteArrayBoolean">
            <summary>Sets the shim of Rsa.DecryptBytes(Byte[] inData, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DecryptBytesENCStringBoolean">
            <summary>Sets the shim of Rsa.DecryptBytesENC(String str, Boolean bUsePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DecryptStringByteArrayBoolean">
            <summary>Sets the shim of Rsa.DecryptString(Byte[] binarySig, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DecryptStringENCStringBoolean">
            <summary>Sets the shim of Rsa.DecryptStringENC(String encodedSig, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.Dispose">
            <summary>Sets the shim of Rsa.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.DisposeBoolean">
            <summary>Sets the shim of Rsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.EncodingModeGet">
            <summary>Sets the shim of Rsa.get_EncodingMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.EncodingModeSetString">
            <summary>Sets the shim of Rsa.set_EncodingMode(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.EncryptBytesByteArrayBoolean">
            <summary>Sets the shim of Rsa.EncryptBytes(Byte[] binaryData, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.EncryptBytesENCByteArrayBoolean">
            <summary>Sets the shim of Rsa.EncryptBytesENC(Byte[] data, Boolean bUsePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.EncryptStringENCStringBoolean">
            <summary>Sets the shim of Rsa.EncryptStringENC(String str, Boolean bUsePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.EncryptStringStringBoolean">
            <summary>Sets the shim of Rsa.EncryptString(String stringToEncrypt, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ExportPrivateKey">
            <summary>Sets the shim of Rsa.ExportPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ExportPrivateKeyObj">
            <summary>Sets the shim of Rsa.ExportPrivateKeyObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ExportPublicKey">
            <summary>Sets the shim of Rsa.ExportPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ExportPublicKeyObj">
            <summary>Sets the shim of Rsa.ExportPublicKeyObj()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.GenerateKeyInt32">
            <summary>Sets the shim of Rsa.GenerateKey(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ImportPrivateKeyObjPrivateKey">
            <summary>Sets the shim of Rsa.ImportPrivateKeyObj(PrivateKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ImportPrivateKeyString">
            <summary>Sets the shim of Rsa.ImportPrivateKey(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ImportPublicKeyObjPublicKey">
            <summary>Sets the shim of Rsa.ImportPublicKeyObj(PublicKey key)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ImportPublicKeyString">
            <summary>Sets the shim of Rsa.ImportPublicKey(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LastErrorHtmlGet">
            <summary>Sets the shim of Rsa.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LastErrorTextGet">
            <summary>Sets the shim of Rsa.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LastErrorXmlGet">
            <summary>Sets the shim of Rsa.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LastMethodSuccessGet">
            <summary>Sets the shim of Rsa.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Rsa.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LittleEndianGet">
            <summary>Sets the shim of Rsa.get_LittleEndian()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.LittleEndianSetBoolean">
            <summary>Sets the shim of Rsa.set_LittleEndian(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.NoUnpadGet">
            <summary>Sets the shim of Rsa.get_NoUnpad()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.NoUnpadSetBoolean">
            <summary>Sets the shim of Rsa.set_NoUnpad(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.NumBitsGet">
            <summary>Sets the shim of Rsa.get_NumBits()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OaepHashGet">
            <summary>Sets the shim of Rsa.get_OaepHash()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OaepHashSetString">
            <summary>Sets the shim of Rsa.set_OaepHash(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OaepPaddingGet">
            <summary>Sets the shim of Rsa.get_OaepPadding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OaepPaddingSetBoolean">
            <summary>Sets the shim of Rsa.set_OaepPadding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslSignBytesByteArray">
            <summary>Sets the shim of Rsa.OpenSslSignBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslSignBytesENCByteArray">
            <summary>Sets the shim of Rsa.OpenSslSignBytesENC(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslSignStringENCString">
            <summary>Sets the shim of Rsa.OpenSslSignStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslSignStringString">
            <summary>Sets the shim of Rsa.OpenSslSignString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslVerifyBytesByteArray">
            <summary>Sets the shim of Rsa.OpenSslVerifyBytes(Byte[] signature)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslVerifyBytesENCString">
            <summary>Sets the shim of Rsa.OpenSslVerifyBytesENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslVerifyStringByteArray">
            <summary>Sets the shim of Rsa.OpenSslVerifyString(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.OpenSslVerifyStringENCString">
            <summary>Sets the shim of Rsa.OpenSslVerifyStringENC(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SaveLastErrorString">
            <summary>Sets the shim of Rsa.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SignBytesByteArrayString">
            <summary>Sets the shim of Rsa.SignBytes(Byte[] binaryData, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SignBytesENCByteArrayString">
            <summary>Sets the shim of Rsa.SignBytesENC(Byte[] binaryData, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SignHashByteArrayString">
            <summary>Sets the shim of Rsa.SignHash(Byte[] hashBytes, String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SignHashENCStringString">
            <summary>Sets the shim of Rsa.SignHashENC(String encodedHash, String hashAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SignStringENCStringString">
            <summary>Sets the shim of Rsa.SignStringENC(String strToBeHashed, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SignStringStringString">
            <summary>Sets the shim of Rsa.SignString(String strToBeHashed, String hashAlgorithm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.SnkToXmlString">
            <summary>Sets the shim of Rsa.SnkToXml(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.ToString">
            <summary>Sets the shim of Rsa.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.UnlockComponentString">
            <summary>Sets the shim of Rsa.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerboseLoggingGet">
            <summary>Sets the shim of Rsa.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Rsa.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyBytesByteArrayStringByteArray">
            <summary>Sets the shim of Rsa.VerifyBytes(Byte[] originalData, String hashAlgorithm, Byte[] signatureBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyBytesENCByteArrayStringString">
            <summary>Sets the shim of Rsa.VerifyBytesENC(Byte[] originalData, String hashAlgorithm, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyHashByteArrayStringByteArray">
            <summary>Sets the shim of Rsa.VerifyHash(Byte[] hashBytes, String hashAlg, Byte[] sigBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyHashENCStringStringString">
            <summary>Sets the shim of Rsa.VerifyHashENC(String encodedHash, String hashAlg, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyPrivateKeyString">
            <summary>Sets the shim of Rsa.VerifyPrivateKey(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyStringENCStringStringString">
            <summary>Sets the shim of Rsa.VerifyStringENC(String originalString, String hashAlgorithm, String encodedSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VerifyStringStringStringByteArray">
            <summary>Sets the shim of Rsa.VerifyString(String originalString, String hashAlgorithm, Byte[] binarySig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa.VersionGet">
            <summary>Sets the shim of Rsa.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa._Rsa">
            <summary>Sets the shim of Rsa.!Rsa()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRsa._Rsa01">
            <summary>Sets the shim of Rsa.~Rsa()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimRss">
            <summary>Shim type of Chilkat.Rss</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRss.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRss.#ctor(Chilkat.Rss)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AddNewChannel">
            <summary>Sets the shim of Rss.AddNewChannel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AddNewImage">
            <summary>Sets the shim of Rss.AddNewImage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AddNewItem">
            <summary>Sets the shim of Rss.AddNewItem()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimRss.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.AddNewChannel">
            <summary>Sets the shim of Rss.AddNewChannel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.AddNewImage">
            <summary>Sets the shim of Rss.AddNewImage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.AddNewItem">
            <summary>Sets the shim of Rss.AddNewItem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Rss.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Rss.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.Dispose">
            <summary>Sets the shim of Rss.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Rss.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.DownloadRssAsyncString">
            <summary>Sets the shim of Rss.DownloadRssAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.DownloadRssString">
            <summary>Sets the shim of Rss.DownloadRss(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Rss.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Rss.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rss.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rss.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rss.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rss.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rss.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Rss.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetAttrStringString">
            <summary>Sets the shim of Rss.GetAttr(String tag, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetChannelInt32">
            <summary>Sets the shim of Rss.GetChannel(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetCountString">
            <summary>Sets the shim of Rss.GetCount(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetDateStrString">
            <summary>Sets the shim of Rss.GetDateStr(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetDateString">
            <summary>Sets the shim of Rss.GetDate(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetImage">
            <summary>Sets the shim of Rss.GetImage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetIntString">
            <summary>Sets the shim of Rss.GetInt(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetItemInt32">
            <summary>Sets the shim of Rss.GetItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.GetStringString">
            <summary>Sets the shim of Rss.GetString(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Rss.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Rss.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Rss.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Rss.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Rss.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LoadRssFileString">
            <summary>Sets the shim of Rss.LoadRssFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.LoadRssStringString">
            <summary>Sets the shim of Rss.LoadRssString(String rssString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.MGetAttrStringInt32String">
            <summary>Sets the shim of Rss.MGetAttr(String tag, Int32 index, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.MGetStringStringInt32">
            <summary>Sets the shim of Rss.MGetString(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.MSetAttrStringInt32StringString">
            <summary>Sets the shim of Rss.MSetAttr(String tag, Int32 idx, String attrName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.MSetStringStringInt32String">
            <summary>Sets the shim of Rss.MSetString(String tag, Int32 idx, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.NewRss">
            <summary>Sets the shim of Rss.NewRss()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.NumChannelsGet">
            <summary>Sets the shim of Rss.get_NumChannels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.NumItemsGet">
            <summary>Sets the shim of Rss.get_NumItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnAbortCheckAddRssAbortCheckEventHandler">
            <summary>Sets the shim of Rss.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rss.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnAbortCheckRemoveRssAbortCheckEventHandler">
            <summary>Sets the shim of Rss.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnBinaryDataAddRssBinaryDataEventHandler">
            <summary>Sets the shim of Rss.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rss.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnBinaryDataRemoveRssBinaryDataEventHandler">
            <summary>Sets the shim of Rss.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnPercentDoneAddRssPercentDoneEventHandler">
            <summary>Sets the shim of Rss.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rss.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnPercentDoneRemoveRssPercentDoneEventHandler">
            <summary>Sets the shim of Rss.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnProgressInfoAddRssProgressInfoEventHandler">
            <summary>Sets the shim of Rss.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rss.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnProgressInfoRemoveRssProgressInfoEventHandler">
            <summary>Sets the shim of Rss.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnTaskCompletedAddRssTaskCompletedEventHandler">
            <summary>Sets the shim of Rss.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rss.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnTaskCompletedRemoveRssTaskCompletedEventHandler">
            <summary>Sets the shim of Rss.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnTextDataAddRssTextDataEventHandler">
            <summary>Sets the shim of Rss.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Rss.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.OnTextDataRemoveRssTextDataEventHandler">
            <summary>Sets the shim of Rss.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.RemoveString">
            <summary>Sets the shim of Rss.Remove(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Rss.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SetAttrStringStringString">
            <summary>Sets the shim of Rss.SetAttr(String tag, String attrName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SetDateNowString">
            <summary>Sets the shim of Rss.SetDateNow(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SetDateStrStringString">
            <summary>Sets the shim of Rss.SetDateStr(String tag, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SetDateStringDateTime">
            <summary>Sets the shim of Rss.SetDate(String tag, DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SetIntStringInt32">
            <summary>Sets the shim of Rss.SetInt(String tag, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.SetStringStringString">
            <summary>Sets the shim of Rss.SetString(String tag, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.ToString01">
            <summary>Sets the shim of Rss.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.ToXmlString">
            <summary>Sets the shim of Rss.ToXmlString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Rss.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Rss.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances.VersionGet">
            <summary>Sets the shim of Rss.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances._Rss">
            <summary>Sets the shim of Rss.!Rss()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.AllInstances._Rss01">
            <summary>Sets the shim of Rss.~Rss()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRss.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRss.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimRss.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.Constructor">
            <summary>Sets the shim of Rss.Rss()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.DebugLogFilePathGet">
            <summary>Sets the shim of Rss.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.DebugLogFilePathSetString">
            <summary>Sets the shim of Rss.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.Dispose">
            <summary>Sets the shim of Rss.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.DisposeBoolean">
            <summary>Sets the shim of Rss.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.DownloadRssAsyncString">
            <summary>Sets the shim of Rss.DownloadRssAsync(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.DownloadRssString">
            <summary>Sets the shim of Rss.DownloadRss(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.EnableEventsGet">
            <summary>Sets the shim of Rss.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.EnableEventsSetBoolean">
            <summary>Sets the shim of Rss.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rss.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rss.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rss.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rss.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rss.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Rss.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetAttrStringString">
            <summary>Sets the shim of Rss.GetAttr(String tag, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetChannelInt32">
            <summary>Sets the shim of Rss.GetChannel(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetCountString">
            <summary>Sets the shim of Rss.GetCount(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetDateStrString">
            <summary>Sets the shim of Rss.GetDateStr(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetDateString">
            <summary>Sets the shim of Rss.GetDate(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetImage">
            <summary>Sets the shim of Rss.GetImage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetIntString">
            <summary>Sets the shim of Rss.GetInt(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetItemInt32">
            <summary>Sets the shim of Rss.GetItem(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.GetStringString">
            <summary>Sets the shim of Rss.GetString(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LastErrorHtmlGet">
            <summary>Sets the shim of Rss.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LastErrorTextGet">
            <summary>Sets the shim of Rss.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LastErrorXmlGet">
            <summary>Sets the shim of Rss.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LastMethodSuccessGet">
            <summary>Sets the shim of Rss.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Rss.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LoadRssFileString">
            <summary>Sets the shim of Rss.LoadRssFile(String filePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.LoadRssStringString">
            <summary>Sets the shim of Rss.LoadRssString(String rssString)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.MGetAttrStringInt32String">
            <summary>Sets the shim of Rss.MGetAttr(String tag, Int32 index, String attrName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.MGetStringStringInt32">
            <summary>Sets the shim of Rss.MGetString(String tag, Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.MSetAttrStringInt32StringString">
            <summary>Sets the shim of Rss.MSetAttr(String tag, Int32 idx, String attrName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.MSetStringStringInt32String">
            <summary>Sets the shim of Rss.MSetString(String tag, Int32 idx, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.NewRss">
            <summary>Sets the shim of Rss.NewRss()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.NumChannelsGet">
            <summary>Sets the shim of Rss.get_NumChannels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.NumItemsGet">
            <summary>Sets the shim of Rss.get_NumItems()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnAbortCheckAddRssAbortCheckEventHandler">
            <summary>Sets the shim of Rss.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Rss.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnAbortCheckRemoveRssAbortCheckEventHandler">
            <summary>Sets the shim of Rss.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnBinaryDataAddRssBinaryDataEventHandler">
            <summary>Sets the shim of Rss.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Rss.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnBinaryDataRemoveRssBinaryDataEventHandler">
            <summary>Sets the shim of Rss.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnPercentDoneAddRssPercentDoneEventHandler">
            <summary>Sets the shim of Rss.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Rss.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnPercentDoneRemoveRssPercentDoneEventHandler">
            <summary>Sets the shim of Rss.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnProgressInfoAddRssProgressInfoEventHandler">
            <summary>Sets the shim of Rss.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Rss.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnProgressInfoRemoveRssProgressInfoEventHandler">
            <summary>Sets the shim of Rss.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnTaskCompletedAddRssTaskCompletedEventHandler">
            <summary>Sets the shim of Rss.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Rss.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnTaskCompletedRemoveRssTaskCompletedEventHandler">
            <summary>Sets the shim of Rss.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnTextDataAddRssTextDataEventHandler">
            <summary>Sets the shim of Rss.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Rss.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.OnTextDataRemoveRssTextDataEventHandler">
            <summary>Sets the shim of Rss.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.RemoveString">
            <summary>Sets the shim of Rss.Remove(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SaveLastErrorString">
            <summary>Sets the shim of Rss.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SetAttrStringStringString">
            <summary>Sets the shim of Rss.SetAttr(String tag, String attrName, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SetDateNowString">
            <summary>Sets the shim of Rss.SetDateNow(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SetDateStrStringString">
            <summary>Sets the shim of Rss.SetDateStr(String tag, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SetDateStringDateTime">
            <summary>Sets the shim of Rss.SetDate(String tag, DateTime dateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SetIntStringInt32">
            <summary>Sets the shim of Rss.SetInt(String tag, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.SetStringStringString">
            <summary>Sets the shim of Rss.SetString(String tag, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.ToString">
            <summary>Sets the shim of Rss.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.ToXmlString">
            <summary>Sets the shim of Rss.ToXmlString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.VerboseLoggingGet">
            <summary>Sets the shim of Rss.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Rss.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss.VersionGet">
            <summary>Sets the shim of Rss.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss._Rss">
            <summary>Sets the shim of Rss.!Rss()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimRss._Rss01">
            <summary>Sets the shim of Rss.~Rss()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSFtp">
            <summary>Shim type of Chilkat.SFtp</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtp.#ctor(Chilkat.SFtp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AbortCurrentGet">
            <summary>Sets the shim of SFtp.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AbortCurrentSetBoolean">
            <summary>Sets the shim of SFtp.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AccumulateBufferGet">
            <summary>Sets the shim of SFtp.get_AccumulateBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AccumulateBytesAsyncStringInt32">
            <summary>Sets the shim of SFtp.AccumulateBytesAsync(String handle, Int32 maxBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AccumulateBytesStringInt32">
            <summary>Sets the shim of SFtp.AccumulateBytes(String handle, Int32 maxBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.Add64StringString">
            <summary>Sets the shim of SFtp.Add64(String n1, String n2)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSFtp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of SFtp.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of SFtp.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AccumulateBufferGet">
            <summary>Sets the shim of SFtp.get_AccumulateBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AccumulateBytesAsyncStringInt32">
            <summary>Sets the shim of SFtp.AccumulateBytesAsync(String handle, Int32 maxBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AccumulateBytesStringInt32">
            <summary>Sets the shim of SFtp.AccumulateBytes(String handle, Int32 maxBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.Add64StringString">
            <summary>Sets the shim of SFtp.Add64(String n1, String n2)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthFailReasonGet">
            <summary>Sets the shim of SFtp.get_AuthFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePkAsync(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthenticatePkStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePk(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthenticatePwAsyncStringString">
            <summary>Sets the shim of SFtp.AuthenticatePwAsync(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthenticatePwPkAsyncStringStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePwPkAsync(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthenticatePwPkStringStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePwPk(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.AuthenticatePwStringString">
            <summary>Sets the shim of SFtp.AuthenticatePw(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.BandwidthThrottleDownGet">
            <summary>Sets the shim of SFtp.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of SFtp.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.BandwidthThrottleUpGet">
            <summary>Sets the shim of SFtp.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of SFtp.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClearAccumulateBuffer">
            <summary>Sets the shim of SFtp.ClearAccumulateBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClearCache">
            <summary>Sets the shim of SFtp.ClearCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClearSessionLog">
            <summary>Sets the shim of SFtp.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClientIdentifierGet">
            <summary>Sets the shim of SFtp.get_ClientIdentifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClientIdentifierSetString">
            <summary>Sets the shim of SFtp.set_ClientIdentifier(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of SFtp.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of SFtp.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.CloseHandleAsyncString">
            <summary>Sets the shim of SFtp.CloseHandleAsync(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.CloseHandleString">
            <summary>Sets the shim of SFtp.CloseHandle(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ConnectAsyncStringInt32">
            <summary>Sets the shim of SFtp.ConnectAsync(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ConnectStringInt32">
            <summary>Sets the shim of SFtp.Connect(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ConnectThroughSshAsyncSshStringInt32">
            <summary>Sets the shim of SFtp.ConnectThroughSshAsync(Ssh sshConn, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ConnectThroughSshSshStringInt32">
            <summary>Sets the shim of SFtp.ConnectThroughSsh(Ssh sshConn, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ConnectTimeoutMsGet">
            <summary>Sets the shim of SFtp.get_ConnectTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ConnectTimeoutMsSetInt32">
            <summary>Sets the shim of SFtp.set_ConnectTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.CopyFileAttrAsyncStringStringBoolean">
            <summary>Sets the shim of SFtp.CopyFileAttrAsync(String localFilename, String remoteFilename, Boolean isHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.CopyFileAttrStringStringBoolean">
            <summary>Sets the shim of SFtp.CopyFileAttr(String localFilename, String remoteFilename, Boolean isHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.CreateDirAsyncString">
            <summary>Sets the shim of SFtp.CreateDirAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.CreateDirString">
            <summary>Sets the shim of SFtp.CreateDir(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of SFtp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of SFtp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.Disconnect">
            <summary>Sets the shim of SFtp.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DisconnectCodeGet">
            <summary>Sets the shim of SFtp.get_DisconnectCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DisconnectReasonGet">
            <summary>Sets the shim of SFtp.get_DisconnectReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.Dispose">
            <summary>Sets the shim of SFtp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SFtp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadBdAsyncStringBinData">
            <summary>Sets the shim of SFtp.DownloadBdAsync(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadBdStringBinData">
            <summary>Sets the shim of SFtp.DownloadBd(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadFileAsyncStringString">
            <summary>Sets the shim of SFtp.DownloadFileAsync(String handle, String toFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.DownloadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadFileByNameStringString">
            <summary>Sets the shim of SFtp.DownloadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadFileStringString">
            <summary>Sets the shim of SFtp.DownloadFile(String handle, String toFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of SFtp.DownloadSbAsync(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.DownloadSbStringStringStringBuilder">
            <summary>Sets the shim of SFtp.DownloadSb(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EnableCacheGet">
            <summary>Sets the shim of SFtp.get_EnableCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EnableCacheSetBoolean">
            <summary>Sets the shim of SFtp.set_EnableCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EnableCompressionGet">
            <summary>Sets the shim of SFtp.get_EnableCompression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EnableCompressionSetBoolean">
            <summary>Sets the shim of SFtp.set_EnableCompression(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EnableEventsGet">
            <summary>Sets the shim of SFtp.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of SFtp.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.EofString">
            <summary>Sets the shim of SFtp.Eof(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FileExistsAsyncStringBoolean">
            <summary>Sets the shim of SFtp.FileExistsAsync(String remotePath, Boolean followLinks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FileExistsStringBoolean">
            <summary>Sets the shim of SFtp.FileExists(String remotePath, Boolean followLinks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FilenameCharsetGet">
            <summary>Sets the shim of SFtp.get_FilenameCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FilenameCharsetSetString">
            <summary>Sets the shim of SFtp.set_FilenameCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of SFtp.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FireDownloadRateObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.FireDownloadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of SFtp.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of SFtp.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SFtp.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.FireUploadRateObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.FireUploadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ForceCipherGet">
            <summary>Sets the shim of SFtp.get_ForceCipher()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ForceCipherSetString">
            <summary>Sets the shim of SFtp.set_ForceCipher(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ForceV3Get">
            <summary>Sets the shim of SFtp.get_ForceV3()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ForceV3SetBoolean">
            <summary>Sets the shim of SFtp.set_ForceV3(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileCreateDtAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateDtAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileCreateDtStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateDt(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileCreateTimeStrAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateTimeStrAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileCreateTimeStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateTimeStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileCreateTimeStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateTime(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileGroupAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileGroupAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileGroupStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileGroup(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastAccessDtAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessDtAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastAccessDtStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessDt(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastAccessStrAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessStrAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastAccessStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastAccessStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccess(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastModifiedDtAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedDtAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastModifiedDtStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedDt(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastModifiedStrAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedStrAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastModifiedStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileLastModifiedStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModified(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileOwnerAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileOwnerAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileOwnerStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileOwner(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFilePermissionsAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFilePermissionsAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFilePermissionsStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFilePermissions(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileSize32StringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileSize32(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileSize64StringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileSize64(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.GetFileSizeStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileSizeStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of SFtp.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of SFtp.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HostKeyAlgGet">
            <summary>Sets the shim of SFtp.get_HostKeyAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HostKeyAlgSetString">
            <summary>Sets the shim of SFtp.set_HostKeyAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HostKeyFingerprintGet">
            <summary>Sets the shim of SFtp.get_HostKeyFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of SFtp.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of SFtp.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of SFtp.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of SFtp.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of SFtp.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of SFtp.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of SFtp.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of SFtp.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of SFtp.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.IncludeDotDirsGet">
            <summary>Sets the shim of SFtp.get_IncludeDotDirs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.IncludeDotDirsSetBoolean">
            <summary>Sets the shim of SFtp.set_IncludeDotDirs(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.InitializeFailCodeGet">
            <summary>Sets the shim of SFtp.get_InitializeFailCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.InitializeFailReasonGet">
            <summary>Sets the shim of SFtp.get_InitializeFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.InitializeSftp">
            <summary>Sets the shim of SFtp.InitializeSftp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.InitializeSftpAsync">
            <summary>Sets the shim of SFtp.InitializeSftpAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.IsConnectedGet">
            <summary>Sets the shim of SFtp.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.KeepSessionLogGet">
            <summary>Sets the shim of SFtp.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.KeepSessionLogSetBoolean">
            <summary>Sets the shim of SFtp.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of SFtp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of SFtp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of SFtp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of SFtp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SFtp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastReadFailedString">
            <summary>Sets the shim of SFtp.LastReadFailed(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.LastReadNumBytesString">
            <summary>Sets the shim of SFtp.LastReadNumBytes(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.MaxPacketSizeGet">
            <summary>Sets the shim of SFtp.get_MaxPacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.MaxPacketSizeSetInt32">
            <summary>Sets the shim of SFtp.set_MaxPacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnAbortCheckAddSFtpAbortCheckEventHandler">
            <summary>Sets the shim of SFtp.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of SFtp.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnAbortCheckRemoveSFtpAbortCheckEventHandler">
            <summary>Sets the shim of SFtp.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnDownloadRateAddSFtpDownloadRateEventHandler">
            <summary>Sets the shim of SFtp.add_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnDownloadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.raise_OnDownloadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnDownloadRateRemoveSFtpDownloadRateEventHandler">
            <summary>Sets the shim of SFtp.remove_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnPercentDoneAddSFtpPercentDoneEventHandler">
            <summary>Sets the shim of SFtp.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of SFtp.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnPercentDoneRemoveSFtpPercentDoneEventHandler">
            <summary>Sets the shim of SFtp.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnProgressInfoAddSFtpProgressInfoEventHandler">
            <summary>Sets the shim of SFtp.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of SFtp.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnProgressInfoRemoveSFtpProgressInfoEventHandler">
            <summary>Sets the shim of SFtp.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnTaskCompletedAddSFtpTaskCompletedEventHandler">
            <summary>Sets the shim of SFtp.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SFtp.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnTaskCompletedRemoveSFtpTaskCompletedEventHandler">
            <summary>Sets the shim of SFtp.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnUploadRateAddSFtpUploadRateEventHandler">
            <summary>Sets the shim of SFtp.add_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnUploadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.raise_OnUploadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OnUploadRateRemoveSFtpUploadRateEventHandler">
            <summary>Sets the shim of SFtp.remove_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OpenDirAsyncString">
            <summary>Sets the shim of SFtp.OpenDirAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OpenDirString">
            <summary>Sets the shim of SFtp.OpenDir(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OpenFileAsyncStringStringString">
            <summary>Sets the shim of SFtp.OpenFileAsync(String remotePath, String access, String createDisposition)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.OpenFileStringStringString">
            <summary>Sets the shim of SFtp.OpenFile(String remotePath, String access, String createDisposition)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PasswordChangeRequestedGet">
            <summary>Sets the shim of SFtp.get_PasswordChangeRequested()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of SFtp.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of SFtp.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of SFtp.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of SFtp.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PreserveDateGet">
            <summary>Sets the shim of SFtp.get_PreserveDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.PreserveDateSetBoolean">
            <summary>Sets the shim of SFtp.set_PreserveDate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ProtocolVersionGet">
            <summary>Sets the shim of SFtp.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadDirAsyncString">
            <summary>Sets the shim of SFtp.ReadDirAsync(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadDirMustMatchGet">
            <summary>Sets the shim of SFtp.get_ReadDirMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadDirMustMatchSetString">
            <summary>Sets the shim of SFtp.set_ReadDirMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadDirMustNotMatchGet">
            <summary>Sets the shim of SFtp.get_ReadDirMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadDirMustNotMatchSetString">
            <summary>Sets the shim of SFtp.set_ReadDirMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadDirString">
            <summary>Sets the shim of SFtp.ReadDir(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileBytes32StringInt32Int32">
            <summary>Sets the shim of SFtp.ReadFileBytes32(String handle, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileBytes64StringInt64Int32">
            <summary>Sets the shim of SFtp.ReadFileBytes64(String handle, Int64 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileBytes64sStringStringInt32">
            <summary>Sets the shim of SFtp.ReadFileBytes64s(String handle, String offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileBytesAsyncStringInt32">
            <summary>Sets the shim of SFtp.ReadFileBytesAsync(String handle, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileBytesStringInt32">
            <summary>Sets the shim of SFtp.ReadFileBytes(String handle, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileText32StringInt32Int32String">
            <summary>Sets the shim of SFtp.ReadFileText32(String handle, Int32 offset, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileText64StringInt64Int32String">
            <summary>Sets the shim of SFtp.ReadFileText64(String handle, Int64 offset, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileText64sStringStringInt32String">
            <summary>Sets the shim of SFtp.ReadFileText64s(String handle, String offset, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileTextAsyncStringInt32String">
            <summary>Sets the shim of SFtp.ReadFileTextAsync(String handle, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ReadFileTextStringInt32String">
            <summary>Sets the shim of SFtp.ReadFileText(String handle, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RealPathAsyncStringString">
            <summary>Sets the shim of SFtp.RealPathAsync(String originalPath, String composePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RealPathStringString">
            <summary>Sets the shim of SFtp.RealPath(String originalPath, String composePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RemoveDirAsyncString">
            <summary>Sets the shim of SFtp.RemoveDirAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RemoveDirString">
            <summary>Sets the shim of SFtp.RemoveDir(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RemoveFileAsyncString">
            <summary>Sets the shim of SFtp.RemoveFileAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RemoveFileString">
            <summary>Sets the shim of SFtp.RemoveFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RenameFileOrDirAsyncStringString">
            <summary>Sets the shim of SFtp.RenameFileOrDirAsync(String oldPath, String newPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.RenameFileOrDirStringString">
            <summary>Sets the shim of SFtp.RenameFileOrDir(String oldPath, String newPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ResumeDownloadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.ResumeDownloadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ResumeDownloadFileByNameStringString">
            <summary>Sets the shim of SFtp.ResumeDownloadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ResumeUploadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.ResumeUploadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ResumeUploadFileByNameStringString">
            <summary>Sets the shim of SFtp.ResumeUploadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of SFtp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SendIgnore">
            <summary>Sets the shim of SFtp.SendIgnore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SendIgnoreAsync">
            <summary>Sets the shim of SFtp.SendIgnoreAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SessionLogGet">
            <summary>Sets the shim of SFtp.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetCreateDtAsyncStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetCreateDtAsync(String pathOrHandle, Boolean isHandle, CkDateTime createDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetCreateDtStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetCreateDt(String pathOrHandle, Boolean isHandle, CkDateTime createDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetCreateTimeStrAsyncStringBooleanString">
            <summary>Sets the shim of SFtp.SetCreateTimeStrAsync(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetCreateTimeStrStringBooleanString">
            <summary>Sets the shim of SFtp.SetCreateTimeStr(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetCreateTimeStringBooleanDateTime">
            <summary>Sets the shim of SFtp.SetCreateTime(String pathOrHandle, Boolean isHandle, DateTime createDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastAccessDtAsyncStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastAccessDtAsync(String pathOrHandle, Boolean isHandle, CkDateTime accessDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastAccessDtStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastAccessDt(String pathOrHandle, Boolean isHandle, CkDateTime accessDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastAccessTimeStrAsyncStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastAccessTimeStrAsync(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastAccessTimeStrStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastAccessTimeStr(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastAccessTimeStringBooleanDateTime">
            <summary>Sets the shim of SFtp.SetLastAccessTime(String pathOrHandle, Boolean isHandle, DateTime accessDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastModifiedDtAsyncStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastModifiedDtAsync(String pathOrHandle, Boolean isHandle, CkDateTime modifiedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastModifiedDtStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastModifiedDt(String pathOrHandle, Boolean isHandle, CkDateTime modifiedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastModifiedTimeStrAsyncStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastModifiedTimeStrAsync(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastModifiedTimeStrStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastModifiedTimeStr(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetLastModifiedTimeStringBooleanDateTime">
            <summary>Sets the shim of SFtp.SetLastModifiedTime(String pathOrHandle, Boolean isHandle, DateTime modifiedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetOwnerAndGroupAsyncStringBooleanStringString">
            <summary>Sets the shim of SFtp.SetOwnerAndGroupAsync(String pathOrHandle, Boolean isHandle, String owner, String group)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetOwnerAndGroupStringBooleanStringString">
            <summary>Sets the shim of SFtp.SetOwnerAndGroup(String pathOrHandle, Boolean isHandle, String owner, String group)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetPermissionsAsyncStringBooleanInt32">
            <summary>Sets the shim of SFtp.SetPermissionsAsync(String pathOrHandle, Boolean isHandle, Int32 permissions)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SetPermissionsStringBooleanInt32">
            <summary>Sets the shim of SFtp.SetPermissions(String pathOrHandle, Boolean isHandle, Int32 permissions)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of SFtp.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of SFtp.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SoSndBufGet">
            <summary>Sets the shim of SFtp.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of SFtp.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of SFtp.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of SFtp.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of SFtp.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of SFtp.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksPortGet">
            <summary>Sets the shim of SFtp.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of SFtp.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of SFtp.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of SFtp.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksVersionGet">
            <summary>Sets the shim of SFtp.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of SFtp.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncDirectivesGet">
            <summary>Sets the shim of SFtp.get_SyncDirectives()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncDirectivesSetString">
            <summary>Sets the shim of SFtp.set_SyncDirectives(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncMustMatchGet">
            <summary>Sets the shim of SFtp.get_SyncMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncMustMatchSetString">
            <summary>Sets the shim of SFtp.set_SyncMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncMustNotMatchGet">
            <summary>Sets the shim of SFtp.get_SyncMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncMustNotMatchSetString">
            <summary>Sets the shim of SFtp.set_SyncMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncTreeDownloadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeDownloadAsync(String remoteRoot, String localRoot, Int32 mode, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncTreeDownloadStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeDownload(String remoteRoot, String localRoot, Int32 mode, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncTreeUploadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeUploadAsync(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncTreeUploadStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeUpload(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncedFilesGet">
            <summary>Sets the shim of SFtp.get_SyncedFiles()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.SyncedFilesSetString">
            <summary>Sets the shim of SFtp.set_SyncedFiles(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.TcpNoDelayGet">
            <summary>Sets the shim of SFtp.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.TcpNoDelaySetBoolean">
            <summary>Sets the shim of SFtp.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.ToString01">
            <summary>Sets the shim of SFtp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UnlockComponentString">
            <summary>Sets the shim of SFtp.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadBdAsyncBinDataString">
            <summary>Sets the shim of SFtp.UploadBdAsync(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadBdBinDataString">
            <summary>Sets the shim of SFtp.UploadBd(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadChunkSizeGet">
            <summary>Sets the shim of SFtp.get_UploadChunkSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadChunkSizeSetInt32">
            <summary>Sets the shim of SFtp.set_UploadChunkSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadFileAsyncStringString">
            <summary>Sets the shim of SFtp.UploadFileAsync(String handle, String fromFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.UploadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadFileByNameStringString">
            <summary>Sets the shim of SFtp.UploadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadFileStringString">
            <summary>Sets the shim of SFtp.UploadFile(String handle, String fromFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadSbAsyncStringBuilderStringStringBoolean">
            <summary>Sets the shim of SFtp.UploadSbAsync(StringBuilder sb, String remoteFilePath, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UploadSbStringBuilderStringStringBoolean">
            <summary>Sets the shim of SFtp.UploadSb(StringBuilder sb, String remoteFilePath, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UtcModeGet">
            <summary>Sets the shim of SFtp.get_UtcMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.UtcModeSetBoolean">
            <summary>Sets the shim of SFtp.set_UtcMode(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of SFtp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of SFtp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.VersionGet">
            <summary>Sets the shim of SFtp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileBytes32StringInt32ByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes32(String handle, Int32 offset, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileBytes64StringInt64ByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes64(String handle, Int64 offset64, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileBytes64sStringStringByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes64s(String handle, String offset64, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileBytesAsyncStringByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytesAsync(String handle, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileBytesStringByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes(String handle, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileText32StringInt32StringString">
            <summary>Sets the shim of SFtp.WriteFileText32(String handle, Int32 offset32, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileText64StringInt64StringString">
            <summary>Sets the shim of SFtp.WriteFileText64(String handle, Int64 offset64, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileText64sStringStringStringString">
            <summary>Sets the shim of SFtp.WriteFileText64s(String handle, String offset64, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileTextAsyncStringStringString">
            <summary>Sets the shim of SFtp.WriteFileTextAsync(String handle, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances.WriteFileTextStringStringString">
            <summary>Sets the shim of SFtp.WriteFileText(String handle, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances._SFtp">
            <summary>Sets the shim of SFtp.!SFtp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AllInstances._SFtp01">
            <summary>Sets the shim of SFtp.~SFtp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthFailReasonGet">
            <summary>Sets the shim of SFtp.get_AuthFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePkAsync(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthenticatePkStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePk(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthenticatePwAsyncStringString">
            <summary>Sets the shim of SFtp.AuthenticatePwAsync(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthenticatePwPkAsyncStringStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePwPkAsync(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthenticatePwPkStringStringSshKey">
            <summary>Sets the shim of SFtp.AuthenticatePwPk(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.AuthenticatePwStringString">
            <summary>Sets the shim of SFtp.AuthenticatePw(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.BandwidthThrottleDownGet">
            <summary>Sets the shim of SFtp.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of SFtp.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.BandwidthThrottleUpGet">
            <summary>Sets the shim of SFtp.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of SFtp.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtp.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClearAccumulateBuffer">
            <summary>Sets the shim of SFtp.ClearAccumulateBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClearCache">
            <summary>Sets the shim of SFtp.ClearCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClearSessionLog">
            <summary>Sets the shim of SFtp.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClientIdentifierGet">
            <summary>Sets the shim of SFtp.get_ClientIdentifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClientIdentifierSetString">
            <summary>Sets the shim of SFtp.set_ClientIdentifier(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClientIpAddressGet">
            <summary>Sets the shim of SFtp.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ClientIpAddressSetString">
            <summary>Sets the shim of SFtp.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.CloseHandleAsyncString">
            <summary>Sets the shim of SFtp.CloseHandleAsync(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.CloseHandleString">
            <summary>Sets the shim of SFtp.CloseHandle(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ConnectAsyncStringInt32">
            <summary>Sets the shim of SFtp.ConnectAsync(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ConnectStringInt32">
            <summary>Sets the shim of SFtp.Connect(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ConnectThroughSshAsyncSshStringInt32">
            <summary>Sets the shim of SFtp.ConnectThroughSshAsync(Ssh sshConn, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ConnectThroughSshSshStringInt32">
            <summary>Sets the shim of SFtp.ConnectThroughSsh(Ssh sshConn, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ConnectTimeoutMsGet">
            <summary>Sets the shim of SFtp.get_ConnectTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ConnectTimeoutMsSetInt32">
            <summary>Sets the shim of SFtp.set_ConnectTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.Constructor">
            <summary>Sets the shim of SFtp.SFtp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.CopyFileAttrAsyncStringStringBoolean">
            <summary>Sets the shim of SFtp.CopyFileAttrAsync(String localFilename, String remoteFilename, Boolean isHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.CopyFileAttrStringStringBoolean">
            <summary>Sets the shim of SFtp.CopyFileAttr(String localFilename, String remoteFilename, Boolean isHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.CreateDirAsyncString">
            <summary>Sets the shim of SFtp.CreateDirAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.CreateDirString">
            <summary>Sets the shim of SFtp.CreateDir(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DebugLogFilePathGet">
            <summary>Sets the shim of SFtp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DebugLogFilePathSetString">
            <summary>Sets the shim of SFtp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.Disconnect">
            <summary>Sets the shim of SFtp.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DisconnectCodeGet">
            <summary>Sets the shim of SFtp.get_DisconnectCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DisconnectReasonGet">
            <summary>Sets the shim of SFtp.get_DisconnectReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.Dispose">
            <summary>Sets the shim of SFtp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DisposeBoolean">
            <summary>Sets the shim of SFtp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadBdAsyncStringBinData">
            <summary>Sets the shim of SFtp.DownloadBdAsync(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadBdStringBinData">
            <summary>Sets the shim of SFtp.DownloadBd(String remoteFilePath, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadFileAsyncStringString">
            <summary>Sets the shim of SFtp.DownloadFileAsync(String handle, String toFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.DownloadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadFileByNameStringString">
            <summary>Sets the shim of SFtp.DownloadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadFileStringString">
            <summary>Sets the shim of SFtp.DownloadFile(String handle, String toFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadSbAsyncStringStringStringBuilder">
            <summary>Sets the shim of SFtp.DownloadSbAsync(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.DownloadSbStringStringStringBuilder">
            <summary>Sets the shim of SFtp.DownloadSb(String remoteFilePath, String charset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EnableCacheGet">
            <summary>Sets the shim of SFtp.get_EnableCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EnableCacheSetBoolean">
            <summary>Sets the shim of SFtp.set_EnableCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EnableCompressionGet">
            <summary>Sets the shim of SFtp.get_EnableCompression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EnableCompressionSetBoolean">
            <summary>Sets the shim of SFtp.set_EnableCompression(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EnableEventsGet">
            <summary>Sets the shim of SFtp.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EnableEventsSetBoolean">
            <summary>Sets the shim of SFtp.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.EofString">
            <summary>Sets the shim of SFtp.Eof(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FileExistsAsyncStringBoolean">
            <summary>Sets the shim of SFtp.FileExistsAsync(String remotePath, Boolean followLinks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FileExistsStringBoolean">
            <summary>Sets the shim of SFtp.FileExists(String remotePath, Boolean followLinks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FilenameCharsetGet">
            <summary>Sets the shim of SFtp.get_FilenameCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FilenameCharsetSetString">
            <summary>Sets the shim of SFtp.set_FilenameCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of SFtp.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FireDownloadRateObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.FireDownloadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of SFtp.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of SFtp.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SFtp.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.FireUploadRateObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.FireUploadRate(Object sender, DataRateEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ForceCipherGet">
            <summary>Sets the shim of SFtp.get_ForceCipher()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ForceCipherSetString">
            <summary>Sets the shim of SFtp.set_ForceCipher(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ForceV3Get">
            <summary>Sets the shim of SFtp.get_ForceV3()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ForceV3SetBoolean">
            <summary>Sets the shim of SFtp.set_ForceV3(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileCreateDtAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateDtAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileCreateDtStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateDt(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileCreateTimeStrAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateTimeStrAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileCreateTimeStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateTimeStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileCreateTimeStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileCreateTime(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileGroupAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileGroupAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileGroupStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileGroup(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastAccessDtAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessDtAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastAccessDtStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessDt(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastAccessStrAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessStrAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastAccessStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccessStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastAccessStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastAccess(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastModifiedDtAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedDtAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastModifiedDtStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedDt(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastModifiedStrAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedStrAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastModifiedStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModifiedStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileLastModifiedStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileLastModified(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileOwnerAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileOwnerAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileOwnerStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileOwner(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFilePermissionsAsyncStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFilePermissionsAsync(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFilePermissionsStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFilePermissions(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileSize32StringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileSize32(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileSize64StringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileSize64(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.GetFileSizeStrStringBooleanBoolean">
            <summary>Sets the shim of SFtp.GetFileSizeStr(String pathOrHandle, Boolean bFollowLinks, Boolean bIsHandle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HeartbeatMsGet">
            <summary>Sets the shim of SFtp.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HeartbeatMsSetInt32">
            <summary>Sets the shim of SFtp.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HostKeyAlgGet">
            <summary>Sets the shim of SFtp.get_HostKeyAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HostKeyAlgSetString">
            <summary>Sets the shim of SFtp.set_HostKeyAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HostKeyFingerprintGet">
            <summary>Sets the shim of SFtp.get_HostKeyFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyAuthMethodGet">
            <summary>Sets the shim of SFtp.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyDomainGet">
            <summary>Sets the shim of SFtp.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyDomainSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyHostnameGet">
            <summary>Sets the shim of SFtp.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyHostnameSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyPasswordGet">
            <summary>Sets the shim of SFtp.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyPasswordSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyPortGet">
            <summary>Sets the shim of SFtp.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyPortSetInt32">
            <summary>Sets the shim of SFtp.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyUsernameGet">
            <summary>Sets the shim of SFtp.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.HttpProxyUsernameSetString">
            <summary>Sets the shim of SFtp.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.IdleTimeoutMsGet">
            <summary>Sets the shim of SFtp.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of SFtp.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.IncludeDotDirsGet">
            <summary>Sets the shim of SFtp.get_IncludeDotDirs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.IncludeDotDirsSetBoolean">
            <summary>Sets the shim of SFtp.set_IncludeDotDirs(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.InitializeFailCodeGet">
            <summary>Sets the shim of SFtp.get_InitializeFailCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.InitializeFailReasonGet">
            <summary>Sets the shim of SFtp.get_InitializeFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.InitializeSftp">
            <summary>Sets the shim of SFtp.InitializeSftp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.InitializeSftpAsync">
            <summary>Sets the shim of SFtp.InitializeSftpAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.IsConnectedGet">
            <summary>Sets the shim of SFtp.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.KeepSessionLogGet">
            <summary>Sets the shim of SFtp.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.KeepSessionLogSetBoolean">
            <summary>Sets the shim of SFtp.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastErrorHtmlGet">
            <summary>Sets the shim of SFtp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastErrorTextGet">
            <summary>Sets the shim of SFtp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastErrorXmlGet">
            <summary>Sets the shim of SFtp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastMethodSuccessGet">
            <summary>Sets the shim of SFtp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SFtp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastReadFailedString">
            <summary>Sets the shim of SFtp.LastReadFailed(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.LastReadNumBytesString">
            <summary>Sets the shim of SFtp.LastReadNumBytes(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.MaxPacketSizeGet">
            <summary>Sets the shim of SFtp.get_MaxPacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.MaxPacketSizeSetInt32">
            <summary>Sets the shim of SFtp.set_MaxPacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnAbortCheckAddSFtpAbortCheckEventHandler">
            <summary>Sets the shim of SFtp.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of SFtp.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnAbortCheckRemoveSFtpAbortCheckEventHandler">
            <summary>Sets the shim of SFtp.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnDownloadRateAddSFtpDownloadRateEventHandler">
            <summary>Sets the shim of SFtp.add_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnDownloadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.raise_OnDownloadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnDownloadRateRemoveSFtpDownloadRateEventHandler">
            <summary>Sets the shim of SFtp.remove_OnDownloadRate(DownloadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnPercentDoneAddSFtpPercentDoneEventHandler">
            <summary>Sets the shim of SFtp.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of SFtp.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnPercentDoneRemoveSFtpPercentDoneEventHandler">
            <summary>Sets the shim of SFtp.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnProgressInfoAddSFtpProgressInfoEventHandler">
            <summary>Sets the shim of SFtp.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of SFtp.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnProgressInfoRemoveSFtpProgressInfoEventHandler">
            <summary>Sets the shim of SFtp.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnTaskCompletedAddSFtpTaskCompletedEventHandler">
            <summary>Sets the shim of SFtp.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SFtp.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnTaskCompletedRemoveSFtpTaskCompletedEventHandler">
            <summary>Sets the shim of SFtp.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnUploadRateAddSFtpUploadRateEventHandler">
            <summary>Sets the shim of SFtp.add_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnUploadRateRaiseObjectDataRateEventArgs">
            <summary>Sets the shim of SFtp.raise_OnUploadRate(Object value0, DataRateEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OnUploadRateRemoveSFtpUploadRateEventHandler">
            <summary>Sets the shim of SFtp.remove_OnUploadRate(UploadRateEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OpenDirAsyncString">
            <summary>Sets the shim of SFtp.OpenDirAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OpenDirString">
            <summary>Sets the shim of SFtp.OpenDir(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OpenFileAsyncStringStringString">
            <summary>Sets the shim of SFtp.OpenFileAsync(String remotePath, String access, String createDisposition)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.OpenFileStringStringString">
            <summary>Sets the shim of SFtp.OpenFile(String remotePath, String access, String createDisposition)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PasswordChangeRequestedGet">
            <summary>Sets the shim of SFtp.get_PasswordChangeRequested()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PercentDoneScaleGet">
            <summary>Sets the shim of SFtp.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PercentDoneScaleSetInt32">
            <summary>Sets the shim of SFtp.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PreferIpv6Get">
            <summary>Sets the shim of SFtp.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PreferIpv6SetBoolean">
            <summary>Sets the shim of SFtp.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PreserveDateGet">
            <summary>Sets the shim of SFtp.get_PreserveDate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.PreserveDateSetBoolean">
            <summary>Sets the shim of SFtp.set_PreserveDate(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ProtocolVersionGet">
            <summary>Sets the shim of SFtp.get_ProtocolVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadDirAsyncString">
            <summary>Sets the shim of SFtp.ReadDirAsync(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadDirMustMatchGet">
            <summary>Sets the shim of SFtp.get_ReadDirMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadDirMustMatchSetString">
            <summary>Sets the shim of SFtp.set_ReadDirMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadDirMustNotMatchGet">
            <summary>Sets the shim of SFtp.get_ReadDirMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadDirMustNotMatchSetString">
            <summary>Sets the shim of SFtp.set_ReadDirMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadDirString">
            <summary>Sets the shim of SFtp.ReadDir(String handle)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileBytes32StringInt32Int32">
            <summary>Sets the shim of SFtp.ReadFileBytes32(String handle, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileBytes64StringInt64Int32">
            <summary>Sets the shim of SFtp.ReadFileBytes64(String handle, Int64 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileBytes64sStringStringInt32">
            <summary>Sets the shim of SFtp.ReadFileBytes64s(String handle, String offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileBytesAsyncStringInt32">
            <summary>Sets the shim of SFtp.ReadFileBytesAsync(String handle, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileBytesStringInt32">
            <summary>Sets the shim of SFtp.ReadFileBytes(String handle, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileText32StringInt32Int32String">
            <summary>Sets the shim of SFtp.ReadFileText32(String handle, Int32 offset, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileText64StringInt64Int32String">
            <summary>Sets the shim of SFtp.ReadFileText64(String handle, Int64 offset, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileText64sStringStringInt32String">
            <summary>Sets the shim of SFtp.ReadFileText64s(String handle, String offset, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileTextAsyncStringInt32String">
            <summary>Sets the shim of SFtp.ReadFileTextAsync(String handle, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ReadFileTextStringInt32String">
            <summary>Sets the shim of SFtp.ReadFileText(String handle, Int32 numBytes, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RealPathAsyncStringString">
            <summary>Sets the shim of SFtp.RealPathAsync(String originalPath, String composePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RealPathStringString">
            <summary>Sets the shim of SFtp.RealPath(String originalPath, String composePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RemoveDirAsyncString">
            <summary>Sets the shim of SFtp.RemoveDirAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RemoveDirString">
            <summary>Sets the shim of SFtp.RemoveDir(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RemoveFileAsyncString">
            <summary>Sets the shim of SFtp.RemoveFileAsync(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RemoveFileString">
            <summary>Sets the shim of SFtp.RemoveFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RenameFileOrDirAsyncStringString">
            <summary>Sets the shim of SFtp.RenameFileOrDirAsync(String oldPath, String newPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.RenameFileOrDirStringString">
            <summary>Sets the shim of SFtp.RenameFileOrDir(String oldPath, String newPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ResumeDownloadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.ResumeDownloadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ResumeDownloadFileByNameStringString">
            <summary>Sets the shim of SFtp.ResumeDownloadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ResumeUploadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.ResumeUploadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ResumeUploadFileByNameStringString">
            <summary>Sets the shim of SFtp.ResumeUploadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SaveLastErrorString">
            <summary>Sets the shim of SFtp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SendIgnore">
            <summary>Sets the shim of SFtp.SendIgnore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SendIgnoreAsync">
            <summary>Sets the shim of SFtp.SendIgnoreAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SessionLogGet">
            <summary>Sets the shim of SFtp.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetCreateDtAsyncStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetCreateDtAsync(String pathOrHandle, Boolean isHandle, CkDateTime createDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetCreateDtStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetCreateDt(String pathOrHandle, Boolean isHandle, CkDateTime createDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetCreateTimeStrAsyncStringBooleanString">
            <summary>Sets the shim of SFtp.SetCreateTimeStrAsync(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetCreateTimeStrStringBooleanString">
            <summary>Sets the shim of SFtp.SetCreateTimeStr(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetCreateTimeStringBooleanDateTime">
            <summary>Sets the shim of SFtp.SetCreateTime(String pathOrHandle, Boolean isHandle, DateTime createDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastAccessDtAsyncStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastAccessDtAsync(String pathOrHandle, Boolean isHandle, CkDateTime accessDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastAccessDtStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastAccessDt(String pathOrHandle, Boolean isHandle, CkDateTime accessDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastAccessTimeStrAsyncStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastAccessTimeStrAsync(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastAccessTimeStrStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastAccessTimeStr(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastAccessTimeStringBooleanDateTime">
            <summary>Sets the shim of SFtp.SetLastAccessTime(String pathOrHandle, Boolean isHandle, DateTime accessDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastModifiedDtAsyncStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastModifiedDtAsync(String pathOrHandle, Boolean isHandle, CkDateTime modifiedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastModifiedDtStringBooleanCkDateTime">
            <summary>Sets the shim of SFtp.SetLastModifiedDt(String pathOrHandle, Boolean isHandle, CkDateTime modifiedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastModifiedTimeStrAsyncStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastModifiedTimeStrAsync(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastModifiedTimeStrStringBooleanString">
            <summary>Sets the shim of SFtp.SetLastModifiedTimeStr(String pathOrHandle, Boolean bIsHandle, String dateTimeStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetLastModifiedTimeStringBooleanDateTime">
            <summary>Sets the shim of SFtp.SetLastModifiedTime(String pathOrHandle, Boolean isHandle, DateTime modifiedDateTime)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetOwnerAndGroupAsyncStringBooleanStringString">
            <summary>Sets the shim of SFtp.SetOwnerAndGroupAsync(String pathOrHandle, Boolean isHandle, String owner, String group)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetOwnerAndGroupStringBooleanStringString">
            <summary>Sets the shim of SFtp.SetOwnerAndGroup(String pathOrHandle, Boolean isHandle, String owner, String group)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetPermissionsAsyncStringBooleanInt32">
            <summary>Sets the shim of SFtp.SetPermissionsAsync(String pathOrHandle, Boolean isHandle, Int32 permissions)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SetPermissionsStringBooleanInt32">
            <summary>Sets the shim of SFtp.SetPermissions(String pathOrHandle, Boolean isHandle, Int32 permissions)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SoRcvBufGet">
            <summary>Sets the shim of SFtp.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SoRcvBufSetInt32">
            <summary>Sets the shim of SFtp.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SoSndBufGet">
            <summary>Sets the shim of SFtp.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SoSndBufSetInt32">
            <summary>Sets the shim of SFtp.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksHostnameGet">
            <summary>Sets the shim of SFtp.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksHostnameSetString">
            <summary>Sets the shim of SFtp.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksPasswordGet">
            <summary>Sets the shim of SFtp.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksPasswordSetString">
            <summary>Sets the shim of SFtp.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksPortGet">
            <summary>Sets the shim of SFtp.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksPortSetInt32">
            <summary>Sets the shim of SFtp.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksUsernameGet">
            <summary>Sets the shim of SFtp.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksUsernameSetString">
            <summary>Sets the shim of SFtp.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksVersionGet">
            <summary>Sets the shim of SFtp.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SocksVersionSetInt32">
            <summary>Sets the shim of SFtp.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncDirectivesGet">
            <summary>Sets the shim of SFtp.get_SyncDirectives()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncDirectivesSetString">
            <summary>Sets the shim of SFtp.set_SyncDirectives(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncMustMatchGet">
            <summary>Sets the shim of SFtp.get_SyncMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncMustMatchSetString">
            <summary>Sets the shim of SFtp.set_SyncMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncMustNotMatchGet">
            <summary>Sets the shim of SFtp.get_SyncMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncMustNotMatchSetString">
            <summary>Sets the shim of SFtp.set_SyncMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncTreeDownloadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeDownloadAsync(String remoteRoot, String localRoot, Int32 mode, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncTreeDownloadStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeDownload(String remoteRoot, String localRoot, Int32 mode, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncTreeUploadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeUploadAsync(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncTreeUploadStringStringInt32Boolean">
            <summary>Sets the shim of SFtp.SyncTreeUpload(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncedFilesGet">
            <summary>Sets the shim of SFtp.get_SyncedFiles()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.SyncedFilesSetString">
            <summary>Sets the shim of SFtp.set_SyncedFiles(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.TcpNoDelayGet">
            <summary>Sets the shim of SFtp.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.TcpNoDelaySetBoolean">
            <summary>Sets the shim of SFtp.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.ToString">
            <summary>Sets the shim of SFtp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UnlockComponentString">
            <summary>Sets the shim of SFtp.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadBdAsyncBinDataString">
            <summary>Sets the shim of SFtp.UploadBdAsync(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadBdBinDataString">
            <summary>Sets the shim of SFtp.UploadBd(BinData binData, String remoteFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadChunkSizeGet">
            <summary>Sets the shim of SFtp.get_UploadChunkSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadChunkSizeSetInt32">
            <summary>Sets the shim of SFtp.set_UploadChunkSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadFileAsyncStringString">
            <summary>Sets the shim of SFtp.UploadFileAsync(String handle, String fromFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadFileByNameAsyncStringString">
            <summary>Sets the shim of SFtp.UploadFileByNameAsync(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadFileByNameStringString">
            <summary>Sets the shim of SFtp.UploadFileByName(String remoteFilePath, String localFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadFileStringString">
            <summary>Sets the shim of SFtp.UploadFile(String handle, String fromFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadSbAsyncStringBuilderStringStringBoolean">
            <summary>Sets the shim of SFtp.UploadSbAsync(StringBuilder sb, String remoteFilePath, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UploadSbStringBuilderStringStringBoolean">
            <summary>Sets the shim of SFtp.UploadSb(StringBuilder sb, String remoteFilePath, String charset, Boolean includeBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UtcModeGet">
            <summary>Sets the shim of SFtp.get_UtcMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.UtcModeSetBoolean">
            <summary>Sets the shim of SFtp.set_UtcMode(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.VerboseLoggingGet">
            <summary>Sets the shim of SFtp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.VerboseLoggingSetBoolean">
            <summary>Sets the shim of SFtp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.VersionGet">
            <summary>Sets the shim of SFtp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileBytes32StringInt32ByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes32(String handle, Int32 offset, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileBytes64StringInt64ByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes64(String handle, Int64 offset64, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileBytes64sStringStringByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes64s(String handle, String offset64, Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileBytesAsyncStringByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytesAsync(String handle, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileBytesStringByteArray">
            <summary>Sets the shim of SFtp.WriteFileBytes(String handle, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileText32StringInt32StringString">
            <summary>Sets the shim of SFtp.WriteFileText32(String handle, Int32 offset32, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileText64StringInt64StringString">
            <summary>Sets the shim of SFtp.WriteFileText64(String handle, Int64 offset64, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileText64sStringStringStringString">
            <summary>Sets the shim of SFtp.WriteFileText64s(String handle, String offset64, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileTextAsyncStringStringString">
            <summary>Sets the shim of SFtp.WriteFileTextAsync(String handle, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp.WriteFileTextStringStringString">
            <summary>Sets the shim of SFtp.WriteFileText(String handle, String charset, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp._SFtp">
            <summary>Sets the shim of SFtp.!SFtp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtp._SFtp01">
            <summary>Sets the shim of SFtp.~SFtp()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSFtpDir">
            <summary>Shim type of Chilkat.SFtpDir</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpDir.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpDir.#ctor(Chilkat.SFtpDir)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSFtpDir.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.Dispose">
            <summary>Sets the shim of SFtpDir.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SFtpDir.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.GetFileObjectInt32">
            <summary>Sets the shim of SFtpDir.GetFileObject(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.GetFilenameInt32">
            <summary>Sets the shim of SFtpDir.GetFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of SFtpDir.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SFtpDir.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of SFtpDir.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.NumFilesAndDirsGet">
            <summary>Sets the shim of SFtpDir.get_NumFilesAndDirs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.OriginalPathGet">
            <summary>Sets the shim of SFtpDir.get_OriginalPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances.ToString01">
            <summary>Sets the shim of SFtpDir.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances._SFtpDir">
            <summary>Sets the shim of SFtpDir.!SFtpDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.AllInstances._SFtpDir01">
            <summary>Sets the shim of SFtpDir.~SFtpDir()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpDir.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpDir.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpDir.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.Constructor">
            <summary>Sets the shim of SFtpDir.SFtpDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.Dispose">
            <summary>Sets the shim of SFtpDir.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.DisposeBoolean">
            <summary>Sets the shim of SFtpDir.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.GetFileObjectInt32">
            <summary>Sets the shim of SFtpDir.GetFileObject(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.GetFilenameInt32">
            <summary>Sets the shim of SFtpDir.GetFilename(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.LastMethodSuccessGet">
            <summary>Sets the shim of SFtpDir.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SFtpDir.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.LoadTaskResultTask">
            <summary>Sets the shim of SFtpDir.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.NumFilesAndDirsGet">
            <summary>Sets the shim of SFtpDir.get_NumFilesAndDirs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.OriginalPathGet">
            <summary>Sets the shim of SFtpDir.get_OriginalPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir.ToString">
            <summary>Sets the shim of SFtpDir.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir._SFtpDir">
            <summary>Sets the shim of SFtpDir.!SFtpDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpDir._SFtpDir01">
            <summary>Sets the shim of SFtpDir.~SFtpDir()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSFtpFile">
            <summary>Shim type of Chilkat.SFtpFile</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpFile.#ctor(Chilkat.SFtpFile)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSFtpFile.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.CreateTimeGet">
            <summary>Sets the shim of SFtpFile.get_CreateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.CreateTimeStrGet">
            <summary>Sets the shim of SFtpFile.get_CreateTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.Dispose">
            <summary>Sets the shim of SFtpFile.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SFtpFile.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.FileTypeGet">
            <summary>Sets the shim of SFtpFile.get_FileType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.FilenameGet">
            <summary>Sets the shim of SFtpFile.get_Filename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.GetCreateDt">
            <summary>Sets the shim of SFtpFile.GetCreateDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.GetLastAccessDt">
            <summary>Sets the shim of SFtpFile.GetLastAccessDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.GetLastModifiedDt">
            <summary>Sets the shim of SFtpFile.GetLastModifiedDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.GidGet">
            <summary>Sets the shim of SFtpFile.get_Gid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.GroupGet">
            <summary>Sets the shim of SFtpFile.get_Group()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsAppendOnlyGet">
            <summary>Sets the shim of SFtpFile.get_IsAppendOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsArchiveGet">
            <summary>Sets the shim of SFtpFile.get_IsArchive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsCaseInsensitiveGet">
            <summary>Sets the shim of SFtpFile.get_IsCaseInsensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsCompressedGet">
            <summary>Sets the shim of SFtpFile.get_IsCompressed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of SFtpFile.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsEncryptedGet">
            <summary>Sets the shim of SFtpFile.get_IsEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsHiddenGet">
            <summary>Sets the shim of SFtpFile.get_IsHidden()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsImmutableGet">
            <summary>Sets the shim of SFtpFile.get_IsImmutable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of SFtpFile.get_IsReadOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsRegularGet">
            <summary>Sets the shim of SFtpFile.get_IsRegular()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsSparseGet">
            <summary>Sets the shim of SFtpFile.get_IsSparse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsSymLinkGet">
            <summary>Sets the shim of SFtpFile.get_IsSymLink()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsSyncGet">
            <summary>Sets the shim of SFtpFile.get_IsSync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.IsSystemGet">
            <summary>Sets the shim of SFtpFile.get_IsSystem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.LastAccessTimeGet">
            <summary>Sets the shim of SFtpFile.get_LastAccessTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.LastAccessTimeStrGet">
            <summary>Sets the shim of SFtpFile.get_LastAccessTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of SFtpFile.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SFtpFile.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.LastModifiedTimeGet">
            <summary>Sets the shim of SFtpFile.get_LastModifiedTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.LastModifiedTimeStrGet">
            <summary>Sets the shim of SFtpFile.get_LastModifiedTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.OwnerGet">
            <summary>Sets the shim of SFtpFile.get_Owner()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.PermissionsGet">
            <summary>Sets the shim of SFtpFile.get_Permissions()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.Size32Get">
            <summary>Sets the shim of SFtpFile.get_Size32()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.Size64Get">
            <summary>Sets the shim of SFtpFile.get_Size64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.SizeStrGet">
            <summary>Sets the shim of SFtpFile.get_SizeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.ToString01">
            <summary>Sets the shim of SFtpFile.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances.UidGet">
            <summary>Sets the shim of SFtpFile.get_Uid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances._SFtpFile">
            <summary>Sets the shim of SFtpFile.!SFtpFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.AllInstances._SFtpFile01">
            <summary>Sets the shim of SFtpFile.~SFtpFile()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSFtpFile.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.Constructor">
            <summary>Sets the shim of SFtpFile.SFtpFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.CreateTimeGet">
            <summary>Sets the shim of SFtpFile.get_CreateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.CreateTimeStrGet">
            <summary>Sets the shim of SFtpFile.get_CreateTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.Dispose">
            <summary>Sets the shim of SFtpFile.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.DisposeBoolean">
            <summary>Sets the shim of SFtpFile.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.FileTypeGet">
            <summary>Sets the shim of SFtpFile.get_FileType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.FilenameGet">
            <summary>Sets the shim of SFtpFile.get_Filename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.GetCreateDt">
            <summary>Sets the shim of SFtpFile.GetCreateDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.GetLastAccessDt">
            <summary>Sets the shim of SFtpFile.GetLastAccessDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.GetLastModifiedDt">
            <summary>Sets the shim of SFtpFile.GetLastModifiedDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.GidGet">
            <summary>Sets the shim of SFtpFile.get_Gid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.GroupGet">
            <summary>Sets the shim of SFtpFile.get_Group()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsAppendOnlyGet">
            <summary>Sets the shim of SFtpFile.get_IsAppendOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsArchiveGet">
            <summary>Sets the shim of SFtpFile.get_IsArchive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsCaseInsensitiveGet">
            <summary>Sets the shim of SFtpFile.get_IsCaseInsensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsCompressedGet">
            <summary>Sets the shim of SFtpFile.get_IsCompressed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsDirectoryGet">
            <summary>Sets the shim of SFtpFile.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsEncryptedGet">
            <summary>Sets the shim of SFtpFile.get_IsEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsHiddenGet">
            <summary>Sets the shim of SFtpFile.get_IsHidden()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsImmutableGet">
            <summary>Sets the shim of SFtpFile.get_IsImmutable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsReadOnlyGet">
            <summary>Sets the shim of SFtpFile.get_IsReadOnly()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsRegularGet">
            <summary>Sets the shim of SFtpFile.get_IsRegular()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsSparseGet">
            <summary>Sets the shim of SFtpFile.get_IsSparse()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsSymLinkGet">
            <summary>Sets the shim of SFtpFile.get_IsSymLink()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsSyncGet">
            <summary>Sets the shim of SFtpFile.get_IsSync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.IsSystemGet">
            <summary>Sets the shim of SFtpFile.get_IsSystem()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.LastAccessTimeGet">
            <summary>Sets the shim of SFtpFile.get_LastAccessTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.LastAccessTimeStrGet">
            <summary>Sets the shim of SFtpFile.get_LastAccessTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.LastMethodSuccessGet">
            <summary>Sets the shim of SFtpFile.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SFtpFile.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.LastModifiedTimeGet">
            <summary>Sets the shim of SFtpFile.get_LastModifiedTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.LastModifiedTimeStrGet">
            <summary>Sets the shim of SFtpFile.get_LastModifiedTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.OwnerGet">
            <summary>Sets the shim of SFtpFile.get_Owner()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.PermissionsGet">
            <summary>Sets the shim of SFtpFile.get_Permissions()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.Size32Get">
            <summary>Sets the shim of SFtpFile.get_Size32()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.Size64Get">
            <summary>Sets the shim of SFtpFile.get_Size64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.SizeStrGet">
            <summary>Sets the shim of SFtpFile.get_SizeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.ToString">
            <summary>Sets the shim of SFtpFile.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile.UidGet">
            <summary>Sets the shim of SFtpFile.get_Uid()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile._SFtpFile">
            <summary>Sets the shim of SFtpFile.!SFtpFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSFtpFile._SFtpFile01">
            <summary>Sets the shim of SFtpFile.~SFtpFile()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimScp">
            <summary>Shim type of Chilkat.Scp</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimScp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimScp.#ctor(Chilkat.Scp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AbortCurrentGet">
            <summary>Sets the shim of Scp.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AbortCurrentSetBoolean">
            <summary>Sets the shim of Scp.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimScp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Scp.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Scp.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Scp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Scp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.Dispose">
            <summary>Sets the shim of Scp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Scp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadBinaryAsyncString">
            <summary>Sets the shim of Scp.DownloadBinaryAsync(String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadBinaryEncodedAsyncStringString">
            <summary>Sets the shim of Scp.DownloadBinaryEncodedAsync(String remotePath, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadBinaryEncodedStringString">
            <summary>Sets the shim of Scp.DownloadBinaryEncoded(String remotePath, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadBinaryString">
            <summary>Sets the shim of Scp.DownloadBinary(String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadFileAsyncStringString">
            <summary>Sets the shim of Scp.DownloadFileAsync(String remotePath, String localPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadFileStringString">
            <summary>Sets the shim of Scp.DownloadFile(String remotePath, String localPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadStringAsyncStringString">
            <summary>Sets the shim of Scp.DownloadStringAsync(String remotePath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.DownloadStringStringString">
            <summary>Sets the shim of Scp.DownloadString(String remotePath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Scp.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Scp.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Scp.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Scp.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Scp.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Scp.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Scp.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Scp.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Scp.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Scp.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Scp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Scp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Scp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Scp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Scp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnAbortCheckAddScpAbortCheckEventHandler">
            <summary>Sets the shim of Scp.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Scp.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnAbortCheckRemoveScpAbortCheckEventHandler">
            <summary>Sets the shim of Scp.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnBinaryDataAddScpBinaryDataEventHandler">
            <summary>Sets the shim of Scp.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Scp.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnBinaryDataRemoveScpBinaryDataEventHandler">
            <summary>Sets the shim of Scp.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnPercentDoneAddScpPercentDoneEventHandler">
            <summary>Sets the shim of Scp.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Scp.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnPercentDoneRemoveScpPercentDoneEventHandler">
            <summary>Sets the shim of Scp.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnProgressInfoAddScpProgressInfoEventHandler">
            <summary>Sets the shim of Scp.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Scp.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnProgressInfoRemoveScpProgressInfoEventHandler">
            <summary>Sets the shim of Scp.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnTaskCompletedAddScpTaskCompletedEventHandler">
            <summary>Sets the shim of Scp.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Scp.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnTaskCompletedRemoveScpTaskCompletedEventHandler">
            <summary>Sets the shim of Scp.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnTextDataAddScpTextDataEventHandler">
            <summary>Sets the shim of Scp.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Scp.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.OnTextDataRemoveScpTextDataEventHandler">
            <summary>Sets the shim of Scp.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Scp.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Scp.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Scp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustMatchDirGet">
            <summary>Sets the shim of Scp.get_SyncMustMatchDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustMatchDirSetString">
            <summary>Sets the shim of Scp.set_SyncMustMatchDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustMatchGet">
            <summary>Sets the shim of Scp.get_SyncMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustMatchSetString">
            <summary>Sets the shim of Scp.set_SyncMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustNotMatchDirGet">
            <summary>Sets the shim of Scp.get_SyncMustNotMatchDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustNotMatchDirSetString">
            <summary>Sets the shim of Scp.set_SyncMustNotMatchDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustNotMatchGet">
            <summary>Sets the shim of Scp.get_SyncMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncMustNotMatchSetString">
            <summary>Sets the shim of Scp.set_SyncMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncTreeDownloadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeDownloadAsync(String remoteRoot, String localRoot, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncTreeDownloadStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeDownload(String remoteRoot, String localRoot, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncTreeUploadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeUploadAsync(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncTreeUploadStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeUpload(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncedFilesGet">
            <summary>Sets the shim of Scp.get_SyncedFiles()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.SyncedFilesSetString">
            <summary>Sets the shim of Scp.set_SyncedFiles(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.ToString01">
            <summary>Sets the shim of Scp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadBinaryAsyncStringByteArray">
            <summary>Sets the shim of Scp.UploadBinaryAsync(String remotePath, Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadBinaryEncodedAsyncStringStringString">
            <summary>Sets the shim of Scp.UploadBinaryEncodedAsync(String remotePath, String encodedData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadBinaryEncodedStringStringString">
            <summary>Sets the shim of Scp.UploadBinaryEncoded(String remotePath, String encodedData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadBinaryStringByteArray">
            <summary>Sets the shim of Scp.UploadBinary(String remotePath, Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadFileAsyncStringString">
            <summary>Sets the shim of Scp.UploadFileAsync(String localPath, String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadFileStringString">
            <summary>Sets the shim of Scp.UploadFile(String localPath, String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadStringAsyncStringStringString">
            <summary>Sets the shim of Scp.UploadStringAsync(String remotePath, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UploadStringStringStringString">
            <summary>Sets the shim of Scp.UploadString(String remotePath, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.UseSshSsh">
            <summary>Sets the shim of Scp.UseSsh(Ssh sshConnection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Scp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Scp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances.VersionGet">
            <summary>Sets the shim of Scp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances._Scp">
            <summary>Sets the shim of Scp.!Scp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.AllInstances._Scp01">
            <summary>Sets the shim of Scp.~Scp()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimScp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimScp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimScp.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.Constructor">
            <summary>Sets the shim of Scp.Scp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DebugLogFilePathGet">
            <summary>Sets the shim of Scp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DebugLogFilePathSetString">
            <summary>Sets the shim of Scp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.Dispose">
            <summary>Sets the shim of Scp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DisposeBoolean">
            <summary>Sets the shim of Scp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadBinaryAsyncString">
            <summary>Sets the shim of Scp.DownloadBinaryAsync(String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadBinaryEncodedAsyncStringString">
            <summary>Sets the shim of Scp.DownloadBinaryEncodedAsync(String remotePath, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadBinaryEncodedStringString">
            <summary>Sets the shim of Scp.DownloadBinaryEncoded(String remotePath, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadBinaryString">
            <summary>Sets the shim of Scp.DownloadBinary(String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadFileAsyncStringString">
            <summary>Sets the shim of Scp.DownloadFileAsync(String remotePath, String localPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadFileStringString">
            <summary>Sets the shim of Scp.DownloadFile(String remotePath, String localPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadStringAsyncStringString">
            <summary>Sets the shim of Scp.DownloadStringAsync(String remotePath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.DownloadStringStringString">
            <summary>Sets the shim of Scp.DownloadString(String remotePath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.EnableEventsGet">
            <summary>Sets the shim of Scp.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.EnableEventsSetBoolean">
            <summary>Sets the shim of Scp.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Scp.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Scp.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Scp.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Scp.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Scp.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Scp.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.HeartbeatMsGet">
            <summary>Sets the shim of Scp.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.HeartbeatMsSetInt32">
            <summary>Sets the shim of Scp.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.LastErrorHtmlGet">
            <summary>Sets the shim of Scp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.LastErrorTextGet">
            <summary>Sets the shim of Scp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.LastErrorXmlGet">
            <summary>Sets the shim of Scp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.LastMethodSuccessGet">
            <summary>Sets the shim of Scp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Scp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnAbortCheckAddScpAbortCheckEventHandler">
            <summary>Sets the shim of Scp.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Scp.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnAbortCheckRemoveScpAbortCheckEventHandler">
            <summary>Sets the shim of Scp.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnBinaryDataAddScpBinaryDataEventHandler">
            <summary>Sets the shim of Scp.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Scp.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnBinaryDataRemoveScpBinaryDataEventHandler">
            <summary>Sets the shim of Scp.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnPercentDoneAddScpPercentDoneEventHandler">
            <summary>Sets the shim of Scp.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Scp.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnPercentDoneRemoveScpPercentDoneEventHandler">
            <summary>Sets the shim of Scp.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnProgressInfoAddScpProgressInfoEventHandler">
            <summary>Sets the shim of Scp.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Scp.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnProgressInfoRemoveScpProgressInfoEventHandler">
            <summary>Sets the shim of Scp.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnTaskCompletedAddScpTaskCompletedEventHandler">
            <summary>Sets the shim of Scp.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Scp.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnTaskCompletedRemoveScpTaskCompletedEventHandler">
            <summary>Sets the shim of Scp.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnTextDataAddScpTextDataEventHandler">
            <summary>Sets the shim of Scp.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Scp.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.OnTextDataRemoveScpTextDataEventHandler">
            <summary>Sets the shim of Scp.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.PercentDoneScaleGet">
            <summary>Sets the shim of Scp.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Scp.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SaveLastErrorString">
            <summary>Sets the shim of Scp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustMatchDirGet">
            <summary>Sets the shim of Scp.get_SyncMustMatchDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustMatchDirSetString">
            <summary>Sets the shim of Scp.set_SyncMustMatchDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustMatchGet">
            <summary>Sets the shim of Scp.get_SyncMustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustMatchSetString">
            <summary>Sets the shim of Scp.set_SyncMustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustNotMatchDirGet">
            <summary>Sets the shim of Scp.get_SyncMustNotMatchDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustNotMatchDirSetString">
            <summary>Sets the shim of Scp.set_SyncMustNotMatchDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustNotMatchGet">
            <summary>Sets the shim of Scp.get_SyncMustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncMustNotMatchSetString">
            <summary>Sets the shim of Scp.set_SyncMustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncTreeDownloadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeDownloadAsync(String remoteRoot, String localRoot, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncTreeDownloadStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeDownload(String remoteRoot, String localRoot, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncTreeUploadAsyncStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeUploadAsync(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncTreeUploadStringStringInt32Boolean">
            <summary>Sets the shim of Scp.SyncTreeUpload(String localBaseDir, String remoteBaseDir, Int32 mode, Boolean bRecurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncedFilesGet">
            <summary>Sets the shim of Scp.get_SyncedFiles()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.SyncedFilesSetString">
            <summary>Sets the shim of Scp.set_SyncedFiles(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.ToString">
            <summary>Sets the shim of Scp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadBinaryAsyncStringByteArray">
            <summary>Sets the shim of Scp.UploadBinaryAsync(String remotePath, Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadBinaryEncodedAsyncStringStringString">
            <summary>Sets the shim of Scp.UploadBinaryEncodedAsync(String remotePath, String encodedData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadBinaryEncodedStringStringString">
            <summary>Sets the shim of Scp.UploadBinaryEncoded(String remotePath, String encodedData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadBinaryStringByteArray">
            <summary>Sets the shim of Scp.UploadBinary(String remotePath, Byte[] binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadFileAsyncStringString">
            <summary>Sets the shim of Scp.UploadFileAsync(String localPath, String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadFileStringString">
            <summary>Sets the shim of Scp.UploadFile(String localPath, String remotePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadStringAsyncStringStringString">
            <summary>Sets the shim of Scp.UploadStringAsync(String remotePath, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UploadStringStringStringString">
            <summary>Sets the shim of Scp.UploadString(String remotePath, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.UseSshSsh">
            <summary>Sets the shim of Scp.UseSsh(Ssh sshConnection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.VerboseLoggingGet">
            <summary>Sets the shim of Scp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Scp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp.VersionGet">
            <summary>Sets the shim of Scp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp._Scp">
            <summary>Sets the shim of Scp.!Scp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimScp._Scp01">
            <summary>Sets the shim of Scp.~Scp()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimServerSentEvent">
            <summary>Shim type of Chilkat.ServerSentEvent</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimServerSentEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimServerSentEvent.#ctor(Chilkat.ServerSentEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimServerSentEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.DataGet">
            <summary>Sets the shim of ServerSentEvent.get_Data()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.Dispose">
            <summary>Sets the shim of ServerSentEvent.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ServerSentEvent.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.EventNameGet">
            <summary>Sets the shim of ServerSentEvent.get_EventName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.LastEventIdGet">
            <summary>Sets the shim of ServerSentEvent.get_LastEventId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of ServerSentEvent.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of ServerSentEvent.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.LoadEventString">
            <summary>Sets the shim of ServerSentEvent.LoadEvent(String eventText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.RetryGet">
            <summary>Sets the shim of ServerSentEvent.get_Retry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances.ToString01">
            <summary>Sets the shim of ServerSentEvent.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances._ServerSentEvent">
            <summary>Sets the shim of ServerSentEvent.!ServerSentEvent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.AllInstances._ServerSentEvent01">
            <summary>Sets the shim of ServerSentEvent.~ServerSentEvent()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimServerSentEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimServerSentEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimServerSentEvent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.Constructor">
            <summary>Sets the shim of ServerSentEvent.ServerSentEvent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.DataGet">
            <summary>Sets the shim of ServerSentEvent.get_Data()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.Dispose">
            <summary>Sets the shim of ServerSentEvent.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.DisposeBoolean">
            <summary>Sets the shim of ServerSentEvent.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.EventNameGet">
            <summary>Sets the shim of ServerSentEvent.get_EventName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.LastEventIdGet">
            <summary>Sets the shim of ServerSentEvent.get_LastEventId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.LastMethodSuccessGet">
            <summary>Sets the shim of ServerSentEvent.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of ServerSentEvent.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.LoadEventString">
            <summary>Sets the shim of ServerSentEvent.LoadEvent(String eventText)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.RetryGet">
            <summary>Sets the shim of ServerSentEvent.get_Retry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent.ToString">
            <summary>Sets the shim of ServerSentEvent.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent._ServerSentEvent">
            <summary>Sets the shim of ServerSentEvent.!ServerSentEvent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimServerSentEvent._ServerSentEvent01">
            <summary>Sets the shim of ServerSentEvent.~ServerSentEvent()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimService">
            <summary>Shim type of Chilkat.Service</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimService.#ctor(Chilkat.Service)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.AutoStartGet">
            <summary>Sets the shim of Service.get_AutoStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.AutoStartSetBoolean">
            <summary>Sets the shim of Service.set_AutoStart(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.Disable">
            <summary>Sets the shim of Service.Disable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.DisplayNameGet">
            <summary>Sets the shim of Service.get_DisplayName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of Service.set_DisplayName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.Dispose">
            <summary>Sets the shim of Service.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Service.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.ExeFilenameGet">
            <summary>Sets the shim of Service.get_ExeFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.ExeFilenameSetString">
            <summary>Sets the shim of Service.set_ExeFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.Install">
            <summary>Sets the shim of Service.Install()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.IsAutoStart">
            <summary>Sets the shim of Service.IsAutoStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.IsDemandStart">
            <summary>Sets the shim of Service.IsDemandStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.IsDisabled">
            <summary>Sets the shim of Service.IsDisabled()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.IsInstalled">
            <summary>Sets the shim of Service.IsInstalled()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.IsRunning">
            <summary>Sets the shim of Service.IsRunning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Service.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Service.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Service.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.ServiceNameGet">
            <summary>Sets the shim of Service.get_ServiceName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.ServiceNameSetString">
            <summary>Sets the shim of Service.set_ServiceName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.SetAutoStart">
            <summary>Sets the shim of Service.SetAutoStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.SetDemandStart">
            <summary>Sets the shim of Service.SetDemandStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.Start">
            <summary>Sets the shim of Service.Start()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.Stop">
            <summary>Sets the shim of Service.Stop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances.Uninstall">
            <summary>Sets the shim of Service.Uninstall()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances._Service">
            <summary>Sets the shim of Service.!Service()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AllInstances._Service01">
            <summary>Sets the shim of Service.~Service()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AutoStartGet">
            <summary>Sets the shim of Service.get_AutoStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.AutoStartSetBoolean">
            <summary>Sets the shim of Service.set_AutoStart(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimService.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Constructor">
            <summary>Sets the shim of Service.Service()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Disable">
            <summary>Sets the shim of Service.Disable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.DisplayNameGet">
            <summary>Sets the shim of Service.get_DisplayName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.DisplayNameSetString">
            <summary>Sets the shim of Service.set_DisplayName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Dispose">
            <summary>Sets the shim of Service.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.DisposeBoolean">
            <summary>Sets the shim of Service.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.ExeFilenameGet">
            <summary>Sets the shim of Service.get_ExeFilename()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.ExeFilenameSetString">
            <summary>Sets the shim of Service.set_ExeFilename(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Install">
            <summary>Sets the shim of Service.Install()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.IsAutoStart">
            <summary>Sets the shim of Service.IsAutoStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.IsDemandStart">
            <summary>Sets the shim of Service.IsDemandStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.IsDisabled">
            <summary>Sets the shim of Service.IsDisabled()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.IsInstalled">
            <summary>Sets the shim of Service.IsInstalled()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.IsRunning">
            <summary>Sets the shim of Service.IsRunning()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.LastErrorHtmlGet">
            <summary>Sets the shim of Service.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.LastErrorTextGet">
            <summary>Sets the shim of Service.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.LastErrorXmlGet">
            <summary>Sets the shim of Service.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.ServiceNameGet">
            <summary>Sets the shim of Service.get_ServiceName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.ServiceNameSetString">
            <summary>Sets the shim of Service.set_ServiceName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.SetAutoStart">
            <summary>Sets the shim of Service.SetAutoStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.SetDemandStart">
            <summary>Sets the shim of Service.SetDemandStart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Start">
            <summary>Sets the shim of Service.Start()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Stop">
            <summary>Sets the shim of Service.Stop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService.Uninstall">
            <summary>Sets the shim of Service.Uninstall()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService._Service">
            <summary>Sets the shim of Service.!Service()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimService._Service01">
            <summary>Sets the shim of Service.~Service()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSocket">
            <summary>Shim type of Chilkat.Socket</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSocket.#ctor(Chilkat.Socket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AbortCurrentGet">
            <summary>Sets the shim of Socket.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AbortCurrentSetBoolean">
            <summary>Sets the shim of Socket.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AcceptFailReasonGet">
            <summary>Sets the shim of Socket.get_AcceptFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AcceptNextConnectionAsyncInt32">
            <summary>Sets the shim of Socket.AcceptNextConnectionAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AcceptNextConnectionInt32">
            <summary>Sets the shim of Socket.AcceptNextConnection(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AddSslAcceptableClientCaDnString">
            <summary>Sets the shim of Socket.AddSslAcceptableClientCaDn(String certAuthDN)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Socket.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Socket.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AcceptFailReasonGet">
            <summary>Sets the shim of Socket.get_AcceptFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AcceptNextConnectionAsyncInt32">
            <summary>Sets the shim of Socket.AcceptNextConnectionAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AcceptNextConnectionInt32">
            <summary>Sets the shim of Socket.AcceptNextConnection(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AddSslAcceptableClientCaDnString">
            <summary>Sets the shim of Socket.AddSslAcceptableClientCaDn(String certAuthDN)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncAcceptAbort">
            <summary>Sets the shim of Socket.AsyncAcceptAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncAcceptFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncAcceptFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncAcceptLogGet">
            <summary>Sets the shim of Socket.get_AsyncAcceptLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncAcceptSocket">
            <summary>Sets the shim of Socket.AsyncAcceptSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncAcceptStartInt32">
            <summary>Sets the shim of Socket.AsyncAcceptStart(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncAcceptSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncAcceptSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncConnectAbort">
            <summary>Sets the shim of Socket.AsyncConnectAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncConnectFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncConnectFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncConnectLogGet">
            <summary>Sets the shim of Socket.get_AsyncConnectLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncConnectStartStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.AsyncConnectStart(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncConnectSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncConnectSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncDnsAbort">
            <summary>Sets the shim of Socket.AsyncDnsAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncDnsFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncDnsFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncDnsLogGet">
            <summary>Sets the shim of Socket.get_AsyncDnsLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncDnsResultGet">
            <summary>Sets the shim of Socket.get_AsyncDnsResult()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncDnsStartStringInt32">
            <summary>Sets the shim of Socket.AsyncDnsStart(String hostname, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncDnsSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncDnsSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveAbort">
            <summary>Sets the shim of Socket.AsyncReceiveAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveBytes">
            <summary>Sets the shim of Socket.AsyncReceiveBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveBytesNUInt32">
            <summary>Sets the shim of Socket.AsyncReceiveBytesN(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncReceiveFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveLogGet">
            <summary>Sets the shim of Socket.get_AsyncReceiveLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveString">
            <summary>Sets the shim of Socket.AsyncReceiveString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncReceiveSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveToCRLF">
            <summary>Sets the shim of Socket.AsyncReceiveToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceiveUntilMatchString">
            <summary>Sets the shim of Socket.AsyncReceiveUntilMatch(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceivedBytesGet">
            <summary>Sets the shim of Socket.get_AsyncReceivedBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncReceivedStringGet">
            <summary>Sets the shim of Socket.get_AsyncReceivedString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendAbort">
            <summary>Sets the shim of Socket.AsyncSendAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendByteDataByteArray">
            <summary>Sets the shim of Socket.AsyncSendByteData(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendBytesByteArray">
            <summary>Sets the shim of Socket.AsyncSendBytes(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncSendFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendLogGet">
            <summary>Sets the shim of Socket.get_AsyncSendLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendStringString">
            <summary>Sets the shim of Socket.AsyncSendString(String stringToSend)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.AsyncSendSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncSendSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BandwidthThrottleDownGet">
            <summary>Sets the shim of Socket.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of Socket.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BandwidthThrottleUpGet">
            <summary>Sets the shim of Socket.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Socket.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BigEndianGet">
            <summary>Sets the shim of Socket.get_BigEndian()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BigEndianSetBoolean">
            <summary>Sets the shim of Socket.set_BigEndian(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BindAndListenAsyncInt32Int32">
            <summary>Sets the shim of Socket.BindAndListenAsync(Int32 port, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BindAndListenInt32Int32">
            <summary>Sets the shim of Socket.BindAndListen(Int32 port, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BindAndListenPortRangeAsyncInt32Int32Int32">
            <summary>Sets the shim of Socket.BindAndListenPortRangeAsync(Int32 beginPort, Int32 endPort, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BindAndListenPortRangeInt32Int32Int32">
            <summary>Sets the shim of Socket.BindAndListenPortRange(Int32 beginPort, Int32 endPort, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.BuildHttpGetRequestString">
            <summary>Sets the shim of Socket.BuildHttpGetRequest(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.CheckWriteableAsyncInt32">
            <summary>Sets the shim of Socket.CheckWriteableAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.CheckWriteableInt32">
            <summary>Sets the shim of Socket.CheckWriteable(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ClearSessionLog">
            <summary>Sets the shim of Socket.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of Socket.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of Socket.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ClientPortGet">
            <summary>Sets the shim of Socket.get_ClientPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ClientPortSetInt32">
            <summary>Sets the shim of Socket.set_ClientPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.CloneSocket">
            <summary>Sets the shim of Socket.CloneSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.CloseAsyncInt32">
            <summary>Sets the shim of Socket.CloseAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.CloseInt32">
            <summary>Sets the shim of Socket.Close(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConnectAsyncStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.ConnectAsync(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConnectFailReasonGet">
            <summary>Sets the shim of Socket.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConnectStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.Connect(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConvertFromSsl">
            <summary>Sets the shim of Socket.ConvertFromSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConvertFromSslAsync">
            <summary>Sets the shim of Socket.ConvertFromSslAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConvertToSsl">
            <summary>Sets the shim of Socket.ConvertToSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ConvertToSslAsync">
            <summary>Sets the shim of Socket.ConvertToSslAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DebugConnectDelayMsGet">
            <summary>Sets the shim of Socket.get_DebugConnectDelayMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DebugConnectDelayMsSetInt32">
            <summary>Sets the shim of Socket.set_DebugConnectDelayMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DebugDnsDelayMsGet">
            <summary>Sets the shim of Socket.get_DebugDnsDelayMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DebugDnsDelayMsSetInt32">
            <summary>Sets the shim of Socket.set_DebugDnsDelayMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Socket.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Socket.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.Dispose">
            <summary>Sets the shim of Socket.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Socket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DnsCacheClear">
            <summary>Sets the shim of Socket.DnsCacheClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DnsLookupAsyncStringInt32">
            <summary>Sets the shim of Socket.DnsLookupAsync(String hostname, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.DnsLookupStringInt32">
            <summary>Sets the shim of Socket.DnsLookup(String hostname, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ElapsedSecondsGet">
            <summary>Sets the shim of Socket.get_ElapsedSeconds()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Socket.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Socket.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Socket.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Socket.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Socket.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Socket.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Socket.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Socket.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.GetMyCert">
            <summary>Sets the shim of Socket.GetMyCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.GetReceivedClientCertInt32">
            <summary>Sets the shim of Socket.GetReceivedClientCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.GetSslAcceptableClientCaDnInt32">
            <summary>Sets the shim of Socket.GetSslAcceptableClientCaDn(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.GetSslServerCert">
            <summary>Sets the shim of Socket.GetSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Socket.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Socket.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Socket.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Socket.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of Socket.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of Socket.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyForHttpGet">
            <summary>Sets the shim of Socket.get_HttpProxyForHttp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyForHttpSetBoolean">
            <summary>Sets the shim of Socket.set_HttpProxyForHttp(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of Socket.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of Socket.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of Socket.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of Socket.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of Socket.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of Socket.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of Socket.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of Socket.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.InitSslServerCert">
            <summary>Sets the shim of Socket.InitSslServer(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.IsConnectedGet">
            <summary>Sets the shim of Socket.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.IsUnlocked">
            <summary>Sets the shim of Socket.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.KeepAliveGet">
            <summary>Sets the shim of Socket.get_KeepAlive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.KeepAliveSetBoolean">
            <summary>Sets the shim of Socket.set_KeepAlive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.KeepSessionLogGet">
            <summary>Sets the shim of Socket.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Socket.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Socket.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Socket.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Socket.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LastMethodFailedGet">
            <summary>Sets the shim of Socket.get_LastMethodFailed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Socket.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Socket.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ListenIpv6Get">
            <summary>Sets the shim of Socket.get_ListenIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ListenIpv6SetBoolean">
            <summary>Sets the shim of Socket.set_ListenIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ListenPortGet">
            <summary>Sets the shim of Socket.get_ListenPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of Socket.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LocalIpAddressGet">
            <summary>Sets the shim of Socket.get_LocalIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.LocalPortGet">
            <summary>Sets the shim of Socket.get_LocalPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.MaxReadIdleMsGet">
            <summary>Sets the shim of Socket.get_MaxReadIdleMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.MaxReadIdleMsSetInt32">
            <summary>Sets the shim of Socket.set_MaxReadIdleMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.MaxSendIdleMsGet">
            <summary>Sets the shim of Socket.get_MaxSendIdleMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.MaxSendIdleMsSetInt32">
            <summary>Sets the shim of Socket.set_MaxSendIdleMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.MyIpAddressGet">
            <summary>Sets the shim of Socket.get_MyIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.NumReceivedClientCertsGet">
            <summary>Sets the shim of Socket.get_NumReceivedClientCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.NumSocketsInSetGet">
            <summary>Sets the shim of Socket.get_NumSocketsInSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.NumSslAcceptableClientCAsGet">
            <summary>Sets the shim of Socket.get_NumSslAcceptableClientCAs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ObjectIdGet">
            <summary>Sets the shim of Socket.get_ObjectId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnAbortCheckAddSocketAbortCheckEventHandler">
            <summary>Sets the shim of Socket.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Socket.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnAbortCheckRemoveSocketAbortCheckEventHandler">
            <summary>Sets the shim of Socket.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnBinaryDataAddSocketBinaryDataEventHandler">
            <summary>Sets the shim of Socket.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Socket.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnBinaryDataRemoveSocketBinaryDataEventHandler">
            <summary>Sets the shim of Socket.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnPercentDoneAddSocketPercentDoneEventHandler">
            <summary>Sets the shim of Socket.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Socket.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnPercentDoneRemoveSocketPercentDoneEventHandler">
            <summary>Sets the shim of Socket.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnProgressInfoAddSocketProgressInfoEventHandler">
            <summary>Sets the shim of Socket.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Socket.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnProgressInfoRemoveSocketProgressInfoEventHandler">
            <summary>Sets the shim of Socket.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnTaskCompletedAddSocketTaskCompletedEventHandler">
            <summary>Sets the shim of Socket.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Socket.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnTaskCompletedRemoveSocketTaskCompletedEventHandler">
            <summary>Sets the shim of Socket.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnTextDataAddSocketTextDataEventHandler">
            <summary>Sets the shim of Socket.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Socket.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.OnTextDataRemoveSocketTextDataEventHandler">
            <summary>Sets the shim of Socket.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Socket.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Socket.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.PollDataAvailable">
            <summary>Sets the shim of Socket.PollDataAvailable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.PollDataAvailableAsync">
            <summary>Sets the shim of Socket.PollDataAvailableAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Socket.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Socket.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBdAsyncBinData">
            <summary>Sets the shim of Socket.ReceiveBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBdBinData">
            <summary>Sets the shim of Socket.ReceiveBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBdNAsyncUInt32BinData">
            <summary>Sets the shim of Socket.ReceiveBdNAsync(UInt32 numBytes, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBdNUInt32BinData">
            <summary>Sets the shim of Socket.ReceiveBdN(UInt32 numBytes, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveByteAsyncBoolean">
            <summary>Sets the shim of Socket.ReceiveByteAsync(Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveByteBoolean">
            <summary>Sets the shim of Socket.ReceiveByte(Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytes">
            <summary>Sets the shim of Socket.ReceiveBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesAsync">
            <summary>Sets the shim of Socket.ReceiveBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesENCAsyncString">
            <summary>Sets the shim of Socket.ReceiveBytesENCAsync(String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesENCString">
            <summary>Sets the shim of Socket.ReceiveBytesENC(String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesNAsyncUInt32">
            <summary>Sets the shim of Socket.ReceiveBytesNAsync(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesNUInt32">
            <summary>Sets the shim of Socket.ReceiveBytesN(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesToFileAsyncString">
            <summary>Sets the shim of Socket.ReceiveBytesToFileAsync(String appendFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveBytesToFileString">
            <summary>Sets the shim of Socket.ReceiveBytesToFile(String appendFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveCount">
            <summary>Sets the shim of Socket.ReceiveCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveCountAsync">
            <summary>Sets the shim of Socket.ReceiveCountAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveFailReasonGet">
            <summary>Sets the shim of Socket.get_ReceiveFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveInt16AsyncBooleanBoolean">
            <summary>Sets the shim of Socket.ReceiveInt16Async(Boolean bigEndian, Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveInt16BooleanBoolean">
            <summary>Sets the shim of Socket.ReceiveInt16(Boolean bigEndian, Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveInt32AsyncBoolean">
            <summary>Sets the shim of Socket.ReceiveInt32Async(Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveInt32Boolean">
            <summary>Sets the shim of Socket.ReceiveInt32(Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveNBytesENCAsyncUInt32String">
            <summary>Sets the shim of Socket.ReceiveNBytesENCAsync(UInt32 numBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveNBytesENCUInt32String">
            <summary>Sets the shim of Socket.ReceiveNBytesENC(UInt32 numBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceivePacketSizeGet">
            <summary>Sets the shim of Socket.get_ReceivePacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceivePacketSizeSetInt32">
            <summary>Sets the shim of Socket.set_ReceivePacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveSbAsyncStringBuilder">
            <summary>Sets the shim of Socket.ReceiveSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveSbStringBuilder">
            <summary>Sets the shim of Socket.ReceiveSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveString">
            <summary>Sets the shim of Socket.ReceiveString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveStringAsync">
            <summary>Sets the shim of Socket.ReceiveStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveStringMaxNAsyncInt32">
            <summary>Sets the shim of Socket.ReceiveStringMaxNAsync(Int32 maxByteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveStringMaxNInt32">
            <summary>Sets the shim of Socket.ReceiveStringMaxN(Int32 maxByteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveStringUntilByteAsyncInt32">
            <summary>Sets the shim of Socket.ReceiveStringUntilByteAsync(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveStringUntilByteInt32">
            <summary>Sets the shim of Socket.ReceiveStringUntilByte(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveToCRLF">
            <summary>Sets the shim of Socket.ReceiveToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveToCRLFAsync">
            <summary>Sets the shim of Socket.ReceiveToCRLFAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveUntilByteAsyncInt32">
            <summary>Sets the shim of Socket.ReceiveUntilByteAsync(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveUntilByteInt32">
            <summary>Sets the shim of Socket.ReceiveUntilByte(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveUntilMatchAsyncString">
            <summary>Sets the shim of Socket.ReceiveUntilMatchAsync(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceiveUntilMatchString">
            <summary>Sets the shim of Socket.ReceiveUntilMatch(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceivedCountGet">
            <summary>Sets the shim of Socket.get_ReceivedCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceivedCountSetInt32">
            <summary>Sets the shim of Socket.set_ReceivedCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceivedIntGet">
            <summary>Sets the shim of Socket.get_ReceivedInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ReceivedIntSetInt32">
            <summary>Sets the shim of Socket.set_ReceivedInt(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.RemoteIpAddressGet">
            <summary>Sets the shim of Socket.get_RemoteIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.RemotePortGet">
            <summary>Sets the shim of Socket.get_RemotePort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.RequireSslCertVerifyGet">
            <summary>Sets the shim of Socket.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Socket.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Socket.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectForReadingAsyncInt32">
            <summary>Sets the shim of Socket.SelectForReadingAsync(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectForReadingInt32">
            <summary>Sets the shim of Socket.SelectForReading(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectForWritingAsyncInt32">
            <summary>Sets the shim of Socket.SelectForWritingAsync(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectForWritingInt32">
            <summary>Sets the shim of Socket.SelectForWriting(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectorIndexGet">
            <summary>Sets the shim of Socket.get_SelectorIndex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectorIndexSetInt32">
            <summary>Sets the shim of Socket.set_SelectorIndex(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectorReadIndexGet">
            <summary>Sets the shim of Socket.get_SelectorReadIndex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectorReadIndexSetInt32">
            <summary>Sets the shim of Socket.set_SelectorReadIndex(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectorWriteIndexGet">
            <summary>Sets the shim of Socket.get_SelectorWriteIndex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SelectorWriteIndexSetInt32">
            <summary>Sets the shim of Socket.set_SelectorWriteIndex(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendBdAsyncBinDataUInt32UInt32">
            <summary>Sets the shim of Socket.SendBdAsync(BinData binData, UInt32 offset, UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendBdBinDataUInt32UInt32">
            <summary>Sets the shim of Socket.SendBd(BinData binData, UInt32 offset, UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendByteAsyncInt32">
            <summary>Sets the shim of Socket.SendByteAsync(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendByteInt32">
            <summary>Sets the shim of Socket.SendByte(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendBytesAsyncByteArray">
            <summary>Sets the shim of Socket.SendBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendBytesByteArray">
            <summary>Sets the shim of Socket.SendBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendBytesENCAsyncStringString">
            <summary>Sets the shim of Socket.SendBytesENCAsync(String encodedBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendBytesENCStringString">
            <summary>Sets the shim of Socket.SendBytesENC(String encodedBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendCountAsyncInt32">
            <summary>Sets the shim of Socket.SendCountAsync(Int32 byteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendCountInt32">
            <summary>Sets the shim of Socket.SendCount(Int32 byteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendFailReasonGet">
            <summary>Sets the shim of Socket.get_SendFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendInt16AsyncInt32Boolean">
            <summary>Sets the shim of Socket.SendInt16Async(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendInt16Int32Boolean">
            <summary>Sets the shim of Socket.SendInt16(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendInt32AsyncInt32Boolean">
            <summary>Sets the shim of Socket.SendInt32Async(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendInt32Int32Boolean">
            <summary>Sets the shim of Socket.SendInt32(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendPacketSizeGet">
            <summary>Sets the shim of Socket.get_SendPacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendPacketSizeSetInt32">
            <summary>Sets the shim of Socket.set_SendPacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendSbAsyncStringBuilder">
            <summary>Sets the shim of Socket.SendSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendSbStringBuilder">
            <summary>Sets the shim of Socket.SendSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendStringAsyncString">
            <summary>Sets the shim of Socket.SendStringAsync(String stringToSend)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendStringString">
            <summary>Sets the shim of Socket.SendString(String stringToSend)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SendWakeOnLanStringInt32String">
            <summary>Sets the shim of Socket.SendWakeOnLan(String macAddress, Int32 port, String ipBroadcastAddr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SessionLogEncodingGet">
            <summary>Sets the shim of Socket.get_SessionLogEncoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SessionLogEncodingSetString">
            <summary>Sets the shim of Socket.set_SessionLogEncoding(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SessionLogGet">
            <summary>Sets the shim of Socket.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SetSslClientCertCert">
            <summary>Sets the shim of Socket.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SetSslClientCertPemStringString">
            <summary>Sets the shim of Socket.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Socket.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SleepMsInt32">
            <summary>Sets the shim of Socket.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of Socket.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of Socket.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SoReuseAddrGet">
            <summary>Sets the shim of Socket.get_SoReuseAddr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SoReuseAddrSetBoolean">
            <summary>Sets the shim of Socket.set_SoReuseAddr(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SoSndBufGet">
            <summary>Sets the shim of Socket.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of Socket.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of Socket.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of Socket.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of Socket.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of Socket.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksPortGet">
            <summary>Sets the shim of Socket.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of Socket.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of Socket.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of Socket.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksVersionGet">
            <summary>Sets the shim of Socket.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of Socket.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshAuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of Socket.SshAuthenticatePkAsync(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshAuthenticatePkStringSshKey">
            <summary>Sets the shim of Socket.SshAuthenticatePk(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshAuthenticatePwAsyncStringString">
            <summary>Sets the shim of Socket.SshAuthenticatePwAsync(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshAuthenticatePwStringString">
            <summary>Sets the shim of Socket.SshAuthenticatePw(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshCloseTunnel">
            <summary>Sets the shim of Socket.SshCloseTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshCloseTunnelAsync">
            <summary>Sets the shim of Socket.SshCloseTunnelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshOpenChannelAsyncStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.SshOpenChannelAsync(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshOpenChannelStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.SshOpenChannel(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshOpenTunnelAsyncStringInt32">
            <summary>Sets the shim of Socket.SshOpenTunnelAsync(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SshOpenTunnelStringInt32">
            <summary>Sets the shim of Socket.SshOpenTunnel(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SslAllowedCiphersGet">
            <summary>Sets the shim of Socket.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SslAllowedCiphersSetString">
            <summary>Sets the shim of Socket.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SslGet">
            <summary>Sets the shim of Socket.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SslProtocolGet">
            <summary>Sets the shim of Socket.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SslProtocolSetString">
            <summary>Sets the shim of Socket.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.SslSetBoolean">
            <summary>Sets the shim of Socket.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.StartTiming">
            <summary>Sets the shim of Socket.StartTiming()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.StringCharsetGet">
            <summary>Sets the shim of Socket.get_StringCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.StringCharsetSetString">
            <summary>Sets the shim of Socket.set_StringCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TakeSocketSocket">
            <summary>Sets the shim of Socket.TakeSocket(Socket sock)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TcpNoDelayGet">
            <summary>Sets the shim of Socket.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TcpNoDelaySetBoolean">
            <summary>Sets the shim of Socket.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TlsCipherSuiteGet">
            <summary>Sets the shim of Socket.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TlsPinSetGet">
            <summary>Sets the shim of Socket.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TlsPinSetSetString">
            <summary>Sets the shim of Socket.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TlsRenegotiate">
            <summary>Sets the shim of Socket.TlsRenegotiate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TlsRenegotiateAsync">
            <summary>Sets the shim of Socket.TlsRenegotiateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.TlsVersionGet">
            <summary>Sets the shim of Socket.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.ToString01">
            <summary>Sets the shim of Socket.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Socket.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.UseSshSsh">
            <summary>Sets the shim of Socket.UseSsh(Ssh ssh)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.UserDataGet">
            <summary>Sets the shim of Socket.get_UserData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.UserDataSetString">
            <summary>Sets the shim of Socket.set_UserData(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Socket.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Socket.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances.VersionGet">
            <summary>Sets the shim of Socket.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances._Socket">
            <summary>Sets the shim of Socket.!Socket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AllInstances._Socket01">
            <summary>Sets the shim of Socket.~Socket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncAcceptAbort">
            <summary>Sets the shim of Socket.AsyncAcceptAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncAcceptFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncAcceptFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncAcceptLogGet">
            <summary>Sets the shim of Socket.get_AsyncAcceptLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncAcceptSocket">
            <summary>Sets the shim of Socket.AsyncAcceptSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncAcceptStartInt32">
            <summary>Sets the shim of Socket.AsyncAcceptStart(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncAcceptSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncAcceptSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncConnectAbort">
            <summary>Sets the shim of Socket.AsyncConnectAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncConnectFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncConnectFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncConnectLogGet">
            <summary>Sets the shim of Socket.get_AsyncConnectLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncConnectStartStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.AsyncConnectStart(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncConnectSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncConnectSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncDnsAbort">
            <summary>Sets the shim of Socket.AsyncDnsAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncDnsFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncDnsFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncDnsLogGet">
            <summary>Sets the shim of Socket.get_AsyncDnsLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncDnsResultGet">
            <summary>Sets the shim of Socket.get_AsyncDnsResult()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncDnsStartStringInt32">
            <summary>Sets the shim of Socket.AsyncDnsStart(String hostname, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncDnsSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncDnsSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveAbort">
            <summary>Sets the shim of Socket.AsyncReceiveAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveBytes">
            <summary>Sets the shim of Socket.AsyncReceiveBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveBytesNUInt32">
            <summary>Sets the shim of Socket.AsyncReceiveBytesN(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncReceiveFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveLogGet">
            <summary>Sets the shim of Socket.get_AsyncReceiveLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveString">
            <summary>Sets the shim of Socket.AsyncReceiveString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncReceiveSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveToCRLF">
            <summary>Sets the shim of Socket.AsyncReceiveToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceiveUntilMatchString">
            <summary>Sets the shim of Socket.AsyncReceiveUntilMatch(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceivedBytesGet">
            <summary>Sets the shim of Socket.get_AsyncReceivedBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncReceivedStringGet">
            <summary>Sets the shim of Socket.get_AsyncReceivedString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendAbort">
            <summary>Sets the shim of Socket.AsyncSendAbort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendByteDataByteArray">
            <summary>Sets the shim of Socket.AsyncSendByteData(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendBytesByteArray">
            <summary>Sets the shim of Socket.AsyncSendBytes(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendFinishedGet">
            <summary>Sets the shim of Socket.get_AsyncSendFinished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendLogGet">
            <summary>Sets the shim of Socket.get_AsyncSendLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendStringString">
            <summary>Sets the shim of Socket.AsyncSendString(String stringToSend)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.AsyncSendSuccessGet">
            <summary>Sets the shim of Socket.get_AsyncSendSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BandwidthThrottleDownGet">
            <summary>Sets the shim of Socket.get_BandwidthThrottleDown()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BandwidthThrottleDownSetInt32">
            <summary>Sets the shim of Socket.set_BandwidthThrottleDown(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BandwidthThrottleUpGet">
            <summary>Sets the shim of Socket.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Socket.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BigEndianGet">
            <summary>Sets the shim of Socket.get_BigEndian()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BigEndianSetBoolean">
            <summary>Sets the shim of Socket.set_BigEndian(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSocket.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BindAndListenAsyncInt32Int32">
            <summary>Sets the shim of Socket.BindAndListenAsync(Int32 port, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BindAndListenInt32Int32">
            <summary>Sets the shim of Socket.BindAndListen(Int32 port, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BindAndListenPortRangeAsyncInt32Int32Int32">
            <summary>Sets the shim of Socket.BindAndListenPortRangeAsync(Int32 beginPort, Int32 endPort, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BindAndListenPortRangeInt32Int32Int32">
            <summary>Sets the shim of Socket.BindAndListenPortRange(Int32 beginPort, Int32 endPort, Int32 backLog)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.BuildHttpGetRequestString">
            <summary>Sets the shim of Socket.BuildHttpGetRequest(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.CheckWriteableAsyncInt32">
            <summary>Sets the shim of Socket.CheckWriteableAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.CheckWriteableInt32">
            <summary>Sets the shim of Socket.CheckWriteable(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ClearSessionLog">
            <summary>Sets the shim of Socket.ClearSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ClientIpAddressGet">
            <summary>Sets the shim of Socket.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ClientIpAddressSetString">
            <summary>Sets the shim of Socket.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ClientPortGet">
            <summary>Sets the shim of Socket.get_ClientPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ClientPortSetInt32">
            <summary>Sets the shim of Socket.set_ClientPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.CloneSocket">
            <summary>Sets the shim of Socket.CloneSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.CloseAsyncInt32">
            <summary>Sets the shim of Socket.CloseAsync(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.CloseInt32">
            <summary>Sets the shim of Socket.Close(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConnectAsyncStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.ConnectAsync(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConnectFailReasonGet">
            <summary>Sets the shim of Socket.get_ConnectFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConnectStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.Connect(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.Constructor">
            <summary>Sets the shim of Socket.Socket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConvertFromSsl">
            <summary>Sets the shim of Socket.ConvertFromSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConvertFromSslAsync">
            <summary>Sets the shim of Socket.ConvertFromSslAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConvertToSsl">
            <summary>Sets the shim of Socket.ConvertToSsl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ConvertToSslAsync">
            <summary>Sets the shim of Socket.ConvertToSslAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DebugConnectDelayMsGet">
            <summary>Sets the shim of Socket.get_DebugConnectDelayMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DebugConnectDelayMsSetInt32">
            <summary>Sets the shim of Socket.set_DebugConnectDelayMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DebugDnsDelayMsGet">
            <summary>Sets the shim of Socket.get_DebugDnsDelayMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DebugDnsDelayMsSetInt32">
            <summary>Sets the shim of Socket.set_DebugDnsDelayMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DebugLogFilePathGet">
            <summary>Sets the shim of Socket.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DebugLogFilePathSetString">
            <summary>Sets the shim of Socket.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.Dispose">
            <summary>Sets the shim of Socket.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DisposeBoolean">
            <summary>Sets the shim of Socket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DnsCacheClear">
            <summary>Sets the shim of Socket.DnsCacheClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DnsLookupAsyncStringInt32">
            <summary>Sets the shim of Socket.DnsLookupAsync(String hostname, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.DnsLookupStringInt32">
            <summary>Sets the shim of Socket.DnsLookup(String hostname, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ElapsedSecondsGet">
            <summary>Sets the shim of Socket.get_ElapsedSeconds()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.EnableEventsGet">
            <summary>Sets the shim of Socket.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.EnableEventsSetBoolean">
            <summary>Sets the shim of Socket.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Socket.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Socket.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Socket.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Socket.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Socket.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Socket.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.GetMyCert">
            <summary>Sets the shim of Socket.GetMyCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.GetReceivedClientCertInt32">
            <summary>Sets the shim of Socket.GetReceivedClientCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.GetSslAcceptableClientCaDnInt32">
            <summary>Sets the shim of Socket.GetSslAcceptableClientCaDn(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.GetSslServerCert">
            <summary>Sets the shim of Socket.GetSslServerCert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HeartbeatMsGet">
            <summary>Sets the shim of Socket.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HeartbeatMsSetInt32">
            <summary>Sets the shim of Socket.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Socket.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Socket.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyDomainGet">
            <summary>Sets the shim of Socket.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyDomainSetString">
            <summary>Sets the shim of Socket.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyForHttpGet">
            <summary>Sets the shim of Socket.get_HttpProxyForHttp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyForHttpSetBoolean">
            <summary>Sets the shim of Socket.set_HttpProxyForHttp(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyHostnameGet">
            <summary>Sets the shim of Socket.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyHostnameSetString">
            <summary>Sets the shim of Socket.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyPasswordGet">
            <summary>Sets the shim of Socket.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyPasswordSetString">
            <summary>Sets the shim of Socket.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyPortGet">
            <summary>Sets the shim of Socket.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyPortSetInt32">
            <summary>Sets the shim of Socket.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyUsernameGet">
            <summary>Sets the shim of Socket.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.HttpProxyUsernameSetString">
            <summary>Sets the shim of Socket.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.InitSslServerCert">
            <summary>Sets the shim of Socket.InitSslServer(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.IsConnectedGet">
            <summary>Sets the shim of Socket.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.IsUnlocked">
            <summary>Sets the shim of Socket.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.KeepAliveGet">
            <summary>Sets the shim of Socket.get_KeepAlive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.KeepAliveSetBoolean">
            <summary>Sets the shim of Socket.set_KeepAlive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.KeepSessionLogGet">
            <summary>Sets the shim of Socket.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Socket.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LastErrorHtmlGet">
            <summary>Sets the shim of Socket.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LastErrorTextGet">
            <summary>Sets the shim of Socket.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LastErrorXmlGet">
            <summary>Sets the shim of Socket.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LastMethodFailedGet">
            <summary>Sets the shim of Socket.get_LastMethodFailed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LastMethodSuccessGet">
            <summary>Sets the shim of Socket.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Socket.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ListenIpv6Get">
            <summary>Sets the shim of Socket.get_ListenIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ListenIpv6SetBoolean">
            <summary>Sets the shim of Socket.set_ListenIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ListenPortGet">
            <summary>Sets the shim of Socket.get_ListenPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LoadTaskResultTask">
            <summary>Sets the shim of Socket.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LocalIpAddressGet">
            <summary>Sets the shim of Socket.get_LocalIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.LocalPortGet">
            <summary>Sets the shim of Socket.get_LocalPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.MaxReadIdleMsGet">
            <summary>Sets the shim of Socket.get_MaxReadIdleMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.MaxReadIdleMsSetInt32">
            <summary>Sets the shim of Socket.set_MaxReadIdleMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.MaxSendIdleMsGet">
            <summary>Sets the shim of Socket.get_MaxSendIdleMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.MaxSendIdleMsSetInt32">
            <summary>Sets the shim of Socket.set_MaxSendIdleMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.MyIpAddressGet">
            <summary>Sets the shim of Socket.get_MyIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.NumReceivedClientCertsGet">
            <summary>Sets the shim of Socket.get_NumReceivedClientCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.NumSocketsInSetGet">
            <summary>Sets the shim of Socket.get_NumSocketsInSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.NumSslAcceptableClientCAsGet">
            <summary>Sets the shim of Socket.get_NumSslAcceptableClientCAs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ObjectIdGet">
            <summary>Sets the shim of Socket.get_ObjectId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnAbortCheckAddSocketAbortCheckEventHandler">
            <summary>Sets the shim of Socket.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Socket.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnAbortCheckRemoveSocketAbortCheckEventHandler">
            <summary>Sets the shim of Socket.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnBinaryDataAddSocketBinaryDataEventHandler">
            <summary>Sets the shim of Socket.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Socket.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnBinaryDataRemoveSocketBinaryDataEventHandler">
            <summary>Sets the shim of Socket.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnPercentDoneAddSocketPercentDoneEventHandler">
            <summary>Sets the shim of Socket.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Socket.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnPercentDoneRemoveSocketPercentDoneEventHandler">
            <summary>Sets the shim of Socket.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnProgressInfoAddSocketProgressInfoEventHandler">
            <summary>Sets the shim of Socket.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Socket.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnProgressInfoRemoveSocketProgressInfoEventHandler">
            <summary>Sets the shim of Socket.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnTaskCompletedAddSocketTaskCompletedEventHandler">
            <summary>Sets the shim of Socket.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Socket.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnTaskCompletedRemoveSocketTaskCompletedEventHandler">
            <summary>Sets the shim of Socket.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnTextDataAddSocketTextDataEventHandler">
            <summary>Sets the shim of Socket.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Socket.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.OnTextDataRemoveSocketTextDataEventHandler">
            <summary>Sets the shim of Socket.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.PercentDoneScaleGet">
            <summary>Sets the shim of Socket.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Socket.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.PollDataAvailable">
            <summary>Sets the shim of Socket.PollDataAvailable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.PollDataAvailableAsync">
            <summary>Sets the shim of Socket.PollDataAvailableAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.PreferIpv6Get">
            <summary>Sets the shim of Socket.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.PreferIpv6SetBoolean">
            <summary>Sets the shim of Socket.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBdAsyncBinData">
            <summary>Sets the shim of Socket.ReceiveBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBdBinData">
            <summary>Sets the shim of Socket.ReceiveBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBdNAsyncUInt32BinData">
            <summary>Sets the shim of Socket.ReceiveBdNAsync(UInt32 numBytes, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBdNUInt32BinData">
            <summary>Sets the shim of Socket.ReceiveBdN(UInt32 numBytes, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveByteAsyncBoolean">
            <summary>Sets the shim of Socket.ReceiveByteAsync(Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveByteBoolean">
            <summary>Sets the shim of Socket.ReceiveByte(Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytes">
            <summary>Sets the shim of Socket.ReceiveBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesAsync">
            <summary>Sets the shim of Socket.ReceiveBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesENCAsyncString">
            <summary>Sets the shim of Socket.ReceiveBytesENCAsync(String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesENCString">
            <summary>Sets the shim of Socket.ReceiveBytesENC(String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesNAsyncUInt32">
            <summary>Sets the shim of Socket.ReceiveBytesNAsync(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesNUInt32">
            <summary>Sets the shim of Socket.ReceiveBytesN(UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesToFileAsyncString">
            <summary>Sets the shim of Socket.ReceiveBytesToFileAsync(String appendFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveBytesToFileString">
            <summary>Sets the shim of Socket.ReceiveBytesToFile(String appendFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveCount">
            <summary>Sets the shim of Socket.ReceiveCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveCountAsync">
            <summary>Sets the shim of Socket.ReceiveCountAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveFailReasonGet">
            <summary>Sets the shim of Socket.get_ReceiveFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveInt16AsyncBooleanBoolean">
            <summary>Sets the shim of Socket.ReceiveInt16Async(Boolean bigEndian, Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveInt16BooleanBoolean">
            <summary>Sets the shim of Socket.ReceiveInt16(Boolean bigEndian, Boolean bUnsigned)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveInt32AsyncBoolean">
            <summary>Sets the shim of Socket.ReceiveInt32Async(Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveInt32Boolean">
            <summary>Sets the shim of Socket.ReceiveInt32(Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveNBytesENCAsyncUInt32String">
            <summary>Sets the shim of Socket.ReceiveNBytesENCAsync(UInt32 numBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveNBytesENCUInt32String">
            <summary>Sets the shim of Socket.ReceiveNBytesENC(UInt32 numBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceivePacketSizeGet">
            <summary>Sets the shim of Socket.get_ReceivePacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceivePacketSizeSetInt32">
            <summary>Sets the shim of Socket.set_ReceivePacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveSbAsyncStringBuilder">
            <summary>Sets the shim of Socket.ReceiveSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveSbStringBuilder">
            <summary>Sets the shim of Socket.ReceiveSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveString">
            <summary>Sets the shim of Socket.ReceiveString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveStringAsync">
            <summary>Sets the shim of Socket.ReceiveStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveStringMaxNAsyncInt32">
            <summary>Sets the shim of Socket.ReceiveStringMaxNAsync(Int32 maxByteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveStringMaxNInt32">
            <summary>Sets the shim of Socket.ReceiveStringMaxN(Int32 maxByteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveStringUntilByteAsyncInt32">
            <summary>Sets the shim of Socket.ReceiveStringUntilByteAsync(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveStringUntilByteInt32">
            <summary>Sets the shim of Socket.ReceiveStringUntilByte(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveToCRLF">
            <summary>Sets the shim of Socket.ReceiveToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveToCRLFAsync">
            <summary>Sets the shim of Socket.ReceiveToCRLFAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveUntilByteAsyncInt32">
            <summary>Sets the shim of Socket.ReceiveUntilByteAsync(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveUntilByteInt32">
            <summary>Sets the shim of Socket.ReceiveUntilByte(Int32 lookForByte)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveUntilMatchAsyncString">
            <summary>Sets the shim of Socket.ReceiveUntilMatchAsync(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceiveUntilMatchString">
            <summary>Sets the shim of Socket.ReceiveUntilMatch(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceivedCountGet">
            <summary>Sets the shim of Socket.get_ReceivedCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceivedCountSetInt32">
            <summary>Sets the shim of Socket.set_ReceivedCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceivedIntGet">
            <summary>Sets the shim of Socket.get_ReceivedInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ReceivedIntSetInt32">
            <summary>Sets the shim of Socket.set_ReceivedInt(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.RemoteIpAddressGet">
            <summary>Sets the shim of Socket.get_RemoteIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.RemotePortGet">
            <summary>Sets the shim of Socket.get_RemotePort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.RequireSslCertVerifyGet">
            <summary>Sets the shim of Socket.get_RequireSslCertVerify()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.RequireSslCertVerifySetBoolean">
            <summary>Sets the shim of Socket.set_RequireSslCertVerify(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SaveLastErrorString">
            <summary>Sets the shim of Socket.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectForReadingAsyncInt32">
            <summary>Sets the shim of Socket.SelectForReadingAsync(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectForReadingInt32">
            <summary>Sets the shim of Socket.SelectForReading(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectForWritingAsyncInt32">
            <summary>Sets the shim of Socket.SelectForWritingAsync(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectForWritingInt32">
            <summary>Sets the shim of Socket.SelectForWriting(Int32 timeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectorIndexGet">
            <summary>Sets the shim of Socket.get_SelectorIndex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectorIndexSetInt32">
            <summary>Sets the shim of Socket.set_SelectorIndex(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectorReadIndexGet">
            <summary>Sets the shim of Socket.get_SelectorReadIndex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectorReadIndexSetInt32">
            <summary>Sets the shim of Socket.set_SelectorReadIndex(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectorWriteIndexGet">
            <summary>Sets the shim of Socket.get_SelectorWriteIndex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SelectorWriteIndexSetInt32">
            <summary>Sets the shim of Socket.set_SelectorWriteIndex(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendBdAsyncBinDataUInt32UInt32">
            <summary>Sets the shim of Socket.SendBdAsync(BinData binData, UInt32 offset, UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendBdBinDataUInt32UInt32">
            <summary>Sets the shim of Socket.SendBd(BinData binData, UInt32 offset, UInt32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendByteAsyncInt32">
            <summary>Sets the shim of Socket.SendByteAsync(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendByteInt32">
            <summary>Sets the shim of Socket.SendByte(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendBytesAsyncByteArray">
            <summary>Sets the shim of Socket.SendBytesAsync(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendBytesByteArray">
            <summary>Sets the shim of Socket.SendBytes(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendBytesENCAsyncStringString">
            <summary>Sets the shim of Socket.SendBytesENCAsync(String encodedBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendBytesENCStringString">
            <summary>Sets the shim of Socket.SendBytesENC(String encodedBytes, String encodingAlg)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendCountAsyncInt32">
            <summary>Sets the shim of Socket.SendCountAsync(Int32 byteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendCountInt32">
            <summary>Sets the shim of Socket.SendCount(Int32 byteCount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendFailReasonGet">
            <summary>Sets the shim of Socket.get_SendFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendInt16AsyncInt32Boolean">
            <summary>Sets the shim of Socket.SendInt16Async(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendInt16Int32Boolean">
            <summary>Sets the shim of Socket.SendInt16(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendInt32AsyncInt32Boolean">
            <summary>Sets the shim of Socket.SendInt32Async(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendInt32Int32Boolean">
            <summary>Sets the shim of Socket.SendInt32(Int32 value, Boolean bigEndian)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendPacketSizeGet">
            <summary>Sets the shim of Socket.get_SendPacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendPacketSizeSetInt32">
            <summary>Sets the shim of Socket.set_SendPacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendSbAsyncStringBuilder">
            <summary>Sets the shim of Socket.SendSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendSbStringBuilder">
            <summary>Sets the shim of Socket.SendSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendStringAsyncString">
            <summary>Sets the shim of Socket.SendStringAsync(String stringToSend)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendStringString">
            <summary>Sets the shim of Socket.SendString(String stringToSend)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SendWakeOnLanStringInt32String">
            <summary>Sets the shim of Socket.SendWakeOnLan(String macAddress, Int32 port, String ipBroadcastAddr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SessionLogEncodingGet">
            <summary>Sets the shim of Socket.get_SessionLogEncoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SessionLogEncodingSetString">
            <summary>Sets the shim of Socket.set_SessionLogEncoding(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SessionLogGet">
            <summary>Sets the shim of Socket.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SetSslClientCertCert">
            <summary>Sets the shim of Socket.SetSslClientCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SetSslClientCertPemStringString">
            <summary>Sets the shim of Socket.SetSslClientCertPem(String pemDataOrFilename, String pemPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SetSslClientCertPfxStringString">
            <summary>Sets the shim of Socket.SetSslClientCertPfx(String pfxFilename, String pfxPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SleepMsInt32">
            <summary>Sets the shim of Socket.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SoRcvBufGet">
            <summary>Sets the shim of Socket.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SoRcvBufSetInt32">
            <summary>Sets the shim of Socket.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SoReuseAddrGet">
            <summary>Sets the shim of Socket.get_SoReuseAddr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SoReuseAddrSetBoolean">
            <summary>Sets the shim of Socket.set_SoReuseAddr(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SoSndBufGet">
            <summary>Sets the shim of Socket.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SoSndBufSetInt32">
            <summary>Sets the shim of Socket.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksHostnameGet">
            <summary>Sets the shim of Socket.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksHostnameSetString">
            <summary>Sets the shim of Socket.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksPasswordGet">
            <summary>Sets the shim of Socket.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksPasswordSetString">
            <summary>Sets the shim of Socket.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksPortGet">
            <summary>Sets the shim of Socket.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksPortSetInt32">
            <summary>Sets the shim of Socket.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksUsernameGet">
            <summary>Sets the shim of Socket.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksUsernameSetString">
            <summary>Sets the shim of Socket.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksVersionGet">
            <summary>Sets the shim of Socket.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SocksVersionSetInt32">
            <summary>Sets the shim of Socket.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshAuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of Socket.SshAuthenticatePkAsync(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshAuthenticatePkStringSshKey">
            <summary>Sets the shim of Socket.SshAuthenticatePk(String sshLogin, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshAuthenticatePwAsyncStringString">
            <summary>Sets the shim of Socket.SshAuthenticatePwAsync(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshAuthenticatePwStringString">
            <summary>Sets the shim of Socket.SshAuthenticatePw(String sshLogin, String sshPassword)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshCloseTunnel">
            <summary>Sets the shim of Socket.SshCloseTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshCloseTunnelAsync">
            <summary>Sets the shim of Socket.SshCloseTunnelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshOpenChannelAsyncStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.SshOpenChannelAsync(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshOpenChannelStringInt32BooleanInt32">
            <summary>Sets the shim of Socket.SshOpenChannel(String hostname, Int32 port, Boolean ssl, Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshOpenTunnelAsyncStringInt32">
            <summary>Sets the shim of Socket.SshOpenTunnelAsync(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SshOpenTunnelStringInt32">
            <summary>Sets the shim of Socket.SshOpenTunnel(String sshHostname, Int32 sshPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SslAllowedCiphersGet">
            <summary>Sets the shim of Socket.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SslAllowedCiphersSetString">
            <summary>Sets the shim of Socket.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SslGet">
            <summary>Sets the shim of Socket.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SslProtocolGet">
            <summary>Sets the shim of Socket.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SslProtocolSetString">
            <summary>Sets the shim of Socket.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.SslSetBoolean">
            <summary>Sets the shim of Socket.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.StartTiming">
            <summary>Sets the shim of Socket.StartTiming()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.StringCharsetGet">
            <summary>Sets the shim of Socket.get_StringCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.StringCharsetSetString">
            <summary>Sets the shim of Socket.set_StringCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TakeSocketSocket">
            <summary>Sets the shim of Socket.TakeSocket(Socket sock)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TcpNoDelayGet">
            <summary>Sets the shim of Socket.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TcpNoDelaySetBoolean">
            <summary>Sets the shim of Socket.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TlsCipherSuiteGet">
            <summary>Sets the shim of Socket.get_TlsCipherSuite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TlsPinSetGet">
            <summary>Sets the shim of Socket.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TlsPinSetSetString">
            <summary>Sets the shim of Socket.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TlsRenegotiate">
            <summary>Sets the shim of Socket.TlsRenegotiate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TlsRenegotiateAsync">
            <summary>Sets the shim of Socket.TlsRenegotiateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.TlsVersionGet">
            <summary>Sets the shim of Socket.get_TlsVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.ToString">
            <summary>Sets the shim of Socket.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.UnlockComponentString">
            <summary>Sets the shim of Socket.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.UseSshSsh">
            <summary>Sets the shim of Socket.UseSsh(Ssh ssh)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.UserDataGet">
            <summary>Sets the shim of Socket.get_UserData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.UserDataSetString">
            <summary>Sets the shim of Socket.set_UserData(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.VerboseLoggingGet">
            <summary>Sets the shim of Socket.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Socket.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket.VersionGet">
            <summary>Sets the shim of Socket.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket._Socket">
            <summary>Sets the shim of Socket.!Socket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSocket._Socket01">
            <summary>Sets the shim of Socket.~Socket()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSpider">
            <summary>Shim type of Chilkat.Spider</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSpider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSpider.#ctor(Chilkat.Spider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AbortCurrentGet">
            <summary>Sets the shim of Spider.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AbortCurrentSetBoolean">
            <summary>Sets the shim of Spider.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AddAvoidOutboundLinkPatternString">
            <summary>Sets the shim of Spider.AddAvoidOutboundLinkPattern(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AddAvoidPatternString">
            <summary>Sets the shim of Spider.AddAvoidPattern(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AddMustMatchPatternString">
            <summary>Sets the shim of Spider.AddMustMatchPattern(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AddUnspideredString">
            <summary>Sets the shim of Spider.AddUnspidered(String url)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSpider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Spider.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Spider.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AddAvoidOutboundLinkPatternString">
            <summary>Sets the shim of Spider.AddAvoidOutboundLinkPattern(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AddAvoidPatternString">
            <summary>Sets the shim of Spider.AddAvoidPattern(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AddMustMatchPatternString">
            <summary>Sets the shim of Spider.AddMustMatchPattern(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AddUnspideredString">
            <summary>Sets the shim of Spider.AddUnspidered(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AvoidHttpsGet">
            <summary>Sets the shim of Spider.get_AvoidHttps()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.AvoidHttpsSetBoolean">
            <summary>Sets the shim of Spider.set_AvoidHttps(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.CacheDirGet">
            <summary>Sets the shim of Spider.get_CacheDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.CacheDirSetString">
            <summary>Sets the shim of Spider.set_CacheDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.CanonicalizeUrlString">
            <summary>Sets the shim of Spider.CanonicalizeUrl(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ChopAtQueryGet">
            <summary>Sets the shim of Spider.get_ChopAtQuery()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ChopAtQuerySetBoolean">
            <summary>Sets the shim of Spider.set_ChopAtQuery(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ClearFailedUrls">
            <summary>Sets the shim of Spider.ClearFailedUrls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ClearOutboundLinks">
            <summary>Sets the shim of Spider.ClearOutboundLinks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ClearSpideredUrls">
            <summary>Sets the shim of Spider.ClearSpideredUrls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ConnectTimeoutGet">
            <summary>Sets the shim of Spider.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Spider.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.CrawlNext">
            <summary>Sets the shim of Spider.CrawlNext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.CrawlNextAsync">
            <summary>Sets the shim of Spider.CrawlNextAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Spider.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Spider.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.Dispose">
            <summary>Sets the shim of Spider.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Spider.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.DomainGet">
            <summary>Sets the shim of Spider.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Spider.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Spider.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FetchFromCacheGet">
            <summary>Sets the shim of Spider.get_FetchFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FetchFromCacheSetBoolean">
            <summary>Sets the shim of Spider.set_FetchFromCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FetchRobotsText">
            <summary>Sets the shim of Spider.FetchRobotsText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FetchRobotsTextAsync">
            <summary>Sets the shim of Spider.FetchRobotsTextAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Spider.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Spider.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Spider.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Spider.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Spider.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Spider.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetAvoidPatternInt32">
            <summary>Sets the shim of Spider.GetAvoidPattern(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetBaseDomainString">
            <summary>Sets the shim of Spider.GetBaseDomain(String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetFailedUrlInt32">
            <summary>Sets the shim of Spider.GetFailedUrl(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetOutboundLinkInt32">
            <summary>Sets the shim of Spider.GetOutboundLink(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetSpideredUrlInt32">
            <summary>Sets the shim of Spider.GetSpideredUrl(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetUnspideredUrlInt32">
            <summary>Sets the shim of Spider.GetUnspideredUrl(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.GetUrlDomainString">
            <summary>Sets the shim of Spider.GetUrlDomain(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Spider.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Spider.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.InitializeString">
            <summary>Sets the shim of Spider.Initialize(String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Spider.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Spider.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Spider.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastFromCacheGet">
            <summary>Sets the shim of Spider.get_LastFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastHtmlDescriptionGet">
            <summary>Sets the shim of Spider.get_LastHtmlDescription()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastHtmlGet">
            <summary>Sets the shim of Spider.get_LastHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastHtmlKeywordsGet">
            <summary>Sets the shim of Spider.get_LastHtmlKeywords()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastHtmlTitleGet">
            <summary>Sets the shim of Spider.get_LastHtmlTitle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Spider.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Spider.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastModDateStrGet">
            <summary>Sets the shim of Spider.get_LastModDateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.LastUrlGet">
            <summary>Sets the shim of Spider.get_LastUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.MaxResponseSizeGet">
            <summary>Sets the shim of Spider.get_MaxResponseSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.MaxResponseSizeSetInt32">
            <summary>Sets the shim of Spider.set_MaxResponseSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.MaxUrlLenGet">
            <summary>Sets the shim of Spider.get_MaxUrlLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.MaxUrlLenSetInt32">
            <summary>Sets the shim of Spider.set_MaxUrlLen(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.NumAvoidPatternsGet">
            <summary>Sets the shim of Spider.get_NumAvoidPatterns()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.NumFailedGet">
            <summary>Sets the shim of Spider.get_NumFailed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.NumOutboundLinksGet">
            <summary>Sets the shim of Spider.get_NumOutboundLinks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.NumSpideredGet">
            <summary>Sets the shim of Spider.get_NumSpidered()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.NumUnspideredGet">
            <summary>Sets the shim of Spider.get_NumUnspidered()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnAbortCheckAddSpiderAbortCheckEventHandler">
            <summary>Sets the shim of Spider.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Spider.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnAbortCheckRemoveSpiderAbortCheckEventHandler">
            <summary>Sets the shim of Spider.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnBinaryDataAddSpiderBinaryDataEventHandler">
            <summary>Sets the shim of Spider.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Spider.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnBinaryDataRemoveSpiderBinaryDataEventHandler">
            <summary>Sets the shim of Spider.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnPercentDoneAddSpiderPercentDoneEventHandler">
            <summary>Sets the shim of Spider.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Spider.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnPercentDoneRemoveSpiderPercentDoneEventHandler">
            <summary>Sets the shim of Spider.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnProgressInfoAddSpiderProgressInfoEventHandler">
            <summary>Sets the shim of Spider.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Spider.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnProgressInfoRemoveSpiderProgressInfoEventHandler">
            <summary>Sets the shim of Spider.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnTaskCompletedAddSpiderTaskCompletedEventHandler">
            <summary>Sets the shim of Spider.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Spider.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnTaskCompletedRemoveSpiderTaskCompletedEventHandler">
            <summary>Sets the shim of Spider.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnTextDataAddSpiderTextDataEventHandler">
            <summary>Sets the shim of Spider.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Spider.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.OnTextDataRemoveSpiderTextDataEventHandler">
            <summary>Sets the shim of Spider.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Spider.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Spider.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyDomainGet">
            <summary>Sets the shim of Spider.get_ProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyDomainSetString">
            <summary>Sets the shim of Spider.set_ProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyLoginGet">
            <summary>Sets the shim of Spider.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyLoginSetString">
            <summary>Sets the shim of Spider.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyPasswordGet">
            <summary>Sets the shim of Spider.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyPasswordSetString">
            <summary>Sets the shim of Spider.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyPortGet">
            <summary>Sets the shim of Spider.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ProxyPortSetInt32">
            <summary>Sets the shim of Spider.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ReadTimeoutGet">
            <summary>Sets the shim of Spider.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ReadTimeoutSetInt32">
            <summary>Sets the shim of Spider.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.RecrawlLast">
            <summary>Sets the shim of Spider.RecrawlLast()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.RecrawlLastAsync">
            <summary>Sets the shim of Spider.RecrawlLastAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Spider.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.SkipUnspideredInt32">
            <summary>Sets the shim of Spider.SkipUnspidered(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.SleepMsInt32">
            <summary>Sets the shim of Spider.SleepMs(Int32 numMilliseconds)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.ToString01">
            <summary>Sets the shim of Spider.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.UpdateCacheGet">
            <summary>Sets the shim of Spider.get_UpdateCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.UpdateCacheSetBoolean">
            <summary>Sets the shim of Spider.set_UpdateCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.UserAgentGet">
            <summary>Sets the shim of Spider.get_UserAgent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.UserAgentSetString">
            <summary>Sets the shim of Spider.set_UserAgent(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Spider.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Spider.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.VersionGet">
            <summary>Sets the shim of Spider.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.WindDownCountGet">
            <summary>Sets the shim of Spider.get_WindDownCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances.WindDownCountSetInt32">
            <summary>Sets the shim of Spider.set_WindDownCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances._Spider">
            <summary>Sets the shim of Spider.!Spider()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AllInstances._Spider01">
            <summary>Sets the shim of Spider.~Spider()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AvoidHttpsGet">
            <summary>Sets the shim of Spider.get_AvoidHttps()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.AvoidHttpsSetBoolean">
            <summary>Sets the shim of Spider.set_AvoidHttps(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSpider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSpider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSpider.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.CacheDirGet">
            <summary>Sets the shim of Spider.get_CacheDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.CacheDirSetString">
            <summary>Sets the shim of Spider.set_CacheDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.CanonicalizeUrlString">
            <summary>Sets the shim of Spider.CanonicalizeUrl(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ChopAtQueryGet">
            <summary>Sets the shim of Spider.get_ChopAtQuery()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ChopAtQuerySetBoolean">
            <summary>Sets the shim of Spider.set_ChopAtQuery(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ClearFailedUrls">
            <summary>Sets the shim of Spider.ClearFailedUrls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ClearOutboundLinks">
            <summary>Sets the shim of Spider.ClearOutboundLinks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ClearSpideredUrls">
            <summary>Sets the shim of Spider.ClearSpideredUrls()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ConnectTimeoutGet">
            <summary>Sets the shim of Spider.get_ConnectTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ConnectTimeoutSetInt32">
            <summary>Sets the shim of Spider.set_ConnectTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.Constructor">
            <summary>Sets the shim of Spider.Spider()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.CrawlNext">
            <summary>Sets the shim of Spider.CrawlNext()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.CrawlNextAsync">
            <summary>Sets the shim of Spider.CrawlNextAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.DebugLogFilePathGet">
            <summary>Sets the shim of Spider.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.DebugLogFilePathSetString">
            <summary>Sets the shim of Spider.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.Dispose">
            <summary>Sets the shim of Spider.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.DisposeBoolean">
            <summary>Sets the shim of Spider.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.DomainGet">
            <summary>Sets the shim of Spider.get_Domain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.EnableEventsGet">
            <summary>Sets the shim of Spider.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.EnableEventsSetBoolean">
            <summary>Sets the shim of Spider.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FetchFromCacheGet">
            <summary>Sets the shim of Spider.get_FetchFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FetchFromCacheSetBoolean">
            <summary>Sets the shim of Spider.set_FetchFromCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FetchRobotsText">
            <summary>Sets the shim of Spider.FetchRobotsText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FetchRobotsTextAsync">
            <summary>Sets the shim of Spider.FetchRobotsTextAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Spider.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Spider.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Spider.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Spider.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Spider.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Spider.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetAvoidPatternInt32">
            <summary>Sets the shim of Spider.GetAvoidPattern(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetBaseDomainString">
            <summary>Sets the shim of Spider.GetBaseDomain(String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetFailedUrlInt32">
            <summary>Sets the shim of Spider.GetFailedUrl(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetOutboundLinkInt32">
            <summary>Sets the shim of Spider.GetOutboundLink(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetSpideredUrlInt32">
            <summary>Sets the shim of Spider.GetSpideredUrl(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetUnspideredUrlInt32">
            <summary>Sets the shim of Spider.GetUnspideredUrl(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.GetUrlDomainString">
            <summary>Sets the shim of Spider.GetUrlDomain(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.HeartbeatMsGet">
            <summary>Sets the shim of Spider.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.HeartbeatMsSetInt32">
            <summary>Sets the shim of Spider.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.InitializeString">
            <summary>Sets the shim of Spider.Initialize(String domain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastErrorHtmlGet">
            <summary>Sets the shim of Spider.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastErrorTextGet">
            <summary>Sets the shim of Spider.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastErrorXmlGet">
            <summary>Sets the shim of Spider.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastFromCacheGet">
            <summary>Sets the shim of Spider.get_LastFromCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastHtmlDescriptionGet">
            <summary>Sets the shim of Spider.get_LastHtmlDescription()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastHtmlGet">
            <summary>Sets the shim of Spider.get_LastHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastHtmlKeywordsGet">
            <summary>Sets the shim of Spider.get_LastHtmlKeywords()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastHtmlTitleGet">
            <summary>Sets the shim of Spider.get_LastHtmlTitle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastMethodSuccessGet">
            <summary>Sets the shim of Spider.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Spider.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastModDateStrGet">
            <summary>Sets the shim of Spider.get_LastModDateStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.LastUrlGet">
            <summary>Sets the shim of Spider.get_LastUrl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.MaxResponseSizeGet">
            <summary>Sets the shim of Spider.get_MaxResponseSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.MaxResponseSizeSetInt32">
            <summary>Sets the shim of Spider.set_MaxResponseSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.MaxUrlLenGet">
            <summary>Sets the shim of Spider.get_MaxUrlLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.MaxUrlLenSetInt32">
            <summary>Sets the shim of Spider.set_MaxUrlLen(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.NumAvoidPatternsGet">
            <summary>Sets the shim of Spider.get_NumAvoidPatterns()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.NumFailedGet">
            <summary>Sets the shim of Spider.get_NumFailed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.NumOutboundLinksGet">
            <summary>Sets the shim of Spider.get_NumOutboundLinks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.NumSpideredGet">
            <summary>Sets the shim of Spider.get_NumSpidered()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.NumUnspideredGet">
            <summary>Sets the shim of Spider.get_NumUnspidered()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnAbortCheckAddSpiderAbortCheckEventHandler">
            <summary>Sets the shim of Spider.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Spider.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnAbortCheckRemoveSpiderAbortCheckEventHandler">
            <summary>Sets the shim of Spider.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnBinaryDataAddSpiderBinaryDataEventHandler">
            <summary>Sets the shim of Spider.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Spider.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnBinaryDataRemoveSpiderBinaryDataEventHandler">
            <summary>Sets the shim of Spider.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnPercentDoneAddSpiderPercentDoneEventHandler">
            <summary>Sets the shim of Spider.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Spider.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnPercentDoneRemoveSpiderPercentDoneEventHandler">
            <summary>Sets the shim of Spider.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnProgressInfoAddSpiderProgressInfoEventHandler">
            <summary>Sets the shim of Spider.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Spider.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnProgressInfoRemoveSpiderProgressInfoEventHandler">
            <summary>Sets the shim of Spider.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnTaskCompletedAddSpiderTaskCompletedEventHandler">
            <summary>Sets the shim of Spider.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Spider.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnTaskCompletedRemoveSpiderTaskCompletedEventHandler">
            <summary>Sets the shim of Spider.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnTextDataAddSpiderTextDataEventHandler">
            <summary>Sets the shim of Spider.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Spider.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.OnTextDataRemoveSpiderTextDataEventHandler">
            <summary>Sets the shim of Spider.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.PreferIpv6Get">
            <summary>Sets the shim of Spider.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.PreferIpv6SetBoolean">
            <summary>Sets the shim of Spider.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyDomainGet">
            <summary>Sets the shim of Spider.get_ProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyDomainSetString">
            <summary>Sets the shim of Spider.set_ProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyLoginGet">
            <summary>Sets the shim of Spider.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyLoginSetString">
            <summary>Sets the shim of Spider.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyPasswordGet">
            <summary>Sets the shim of Spider.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyPasswordSetString">
            <summary>Sets the shim of Spider.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyPortGet">
            <summary>Sets the shim of Spider.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ProxyPortSetInt32">
            <summary>Sets the shim of Spider.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ReadTimeoutGet">
            <summary>Sets the shim of Spider.get_ReadTimeout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ReadTimeoutSetInt32">
            <summary>Sets the shim of Spider.set_ReadTimeout(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.RecrawlLast">
            <summary>Sets the shim of Spider.RecrawlLast()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.RecrawlLastAsync">
            <summary>Sets the shim of Spider.RecrawlLastAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.SaveLastErrorString">
            <summary>Sets the shim of Spider.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.SkipUnspideredInt32">
            <summary>Sets the shim of Spider.SkipUnspidered(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.SleepMsInt32">
            <summary>Sets the shim of Spider.SleepMs(Int32 numMilliseconds)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.ToString">
            <summary>Sets the shim of Spider.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.UpdateCacheGet">
            <summary>Sets the shim of Spider.get_UpdateCache()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.UpdateCacheSetBoolean">
            <summary>Sets the shim of Spider.set_UpdateCache(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.UserAgentGet">
            <summary>Sets the shim of Spider.get_UserAgent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.UserAgentSetString">
            <summary>Sets the shim of Spider.set_UserAgent(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.VerboseLoggingGet">
            <summary>Sets the shim of Spider.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Spider.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.VersionGet">
            <summary>Sets the shim of Spider.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.WindDownCountGet">
            <summary>Sets the shim of Spider.get_WindDownCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider.WindDownCountSetInt32">
            <summary>Sets the shim of Spider.set_WindDownCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider._Spider">
            <summary>Sets the shim of Spider.!Spider()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSpider._Spider01">
            <summary>Sets the shim of Spider.~Spider()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSsh">
            <summary>Shim type of Chilkat.Ssh</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSsh.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSsh.#ctor(Chilkat.Ssh)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AbortCurrentGet">
            <summary>Sets the shim of Ssh.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AbortCurrentSetBoolean">
            <summary>Sets the shim of Ssh.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSsh.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Ssh.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Ssh.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthFailReasonGet">
            <summary>Sets the shim of Ssh.get_AuthFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePkAsync(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthenticatePkStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePk(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthenticatePwAsyncStringString">
            <summary>Sets the shim of Ssh.AuthenticatePwAsync(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthenticatePwPkAsyncStringStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePwPkAsync(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthenticatePwPkStringStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePwPk(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.AuthenticatePwStringString">
            <summary>Sets the shim of Ssh.AuthenticatePw(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.CaretControlGet">
            <summary>Sets the shim of Ssh.get_CaretControl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.CaretControlSetBoolean">
            <summary>Sets the shim of Ssh.set_CaretControl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelIsOpenInt32">
            <summary>Sets the shim of Ssh.ChannelIsOpen(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelOpenFailCodeGet">
            <summary>Sets the shim of Ssh.get_ChannelOpenFailCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelOpenFailReasonGet">
            <summary>Sets the shim of Ssh.get_ChannelOpenFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelPollAsyncInt32Int32">
            <summary>Sets the shim of Ssh.ChannelPollAsync(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelPollInt32Int32">
            <summary>Sets the shim of Ssh.ChannelPoll(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReadAndPoll2AsyncInt32Int32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPoll2Async(Int32 channelNum, Int32 pollTimeoutMs, Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReadAndPoll2Int32Int32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPoll2(Int32 channelNum, Int32 pollTimeoutMs, Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReadAndPollAsyncInt32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPollAsync(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReadAndPollInt32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPoll(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReadAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelReadAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReadInt32">
            <summary>Sets the shim of Ssh.ChannelRead(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceiveToCloseAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelReceiveToCloseAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceiveToCloseInt32">
            <summary>Sets the shim of Ssh.ChannelReceiveToClose(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceiveUntilMatchAsyncInt32StringStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatchAsync(Int32 channelNum, String matchPattern, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceiveUntilMatchInt32StringStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatch(Int32 channelNum, String matchPattern, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceiveUntilMatchNAsyncInt32StringArrayStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatchNAsync(Int32 channelNum, StringArray matchPatterns, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceiveUntilMatchNInt32StringArrayStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatchN(Int32 channelNum, StringArray matchPatterns, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceivedCloseInt32">
            <summary>Sets the shim of Ssh.ChannelReceivedClose(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceivedEofInt32">
            <summary>Sets the shim of Ssh.ChannelReceivedEof(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReceivedExitStatusInt32">
            <summary>Sets the shim of Ssh.ChannelReceivedExitStatus(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelReleaseInt32">
            <summary>Sets the shim of Ssh.ChannelRelease(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendCloseAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelSendCloseAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendCloseInt32">
            <summary>Sets the shim of Ssh.ChannelSendClose(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendDataAsyncInt32ByteArray">
            <summary>Sets the shim of Ssh.ChannelSendDataAsync(Int32 channelNum, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendDataInt32ByteArray">
            <summary>Sets the shim of Ssh.ChannelSendData(Int32 channelNum, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendEofAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelSendEofAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendEofInt32">
            <summary>Sets the shim of Ssh.ChannelSendEof(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendStringAsyncInt32StringString">
            <summary>Sets the shim of Ssh.ChannelSendStringAsync(Int32 channelNum, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ChannelSendStringInt32StringString">
            <summary>Sets the shim of Ssh.ChannelSendString(Int32 channelNum, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.CheckConnection">
            <summary>Sets the shim of Ssh.CheckConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ClearTtyModes">
            <summary>Sets the shim of Ssh.ClearTtyModes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ClientIdentifierGet">
            <summary>Sets the shim of Ssh.get_ClientIdentifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ClientIdentifierSetString">
            <summary>Sets the shim of Ssh.set_ClientIdentifier(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of Ssh.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of Ssh.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ConnectAsyncStringInt32">
            <summary>Sets the shim of Ssh.ConnectAsync(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ConnectStringInt32">
            <summary>Sets the shim of Ssh.Connect(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ConnectThroughSshAsyncSshStringInt32">
            <summary>Sets the shim of Ssh.ConnectThroughSshAsync(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ConnectThroughSshSshStringInt32">
            <summary>Sets the shim of Ssh.ConnectThroughSsh(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ConnectTimeoutMsGet">
            <summary>Sets the shim of Ssh.get_ConnectTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ConnectTimeoutMsSetInt32">
            <summary>Sets the shim of Ssh.set_ConnectTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ContinueKeyboardAuthAsyncString">
            <summary>Sets the shim of Ssh.ContinueKeyboardAuthAsync(String response)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ContinueKeyboardAuthString">
            <summary>Sets the shim of Ssh.ContinueKeyboardAuth(String response)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Ssh.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Ssh.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.Disconnect">
            <summary>Sets the shim of Ssh.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.DisconnectCodeGet">
            <summary>Sets the shim of Ssh.get_DisconnectCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.DisconnectReasonGet">
            <summary>Sets the shim of Ssh.get_DisconnectReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.Dispose">
            <summary>Sets the shim of Ssh.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Ssh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.EnableCompressionGet">
            <summary>Sets the shim of Ssh.get_EnableCompression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.EnableCompressionSetBoolean">
            <summary>Sets the shim of Ssh.set_EnableCompression(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Ssh.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Ssh.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ssh.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Ssh.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ssh.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ssh.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ssh.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Ssh.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ForceCipherGet">
            <summary>Sets the shim of Ssh.get_ForceCipher()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ForceCipherSetString">
            <summary>Sets the shim of Ssh.set_ForceCipher(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetChannelExitStatusInt32">
            <summary>Sets the shim of Ssh.GetChannelExitStatus(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetChannelNumberInt32">
            <summary>Sets the shim of Ssh.GetChannelNumber(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetChannelTypeInt32">
            <summary>Sets the shim of Ssh.GetChannelType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedDataInt32">
            <summary>Sets the shim of Ssh.GetReceivedData(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedDataNInt32Int32">
            <summary>Sets the shim of Ssh.GetReceivedDataN(Int32 channelNum, Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedNumBytesInt32">
            <summary>Sets the shim of Ssh.GetReceivedNumBytes(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedStderrInt32">
            <summary>Sets the shim of Ssh.GetReceivedStderr(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedStderrTextInt32String">
            <summary>Sets the shim of Ssh.GetReceivedStderrText(Int32 channelNum, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedTextInt32String">
            <summary>Sets the shim of Ssh.GetReceivedText(Int32 channelNum, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.GetReceivedTextSInt32StringString">
            <summary>Sets the shim of Ssh.GetReceivedTextS(Int32 channelNum, String substr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Ssh.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Ssh.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HostKeyAlgGet">
            <summary>Sets the shim of Ssh.get_HostKeyAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HostKeyAlgSetString">
            <summary>Sets the shim of Ssh.set_HostKeyAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HostKeyFingerprintGet">
            <summary>Sets the shim of Ssh.get_HostKeyFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Ssh.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of Ssh.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of Ssh.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of Ssh.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of Ssh.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of Ssh.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of Ssh.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of Ssh.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Ssh.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.IsConnectedGet">
            <summary>Sets the shim of Ssh.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.KeepSessionLogGet">
            <summary>Sets the shim of Ssh.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Ssh.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Ssh.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Ssh.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Ssh.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Ssh.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ssh.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.MaxPacketSizeGet">
            <summary>Sets the shim of Ssh.get_MaxPacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.MaxPacketSizeSetInt32">
            <summary>Sets the shim of Ssh.set_MaxPacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.NumOpenChannelsGet">
            <summary>Sets the shim of Ssh.get_NumOpenChannels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnAbortCheckAddSshAbortCheckEventHandler">
            <summary>Sets the shim of Ssh.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ssh.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnAbortCheckRemoveSshAbortCheckEventHandler">
            <summary>Sets the shim of Ssh.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnBinaryDataAddSshBinaryDataEventHandler">
            <summary>Sets the shim of Ssh.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Ssh.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnBinaryDataRemoveSshBinaryDataEventHandler">
            <summary>Sets the shim of Ssh.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnPercentDoneAddSshPercentDoneEventHandler">
            <summary>Sets the shim of Ssh.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ssh.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnPercentDoneRemoveSshPercentDoneEventHandler">
            <summary>Sets the shim of Ssh.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnProgressInfoAddSshProgressInfoEventHandler">
            <summary>Sets the shim of Ssh.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ssh.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnProgressInfoRemoveSshProgressInfoEventHandler">
            <summary>Sets the shim of Ssh.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnTaskCompletedAddSshTaskCompletedEventHandler">
            <summary>Sets the shim of Ssh.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ssh.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnTaskCompletedRemoveSshTaskCompletedEventHandler">
            <summary>Sets the shim of Ssh.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnTextDataAddSshTextDataEventHandler">
            <summary>Sets the shim of Ssh.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Ssh.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OnTextDataRemoveSshTextDataEventHandler">
            <summary>Sets the shim of Ssh.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OpenCustomChannelAsyncString">
            <summary>Sets the shim of Ssh.OpenCustomChannelAsync(String channelType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OpenCustomChannelString">
            <summary>Sets the shim of Ssh.OpenCustomChannel(String channelType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OpenDirectTcpIpChannelAsyncStringInt32">
            <summary>Sets the shim of Ssh.OpenDirectTcpIpChannelAsync(String targetHostname, Int32 targetPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OpenDirectTcpIpChannelStringInt32">
            <summary>Sets the shim of Ssh.OpenDirectTcpIpChannel(String targetHostname, Int32 targetPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OpenSessionChannel">
            <summary>Sets the shim of Ssh.OpenSessionChannel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.OpenSessionChannelAsync">
            <summary>Sets the shim of Ssh.OpenSessionChannelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.PasswordChangeRequestedGet">
            <summary>Sets the shim of Ssh.get_PasswordChangeRequested()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.PeekReceivedTextInt32String">
            <summary>Sets the shim of Ssh.PeekReceivedText(Int32 channelNum, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Ssh.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Ssh.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickCmdCheckAsyncInt32">
            <summary>Sets the shim of Ssh.QuickCmdCheckAsync(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickCmdCheckInt32">
            <summary>Sets the shim of Ssh.QuickCmdCheck(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickCmdSendAsyncString">
            <summary>Sets the shim of Ssh.QuickCmdSendAsync(String command)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickCmdSendString">
            <summary>Sets the shim of Ssh.QuickCmdSend(String command)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickCommandAsyncStringString">
            <summary>Sets the shim of Ssh.QuickCommandAsync(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickCommandStringString">
            <summary>Sets the shim of Ssh.QuickCommand(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickShell">
            <summary>Sets the shim of Ssh.QuickShell()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.QuickShellAsync">
            <summary>Sets the shim of Ssh.QuickShellAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ReKey">
            <summary>Sets the shim of Ssh.ReKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ReKeyAsync">
            <summary>Sets the shim of Ssh.ReKeyAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ReadTimeoutMsGet">
            <summary>Sets the shim of Ssh.get_ReadTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ReadTimeoutMsSetInt32">
            <summary>Sets the shim of Ssh.set_ReadTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ReqExecCharsetGet">
            <summary>Sets the shim of Ssh.get_ReqExecCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ReqExecCharsetSetString">
            <summary>Sets the shim of Ssh.set_ReqExecCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Ssh.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendIgnore">
            <summary>Sets the shim of Ssh.SendIgnore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendIgnoreAsync">
            <summary>Sets the shim of Ssh.SendIgnoreAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqExecAsyncInt32String">
            <summary>Sets the shim of Ssh.SendReqExecAsync(Int32 channelNum, String commandLine)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqExecInt32String">
            <summary>Sets the shim of Ssh.SendReqExec(Int32 channelNum, String commandLine)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqPtyAsyncInt32StringInt32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqPtyAsync(Int32 channelNum, String termType, Int32 widthInChars, Int32 heightInChars, Int32 widthInPixels, Int32 heightInPixels)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqPtyInt32StringInt32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqPty(Int32 channelNum, String termType, Int32 widthInChars, Int32 heightInChars, Int32 widthInPixels, Int32 heightInPixels)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqSetEnvAsyncInt32StringString">
            <summary>Sets the shim of Ssh.SendReqSetEnvAsync(Int32 channelNum, String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqSetEnvInt32StringString">
            <summary>Sets the shim of Ssh.SendReqSetEnv(Int32 channelNum, String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqShellAsyncInt32">
            <summary>Sets the shim of Ssh.SendReqShellAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqShellInt32">
            <summary>Sets the shim of Ssh.SendReqShell(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqSignalAsyncInt32String">
            <summary>Sets the shim of Ssh.SendReqSignalAsync(Int32 channelNum, String signalName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqSignalInt32String">
            <summary>Sets the shim of Ssh.SendReqSignal(Int32 channelNum, String signalName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqSubsystemAsyncInt32String">
            <summary>Sets the shim of Ssh.SendReqSubsystemAsync(Int32 channelNum, String subsystemName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqSubsystemInt32String">
            <summary>Sets the shim of Ssh.SendReqSubsystem(Int32 channelNum, String subsystemName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqWindowChangeAsyncInt32Int32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqWindowChangeAsync(Int32 channelNum, Int32 widthInChars, Int32 heightInRows, Int32 pixWidth, Int32 pixHeight)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqWindowChangeInt32Int32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqWindowChange(Int32 channelNum, Int32 widthInChars, Int32 heightInRows, Int32 pixWidth, Int32 pixHeight)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqX11ForwardingAsyncInt32BooleanStringStringInt32">
            <summary>Sets the shim of Ssh.SendReqX11ForwardingAsync(Int32 channelNum, Boolean singleConnection, String authProt, String authCookie, Int32 screenNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqX11ForwardingInt32BooleanStringStringInt32">
            <summary>Sets the shim of Ssh.SendReqX11Forwarding(Int32 channelNum, Boolean singleConnection, String authProt, String authCookie, Int32 screenNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqXonXoffAsyncInt32Boolean">
            <summary>Sets the shim of Ssh.SendReqXonXoffAsync(Int32 channelNum, Boolean clientCanDo)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SendReqXonXoffInt32Boolean">
            <summary>Sets the shim of Ssh.SendReqXonXoff(Int32 channelNum, Boolean clientCanDo)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SessionLogGet">
            <summary>Sets the shim of Ssh.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SetTtyModeStringInt32">
            <summary>Sets the shim of Ssh.SetTtyMode(String ttyName, Int32 ttyValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of Ssh.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of Ssh.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SoSndBufGet">
            <summary>Sets the shim of Ssh.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of Ssh.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of Ssh.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of Ssh.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of Ssh.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of Ssh.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksPortGet">
            <summary>Sets the shim of Ssh.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of Ssh.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of Ssh.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of Ssh.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksVersionGet">
            <summary>Sets the shim of Ssh.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of Ssh.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.StartKeyboardAuthAsyncString">
            <summary>Sets the shim of Ssh.StartKeyboardAuthAsync(String login)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.StartKeyboardAuthString">
            <summary>Sets the shim of Ssh.StartKeyboardAuth(String login)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.StderrToStdoutGet">
            <summary>Sets the shim of Ssh.get_StderrToStdout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.StderrToStdoutSetBoolean">
            <summary>Sets the shim of Ssh.set_StderrToStdout(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.StripColorCodesGet">
            <summary>Sets the shim of Ssh.get_StripColorCodes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.StripColorCodesSetBoolean">
            <summary>Sets the shim of Ssh.set_StripColorCodes(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.TcpNoDelayGet">
            <summary>Sets the shim of Ssh.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.TcpNoDelaySetBoolean">
            <summary>Sets the shim of Ssh.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.ToString01">
            <summary>Sets the shim of Ssh.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Ssh.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.UserAuthBannerGet">
            <summary>Sets the shim of Ssh.get_UserAuthBanner()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.UserAuthBannerSetString">
            <summary>Sets the shim of Ssh.set_UserAuthBanner(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Ssh.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ssh.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.VersionGet">
            <summary>Sets the shim of Ssh.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.WaitForChannelMessageAsyncInt32">
            <summary>Sets the shim of Ssh.WaitForChannelMessageAsync(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances.WaitForChannelMessageInt32">
            <summary>Sets the shim of Ssh.WaitForChannelMessage(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances._Ssh">
            <summary>Sets the shim of Ssh.!Ssh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AllInstances._Ssh01">
            <summary>Sets the shim of Ssh.~Ssh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthFailReasonGet">
            <summary>Sets the shim of Ssh.get_AuthFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePkAsync(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthenticatePkStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePk(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthenticatePwAsyncStringString">
            <summary>Sets the shim of Ssh.AuthenticatePwAsync(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthenticatePwPkAsyncStringStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePwPkAsync(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthenticatePwPkStringStringSshKey">
            <summary>Sets the shim of Ssh.AuthenticatePwPk(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.AuthenticatePwStringString">
            <summary>Sets the shim of Ssh.AuthenticatePw(String login, String password)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSsh.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSsh.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSsh.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.CaretControlGet">
            <summary>Sets the shim of Ssh.get_CaretControl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.CaretControlSetBoolean">
            <summary>Sets the shim of Ssh.set_CaretControl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelIsOpenInt32">
            <summary>Sets the shim of Ssh.ChannelIsOpen(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelOpenFailCodeGet">
            <summary>Sets the shim of Ssh.get_ChannelOpenFailCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelOpenFailReasonGet">
            <summary>Sets the shim of Ssh.get_ChannelOpenFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelPollAsyncInt32Int32">
            <summary>Sets the shim of Ssh.ChannelPollAsync(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelPollInt32Int32">
            <summary>Sets the shim of Ssh.ChannelPoll(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReadAndPoll2AsyncInt32Int32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPoll2Async(Int32 channelNum, Int32 pollTimeoutMs, Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReadAndPoll2Int32Int32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPoll2(Int32 channelNum, Int32 pollTimeoutMs, Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReadAndPollAsyncInt32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPollAsync(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReadAndPollInt32Int32">
            <summary>Sets the shim of Ssh.ChannelReadAndPoll(Int32 channelNum, Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReadAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelReadAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReadInt32">
            <summary>Sets the shim of Ssh.ChannelRead(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceiveToCloseAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelReceiveToCloseAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceiveToCloseInt32">
            <summary>Sets the shim of Ssh.ChannelReceiveToClose(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceiveUntilMatchAsyncInt32StringStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatchAsync(Int32 channelNum, String matchPattern, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceiveUntilMatchInt32StringStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatch(Int32 channelNum, String matchPattern, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceiveUntilMatchNAsyncInt32StringArrayStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatchNAsync(Int32 channelNum, StringArray matchPatterns, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceiveUntilMatchNInt32StringArrayStringBoolean">
            <summary>Sets the shim of Ssh.ChannelReceiveUntilMatchN(Int32 channelNum, StringArray matchPatterns, String charset, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceivedCloseInt32">
            <summary>Sets the shim of Ssh.ChannelReceivedClose(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceivedEofInt32">
            <summary>Sets the shim of Ssh.ChannelReceivedEof(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReceivedExitStatusInt32">
            <summary>Sets the shim of Ssh.ChannelReceivedExitStatus(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelReleaseInt32">
            <summary>Sets the shim of Ssh.ChannelRelease(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendCloseAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelSendCloseAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendCloseInt32">
            <summary>Sets the shim of Ssh.ChannelSendClose(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendDataAsyncInt32ByteArray">
            <summary>Sets the shim of Ssh.ChannelSendDataAsync(Int32 channelNum, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendDataInt32ByteArray">
            <summary>Sets the shim of Ssh.ChannelSendData(Int32 channelNum, Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendEofAsyncInt32">
            <summary>Sets the shim of Ssh.ChannelSendEofAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendEofInt32">
            <summary>Sets the shim of Ssh.ChannelSendEof(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendStringAsyncInt32StringString">
            <summary>Sets the shim of Ssh.ChannelSendStringAsync(Int32 channelNum, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ChannelSendStringInt32StringString">
            <summary>Sets the shim of Ssh.ChannelSendString(Int32 channelNum, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.CheckConnection">
            <summary>Sets the shim of Ssh.CheckConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ClearTtyModes">
            <summary>Sets the shim of Ssh.ClearTtyModes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ClientIdentifierGet">
            <summary>Sets the shim of Ssh.get_ClientIdentifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ClientIdentifierSetString">
            <summary>Sets the shim of Ssh.set_ClientIdentifier(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ClientIpAddressGet">
            <summary>Sets the shim of Ssh.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ClientIpAddressSetString">
            <summary>Sets the shim of Ssh.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ConnectAsyncStringInt32">
            <summary>Sets the shim of Ssh.ConnectAsync(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ConnectStringInt32">
            <summary>Sets the shim of Ssh.Connect(String domainName, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ConnectThroughSshAsyncSshStringInt32">
            <summary>Sets the shim of Ssh.ConnectThroughSshAsync(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ConnectThroughSshSshStringInt32">
            <summary>Sets the shim of Ssh.ConnectThroughSsh(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ConnectTimeoutMsGet">
            <summary>Sets the shim of Ssh.get_ConnectTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ConnectTimeoutMsSetInt32">
            <summary>Sets the shim of Ssh.set_ConnectTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.Constructor">
            <summary>Sets the shim of Ssh.Ssh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ContinueKeyboardAuthAsyncString">
            <summary>Sets the shim of Ssh.ContinueKeyboardAuthAsync(String response)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ContinueKeyboardAuthString">
            <summary>Sets the shim of Ssh.ContinueKeyboardAuth(String response)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.DebugLogFilePathGet">
            <summary>Sets the shim of Ssh.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.DebugLogFilePathSetString">
            <summary>Sets the shim of Ssh.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.Disconnect">
            <summary>Sets the shim of Ssh.Disconnect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.DisconnectCodeGet">
            <summary>Sets the shim of Ssh.get_DisconnectCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.DisconnectReasonGet">
            <summary>Sets the shim of Ssh.get_DisconnectReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.Dispose">
            <summary>Sets the shim of Ssh.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.DisposeBoolean">
            <summary>Sets the shim of Ssh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.EnableCompressionGet">
            <summary>Sets the shim of Ssh.get_EnableCompression()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.EnableCompressionSetBoolean">
            <summary>Sets the shim of Ssh.set_EnableCompression(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.EnableEventsGet">
            <summary>Sets the shim of Ssh.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.EnableEventsSetBoolean">
            <summary>Sets the shim of Ssh.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ssh.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Ssh.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ssh.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ssh.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ssh.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Ssh.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ForceCipherGet">
            <summary>Sets the shim of Ssh.get_ForceCipher()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ForceCipherSetString">
            <summary>Sets the shim of Ssh.set_ForceCipher(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetChannelExitStatusInt32">
            <summary>Sets the shim of Ssh.GetChannelExitStatus(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetChannelNumberInt32">
            <summary>Sets the shim of Ssh.GetChannelNumber(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetChannelTypeInt32">
            <summary>Sets the shim of Ssh.GetChannelType(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedDataInt32">
            <summary>Sets the shim of Ssh.GetReceivedData(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedDataNInt32Int32">
            <summary>Sets the shim of Ssh.GetReceivedDataN(Int32 channelNum, Int32 maxNumBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedNumBytesInt32">
            <summary>Sets the shim of Ssh.GetReceivedNumBytes(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedStderrInt32">
            <summary>Sets the shim of Ssh.GetReceivedStderr(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedStderrTextInt32String">
            <summary>Sets the shim of Ssh.GetReceivedStderrText(Int32 channelNum, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedTextInt32String">
            <summary>Sets the shim of Ssh.GetReceivedText(Int32 channelNum, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.GetReceivedTextSInt32StringString">
            <summary>Sets the shim of Ssh.GetReceivedTextS(Int32 channelNum, String substr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HeartbeatMsGet">
            <summary>Sets the shim of Ssh.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HeartbeatMsSetInt32">
            <summary>Sets the shim of Ssh.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HostKeyAlgGet">
            <summary>Sets the shim of Ssh.get_HostKeyAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HostKeyAlgSetString">
            <summary>Sets the shim of Ssh.set_HostKeyAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HostKeyFingerprintGet">
            <summary>Sets the shim of Ssh.get_HostKeyFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyAuthMethodGet">
            <summary>Sets the shim of Ssh.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyDomainGet">
            <summary>Sets the shim of Ssh.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyDomainSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyHostnameGet">
            <summary>Sets the shim of Ssh.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyHostnameSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyPasswordGet">
            <summary>Sets the shim of Ssh.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyPasswordSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyPortGet">
            <summary>Sets the shim of Ssh.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyPortSetInt32">
            <summary>Sets the shim of Ssh.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyUsernameGet">
            <summary>Sets the shim of Ssh.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.HttpProxyUsernameSetString">
            <summary>Sets the shim of Ssh.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.IdleTimeoutMsGet">
            <summary>Sets the shim of Ssh.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Ssh.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.IsConnectedGet">
            <summary>Sets the shim of Ssh.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.KeepSessionLogGet">
            <summary>Sets the shim of Ssh.get_KeepSessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.KeepSessionLogSetBoolean">
            <summary>Sets the shim of Ssh.set_KeepSessionLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.LastErrorHtmlGet">
            <summary>Sets the shim of Ssh.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.LastErrorTextGet">
            <summary>Sets the shim of Ssh.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.LastErrorXmlGet">
            <summary>Sets the shim of Ssh.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.LastMethodSuccessGet">
            <summary>Sets the shim of Ssh.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Ssh.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.MaxPacketSizeGet">
            <summary>Sets the shim of Ssh.get_MaxPacketSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.MaxPacketSizeSetInt32">
            <summary>Sets the shim of Ssh.set_MaxPacketSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.NumOpenChannelsGet">
            <summary>Sets the shim of Ssh.get_NumOpenChannels()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnAbortCheckAddSshAbortCheckEventHandler">
            <summary>Sets the shim of Ssh.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Ssh.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnAbortCheckRemoveSshAbortCheckEventHandler">
            <summary>Sets the shim of Ssh.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnBinaryDataAddSshBinaryDataEventHandler">
            <summary>Sets the shim of Ssh.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Ssh.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnBinaryDataRemoveSshBinaryDataEventHandler">
            <summary>Sets the shim of Ssh.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnPercentDoneAddSshPercentDoneEventHandler">
            <summary>Sets the shim of Ssh.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Ssh.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnPercentDoneRemoveSshPercentDoneEventHandler">
            <summary>Sets the shim of Ssh.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnProgressInfoAddSshProgressInfoEventHandler">
            <summary>Sets the shim of Ssh.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Ssh.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnProgressInfoRemoveSshProgressInfoEventHandler">
            <summary>Sets the shim of Ssh.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnTaskCompletedAddSshTaskCompletedEventHandler">
            <summary>Sets the shim of Ssh.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Ssh.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnTaskCompletedRemoveSshTaskCompletedEventHandler">
            <summary>Sets the shim of Ssh.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnTextDataAddSshTextDataEventHandler">
            <summary>Sets the shim of Ssh.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Ssh.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OnTextDataRemoveSshTextDataEventHandler">
            <summary>Sets the shim of Ssh.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OpenCustomChannelAsyncString">
            <summary>Sets the shim of Ssh.OpenCustomChannelAsync(String channelType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OpenCustomChannelString">
            <summary>Sets the shim of Ssh.OpenCustomChannel(String channelType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OpenDirectTcpIpChannelAsyncStringInt32">
            <summary>Sets the shim of Ssh.OpenDirectTcpIpChannelAsync(String targetHostname, Int32 targetPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OpenDirectTcpIpChannelStringInt32">
            <summary>Sets the shim of Ssh.OpenDirectTcpIpChannel(String targetHostname, Int32 targetPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OpenSessionChannel">
            <summary>Sets the shim of Ssh.OpenSessionChannel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.OpenSessionChannelAsync">
            <summary>Sets the shim of Ssh.OpenSessionChannelAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.PasswordChangeRequestedGet">
            <summary>Sets the shim of Ssh.get_PasswordChangeRequested()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.PeekReceivedTextInt32String">
            <summary>Sets the shim of Ssh.PeekReceivedText(Int32 channelNum, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.PreferIpv6Get">
            <summary>Sets the shim of Ssh.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.PreferIpv6SetBoolean">
            <summary>Sets the shim of Ssh.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickCmdCheckAsyncInt32">
            <summary>Sets the shim of Ssh.QuickCmdCheckAsync(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickCmdCheckInt32">
            <summary>Sets the shim of Ssh.QuickCmdCheck(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickCmdSendAsyncString">
            <summary>Sets the shim of Ssh.QuickCmdSendAsync(String command)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickCmdSendString">
            <summary>Sets the shim of Ssh.QuickCmdSend(String command)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickCommandAsyncStringString">
            <summary>Sets the shim of Ssh.QuickCommandAsync(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickCommandStringString">
            <summary>Sets the shim of Ssh.QuickCommand(String command, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickShell">
            <summary>Sets the shim of Ssh.QuickShell()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.QuickShellAsync">
            <summary>Sets the shim of Ssh.QuickShellAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ReKey">
            <summary>Sets the shim of Ssh.ReKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ReKeyAsync">
            <summary>Sets the shim of Ssh.ReKeyAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ReadTimeoutMsGet">
            <summary>Sets the shim of Ssh.get_ReadTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ReadTimeoutMsSetInt32">
            <summary>Sets the shim of Ssh.set_ReadTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ReqExecCharsetGet">
            <summary>Sets the shim of Ssh.get_ReqExecCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ReqExecCharsetSetString">
            <summary>Sets the shim of Ssh.set_ReqExecCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SaveLastErrorString">
            <summary>Sets the shim of Ssh.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendIgnore">
            <summary>Sets the shim of Ssh.SendIgnore()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendIgnoreAsync">
            <summary>Sets the shim of Ssh.SendIgnoreAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqExecAsyncInt32String">
            <summary>Sets the shim of Ssh.SendReqExecAsync(Int32 channelNum, String commandLine)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqExecInt32String">
            <summary>Sets the shim of Ssh.SendReqExec(Int32 channelNum, String commandLine)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqPtyAsyncInt32StringInt32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqPtyAsync(Int32 channelNum, String termType, Int32 widthInChars, Int32 heightInChars, Int32 widthInPixels, Int32 heightInPixels)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqPtyInt32StringInt32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqPty(Int32 channelNum, String termType, Int32 widthInChars, Int32 heightInChars, Int32 widthInPixels, Int32 heightInPixels)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqSetEnvAsyncInt32StringString">
            <summary>Sets the shim of Ssh.SendReqSetEnvAsync(Int32 channelNum, String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqSetEnvInt32StringString">
            <summary>Sets the shim of Ssh.SendReqSetEnv(Int32 channelNum, String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqShellAsyncInt32">
            <summary>Sets the shim of Ssh.SendReqShellAsync(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqShellInt32">
            <summary>Sets the shim of Ssh.SendReqShell(Int32 channelNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqSignalAsyncInt32String">
            <summary>Sets the shim of Ssh.SendReqSignalAsync(Int32 channelNum, String signalName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqSignalInt32String">
            <summary>Sets the shim of Ssh.SendReqSignal(Int32 channelNum, String signalName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqSubsystemAsyncInt32String">
            <summary>Sets the shim of Ssh.SendReqSubsystemAsync(Int32 channelNum, String subsystemName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqSubsystemInt32String">
            <summary>Sets the shim of Ssh.SendReqSubsystem(Int32 channelNum, String subsystemName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqWindowChangeAsyncInt32Int32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqWindowChangeAsync(Int32 channelNum, Int32 widthInChars, Int32 heightInRows, Int32 pixWidth, Int32 pixHeight)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqWindowChangeInt32Int32Int32Int32Int32">
            <summary>Sets the shim of Ssh.SendReqWindowChange(Int32 channelNum, Int32 widthInChars, Int32 heightInRows, Int32 pixWidth, Int32 pixHeight)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqX11ForwardingAsyncInt32BooleanStringStringInt32">
            <summary>Sets the shim of Ssh.SendReqX11ForwardingAsync(Int32 channelNum, Boolean singleConnection, String authProt, String authCookie, Int32 screenNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqX11ForwardingInt32BooleanStringStringInt32">
            <summary>Sets the shim of Ssh.SendReqX11Forwarding(Int32 channelNum, Boolean singleConnection, String authProt, String authCookie, Int32 screenNum)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqXonXoffAsyncInt32Boolean">
            <summary>Sets the shim of Ssh.SendReqXonXoffAsync(Int32 channelNum, Boolean clientCanDo)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SendReqXonXoffInt32Boolean">
            <summary>Sets the shim of Ssh.SendReqXonXoff(Int32 channelNum, Boolean clientCanDo)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SessionLogGet">
            <summary>Sets the shim of Ssh.get_SessionLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SetTtyModeStringInt32">
            <summary>Sets the shim of Ssh.SetTtyMode(String ttyName, Int32 ttyValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SoRcvBufGet">
            <summary>Sets the shim of Ssh.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SoRcvBufSetInt32">
            <summary>Sets the shim of Ssh.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SoSndBufGet">
            <summary>Sets the shim of Ssh.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SoSndBufSetInt32">
            <summary>Sets the shim of Ssh.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksHostnameGet">
            <summary>Sets the shim of Ssh.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksHostnameSetString">
            <summary>Sets the shim of Ssh.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksPasswordGet">
            <summary>Sets the shim of Ssh.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksPasswordSetString">
            <summary>Sets the shim of Ssh.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksPortGet">
            <summary>Sets the shim of Ssh.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksPortSetInt32">
            <summary>Sets the shim of Ssh.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksUsernameGet">
            <summary>Sets the shim of Ssh.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksUsernameSetString">
            <summary>Sets the shim of Ssh.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksVersionGet">
            <summary>Sets the shim of Ssh.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.SocksVersionSetInt32">
            <summary>Sets the shim of Ssh.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.StartKeyboardAuthAsyncString">
            <summary>Sets the shim of Ssh.StartKeyboardAuthAsync(String login)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.StartKeyboardAuthString">
            <summary>Sets the shim of Ssh.StartKeyboardAuth(String login)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.StderrToStdoutGet">
            <summary>Sets the shim of Ssh.get_StderrToStdout()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.StderrToStdoutSetBoolean">
            <summary>Sets the shim of Ssh.set_StderrToStdout(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.StripColorCodesGet">
            <summary>Sets the shim of Ssh.get_StripColorCodes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.StripColorCodesSetBoolean">
            <summary>Sets the shim of Ssh.set_StripColorCodes(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.TcpNoDelayGet">
            <summary>Sets the shim of Ssh.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.TcpNoDelaySetBoolean">
            <summary>Sets the shim of Ssh.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.ToString">
            <summary>Sets the shim of Ssh.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.UnlockComponentString">
            <summary>Sets the shim of Ssh.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.UserAuthBannerGet">
            <summary>Sets the shim of Ssh.get_UserAuthBanner()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.UserAuthBannerSetString">
            <summary>Sets the shim of Ssh.set_UserAuthBanner(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.VerboseLoggingGet">
            <summary>Sets the shim of Ssh.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Ssh.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.VersionGet">
            <summary>Sets the shim of Ssh.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.WaitForChannelMessageAsyncInt32">
            <summary>Sets the shim of Ssh.WaitForChannelMessageAsync(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh.WaitForChannelMessageInt32">
            <summary>Sets the shim of Ssh.WaitForChannelMessage(Int32 pollTimeoutMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh._Ssh">
            <summary>Sets the shim of Ssh.!Ssh()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSsh._Ssh01">
            <summary>Sets the shim of Ssh.~Ssh()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSshKey">
            <summary>Shim type of Chilkat.SshKey</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshKey.#ctor(Chilkat.SshKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSshKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.CommentGet">
            <summary>Sets the shim of SshKey.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.CommentSetString">
            <summary>Sets the shim of SshKey.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of SshKey.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of SshKey.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.Dispose">
            <summary>Sets the shim of SshKey.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SshKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.FromOpenSshPrivateKeyString">
            <summary>Sets the shim of SshKey.FromOpenSshPrivateKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.FromOpenSshPublicKeyString">
            <summary>Sets the shim of SshKey.FromOpenSshPublicKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.FromPuttyPrivateKeyString">
            <summary>Sets the shim of SshKey.FromPuttyPrivateKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.FromRfc4716PublicKeyString">
            <summary>Sets the shim of SshKey.FromRfc4716PublicKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.FromXmlString">
            <summary>Sets the shim of SshKey.FromXml(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.GenFingerprint">
            <summary>Sets the shim of SshKey.GenFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.GenerateDsaKeyInt32">
            <summary>Sets the shim of SshKey.GenerateDsaKey(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.GenerateRsaKeyInt32Int32">
            <summary>Sets the shim of SshKey.GenerateRsaKey(Int32 numBits, Int32 exponent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.IsDsaKeyGet">
            <summary>Sets the shim of SshKey.get_IsDsaKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.IsPrivateKeyGet">
            <summary>Sets the shim of SshKey.get_IsPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.IsRsaKeyGet">
            <summary>Sets the shim of SshKey.get_IsRsaKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of SshKey.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of SshKey.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of SshKey.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of SshKey.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SshKey.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.LoadTextString">
            <summary>Sets the shim of SshKey.LoadText(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.PasswordGet">
            <summary>Sets the shim of SshKey.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.PasswordSetString">
            <summary>Sets the shim of SshKey.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of SshKey.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.SaveTextStringString">
            <summary>Sets the shim of SshKey.SaveText(String strToSave, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.ToOpenSshPrivateKeyBoolean">
            <summary>Sets the shim of SshKey.ToOpenSshPrivateKey(Boolean bEncrypt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.ToOpenSshPublicKey">
            <summary>Sets the shim of SshKey.ToOpenSshPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.ToPuttyPrivateKeyBoolean">
            <summary>Sets the shim of SshKey.ToPuttyPrivateKey(Boolean bEncrypt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.ToRfc4716PublicKey">
            <summary>Sets the shim of SshKey.ToRfc4716PublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.ToString01">
            <summary>Sets the shim of SshKey.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.ToXml">
            <summary>Sets the shim of SshKey.ToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of SshKey.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of SshKey.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances.VersionGet">
            <summary>Sets the shim of SshKey.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances._SshKey">
            <summary>Sets the shim of SshKey.!SshKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.AllInstances._SshKey01">
            <summary>Sets the shim of SshKey.~SshKey()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshKey.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.CommentGet">
            <summary>Sets the shim of SshKey.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.CommentSetString">
            <summary>Sets the shim of SshKey.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.Constructor">
            <summary>Sets the shim of SshKey.SshKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.DebugLogFilePathGet">
            <summary>Sets the shim of SshKey.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.DebugLogFilePathSetString">
            <summary>Sets the shim of SshKey.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.Dispose">
            <summary>Sets the shim of SshKey.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.DisposeBoolean">
            <summary>Sets the shim of SshKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.FromOpenSshPrivateKeyString">
            <summary>Sets the shim of SshKey.FromOpenSshPrivateKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.FromOpenSshPublicKeyString">
            <summary>Sets the shim of SshKey.FromOpenSshPublicKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.FromPuttyPrivateKeyString">
            <summary>Sets the shim of SshKey.FromPuttyPrivateKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.FromRfc4716PublicKeyString">
            <summary>Sets the shim of SshKey.FromRfc4716PublicKey(String keyStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.FromXmlString">
            <summary>Sets the shim of SshKey.FromXml(String xmlKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.GenFingerprint">
            <summary>Sets the shim of SshKey.GenFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.GenerateDsaKeyInt32">
            <summary>Sets the shim of SshKey.GenerateDsaKey(Int32 numBits)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.GenerateRsaKeyInt32Int32">
            <summary>Sets the shim of SshKey.GenerateRsaKey(Int32 numBits, Int32 exponent)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.IsDsaKeyGet">
            <summary>Sets the shim of SshKey.get_IsDsaKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.IsPrivateKeyGet">
            <summary>Sets the shim of SshKey.get_IsPrivateKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.IsRsaKeyGet">
            <summary>Sets the shim of SshKey.get_IsRsaKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.LastErrorHtmlGet">
            <summary>Sets the shim of SshKey.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.LastErrorTextGet">
            <summary>Sets the shim of SshKey.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.LastErrorXmlGet">
            <summary>Sets the shim of SshKey.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.LastMethodSuccessGet">
            <summary>Sets the shim of SshKey.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SshKey.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.LoadTextString">
            <summary>Sets the shim of SshKey.LoadText(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.PasswordGet">
            <summary>Sets the shim of SshKey.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.PasswordSetString">
            <summary>Sets the shim of SshKey.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.SaveLastErrorString">
            <summary>Sets the shim of SshKey.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.SaveTextStringString">
            <summary>Sets the shim of SshKey.SaveText(String strToSave, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.ToOpenSshPrivateKeyBoolean">
            <summary>Sets the shim of SshKey.ToOpenSshPrivateKey(Boolean bEncrypt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.ToOpenSshPublicKey">
            <summary>Sets the shim of SshKey.ToOpenSshPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.ToPuttyPrivateKeyBoolean">
            <summary>Sets the shim of SshKey.ToPuttyPrivateKey(Boolean bEncrypt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.ToRfc4716PublicKey">
            <summary>Sets the shim of SshKey.ToRfc4716PublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.ToString">
            <summary>Sets the shim of SshKey.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.ToXml">
            <summary>Sets the shim of SshKey.ToXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.VerboseLoggingGet">
            <summary>Sets the shim of SshKey.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.VerboseLoggingSetBoolean">
            <summary>Sets the shim of SshKey.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey.VersionGet">
            <summary>Sets the shim of SshKey.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey._SshKey">
            <summary>Sets the shim of SshKey.!SshKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshKey._SshKey01">
            <summary>Sets the shim of SshKey.~SshKey()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSshTunnel">
            <summary>Shim type of Chilkat.SshTunnel</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshTunnel.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshTunnel.#ctor(Chilkat.SshTunnel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AbortCurrentGet">
            <summary>Sets the shim of SshTunnel.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AbortCurrentSetBoolean">
            <summary>Sets the shim of SshTunnel.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AcceptLogGet">
            <summary>Sets the shim of SshTunnel.get_AcceptLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AcceptLogPathGet">
            <summary>Sets the shim of SshTunnel.get_AcceptLogPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AcceptLogPathSetString">
            <summary>Sets the shim of SshTunnel.set_AcceptLogPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AcceptLogSetString">
            <summary>Sets the shim of SshTunnel.set_AcceptLog(String propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSshTunnel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of SshTunnel.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of SshTunnel.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AcceptLogGet">
            <summary>Sets the shim of SshTunnel.get_AcceptLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AcceptLogPathGet">
            <summary>Sets the shim of SshTunnel.get_AcceptLogPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AcceptLogPathSetString">
            <summary>Sets the shim of SshTunnel.set_AcceptLogPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AcceptLogSetString">
            <summary>Sets the shim of SshTunnel.set_AcceptLog(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePkAsync(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AuthenticatePkStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePk(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AuthenticatePwAsyncStringString">
            <summary>Sets the shim of SshTunnel.AuthenticatePwAsync(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AuthenticatePwPkAsyncStringStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePwPkAsync(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AuthenticatePwPkStringStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePwPk(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.AuthenticatePwStringString">
            <summary>Sets the shim of SshTunnel.AuthenticatePw(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.BeginAcceptingAsyncInt32">
            <summary>Sets the shim of SshTunnel.BeginAcceptingAsync(Int32 listenPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.BeginAcceptingInt32">
            <summary>Sets the shim of SshTunnel.BeginAccepting(Int32 listenPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.CloseTunnelBoolean">
            <summary>Sets the shim of SshTunnel.CloseTunnel(Boolean waitForThreads)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ConnectAsyncStringInt32">
            <summary>Sets the shim of SshTunnel.ConnectAsync(String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ConnectStringInt32">
            <summary>Sets the shim of SshTunnel.Connect(String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ConnectThroughSshAsyncSshStringInt32">
            <summary>Sets the shim of SshTunnel.ConnectThroughSshAsync(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ConnectThroughSshSshStringInt32">
            <summary>Sets the shim of SshTunnel.ConnectThroughSsh(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ConnectTimeoutMsGet">
            <summary>Sets the shim of SshTunnel.get_ConnectTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ConnectTimeoutMsSetInt32">
            <summary>Sets the shim of SshTunnel.set_ConnectTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of SshTunnel.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of SshTunnel.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DestHostnameGet">
            <summary>Sets the shim of SshTunnel.get_DestHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DestHostnameSetString">
            <summary>Sets the shim of SshTunnel.set_DestHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DestPortGet">
            <summary>Sets the shim of SshTunnel.get_DestPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DestPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_DestPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DisconnectAllClientsBoolean">
            <summary>Sets the shim of SshTunnel.DisconnectAllClients(Boolean waitForThreads)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.Dispose">
            <summary>Sets the shim of SshTunnel.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SshTunnel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DynamicPortForwardingGet">
            <summary>Sets the shim of SshTunnel.get_DynamicPortForwarding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.DynamicPortForwardingSetBoolean">
            <summary>Sets the shim of SshTunnel.set_DynamicPortForwarding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.EnableEventsGet">
            <summary>Sets the shim of SshTunnel.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of SshTunnel.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of SshTunnel.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of SshTunnel.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of SshTunnel.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of SshTunnel.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SshTunnel.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of SshTunnel.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.GetCurrentState">
            <summary>Sets the shim of SshTunnel.GetCurrentState()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HostKeyFingerprintGet">
            <summary>Sets the shim of SshTunnel.get_HostKeyFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyAuthMethodGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyDomainGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyDomainSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyHostnameGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyHostnameSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyPasswordGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyPasswordSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyPortGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyUsernameGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.HttpProxyUsernameSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of SshTunnel.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of SshTunnel.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.InboundSocksPasswordGet">
            <summary>Sets the shim of SshTunnel.get_InboundSocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.InboundSocksPasswordSetString">
            <summary>Sets the shim of SshTunnel.set_InboundSocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.InboundSocksUsernameGet">
            <summary>Sets the shim of SshTunnel.get_InboundSocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.InboundSocksUsernameSetString">
            <summary>Sets the shim of SshTunnel.set_InboundSocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.IsAcceptingGet">
            <summary>Sets the shim of SshTunnel.get_IsAccepting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.IsSshConnected">
            <summary>Sets the shim of SshTunnel.IsSshConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.KeepAcceptLogGet">
            <summary>Sets the shim of SshTunnel.get_KeepAcceptLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.KeepAcceptLogSetBoolean">
            <summary>Sets the shim of SshTunnel.set_KeepAcceptLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.KeepTunnelLogGet">
            <summary>Sets the shim of SshTunnel.get_KeepTunnelLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.KeepTunnelLogSetBoolean">
            <summary>Sets the shim of SshTunnel.set_KeepTunnelLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of SshTunnel.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of SshTunnel.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of SshTunnel.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of SshTunnel.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SshTunnel.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ListenBindIpAddressGet">
            <summary>Sets the shim of SshTunnel.get_ListenBindIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ListenBindIpAddressSetString">
            <summary>Sets the shim of SshTunnel.set_ListenBindIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ListenPortGet">
            <summary>Sets the shim of SshTunnel.get_ListenPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnAbortCheckAddSshTunnelAbortCheckEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnAbortCheckRemoveSshTunnelAbortCheckEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnBinaryDataAddSshTunnelBinaryDataEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnBinaryDataRemoveSshTunnelBinaryDataEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnPercentDoneAddSshTunnelPercentDoneEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnPercentDoneRemoveSshTunnelPercentDoneEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnProgressInfoAddSshTunnelProgressInfoEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnProgressInfoRemoveSshTunnelProgressInfoEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnTaskCompletedAddSshTunnelTaskCompletedEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnTaskCompletedRemoveSshTunnelTaskCompletedEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnTextDataAddSshTunnelTextDataEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OnTextDataRemoveSshTunnelTextDataEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OutboundBindIpAddressGet">
            <summary>Sets the shim of SshTunnel.get_OutboundBindIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OutboundBindIpAddressSetString">
            <summary>Sets the shim of SshTunnel.set_OutboundBindIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OutboundBindPortGet">
            <summary>Sets the shim of SshTunnel.get_OutboundBindPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.OutboundBindPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_OutboundBindPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of SshTunnel.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of SshTunnel.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of SshTunnel.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SoRcvBufGet">
            <summary>Sets the shim of SshTunnel.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SoRcvBufSetInt32">
            <summary>Sets the shim of SshTunnel.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SoSndBufGet">
            <summary>Sets the shim of SshTunnel.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SoSndBufSetInt32">
            <summary>Sets the shim of SshTunnel.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksHostnameGet">
            <summary>Sets the shim of SshTunnel.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksHostnameSetString">
            <summary>Sets the shim of SshTunnel.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksPasswordGet">
            <summary>Sets the shim of SshTunnel.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksPasswordSetString">
            <summary>Sets the shim of SshTunnel.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksPortGet">
            <summary>Sets the shim of SshTunnel.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksUsernameGet">
            <summary>Sets the shim of SshTunnel.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksUsernameSetString">
            <summary>Sets the shim of SshTunnel.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksVersionGet">
            <summary>Sets the shim of SshTunnel.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.SocksVersionSetInt32">
            <summary>Sets the shim of SshTunnel.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.StopAcceptingBoolean">
            <summary>Sets the shim of SshTunnel.StopAccepting(Boolean waitForThread)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.TcpNoDelayGet">
            <summary>Sets the shim of SshTunnel.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.TcpNoDelaySetBoolean">
            <summary>Sets the shim of SshTunnel.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.ToString01">
            <summary>Sets the shim of SshTunnel.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.TunnelLogGet">
            <summary>Sets the shim of SshTunnel.get_TunnelLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.TunnelLogPathGet">
            <summary>Sets the shim of SshTunnel.get_TunnelLogPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.TunnelLogPathSetString">
            <summary>Sets the shim of SshTunnel.set_TunnelLogPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.TunnelLogSetString">
            <summary>Sets the shim of SshTunnel.set_TunnelLog(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.UnlockComponentString">
            <summary>Sets the shim of SshTunnel.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of SshTunnel.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of SshTunnel.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances.VersionGet">
            <summary>Sets the shim of SshTunnel.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances._SshTunnel">
            <summary>Sets the shim of SshTunnel.!SshTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AllInstances._SshTunnel01">
            <summary>Sets the shim of SshTunnel.~SshTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AuthenticatePkAsyncStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePkAsync(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AuthenticatePkStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePk(String username, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AuthenticatePwAsyncStringString">
            <summary>Sets the shim of SshTunnel.AuthenticatePwAsync(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AuthenticatePwPkAsyncStringStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePwPkAsync(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AuthenticatePwPkStringStringSshKey">
            <summary>Sets the shim of SshTunnel.AuthenticatePwPk(String username, String password, SshKey privateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.AuthenticatePwStringString">
            <summary>Sets the shim of SshTunnel.AuthenticatePw(String login, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.BeginAcceptingAsyncInt32">
            <summary>Sets the shim of SshTunnel.BeginAcceptingAsync(Int32 listenPort)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.BeginAcceptingInt32">
            <summary>Sets the shim of SshTunnel.BeginAccepting(Int32 listenPort)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshTunnel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshTunnel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSshTunnel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.CloseTunnelBoolean">
            <summary>Sets the shim of SshTunnel.CloseTunnel(Boolean waitForThreads)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ConnectAsyncStringInt32">
            <summary>Sets the shim of SshTunnel.ConnectAsync(String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ConnectStringInt32">
            <summary>Sets the shim of SshTunnel.Connect(String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ConnectThroughSshAsyncSshStringInt32">
            <summary>Sets the shim of SshTunnel.ConnectThroughSshAsync(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ConnectThroughSshSshStringInt32">
            <summary>Sets the shim of SshTunnel.ConnectThroughSsh(Ssh ssh, String hostname, Int32 port)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ConnectTimeoutMsGet">
            <summary>Sets the shim of SshTunnel.get_ConnectTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ConnectTimeoutMsSetInt32">
            <summary>Sets the shim of SshTunnel.set_ConnectTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.Constructor">
            <summary>Sets the shim of SshTunnel.SshTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DebugLogFilePathGet">
            <summary>Sets the shim of SshTunnel.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DebugLogFilePathSetString">
            <summary>Sets the shim of SshTunnel.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DestHostnameGet">
            <summary>Sets the shim of SshTunnel.get_DestHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DestHostnameSetString">
            <summary>Sets the shim of SshTunnel.set_DestHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DestPortGet">
            <summary>Sets the shim of SshTunnel.get_DestPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DestPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_DestPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DisconnectAllClientsBoolean">
            <summary>Sets the shim of SshTunnel.DisconnectAllClients(Boolean waitForThreads)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.Dispose">
            <summary>Sets the shim of SshTunnel.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DisposeBoolean">
            <summary>Sets the shim of SshTunnel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DynamicPortForwardingGet">
            <summary>Sets the shim of SshTunnel.get_DynamicPortForwarding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.DynamicPortForwardingSetBoolean">
            <summary>Sets the shim of SshTunnel.set_DynamicPortForwarding(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.EnableEventsGet">
            <summary>Sets the shim of SshTunnel.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.EnableEventsSetBoolean">
            <summary>Sets the shim of SshTunnel.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of SshTunnel.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of SshTunnel.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of SshTunnel.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of SshTunnel.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SshTunnel.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of SshTunnel.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.GetCurrentState">
            <summary>Sets the shim of SshTunnel.GetCurrentState()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HostKeyFingerprintGet">
            <summary>Sets the shim of SshTunnel.get_HostKeyFingerprint()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyAuthMethodGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyAuthMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyAuthMethodSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyAuthMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyDomainGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyDomainSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyHostnameGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyHostnameSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyPasswordGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyPasswordSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyPortGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_HttpProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyUsernameGet">
            <summary>Sets the shim of SshTunnel.get_HttpProxyUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.HttpProxyUsernameSetString">
            <summary>Sets the shim of SshTunnel.set_HttpProxyUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.IdleTimeoutMsGet">
            <summary>Sets the shim of SshTunnel.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of SshTunnel.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.InboundSocksPasswordGet">
            <summary>Sets the shim of SshTunnel.get_InboundSocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.InboundSocksPasswordSetString">
            <summary>Sets the shim of SshTunnel.set_InboundSocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.InboundSocksUsernameGet">
            <summary>Sets the shim of SshTunnel.get_InboundSocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.InboundSocksUsernameSetString">
            <summary>Sets the shim of SshTunnel.set_InboundSocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.IsAcceptingGet">
            <summary>Sets the shim of SshTunnel.get_IsAccepting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.IsSshConnected">
            <summary>Sets the shim of SshTunnel.IsSshConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.KeepAcceptLogGet">
            <summary>Sets the shim of SshTunnel.get_KeepAcceptLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.KeepAcceptLogSetBoolean">
            <summary>Sets the shim of SshTunnel.set_KeepAcceptLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.KeepTunnelLogGet">
            <summary>Sets the shim of SshTunnel.get_KeepTunnelLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.KeepTunnelLogSetBoolean">
            <summary>Sets the shim of SshTunnel.set_KeepTunnelLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.LastErrorHtmlGet">
            <summary>Sets the shim of SshTunnel.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.LastErrorTextGet">
            <summary>Sets the shim of SshTunnel.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.LastErrorXmlGet">
            <summary>Sets the shim of SshTunnel.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.LastMethodSuccessGet">
            <summary>Sets the shim of SshTunnel.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of SshTunnel.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ListenBindIpAddressGet">
            <summary>Sets the shim of SshTunnel.get_ListenBindIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ListenBindIpAddressSetString">
            <summary>Sets the shim of SshTunnel.set_ListenBindIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ListenPortGet">
            <summary>Sets the shim of SshTunnel.get_ListenPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnAbortCheckAddSshTunnelAbortCheckEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnAbortCheckRemoveSshTunnelAbortCheckEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnBinaryDataAddSshTunnelBinaryDataEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnBinaryDataRemoveSshTunnelBinaryDataEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnPercentDoneAddSshTunnelPercentDoneEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnPercentDoneRemoveSshTunnelPercentDoneEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnProgressInfoAddSshTunnelProgressInfoEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnProgressInfoRemoveSshTunnelProgressInfoEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnTaskCompletedAddSshTunnelTaskCompletedEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnTaskCompletedRemoveSshTunnelTaskCompletedEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnTextDataAddSshTunnelTextDataEventHandler">
            <summary>Sets the shim of SshTunnel.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of SshTunnel.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OnTextDataRemoveSshTunnelTextDataEventHandler">
            <summary>Sets the shim of SshTunnel.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OutboundBindIpAddressGet">
            <summary>Sets the shim of SshTunnel.get_OutboundBindIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OutboundBindIpAddressSetString">
            <summary>Sets the shim of SshTunnel.set_OutboundBindIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OutboundBindPortGet">
            <summary>Sets the shim of SshTunnel.get_OutboundBindPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.OutboundBindPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_OutboundBindPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.PreferIpv6Get">
            <summary>Sets the shim of SshTunnel.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.PreferIpv6SetBoolean">
            <summary>Sets the shim of SshTunnel.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SaveLastErrorString">
            <summary>Sets the shim of SshTunnel.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SoRcvBufGet">
            <summary>Sets the shim of SshTunnel.get_SoRcvBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SoRcvBufSetInt32">
            <summary>Sets the shim of SshTunnel.set_SoRcvBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SoSndBufGet">
            <summary>Sets the shim of SshTunnel.get_SoSndBuf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SoSndBufSetInt32">
            <summary>Sets the shim of SshTunnel.set_SoSndBuf(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksHostnameGet">
            <summary>Sets the shim of SshTunnel.get_SocksHostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksHostnameSetString">
            <summary>Sets the shim of SshTunnel.set_SocksHostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksPasswordGet">
            <summary>Sets the shim of SshTunnel.get_SocksPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksPasswordSetString">
            <summary>Sets the shim of SshTunnel.set_SocksPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksPortGet">
            <summary>Sets the shim of SshTunnel.get_SocksPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksPortSetInt32">
            <summary>Sets the shim of SshTunnel.set_SocksPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksUsernameGet">
            <summary>Sets the shim of SshTunnel.get_SocksUsername()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksUsernameSetString">
            <summary>Sets the shim of SshTunnel.set_SocksUsername(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksVersionGet">
            <summary>Sets the shim of SshTunnel.get_SocksVersion()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.SocksVersionSetInt32">
            <summary>Sets the shim of SshTunnel.set_SocksVersion(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.StopAcceptingBoolean">
            <summary>Sets the shim of SshTunnel.StopAccepting(Boolean waitForThread)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.TcpNoDelayGet">
            <summary>Sets the shim of SshTunnel.get_TcpNoDelay()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.TcpNoDelaySetBoolean">
            <summary>Sets the shim of SshTunnel.set_TcpNoDelay(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.ToString">
            <summary>Sets the shim of SshTunnel.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.TunnelLogGet">
            <summary>Sets the shim of SshTunnel.get_TunnelLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.TunnelLogPathGet">
            <summary>Sets the shim of SshTunnel.get_TunnelLogPath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.TunnelLogPathSetString">
            <summary>Sets the shim of SshTunnel.set_TunnelLogPath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.TunnelLogSetString">
            <summary>Sets the shim of SshTunnel.set_TunnelLog(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.UnlockComponentString">
            <summary>Sets the shim of SshTunnel.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.VerboseLoggingGet">
            <summary>Sets the shim of SshTunnel.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.VerboseLoggingSetBoolean">
            <summary>Sets the shim of SshTunnel.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel.VersionGet">
            <summary>Sets the shim of SshTunnel.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel._SshTunnel">
            <summary>Sets the shim of SshTunnel.!SshTunnel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSshTunnel._SshTunnel01">
            <summary>Sets the shim of SshTunnel.~SshTunnel()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStatusEventArgs">
            <summary>Shim type of Chilkat.StatusEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStatusEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStatusEventArgs.#ctor(Chilkat.StatusEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStatusEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of StatusEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StatusEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.AllInstances.SuccessGet">
            <summary>Sets the shim of StatusEventArgs.get_Success()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.AllInstances._StatusEventArgs">
            <summary>Sets the shim of StatusEventArgs.~StatusEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStatusEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStatusEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStatusEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.ConstructorBoolean">
            <summary>Sets the shim of StatusEventArgs.StatusEventArgs(Boolean success)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.Dispose">
            <summary>Sets the shim of StatusEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.DisposeBoolean">
            <summary>Sets the shim of StatusEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs.SuccessGet">
            <summary>Sets the shim of StatusEventArgs.get_Success()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStatusEventArgs._StatusEventArgs">
            <summary>Sets the shim of StatusEventArgs.~StatusEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStream">
            <summary>Shim type of Chilkat.Stream</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStream.#ctor(Chilkat.Stream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AbortCurrentGet">
            <summary>Sets the shim of Stream.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AbortCurrentSetBoolean">
            <summary>Sets the shim of Stream.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Stream.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Stream.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.CanReadGet">
            <summary>Sets the shim of Stream.get_CanRead()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of Stream.get_CanWrite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.DataAvailableGet">
            <summary>Sets the shim of Stream.get_DataAvailable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Stream.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Stream.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.DefaultChunkSizeGet">
            <summary>Sets the shim of Stream.get_DefaultChunkSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.DefaultChunkSizeSetInt32">
            <summary>Sets the shim of Stream.set_DefaultChunkSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.Dispose">
            <summary>Sets the shim of Stream.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Stream.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Stream.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Stream.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.EndOfStreamGet">
            <summary>Sets the shim of Stream.get_EndOfStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Stream.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Stream.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Stream.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Stream.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Stream.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Stream.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.IsWriteClosedGet">
            <summary>Sets the shim of Stream.get_IsWriteClosed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Stream.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Stream.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Stream.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Stream.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Stream.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.Length32Get">
            <summary>Sets the shim of Stream.get_Length32()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.Length32SetInt32">
            <summary>Sets the shim of Stream.set_Length32(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LengthGet">
            <summary>Sets the shim of Stream.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.LengthSetInt64">
            <summary>Sets the shim of Stream.set_Length(Int64 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.NumReceivedGet">
            <summary>Sets the shim of Stream.get_NumReceived()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.NumSentGet">
            <summary>Sets the shim of Stream.get_NumSent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnAbortCheckAddStreamAbortCheckEventHandler">
            <summary>Sets the shim of Stream.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Stream.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnAbortCheckRemoveStreamAbortCheckEventHandler">
            <summary>Sets the shim of Stream.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnBinaryDataAddStreamBinaryDataEventHandler">
            <summary>Sets the shim of Stream.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Stream.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnBinaryDataRemoveStreamBinaryDataEventHandler">
            <summary>Sets the shim of Stream.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnPercentDoneAddStreamPercentDoneEventHandler">
            <summary>Sets the shim of Stream.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Stream.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnPercentDoneRemoveStreamPercentDoneEventHandler">
            <summary>Sets the shim of Stream.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnProgressInfoAddStreamProgressInfoEventHandler">
            <summary>Sets the shim of Stream.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Stream.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnProgressInfoRemoveStreamProgressInfoEventHandler">
            <summary>Sets the shim of Stream.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnTaskCompletedAddStreamTaskCompletedEventHandler">
            <summary>Sets the shim of Stream.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Stream.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnTaskCompletedRemoveStreamTaskCompletedEventHandler">
            <summary>Sets the shim of Stream.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnTextDataAddStreamTextDataEventHandler">
            <summary>Sets the shim of Stream.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Stream.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.OnTextDataRemoveStreamTextDataEventHandler">
            <summary>Sets the shim of Stream.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadBdAsyncBinData">
            <summary>Sets the shim of Stream.ReadBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadBdBinData">
            <summary>Sets the shim of Stream.ReadBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadBytes">
            <summary>Sets the shim of Stream.ReadBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadBytesAsync">
            <summary>Sets the shim of Stream.ReadBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadBytesENCAsyncString">
            <summary>Sets the shim of Stream.ReadBytesENCAsync(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadBytesENCString">
            <summary>Sets the shim of Stream.ReadBytesENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadFailReasonGet">
            <summary>Sets the shim of Stream.get_ReadFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadNBytesAsyncInt32">
            <summary>Sets the shim of Stream.ReadNBytesAsync(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadNBytesENCAsyncInt32String">
            <summary>Sets the shim of Stream.ReadNBytesENCAsync(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadNBytesENCInt32String">
            <summary>Sets the shim of Stream.ReadNBytesENC(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadNBytesInt32">
            <summary>Sets the shim of Stream.ReadNBytes(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadSbAsyncStringBuilder">
            <summary>Sets the shim of Stream.ReadSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadSbStringBuilder">
            <summary>Sets the shim of Stream.ReadSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadString">
            <summary>Sets the shim of Stream.ReadString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadStringAsync">
            <summary>Sets the shim of Stream.ReadStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadTimeoutMsGet">
            <summary>Sets the shim of Stream.get_ReadTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadTimeoutMsSetInt32">
            <summary>Sets the shim of Stream.set_ReadTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadToCRLF">
            <summary>Sets the shim of Stream.ReadToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadToCRLFAsync">
            <summary>Sets the shim of Stream.ReadToCRLFAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadUntilMatchAsyncString">
            <summary>Sets the shim of Stream.ReadUntilMatchAsync(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ReadUntilMatchString">
            <summary>Sets the shim of Stream.ReadUntilMatch(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.Reset">
            <summary>Sets the shim of Stream.Reset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.RunStream">
            <summary>Sets the shim of Stream.RunStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.RunStreamAsync">
            <summary>Sets the shim of Stream.RunStreamAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Stream.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SetSinkStreamStream">
            <summary>Sets the shim of Stream.SetSinkStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SetSourceBytesByteArray">
            <summary>Sets the shim of Stream.SetSourceBytes(Byte[] sourceData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SetSourceStreamStream">
            <summary>Sets the shim of Stream.SetSourceStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SetSourceStringStringString">
            <summary>Sets the shim of Stream.SetSourceString(String srcStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SinkFileGet">
            <summary>Sets the shim of Stream.get_SinkFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SinkFileSetString">
            <summary>Sets the shim of Stream.set_SinkFile(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SourceFileGet">
            <summary>Sets the shim of Stream.get_SourceFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SourceFilePartGet">
            <summary>Sets the shim of Stream.get_SourceFilePart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SourceFilePartSetInt32">
            <summary>Sets the shim of Stream.set_SourceFilePart(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SourceFilePartSizeGet">
            <summary>Sets the shim of Stream.get_SourceFilePartSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SourceFilePartSizeSetInt32">
            <summary>Sets the shim of Stream.set_SourceFilePartSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.SourceFileSetString">
            <summary>Sets the shim of Stream.set_SourceFile(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.StringBomGet">
            <summary>Sets the shim of Stream.get_StringBom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.StringBomSetBoolean">
            <summary>Sets the shim of Stream.set_StringBom(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.StringCharsetGet">
            <summary>Sets the shim of Stream.get_StringCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.StringCharsetSetString">
            <summary>Sets the shim of Stream.set_StringCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.ToString01">
            <summary>Sets the shim of Stream.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Stream.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Stream.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.VersionGet">
            <summary>Sets the shim of Stream.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteBdAsyncBinData">
            <summary>Sets the shim of Stream.WriteBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteBdBinData">
            <summary>Sets the shim of Stream.WriteBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteByteAsyncInt32">
            <summary>Sets the shim of Stream.WriteByteAsync(Int32 byteVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteByteInt32">
            <summary>Sets the shim of Stream.WriteByte(Int32 byteVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteBytesAsyncByteArray">
            <summary>Sets the shim of Stream.WriteBytesAsync(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteBytesByteArray">
            <summary>Sets the shim of Stream.WriteBytes(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteBytesENCAsyncStringString">
            <summary>Sets the shim of Stream.WriteBytesENCAsync(String byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteBytesENCStringString">
            <summary>Sets the shim of Stream.WriteBytesENC(String byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteClose">
            <summary>Sets the shim of Stream.WriteClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteFailReasonGet">
            <summary>Sets the shim of Stream.get_WriteFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteSbAsyncStringBuilder">
            <summary>Sets the shim of Stream.WriteSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteSbStringBuilder">
            <summary>Sets the shim of Stream.WriteSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteStringAsyncString">
            <summary>Sets the shim of Stream.WriteStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteStringString">
            <summary>Sets the shim of Stream.WriteString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteTimeoutMsGet">
            <summary>Sets the shim of Stream.get_WriteTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances.WriteTimeoutMsSetInt32">
            <summary>Sets the shim of Stream.set_WriteTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances._Stream">
            <summary>Sets the shim of Stream.!Stream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.AllInstances._Stream01">
            <summary>Sets the shim of Stream.~Stream()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.CanReadGet">
            <summary>Sets the shim of Stream.get_CanRead()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.CanWriteGet">
            <summary>Sets the shim of Stream.get_CanWrite()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.Constructor">
            <summary>Sets the shim of Stream.Stream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.DataAvailableGet">
            <summary>Sets the shim of Stream.get_DataAvailable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.DebugLogFilePathGet">
            <summary>Sets the shim of Stream.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.DebugLogFilePathSetString">
            <summary>Sets the shim of Stream.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.DefaultChunkSizeGet">
            <summary>Sets the shim of Stream.get_DefaultChunkSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.DefaultChunkSizeSetInt32">
            <summary>Sets the shim of Stream.set_DefaultChunkSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.Dispose">
            <summary>Sets the shim of Stream.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.DisposeBoolean">
            <summary>Sets the shim of Stream.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.EnableEventsGet">
            <summary>Sets the shim of Stream.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.EnableEventsSetBoolean">
            <summary>Sets the shim of Stream.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.EndOfStreamGet">
            <summary>Sets the shim of Stream.get_EndOfStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Stream.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Stream.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Stream.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Stream.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Stream.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Stream.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.IsWriteClosedGet">
            <summary>Sets the shim of Stream.get_IsWriteClosed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LastErrorHtmlGet">
            <summary>Sets the shim of Stream.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LastErrorTextGet">
            <summary>Sets the shim of Stream.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LastErrorXmlGet">
            <summary>Sets the shim of Stream.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LastMethodSuccessGet">
            <summary>Sets the shim of Stream.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Stream.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.Length32Get">
            <summary>Sets the shim of Stream.get_Length32()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.Length32SetInt32">
            <summary>Sets the shim of Stream.set_Length32(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LengthGet">
            <summary>Sets the shim of Stream.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.LengthSetInt64">
            <summary>Sets the shim of Stream.set_Length(Int64 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.NumReceivedGet">
            <summary>Sets the shim of Stream.get_NumReceived()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.NumSentGet">
            <summary>Sets the shim of Stream.get_NumSent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnAbortCheckAddStreamAbortCheckEventHandler">
            <summary>Sets the shim of Stream.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Stream.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnAbortCheckRemoveStreamAbortCheckEventHandler">
            <summary>Sets the shim of Stream.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnBinaryDataAddStreamBinaryDataEventHandler">
            <summary>Sets the shim of Stream.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Stream.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnBinaryDataRemoveStreamBinaryDataEventHandler">
            <summary>Sets the shim of Stream.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnPercentDoneAddStreamPercentDoneEventHandler">
            <summary>Sets the shim of Stream.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Stream.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnPercentDoneRemoveStreamPercentDoneEventHandler">
            <summary>Sets the shim of Stream.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnProgressInfoAddStreamProgressInfoEventHandler">
            <summary>Sets the shim of Stream.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Stream.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnProgressInfoRemoveStreamProgressInfoEventHandler">
            <summary>Sets the shim of Stream.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnTaskCompletedAddStreamTaskCompletedEventHandler">
            <summary>Sets the shim of Stream.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Stream.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnTaskCompletedRemoveStreamTaskCompletedEventHandler">
            <summary>Sets the shim of Stream.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnTextDataAddStreamTextDataEventHandler">
            <summary>Sets the shim of Stream.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Stream.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.OnTextDataRemoveStreamTextDataEventHandler">
            <summary>Sets the shim of Stream.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadBdAsyncBinData">
            <summary>Sets the shim of Stream.ReadBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadBdBinData">
            <summary>Sets the shim of Stream.ReadBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadBytes">
            <summary>Sets the shim of Stream.ReadBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadBytesAsync">
            <summary>Sets the shim of Stream.ReadBytesAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadBytesENCAsyncString">
            <summary>Sets the shim of Stream.ReadBytesENCAsync(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadBytesENCString">
            <summary>Sets the shim of Stream.ReadBytesENC(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadFailReasonGet">
            <summary>Sets the shim of Stream.get_ReadFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadNBytesAsyncInt32">
            <summary>Sets the shim of Stream.ReadNBytesAsync(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadNBytesENCAsyncInt32String">
            <summary>Sets the shim of Stream.ReadNBytesENCAsync(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadNBytesENCInt32String">
            <summary>Sets the shim of Stream.ReadNBytesENC(Int32 numBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadNBytesInt32">
            <summary>Sets the shim of Stream.ReadNBytes(Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadSbAsyncStringBuilder">
            <summary>Sets the shim of Stream.ReadSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadSbStringBuilder">
            <summary>Sets the shim of Stream.ReadSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadString">
            <summary>Sets the shim of Stream.ReadString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadStringAsync">
            <summary>Sets the shim of Stream.ReadStringAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadTimeoutMsGet">
            <summary>Sets the shim of Stream.get_ReadTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadTimeoutMsSetInt32">
            <summary>Sets the shim of Stream.set_ReadTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadToCRLF">
            <summary>Sets the shim of Stream.ReadToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadToCRLFAsync">
            <summary>Sets the shim of Stream.ReadToCRLFAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadUntilMatchAsyncString">
            <summary>Sets the shim of Stream.ReadUntilMatchAsync(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ReadUntilMatchString">
            <summary>Sets the shim of Stream.ReadUntilMatch(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.Reset">
            <summary>Sets the shim of Stream.Reset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.RunStream">
            <summary>Sets the shim of Stream.RunStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.RunStreamAsync">
            <summary>Sets the shim of Stream.RunStreamAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SaveLastErrorString">
            <summary>Sets the shim of Stream.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SetSinkStreamStream">
            <summary>Sets the shim of Stream.SetSinkStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SetSourceBytesByteArray">
            <summary>Sets the shim of Stream.SetSourceBytes(Byte[] sourceData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SetSourceStreamStream">
            <summary>Sets the shim of Stream.SetSourceStream(Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SetSourceStringStringString">
            <summary>Sets the shim of Stream.SetSourceString(String srcStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SinkFileGet">
            <summary>Sets the shim of Stream.get_SinkFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SinkFileSetString">
            <summary>Sets the shim of Stream.set_SinkFile(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SourceFileGet">
            <summary>Sets the shim of Stream.get_SourceFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SourceFilePartGet">
            <summary>Sets the shim of Stream.get_SourceFilePart()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SourceFilePartSetInt32">
            <summary>Sets the shim of Stream.set_SourceFilePart(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SourceFilePartSizeGet">
            <summary>Sets the shim of Stream.get_SourceFilePartSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SourceFilePartSizeSetInt32">
            <summary>Sets the shim of Stream.set_SourceFilePartSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.SourceFileSetString">
            <summary>Sets the shim of Stream.set_SourceFile(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.StringBomGet">
            <summary>Sets the shim of Stream.get_StringBom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.StringBomSetBoolean">
            <summary>Sets the shim of Stream.set_StringBom(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.StringCharsetGet">
            <summary>Sets the shim of Stream.get_StringCharset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.StringCharsetSetString">
            <summary>Sets the shim of Stream.set_StringCharset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.ToString">
            <summary>Sets the shim of Stream.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.VerboseLoggingGet">
            <summary>Sets the shim of Stream.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Stream.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.VersionGet">
            <summary>Sets the shim of Stream.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteBdAsyncBinData">
            <summary>Sets the shim of Stream.WriteBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteBdBinData">
            <summary>Sets the shim of Stream.WriteBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteByteAsyncInt32">
            <summary>Sets the shim of Stream.WriteByteAsync(Int32 byteVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteByteInt32">
            <summary>Sets the shim of Stream.WriteByte(Int32 byteVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteBytesAsyncByteArray">
            <summary>Sets the shim of Stream.WriteBytesAsync(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteBytesByteArray">
            <summary>Sets the shim of Stream.WriteBytes(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteBytesENCAsyncStringString">
            <summary>Sets the shim of Stream.WriteBytesENCAsync(String byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteBytesENCStringString">
            <summary>Sets the shim of Stream.WriteBytesENC(String byteData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteClose">
            <summary>Sets the shim of Stream.WriteClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteFailReasonGet">
            <summary>Sets the shim of Stream.get_WriteFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteSbAsyncStringBuilder">
            <summary>Sets the shim of Stream.WriteSbAsync(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteSbStringBuilder">
            <summary>Sets the shim of Stream.WriteSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteStringAsyncString">
            <summary>Sets the shim of Stream.WriteStringAsync(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteStringString">
            <summary>Sets the shim of Stream.WriteString(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteTimeoutMsGet">
            <summary>Sets the shim of Stream.get_WriteTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream.WriteTimeoutMsSetInt32">
            <summary>Sets the shim of Stream.set_WriteTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream._Stream">
            <summary>Sets the shim of Stream.!Stream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStream._Stream01">
            <summary>Sets the shim of Stream.~Stream()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStreamConnector">
            <summary>Shim type of Chilkat.StreamConnector</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStreamConnector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStreamConnector.#ctor(Chilkat.StreamConnector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStreamConnector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.AllInstances.Dispose">
            <summary>Sets the shim of StreamConnector.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StreamConnector.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.AllInstances.SetAsSinkStreamStream">
            <summary>Sets the shim of StreamConnector.SetAsSink(Stream dnStream, Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.AllInstances.SetAsSourceStreamStream">
            <summary>Sets the shim of StreamConnector.SetAsSource(Stream dnStream, Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.AllInstances._StreamConnector">
            <summary>Sets the shim of StreamConnector.!StreamConnector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.AllInstances._StreamConnector01">
            <summary>Sets the shim of StreamConnector.~StreamConnector()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStreamConnector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStreamConnector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStreamConnector.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.Constructor">
            <summary>Sets the shim of StreamConnector.StreamConnector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.Dispose">
            <summary>Sets the shim of StreamConnector.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.DisposeBoolean">
            <summary>Sets the shim of StreamConnector.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.SetAsSinkStreamStream">
            <summary>Sets the shim of StreamConnector.SetAsSink(Stream dnStream, Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector.SetAsSourceStreamStream">
            <summary>Sets the shim of StreamConnector.SetAsSource(Stream dnStream, Stream strm)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector._StreamConnector">
            <summary>Sets the shim of StreamConnector.!StreamConnector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStreamConnector._StreamConnector01">
            <summary>Sets the shim of StreamConnector.~StreamConnector()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStringArray">
            <summary>Shim type of Chilkat.StringArray</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringArray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringArray.#ctor(Chilkat.StringArray)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStringArray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.AppendSerializedString">
            <summary>Sets the shim of StringArray.AppendSerialized(String encodedStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.AppendString">
            <summary>Sets the shim of StringArray.Append(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.Clear">
            <summary>Sets the shim of StringArray.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.ContainsString">
            <summary>Sets the shim of StringArray.Contains(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.CountGet">
            <summary>Sets the shim of StringArray.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.CrlfGet">
            <summary>Sets the shim of StringArray.get_Crlf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.CrlfSetBoolean">
            <summary>Sets the shim of StringArray.set_Crlf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of StringArray.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of StringArray.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.Dispose">
            <summary>Sets the shim of StringArray.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StringArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.FindFirstMatchStringInt32">
            <summary>Sets the shim of StringArray.FindFirstMatch(String matchPattern, Int32 startIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.FindStringInt32">
            <summary>Sets the shim of StringArray.Find(String findStr, Int32 startIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.GetStringInt32">
            <summary>Sets the shim of StringArray.GetString(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.GetStringLenInt32">
            <summary>Sets the shim of StringArray.GetStringLen(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.InsertAtInt32String">
            <summary>Sets the shim of StringArray.InsertAt(Int32 index, String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of StringArray.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of StringArray.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of StringArray.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of StringArray.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of StringArray.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LastString">
            <summary>Sets the shim of StringArray.LastString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LengthGet">
            <summary>Sets the shim of StringArray.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LoadFromFile2StringString">
            <summary>Sets the shim of StringArray.LoadFromFile2(String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LoadFromFileString">
            <summary>Sets the shim of StringArray.LoadFromFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LoadFromTextString">
            <summary>Sets the shim of StringArray.LoadFromText(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.LoadTaskResultTask">
            <summary>Sets the shim of StringArray.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.Pop">
            <summary>Sets the shim of StringArray.Pop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.PrependString">
            <summary>Sets the shim of StringArray.Prepend(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.RemoveAtInt32">
            <summary>Sets the shim of StringArray.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.RemoveString">
            <summary>Sets the shim of StringArray.Remove(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.ReplaceAtInt32String">
            <summary>Sets the shim of StringArray.ReplaceAt(Int32 index, String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of StringArray.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SaveNthToFileInt32String">
            <summary>Sets the shim of StringArray.SaveNthToFile(Int32 index, String saveToPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SaveToFile2StringString">
            <summary>Sets the shim of StringArray.SaveToFile2(String saveToPath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SaveToFileString">
            <summary>Sets the shim of StringArray.SaveToFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SaveToText">
            <summary>Sets the shim of StringArray.SaveToText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.Serialize">
            <summary>Sets the shim of StringArray.Serialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SortBoolean">
            <summary>Sets the shim of StringArray.Sort(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SplitAndAppendStringString">
            <summary>Sets the shim of StringArray.SplitAndAppend(String str, String boundary)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.SubtractStringArray">
            <summary>Sets the shim of StringArray.Subtract(StringArray stringArrayObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.ToString01">
            <summary>Sets the shim of StringArray.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.TrimGet">
            <summary>Sets the shim of StringArray.get_Trim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.TrimSetBoolean">
            <summary>Sets the shim of StringArray.set_Trim(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.UnionStringArray">
            <summary>Sets the shim of StringArray.Union(StringArray stringArrayObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.UniqueGet">
            <summary>Sets the shim of StringArray.get_Unique()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.UniqueSetBoolean">
            <summary>Sets the shim of StringArray.set_Unique(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of StringArray.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of StringArray.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances.VersionGet">
            <summary>Sets the shim of StringArray.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances._StringArray">
            <summary>Sets the shim of StringArray.!StringArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AllInstances._StringArray01">
            <summary>Sets the shim of StringArray.~StringArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AppendSerializedString">
            <summary>Sets the shim of StringArray.AppendSerialized(String encodedStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.AppendString">
            <summary>Sets the shim of StringArray.Append(String str)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringArray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringArray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringArray.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.Clear">
            <summary>Sets the shim of StringArray.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.Constructor">
            <summary>Sets the shim of StringArray.StringArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.ContainsString">
            <summary>Sets the shim of StringArray.Contains(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.CountGet">
            <summary>Sets the shim of StringArray.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.CrlfGet">
            <summary>Sets the shim of StringArray.get_Crlf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.CrlfSetBoolean">
            <summary>Sets the shim of StringArray.set_Crlf(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.DebugLogFilePathGet">
            <summary>Sets the shim of StringArray.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.DebugLogFilePathSetString">
            <summary>Sets the shim of StringArray.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.Dispose">
            <summary>Sets the shim of StringArray.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.DisposeBoolean">
            <summary>Sets the shim of StringArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.FindFirstMatchStringInt32">
            <summary>Sets the shim of StringArray.FindFirstMatch(String matchPattern, Int32 startIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.FindStringInt32">
            <summary>Sets the shim of StringArray.Find(String findStr, Int32 startIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.GetStringInt32">
            <summary>Sets the shim of StringArray.GetString(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.GetStringLenInt32">
            <summary>Sets the shim of StringArray.GetStringLen(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.InsertAtInt32String">
            <summary>Sets the shim of StringArray.InsertAt(Int32 index, String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LastErrorHtmlGet">
            <summary>Sets the shim of StringArray.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LastErrorTextGet">
            <summary>Sets the shim of StringArray.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LastErrorXmlGet">
            <summary>Sets the shim of StringArray.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LastMethodSuccessGet">
            <summary>Sets the shim of StringArray.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of StringArray.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LastString">
            <summary>Sets the shim of StringArray.LastString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LengthGet">
            <summary>Sets the shim of StringArray.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LoadFromFile2StringString">
            <summary>Sets the shim of StringArray.LoadFromFile2(String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LoadFromFileString">
            <summary>Sets the shim of StringArray.LoadFromFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LoadFromTextString">
            <summary>Sets the shim of StringArray.LoadFromText(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.LoadTaskResultTask">
            <summary>Sets the shim of StringArray.LoadTaskResult(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.Pop">
            <summary>Sets the shim of StringArray.Pop()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.PrependString">
            <summary>Sets the shim of StringArray.Prepend(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.RemoveAtInt32">
            <summary>Sets the shim of StringArray.RemoveAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.RemoveString">
            <summary>Sets the shim of StringArray.Remove(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.ReplaceAtInt32String">
            <summary>Sets the shim of StringArray.ReplaceAt(Int32 index, String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SaveLastErrorString">
            <summary>Sets the shim of StringArray.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SaveNthToFileInt32String">
            <summary>Sets the shim of StringArray.SaveNthToFile(Int32 index, String saveToPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SaveToFile2StringString">
            <summary>Sets the shim of StringArray.SaveToFile2(String saveToPath, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SaveToFileString">
            <summary>Sets the shim of StringArray.SaveToFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SaveToText">
            <summary>Sets the shim of StringArray.SaveToText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.Serialize">
            <summary>Sets the shim of StringArray.Serialize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SortBoolean">
            <summary>Sets the shim of StringArray.Sort(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SplitAndAppendStringString">
            <summary>Sets the shim of StringArray.SplitAndAppend(String str, String boundary)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.SubtractStringArray">
            <summary>Sets the shim of StringArray.Subtract(StringArray stringArrayObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.ToString">
            <summary>Sets the shim of StringArray.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.TrimGet">
            <summary>Sets the shim of StringArray.get_Trim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.TrimSetBoolean">
            <summary>Sets the shim of StringArray.set_Trim(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.UnionStringArray">
            <summary>Sets the shim of StringArray.Union(StringArray stringArrayObj)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.UniqueGet">
            <summary>Sets the shim of StringArray.get_Unique()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.UniqueSetBoolean">
            <summary>Sets the shim of StringArray.set_Unique(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.VerboseLoggingGet">
            <summary>Sets the shim of StringArray.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.VerboseLoggingSetBoolean">
            <summary>Sets the shim of StringArray.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray.VersionGet">
            <summary>Sets the shim of StringArray.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray._StringArray">
            <summary>Sets the shim of StringArray.!StringArray()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringArray._StringArray01">
            <summary>Sets the shim of StringArray.~StringArray()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStringBuilder">
            <summary>Shim type of Chilkat.StringBuilder</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringBuilder.#ctor(Chilkat.StringBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStringBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendBdBinDataStringInt32Int32">
            <summary>Sets the shim of StringBuilder.AppendBd(BinData binData, String charset, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendEncodedByteArrayString">
            <summary>Sets the shim of StringBuilder.AppendEncoded(Byte[] binaryData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendInt64Int64">
            <summary>Sets the shim of StringBuilder.AppendInt64(Int64 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendIntInt32">
            <summary>Sets the shim of StringBuilder.AppendInt(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendLineStringBoolean">
            <summary>Sets the shim of StringBuilder.AppendLine(String value, Boolean crlf)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendSbStringBuilder">
            <summary>Sets the shim of StringBuilder.AppendSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.AppendString">
            <summary>Sets the shim of StringBuilder.Append(String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.Clear">
            <summary>Sets the shim of StringBuilder.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ContainsStringBoolean">
            <summary>Sets the shim of StringBuilder.Contains(String str, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ContainsWordStringBoolean">
            <summary>Sets the shim of StringBuilder.ContainsWord(String word, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ContentsEqualSbStringBuilderBoolean">
            <summary>Sets the shim of StringBuilder.ContentsEqualSb(StringBuilder sb, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ContentsEqualStringBoolean">
            <summary>Sets the shim of StringBuilder.ContentsEqual(String str, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.DecodeStringString">
            <summary>Sets the shim of StringBuilder.Decode(String encoding, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.Dispose">
            <summary>Sets the shim of StringBuilder.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StringBuilder.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.EncodeStringString">
            <summary>Sets the shim of StringBuilder.Encode(String encoding, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.EndsWithStringBoolean">
            <summary>Sets the shim of StringBuilder.EndsWith(String substr, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.EntityDecode">
            <summary>Sets the shim of StringBuilder.EntityDecode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.GetAfterBetweenStringStringString">
            <summary>Sets the shim of StringBuilder.GetAfterBetween(String searchAfter, String beginMark, String endMark)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.GetAsString">
            <summary>Sets the shim of StringBuilder.GetAsString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.GetBetweenStringString">
            <summary>Sets the shim of StringBuilder.GetBetween(String beginMark, String endMark)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.GetDecodedString">
            <summary>Sets the shim of StringBuilder.GetDecoded(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.GetEncodedStringString">
            <summary>Sets the shim of StringBuilder.GetEncoded(String encoding, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.GetNthInt32StringBooleanBoolean">
            <summary>Sets the shim of StringBuilder.GetNth(Int32 index, String delimiterChar, Boolean exceptDoubleQuoted, Boolean exceptEscaped)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.IntValueGet">
            <summary>Sets the shim of StringBuilder.get_IntValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.IntValueSetInt32">
            <summary>Sets the shim of StringBuilder.set_IntValue(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of StringBuilder.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of StringBuilder.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.LastNLinesInt32Boolean">
            <summary>Sets the shim of StringBuilder.LastNLines(Int32 numLines, Boolean bCrlf)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.LengthGet">
            <summary>Sets the shim of StringBuilder.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.LoadFileStringString">
            <summary>Sets the shim of StringBuilder.LoadFile(String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.PrependString">
            <summary>Sets the shim of StringBuilder.Prepend(String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ReplaceAllBetweenStringStringStringBoolean">
            <summary>Sets the shim of StringBuilder.ReplaceAllBetween(String beginMark, String endMark, String replacement, Boolean replaceMarks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ReplaceBetweenStringStringStringString">
            <summary>Sets the shim of StringBuilder.ReplaceBetween(String beginMark, String endMark, String value, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ReplaceIStringInt32">
            <summary>Sets the shim of StringBuilder.ReplaceI(String value, Int32 replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ReplaceStringString">
            <summary>Sets the shim of StringBuilder.Replace(String value, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ReplaceWordStringString">
            <summary>Sets the shim of StringBuilder.ReplaceWord(String value, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.SecureClear">
            <summary>Sets the shim of StringBuilder.SecureClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.SetNthInt32StringStringBooleanBoolean">
            <summary>Sets the shim of StringBuilder.SetNth(Int32 index, String value, String delimiterChar, Boolean exceptDoubleQuoted, Boolean exceptEscaped)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.SetStringString">
            <summary>Sets the shim of StringBuilder.SetString(String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.StartsWithStringBoolean">
            <summary>Sets the shim of StringBuilder.StartsWith(String substr, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ToCRLF">
            <summary>Sets the shim of StringBuilder.ToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ToLF">
            <summary>Sets the shim of StringBuilder.ToLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ToLowercase">
            <summary>Sets the shim of StringBuilder.ToLowercase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ToString01">
            <summary>Sets the shim of StringBuilder.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.ToUppercase">
            <summary>Sets the shim of StringBuilder.ToUppercase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.Trim">
            <summary>Sets the shim of StringBuilder.Trim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.TrimInsideSpaces">
            <summary>Sets the shim of StringBuilder.TrimInsideSpaces()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances.WriteFileStringStringBoolean">
            <summary>Sets the shim of StringBuilder.WriteFile(String path, String charset, Boolean emitBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances._StringBuilder">
            <summary>Sets the shim of StringBuilder.!StringBuilder()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AllInstances._StringBuilder01">
            <summary>Sets the shim of StringBuilder.~StringBuilder()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendBdBinDataStringInt32Int32">
            <summary>Sets the shim of StringBuilder.AppendBd(BinData binData, String charset, Int32 offset, Int32 numBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendEncodedByteArrayString">
            <summary>Sets the shim of StringBuilder.AppendEncoded(Byte[] binaryData, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendInt64Int64">
            <summary>Sets the shim of StringBuilder.AppendInt64(Int64 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendIntInt32">
            <summary>Sets the shim of StringBuilder.AppendInt(Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendLineStringBoolean">
            <summary>Sets the shim of StringBuilder.AppendLine(String value, Boolean crlf)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendSbStringBuilder">
            <summary>Sets the shim of StringBuilder.AppendSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.AppendString">
            <summary>Sets the shim of StringBuilder.Append(String value)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringBuilder.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.Clear">
            <summary>Sets the shim of StringBuilder.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.Constructor">
            <summary>Sets the shim of StringBuilder.StringBuilder()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ContainsStringBoolean">
            <summary>Sets the shim of StringBuilder.Contains(String str, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ContainsWordStringBoolean">
            <summary>Sets the shim of StringBuilder.ContainsWord(String word, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ContentsEqualSbStringBuilderBoolean">
            <summary>Sets the shim of StringBuilder.ContentsEqualSb(StringBuilder sb, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ContentsEqualStringBoolean">
            <summary>Sets the shim of StringBuilder.ContentsEqual(String str, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.DecodeStringString">
            <summary>Sets the shim of StringBuilder.Decode(String encoding, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.Dispose">
            <summary>Sets the shim of StringBuilder.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.DisposeBoolean">
            <summary>Sets the shim of StringBuilder.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.EncodeStringString">
            <summary>Sets the shim of StringBuilder.Encode(String encoding, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.EndsWithStringBoolean">
            <summary>Sets the shim of StringBuilder.EndsWith(String substr, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.EntityDecode">
            <summary>Sets the shim of StringBuilder.EntityDecode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.GetAfterBetweenStringStringString">
            <summary>Sets the shim of StringBuilder.GetAfterBetween(String searchAfter, String beginMark, String endMark)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.GetAsString">
            <summary>Sets the shim of StringBuilder.GetAsString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.GetBetweenStringString">
            <summary>Sets the shim of StringBuilder.GetBetween(String beginMark, String endMark)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.GetDecodedString">
            <summary>Sets the shim of StringBuilder.GetDecoded(String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.GetEncodedStringString">
            <summary>Sets the shim of StringBuilder.GetEncoded(String encoding, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.GetNthInt32StringBooleanBoolean">
            <summary>Sets the shim of StringBuilder.GetNth(Int32 index, String delimiterChar, Boolean exceptDoubleQuoted, Boolean exceptEscaped)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.IntValueGet">
            <summary>Sets the shim of StringBuilder.get_IntValue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.IntValueSetInt32">
            <summary>Sets the shim of StringBuilder.set_IntValue(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.LastMethodSuccessGet">
            <summary>Sets the shim of StringBuilder.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of StringBuilder.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.LastNLinesInt32Boolean">
            <summary>Sets the shim of StringBuilder.LastNLines(Int32 numLines, Boolean bCrlf)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.LengthGet">
            <summary>Sets the shim of StringBuilder.get_Length()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.LoadFileStringString">
            <summary>Sets the shim of StringBuilder.LoadFile(String path, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.PrependString">
            <summary>Sets the shim of StringBuilder.Prepend(String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ReplaceAllBetweenStringStringStringBoolean">
            <summary>Sets the shim of StringBuilder.ReplaceAllBetween(String beginMark, String endMark, String replacement, Boolean replaceMarks)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ReplaceBetweenStringStringStringString">
            <summary>Sets the shim of StringBuilder.ReplaceBetween(String beginMark, String endMark, String value, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ReplaceIStringInt32">
            <summary>Sets the shim of StringBuilder.ReplaceI(String value, Int32 replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ReplaceStringString">
            <summary>Sets the shim of StringBuilder.Replace(String value, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ReplaceWordStringString">
            <summary>Sets the shim of StringBuilder.ReplaceWord(String value, String replacement)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.SecureClear">
            <summary>Sets the shim of StringBuilder.SecureClear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.SetNthInt32StringStringBooleanBoolean">
            <summary>Sets the shim of StringBuilder.SetNth(Int32 index, String value, String delimiterChar, Boolean exceptDoubleQuoted, Boolean exceptEscaped)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.SetStringString">
            <summary>Sets the shim of StringBuilder.SetString(String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.StartsWithStringBoolean">
            <summary>Sets the shim of StringBuilder.StartsWith(String substr, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ToCRLF">
            <summary>Sets the shim of StringBuilder.ToCRLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ToLF">
            <summary>Sets the shim of StringBuilder.ToLF()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ToLowercase">
            <summary>Sets the shim of StringBuilder.ToLowercase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ToString">
            <summary>Sets the shim of StringBuilder.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.ToUppercase">
            <summary>Sets the shim of StringBuilder.ToUppercase()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.Trim">
            <summary>Sets the shim of StringBuilder.Trim()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.TrimInsideSpaces">
            <summary>Sets the shim of StringBuilder.TrimInsideSpaces()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder.WriteFileStringStringBoolean">
            <summary>Sets the shim of StringBuilder.WriteFile(String path, String charset, Boolean emitBom)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder._StringBuilder">
            <summary>Sets the shim of StringBuilder.!StringBuilder()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringBuilder._StringBuilder01">
            <summary>Sets the shim of StringBuilder.~StringBuilder()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStringTable">
            <summary>Shim type of Chilkat.StringTable</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringTable.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringTable.#ctor(Chilkat.StringTable)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimStringTable.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.AppendFromFileInt32StringString">
            <summary>Sets the shim of StringTable.AppendFromFile(Int32 maxLineLen, String charset, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.AppendFromSbStringBuilder">
            <summary>Sets the shim of StringTable.AppendFromSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.AppendString">
            <summary>Sets the shim of StringTable.Append(String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.Clear">
            <summary>Sets the shim of StringTable.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.CountGet">
            <summary>Sets the shim of StringTable.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of StringTable.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of StringTable.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.Dispose">
            <summary>Sets the shim of StringTable.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.DisposeBoolean">
            <summary>Sets the shim of StringTable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.IntAtInt32">
            <summary>Sets the shim of StringTable.IntAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of StringTable.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of StringTable.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of StringTable.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of StringTable.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of StringTable.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of StringTable.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.SaveToFileStringBooleanString">
            <summary>Sets the shim of StringTable.SaveToFile(String charset, Boolean bCrlf, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.SplitAndAppendStringStringBooleanBoolean">
            <summary>Sets the shim of StringTable.SplitAndAppend(String inStr, String delimiterChar, Boolean exceptDoubleQuoted, Boolean exceptEscaped)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.StringAtInt32">
            <summary>Sets the shim of StringTable.StringAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.ToString01">
            <summary>Sets the shim of StringTable.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of StringTable.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of StringTable.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances.VersionGet">
            <summary>Sets the shim of StringTable.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances._StringTable">
            <summary>Sets the shim of StringTable.!StringTable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AllInstances._StringTable01">
            <summary>Sets the shim of StringTable.~StringTable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AppendFromFileInt32StringString">
            <summary>Sets the shim of StringTable.AppendFromFile(Int32 maxLineLen, String charset, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AppendFromSbStringBuilder">
            <summary>Sets the shim of StringTable.AppendFromSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.AppendString">
            <summary>Sets the shim of StringTable.Append(String value)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringTable.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringTable.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimStringTable.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.Clear">
            <summary>Sets the shim of StringTable.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.Constructor">
            <summary>Sets the shim of StringTable.StringTable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.CountGet">
            <summary>Sets the shim of StringTable.get_Count()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.DebugLogFilePathGet">
            <summary>Sets the shim of StringTable.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.DebugLogFilePathSetString">
            <summary>Sets the shim of StringTable.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.Dispose">
            <summary>Sets the shim of StringTable.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.DisposeBoolean">
            <summary>Sets the shim of StringTable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.IntAtInt32">
            <summary>Sets the shim of StringTable.IntAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.LastErrorHtmlGet">
            <summary>Sets the shim of StringTable.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.LastErrorTextGet">
            <summary>Sets the shim of StringTable.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.LastErrorXmlGet">
            <summary>Sets the shim of StringTable.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.LastMethodSuccessGet">
            <summary>Sets the shim of StringTable.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of StringTable.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.SaveLastErrorString">
            <summary>Sets the shim of StringTable.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.SaveToFileStringBooleanString">
            <summary>Sets the shim of StringTable.SaveToFile(String charset, Boolean bCrlf, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.SplitAndAppendStringStringBooleanBoolean">
            <summary>Sets the shim of StringTable.SplitAndAppend(String inStr, String delimiterChar, Boolean exceptDoubleQuoted, Boolean exceptEscaped)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.StringAtInt32">
            <summary>Sets the shim of StringTable.StringAt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.ToString">
            <summary>Sets the shim of StringTable.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.VerboseLoggingGet">
            <summary>Sets the shim of StringTable.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.VerboseLoggingSetBoolean">
            <summary>Sets the shim of StringTable.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable.VersionGet">
            <summary>Sets the shim of StringTable.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable._StringTable">
            <summary>Sets the shim of StringTable.!StringTable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimStringTable._StringTable01">
            <summary>Sets the shim of StringTable.~StringTable()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSysUtil">
            <summary>Shim type of Chilkat.SysUtil</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSysUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSysUtil.#ctor(Chilkat.SysUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimSysUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.AllInstances.Dispose">
            <summary>Sets the shim of SysUtil.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SysUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of SysUtil.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.AllInstances.ShellExecuteStringStringStringStringInt32">
            <summary>Sets the shim of SysUtil.ShellExecute(String operation, String filename, String param, String cwd, Int32 nShowCmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.AllInstances._SysUtil">
            <summary>Sets the shim of SysUtil.!SysUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.AllInstances._SysUtil01">
            <summary>Sets the shim of SysUtil.~SysUtil()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSysUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSysUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimSysUtil.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.Constructor">
            <summary>Sets the shim of SysUtil.SysUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.Dispose">
            <summary>Sets the shim of SysUtil.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.DisposeBoolean">
            <summary>Sets the shim of SysUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.LastErrorTextGet">
            <summary>Sets the shim of SysUtil.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil.ShellExecuteStringStringStringStringInt32">
            <summary>Sets the shim of SysUtil.ShellExecute(String operation, String filename, String param, String cwd, Int32 nShowCmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil._SysUtil">
            <summary>Sets the shim of SysUtil.!SysUtil()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimSysUtil._SysUtil01">
            <summary>Sets the shim of SysUtil.~SysUtil()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTar">
            <summary>Shim type of Chilkat.Tar</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTar.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTar.#ctor(Chilkat.Tar)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AddDirRoot2StringString">
            <summary>Sets the shim of Tar.AddDirRoot2(String rootPrefix, String rootPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AddDirRootString">
            <summary>Sets the shim of Tar.AddDirRoot(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AddFile2StringString">
            <summary>Sets the shim of Tar.AddFile2(String filePath, String pathWithinTar)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AddFileString">
            <summary>Sets the shim of Tar.AddFile(String path)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTar.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.AddDirRoot2StringString">
            <summary>Sets the shim of Tar.AddDirRoot2(String rootPrefix, String rootPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.AddDirRootString">
            <summary>Sets the shim of Tar.AddDirRoot(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.AddFile2StringString">
            <summary>Sets the shim of Tar.AddFile2(String filePath, String pathWithinTar)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.AddFileString">
            <summary>Sets the shim of Tar.AddFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.CaptureXmlListingGet">
            <summary>Sets the shim of Tar.get_CaptureXmlListing()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.CaptureXmlListingSetBoolean">
            <summary>Sets the shim of Tar.set_CaptureXmlListing(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.CharsetGet">
            <summary>Sets the shim of Tar.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.CharsetSetString">
            <summary>Sets the shim of Tar.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.CreateDebStringStringString">
            <summary>Sets the shim of Tar.CreateDeb(String controlPath, String dataPath, String debPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Tar.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Tar.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DirModeGet">
            <summary>Sets the shim of Tar.get_DirMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DirModeSetInt32">
            <summary>Sets the shim of Tar.set_DirMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DirPrefixGet">
            <summary>Sets the shim of Tar.get_DirPrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DirPrefixSetString">
            <summary>Sets the shim of Tar.set_DirPrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.Dispose">
            <summary>Sets the shim of Tar.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Tar.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Tar.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Tar.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FileModeGet">
            <summary>Sets the shim of Tar.get_FileMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FileModeSetInt32">
            <summary>Sets the shim of Tar.set_FileMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Tar.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FireNextTarFileObjectNextTarFileEventArgs">
            <summary>Sets the shim of Tar.FireNextTarFile(Object sender, NextTarFileEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Tar.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Tar.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Tar.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.GetDirRootInt32">
            <summary>Sets the shim of Tar.GetDirRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.GroupIdGet">
            <summary>Sets the shim of Tar.get_GroupId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.GroupIdSetInt32">
            <summary>Sets the shim of Tar.set_GroupId(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.GroupNameGet">
            <summary>Sets the shim of Tar.get_GroupName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.GroupNameSetString">
            <summary>Sets the shim of Tar.set_GroupName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Tar.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Tar.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Tar.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Tar.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Tar.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Tar.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Tar.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.ListXmlAsyncString">
            <summary>Sets the shim of Tar.ListXmlAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.ListXmlString">
            <summary>Sets the shim of Tar.ListXml(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.MatchCaseSensitiveGet">
            <summary>Sets the shim of Tar.get_MatchCaseSensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.MatchCaseSensitiveSetBoolean">
            <summary>Sets the shim of Tar.set_MatchCaseSensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.MustMatchGet">
            <summary>Sets the shim of Tar.get_MustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.MustMatchSetString">
            <summary>Sets the shim of Tar.set_MustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.MustNotMatchGet">
            <summary>Sets the shim of Tar.get_MustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.MustNotMatchSetString">
            <summary>Sets the shim of Tar.set_MustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.NoAbsolutePathsGet">
            <summary>Sets the shim of Tar.get_NoAbsolutePaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.NoAbsolutePathsSetBoolean">
            <summary>Sets the shim of Tar.set_NoAbsolutePaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.NumDirRootsGet">
            <summary>Sets the shim of Tar.get_NumDirRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnAbortCheckAddTarAbortCheckEventHandler">
            <summary>Sets the shim of Tar.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Tar.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnAbortCheckRemoveTarAbortCheckEventHandler">
            <summary>Sets the shim of Tar.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnNextTarFileAddTarNextTarFileEventHandler">
            <summary>Sets the shim of Tar.add_OnNextTarFile(NextTarFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnNextTarFileRaiseObjectNextTarFileEventArgs">
            <summary>Sets the shim of Tar.raise_OnNextTarFile(Object value0, NextTarFileEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnNextTarFileRemoveTarNextTarFileEventHandler">
            <summary>Sets the shim of Tar.remove_OnNextTarFile(NextTarFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnPercentDoneAddTarPercentDoneEventHandler">
            <summary>Sets the shim of Tar.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Tar.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnPercentDoneRemoveTarPercentDoneEventHandler">
            <summary>Sets the shim of Tar.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnProgressInfoAddTarProgressInfoEventHandler">
            <summary>Sets the shim of Tar.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Tar.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnProgressInfoRemoveTarProgressInfoEventHandler">
            <summary>Sets the shim of Tar.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnTaskCompletedAddTarTaskCompletedEventHandler">
            <summary>Sets the shim of Tar.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Tar.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.OnTaskCompletedRemoveTarTaskCompletedEventHandler">
            <summary>Sets the shim of Tar.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Tar.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Tar.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Tar.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.ScriptFileModeGet">
            <summary>Sets the shim of Tar.get_ScriptFileMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.ScriptFileModeSetInt32">
            <summary>Sets the shim of Tar.set_ScriptFileMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.SuppressOutputGet">
            <summary>Sets the shim of Tar.get_SuppressOutput()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.SuppressOutputSetBoolean">
            <summary>Sets the shim of Tar.set_SuppressOutput(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.ToString01">
            <summary>Sets the shim of Tar.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Tar.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarAsyncString">
            <summary>Sets the shim of Tar.UntarAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarBz2AsyncString">
            <summary>Sets the shim of Tar.UntarBz2Async(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarBz2String">
            <summary>Sets the shim of Tar.UntarBz2(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarCaseSensitiveGet">
            <summary>Sets the shim of Tar.get_UntarCaseSensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarCaseSensitiveSetBoolean">
            <summary>Sets the shim of Tar.set_UntarCaseSensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarDebugLogGet">
            <summary>Sets the shim of Tar.get_UntarDebugLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarDebugLogSetBoolean">
            <summary>Sets the shim of Tar.set_UntarDebugLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarDiscardPathsGet">
            <summary>Sets the shim of Tar.get_UntarDiscardPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarDiscardPathsSetBoolean">
            <summary>Sets the shim of Tar.set_UntarDiscardPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarFirstMatchingToMemoryByteArrayString">
            <summary>Sets the shim of Tar.UntarFirstMatchingToMemory(Byte[] tarFileBytes, String matchPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarFromDirGet">
            <summary>Sets the shim of Tar.get_UntarFromDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarFromDirSetString">
            <summary>Sets the shim of Tar.set_UntarFromDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarFromMemoryAsyncByteArray">
            <summary>Sets the shim of Tar.UntarFromMemoryAsync(Byte[] tarFileBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarFromMemoryByteArray">
            <summary>Sets the shim of Tar.UntarFromMemory(Byte[] tarFileBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarGzAsyncString">
            <summary>Sets the shim of Tar.UntarGzAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarGzString">
            <summary>Sets the shim of Tar.UntarGz(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarMatchPatternGet">
            <summary>Sets the shim of Tar.get_UntarMatchPattern()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarMatchPatternSetString">
            <summary>Sets the shim of Tar.set_UntarMatchPattern(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarMaxCountGet">
            <summary>Sets the shim of Tar.get_UntarMaxCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarMaxCountSetInt32">
            <summary>Sets the shim of Tar.set_UntarMaxCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarString">
            <summary>Sets the shim of Tar.Untar(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarZAsyncString">
            <summary>Sets the shim of Tar.UntarZAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UntarZString">
            <summary>Sets the shim of Tar.UntarZ(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UserIdGet">
            <summary>Sets the shim of Tar.get_UserId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UserIdSetInt32">
            <summary>Sets the shim of Tar.set_UserId(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UserNameGet">
            <summary>Sets the shim of Tar.get_UserName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.UserNameSetString">
            <summary>Sets the shim of Tar.set_UserName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Tar.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Tar.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.VerifyTarAsyncString">
            <summary>Sets the shim of Tar.VerifyTarAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.VerifyTarString">
            <summary>Sets the shim of Tar.VerifyTar(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.VersionGet">
            <summary>Sets the shim of Tar.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteFormatGet">
            <summary>Sets the shim of Tar.get_WriteFormat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteFormatSetString">
            <summary>Sets the shim of Tar.set_WriteFormat(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteTarAsyncString">
            <summary>Sets the shim of Tar.WriteTarAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteTarBz2AsyncString">
            <summary>Sets the shim of Tar.WriteTarBz2Async(String bz2Path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteTarBz2String">
            <summary>Sets the shim of Tar.WriteTarBz2(String bz2Path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteTarGzAsyncString">
            <summary>Sets the shim of Tar.WriteTarGzAsync(String gzPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteTarGzString">
            <summary>Sets the shim of Tar.WriteTarGz(String gzPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.WriteTarString">
            <summary>Sets the shim of Tar.WriteTar(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.XmlListingGet">
            <summary>Sets the shim of Tar.get_XmlListing()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances.XmlListingSetString">
            <summary>Sets the shim of Tar.set_XmlListing(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances._Tar">
            <summary>Sets the shim of Tar.!Tar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.AllInstances._Tar01">
            <summary>Sets the shim of Tar.~Tar()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTar.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTar.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTar.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.CaptureXmlListingGet">
            <summary>Sets the shim of Tar.get_CaptureXmlListing()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.CaptureXmlListingSetBoolean">
            <summary>Sets the shim of Tar.set_CaptureXmlListing(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.CharsetGet">
            <summary>Sets the shim of Tar.get_Charset()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.CharsetSetString">
            <summary>Sets the shim of Tar.set_Charset(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.Constructor">
            <summary>Sets the shim of Tar.Tar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.CreateDebStringStringString">
            <summary>Sets the shim of Tar.CreateDeb(String controlPath, String dataPath, String debPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DebugLogFilePathGet">
            <summary>Sets the shim of Tar.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DebugLogFilePathSetString">
            <summary>Sets the shim of Tar.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DirModeGet">
            <summary>Sets the shim of Tar.get_DirMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DirModeSetInt32">
            <summary>Sets the shim of Tar.set_DirMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DirPrefixGet">
            <summary>Sets the shim of Tar.get_DirPrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DirPrefixSetString">
            <summary>Sets the shim of Tar.set_DirPrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.Dispose">
            <summary>Sets the shim of Tar.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.DisposeBoolean">
            <summary>Sets the shim of Tar.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.EnableEventsGet">
            <summary>Sets the shim of Tar.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.EnableEventsSetBoolean">
            <summary>Sets the shim of Tar.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FileModeGet">
            <summary>Sets the shim of Tar.get_FileMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FileModeSetInt32">
            <summary>Sets the shim of Tar.set_FileMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Tar.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FireNextTarFileObjectNextTarFileEventArgs">
            <summary>Sets the shim of Tar.FireNextTarFile(Object sender, NextTarFileEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Tar.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Tar.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Tar.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.GetDirRootInt32">
            <summary>Sets the shim of Tar.GetDirRoot(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.GroupIdGet">
            <summary>Sets the shim of Tar.get_GroupId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.GroupIdSetInt32">
            <summary>Sets the shim of Tar.set_GroupId(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.GroupNameGet">
            <summary>Sets the shim of Tar.get_GroupName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.GroupNameSetString">
            <summary>Sets the shim of Tar.set_GroupName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.HeartbeatMsGet">
            <summary>Sets the shim of Tar.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.HeartbeatMsSetInt32">
            <summary>Sets the shim of Tar.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.LastErrorHtmlGet">
            <summary>Sets the shim of Tar.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.LastErrorTextGet">
            <summary>Sets the shim of Tar.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.LastErrorXmlGet">
            <summary>Sets the shim of Tar.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.LastMethodSuccessGet">
            <summary>Sets the shim of Tar.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Tar.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.ListXmlAsyncString">
            <summary>Sets the shim of Tar.ListXmlAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.ListXmlString">
            <summary>Sets the shim of Tar.ListXml(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.MatchCaseSensitiveGet">
            <summary>Sets the shim of Tar.get_MatchCaseSensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.MatchCaseSensitiveSetBoolean">
            <summary>Sets the shim of Tar.set_MatchCaseSensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.MustMatchGet">
            <summary>Sets the shim of Tar.get_MustMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.MustMatchSetString">
            <summary>Sets the shim of Tar.set_MustMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.MustNotMatchGet">
            <summary>Sets the shim of Tar.get_MustNotMatch()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.MustNotMatchSetString">
            <summary>Sets the shim of Tar.set_MustNotMatch(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.NoAbsolutePathsGet">
            <summary>Sets the shim of Tar.get_NoAbsolutePaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.NoAbsolutePathsSetBoolean">
            <summary>Sets the shim of Tar.set_NoAbsolutePaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.NumDirRootsGet">
            <summary>Sets the shim of Tar.get_NumDirRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnAbortCheckAddTarAbortCheckEventHandler">
            <summary>Sets the shim of Tar.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Tar.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnAbortCheckRemoveTarAbortCheckEventHandler">
            <summary>Sets the shim of Tar.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnNextTarFileAddTarNextTarFileEventHandler">
            <summary>Sets the shim of Tar.add_OnNextTarFile(NextTarFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnNextTarFileRaiseObjectNextTarFileEventArgs">
            <summary>Sets the shim of Tar.raise_OnNextTarFile(Object value0, NextTarFileEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnNextTarFileRemoveTarNextTarFileEventHandler">
            <summary>Sets the shim of Tar.remove_OnNextTarFile(NextTarFileEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnPercentDoneAddTarPercentDoneEventHandler">
            <summary>Sets the shim of Tar.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Tar.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnPercentDoneRemoveTarPercentDoneEventHandler">
            <summary>Sets the shim of Tar.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnProgressInfoAddTarProgressInfoEventHandler">
            <summary>Sets the shim of Tar.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Tar.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnProgressInfoRemoveTarProgressInfoEventHandler">
            <summary>Sets the shim of Tar.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnTaskCompletedAddTarTaskCompletedEventHandler">
            <summary>Sets the shim of Tar.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Tar.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.OnTaskCompletedRemoveTarTaskCompletedEventHandler">
            <summary>Sets the shim of Tar.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.PercentDoneScaleGet">
            <summary>Sets the shim of Tar.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Tar.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.SaveLastErrorString">
            <summary>Sets the shim of Tar.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.ScriptFileModeGet">
            <summary>Sets the shim of Tar.get_ScriptFileMode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.ScriptFileModeSetInt32">
            <summary>Sets the shim of Tar.set_ScriptFileMode(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.SuppressOutputGet">
            <summary>Sets the shim of Tar.get_SuppressOutput()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.SuppressOutputSetBoolean">
            <summary>Sets the shim of Tar.set_SuppressOutput(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.ToString">
            <summary>Sets the shim of Tar.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UnlockComponentString">
            <summary>Sets the shim of Tar.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarAsyncString">
            <summary>Sets the shim of Tar.UntarAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarBz2AsyncString">
            <summary>Sets the shim of Tar.UntarBz2Async(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarBz2String">
            <summary>Sets the shim of Tar.UntarBz2(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarCaseSensitiveGet">
            <summary>Sets the shim of Tar.get_UntarCaseSensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarCaseSensitiveSetBoolean">
            <summary>Sets the shim of Tar.set_UntarCaseSensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarDebugLogGet">
            <summary>Sets the shim of Tar.get_UntarDebugLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarDebugLogSetBoolean">
            <summary>Sets the shim of Tar.set_UntarDebugLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarDiscardPathsGet">
            <summary>Sets the shim of Tar.get_UntarDiscardPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarDiscardPathsSetBoolean">
            <summary>Sets the shim of Tar.set_UntarDiscardPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarFirstMatchingToMemoryByteArrayString">
            <summary>Sets the shim of Tar.UntarFirstMatchingToMemory(Byte[] tarFileBytes, String matchPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarFromDirGet">
            <summary>Sets the shim of Tar.get_UntarFromDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarFromDirSetString">
            <summary>Sets the shim of Tar.set_UntarFromDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarFromMemoryAsyncByteArray">
            <summary>Sets the shim of Tar.UntarFromMemoryAsync(Byte[] tarFileBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarFromMemoryByteArray">
            <summary>Sets the shim of Tar.UntarFromMemory(Byte[] tarFileBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarGzAsyncString">
            <summary>Sets the shim of Tar.UntarGzAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarGzString">
            <summary>Sets the shim of Tar.UntarGz(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarMatchPatternGet">
            <summary>Sets the shim of Tar.get_UntarMatchPattern()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarMatchPatternSetString">
            <summary>Sets the shim of Tar.set_UntarMatchPattern(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarMaxCountGet">
            <summary>Sets the shim of Tar.get_UntarMaxCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarMaxCountSetInt32">
            <summary>Sets the shim of Tar.set_UntarMaxCount(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarString">
            <summary>Sets the shim of Tar.Untar(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarZAsyncString">
            <summary>Sets the shim of Tar.UntarZAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UntarZString">
            <summary>Sets the shim of Tar.UntarZ(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UserIdGet">
            <summary>Sets the shim of Tar.get_UserId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UserIdSetInt32">
            <summary>Sets the shim of Tar.set_UserId(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UserNameGet">
            <summary>Sets the shim of Tar.get_UserName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.UserNameSetString">
            <summary>Sets the shim of Tar.set_UserName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.VerboseLoggingGet">
            <summary>Sets the shim of Tar.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Tar.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.VerifyTarAsyncString">
            <summary>Sets the shim of Tar.VerifyTarAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.VerifyTarString">
            <summary>Sets the shim of Tar.VerifyTar(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.VersionGet">
            <summary>Sets the shim of Tar.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteFormatGet">
            <summary>Sets the shim of Tar.get_WriteFormat()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteFormatSetString">
            <summary>Sets the shim of Tar.set_WriteFormat(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteTarAsyncString">
            <summary>Sets the shim of Tar.WriteTarAsync(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteTarBz2AsyncString">
            <summary>Sets the shim of Tar.WriteTarBz2Async(String bz2Path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteTarBz2String">
            <summary>Sets the shim of Tar.WriteTarBz2(String bz2Path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteTarGzAsyncString">
            <summary>Sets the shim of Tar.WriteTarGzAsync(String gzPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteTarGzString">
            <summary>Sets the shim of Tar.WriteTarGz(String gzPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.WriteTarString">
            <summary>Sets the shim of Tar.WriteTar(String tarPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.XmlListingGet">
            <summary>Sets the shim of Tar.get_XmlListing()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar.XmlListingSetString">
            <summary>Sets the shim of Tar.set_XmlListing(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar._Tar">
            <summary>Sets the shim of Tar.!Tar()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTar._Tar01">
            <summary>Sets the shim of Tar.~Tar()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTask">
            <summary>Shim type of Chilkat.Task</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTask.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTask.#ctor(Chilkat.Task)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTask.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.Cancel">
            <summary>Sets the shim of Task.Cancel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ClearProgressLog">
            <summary>Sets the shim of Task.ClearProgressLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.CopyResultBytes">
            <summary>Sets the shim of Task.CopyResultBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Task.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Task.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.Dispose">
            <summary>Sets the shim of Task.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.FinishedGet">
            <summary>Sets the shim of Task.get_Finished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.GetResultBool">
            <summary>Sets the shim of Task.GetResultBool()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.GetResultBytes">
            <summary>Sets the shim of Task.GetResultBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.GetResultInt">
            <summary>Sets the shim of Task.GetResultInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.GetResultString">
            <summary>Sets the shim of Task.GetResultString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Task.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Task.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.InertGet">
            <summary>Sets the shim of Task.get_Inert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.KeepProgressLogGet">
            <summary>Sets the shim of Task.get_KeepProgressLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.KeepProgressLogSetBoolean">
            <summary>Sets the shim of Task.set_KeepProgressLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Task.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Task.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Task.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Task.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Task.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.LiveGet">
            <summary>Sets the shim of Task.get_Live()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.PercentDoneGet">
            <summary>Sets the shim of Task.get_PercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ProgressInfoNameInt32">
            <summary>Sets the shim of Task.ProgressInfoName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ProgressInfoValueInt32">
            <summary>Sets the shim of Task.ProgressInfoValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ProgressLogSizeGet">
            <summary>Sets the shim of Task.get_ProgressLogSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.RemoveProgressInfoInt32">
            <summary>Sets the shim of Task.RemoveProgressInfo(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ResultErrorTextGet">
            <summary>Sets the shim of Task.get_ResultErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ResultTypeGet">
            <summary>Sets the shim of Task.get_ResultType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.Run">
            <summary>Sets the shim of Task.Run()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.RunSynchronously">
            <summary>Sets the shim of Task.RunSynchronously()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Task.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.SleepMsInt32">
            <summary>Sets the shim of Task.SleepMs(Int32 numMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.StatusGet">
            <summary>Sets the shim of Task.get_Status()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.StatusIntGet">
            <summary>Sets the shim of Task.get_StatusInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.TaskIdGet">
            <summary>Sets the shim of Task.get_TaskId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.TaskSuccessGet">
            <summary>Sets the shim of Task.get_TaskSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.ToString01">
            <summary>Sets the shim of Task.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.UserDataGet">
            <summary>Sets the shim of Task.get_UserData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.UserDataSetString">
            <summary>Sets the shim of Task.set_UserData(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Task.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Task.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.VersionGet">
            <summary>Sets the shim of Task.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances.WaitInt32">
            <summary>Sets the shim of Task.Wait(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances._Task">
            <summary>Sets the shim of Task.!Task()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.AllInstances._Task01">
            <summary>Sets the shim of Task.~Task()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTask.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTask.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTask.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.Cancel">
            <summary>Sets the shim of Task.Cancel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ClearProgressLog">
            <summary>Sets the shim of Task.ClearProgressLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.Constructor">
            <summary>Sets the shim of Task.Task()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.CopyResultBytes">
            <summary>Sets the shim of Task.CopyResultBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.DebugLogFilePathGet">
            <summary>Sets the shim of Task.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.DebugLogFilePathSetString">
            <summary>Sets the shim of Task.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.Dispose">
            <summary>Sets the shim of Task.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.DisposeBoolean">
            <summary>Sets the shim of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.FinishedGet">
            <summary>Sets the shim of Task.get_Finished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.GetResultBool">
            <summary>Sets the shim of Task.GetResultBool()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.GetResultBytes">
            <summary>Sets the shim of Task.GetResultBytes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.GetResultInt">
            <summary>Sets the shim of Task.GetResultInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.GetResultString">
            <summary>Sets the shim of Task.GetResultString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.HeartbeatMsGet">
            <summary>Sets the shim of Task.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.HeartbeatMsSetInt32">
            <summary>Sets the shim of Task.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.InertGet">
            <summary>Sets the shim of Task.get_Inert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.KeepProgressLogGet">
            <summary>Sets the shim of Task.get_KeepProgressLog()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.KeepProgressLogSetBoolean">
            <summary>Sets the shim of Task.set_KeepProgressLog(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.LastErrorHtmlGet">
            <summary>Sets the shim of Task.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.LastErrorTextGet">
            <summary>Sets the shim of Task.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.LastErrorXmlGet">
            <summary>Sets the shim of Task.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.LastMethodSuccessGet">
            <summary>Sets the shim of Task.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Task.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.LiveGet">
            <summary>Sets the shim of Task.get_Live()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.PercentDoneGet">
            <summary>Sets the shim of Task.get_PercentDone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ProgressInfoNameInt32">
            <summary>Sets the shim of Task.ProgressInfoName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ProgressInfoValueInt32">
            <summary>Sets the shim of Task.ProgressInfoValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ProgressLogSizeGet">
            <summary>Sets the shim of Task.get_ProgressLogSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.RemoveProgressInfoInt32">
            <summary>Sets the shim of Task.RemoveProgressInfo(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ResultErrorTextGet">
            <summary>Sets the shim of Task.get_ResultErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ResultTypeGet">
            <summary>Sets the shim of Task.get_ResultType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.Run">
            <summary>Sets the shim of Task.Run()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.RunSynchronously">
            <summary>Sets the shim of Task.RunSynchronously()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.SaveLastErrorString">
            <summary>Sets the shim of Task.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.SleepMsInt32">
            <summary>Sets the shim of Task.SleepMs(Int32 numMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.StatusGet">
            <summary>Sets the shim of Task.get_Status()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.StatusIntGet">
            <summary>Sets the shim of Task.get_StatusInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.TaskIdGet">
            <summary>Sets the shim of Task.get_TaskId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.TaskSuccessGet">
            <summary>Sets the shim of Task.get_TaskSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.ToString">
            <summary>Sets the shim of Task.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.UserDataGet">
            <summary>Sets the shim of Task.get_UserData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.UserDataSetString">
            <summary>Sets the shim of Task.set_UserData(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.VerboseLoggingGet">
            <summary>Sets the shim of Task.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Task.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.VersionGet">
            <summary>Sets the shim of Task.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask.WaitInt32">
            <summary>Sets the shim of Task.Wait(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask._Task">
            <summary>Sets the shim of Task.!Task()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTask._Task01">
            <summary>Sets the shim of Task.~Task()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTaskChain">
            <summary>Shim type of Chilkat.TaskChain</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskChain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskChain.#ctor(Chilkat.TaskChain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTaskChain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.AppendTask">
            <summary>Sets the shim of TaskChain.Append(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.Cancel">
            <summary>Sets the shim of TaskChain.Cancel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of TaskChain.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of TaskChain.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.Dispose">
            <summary>Sets the shim of TaskChain.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TaskChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.FinishedGet">
            <summary>Sets the shim of TaskChain.get_Finished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.GetTaskInt32">
            <summary>Sets the shim of TaskChain.GetTask(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of TaskChain.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of TaskChain.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.InertGet">
            <summary>Sets the shim of TaskChain.get_Inert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of TaskChain.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of TaskChain.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of TaskChain.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of TaskChain.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of TaskChain.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.LiveGet">
            <summary>Sets the shim of TaskChain.get_Live()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.NumTasksGet">
            <summary>Sets the shim of TaskChain.get_NumTasks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.Run">
            <summary>Sets the shim of TaskChain.Run()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.RunSynchronously">
            <summary>Sets the shim of TaskChain.RunSynchronously()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of TaskChain.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.SleepMsInt32">
            <summary>Sets the shim of TaskChain.SleepMs(Int32 numMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.StatusGet">
            <summary>Sets the shim of TaskChain.get_Status()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.StatusIntGet">
            <summary>Sets the shim of TaskChain.get_StatusInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.StopOnFailedTaskGet">
            <summary>Sets the shim of TaskChain.get_StopOnFailedTask()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.StopOnFailedTaskSetBoolean">
            <summary>Sets the shim of TaskChain.set_StopOnFailedTask(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.ToString01">
            <summary>Sets the shim of TaskChain.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of TaskChain.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of TaskChain.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.VersionGet">
            <summary>Sets the shim of TaskChain.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances.WaitInt32">
            <summary>Sets the shim of TaskChain.Wait(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances._TaskChain">
            <summary>Sets the shim of TaskChain.!TaskChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AllInstances._TaskChain01">
            <summary>Sets the shim of TaskChain.~TaskChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.AppendTask">
            <summary>Sets the shim of TaskChain.Append(Task task)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskChain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskChain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskChain.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.Cancel">
            <summary>Sets the shim of TaskChain.Cancel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.Constructor">
            <summary>Sets the shim of TaskChain.TaskChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.DebugLogFilePathGet">
            <summary>Sets the shim of TaskChain.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.DebugLogFilePathSetString">
            <summary>Sets the shim of TaskChain.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.Dispose">
            <summary>Sets the shim of TaskChain.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.DisposeBoolean">
            <summary>Sets the shim of TaskChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.FinishedGet">
            <summary>Sets the shim of TaskChain.get_Finished()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.GetTaskInt32">
            <summary>Sets the shim of TaskChain.GetTask(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.HeartbeatMsGet">
            <summary>Sets the shim of TaskChain.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.HeartbeatMsSetInt32">
            <summary>Sets the shim of TaskChain.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.InertGet">
            <summary>Sets the shim of TaskChain.get_Inert()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.LastErrorHtmlGet">
            <summary>Sets the shim of TaskChain.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.LastErrorTextGet">
            <summary>Sets the shim of TaskChain.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.LastErrorXmlGet">
            <summary>Sets the shim of TaskChain.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.LastMethodSuccessGet">
            <summary>Sets the shim of TaskChain.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of TaskChain.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.LiveGet">
            <summary>Sets the shim of TaskChain.get_Live()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.NumTasksGet">
            <summary>Sets the shim of TaskChain.get_NumTasks()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.Run">
            <summary>Sets the shim of TaskChain.Run()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.RunSynchronously">
            <summary>Sets the shim of TaskChain.RunSynchronously()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.SaveLastErrorString">
            <summary>Sets the shim of TaskChain.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.SleepMsInt32">
            <summary>Sets the shim of TaskChain.SleepMs(Int32 numMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.StatusGet">
            <summary>Sets the shim of TaskChain.get_Status()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.StatusIntGet">
            <summary>Sets the shim of TaskChain.get_StatusInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.StopOnFailedTaskGet">
            <summary>Sets the shim of TaskChain.get_StopOnFailedTask()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.StopOnFailedTaskSetBoolean">
            <summary>Sets the shim of TaskChain.set_StopOnFailedTask(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.ToString">
            <summary>Sets the shim of TaskChain.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.VerboseLoggingGet">
            <summary>Sets the shim of TaskChain.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.VerboseLoggingSetBoolean">
            <summary>Sets the shim of TaskChain.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.VersionGet">
            <summary>Sets the shim of TaskChain.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain.WaitInt32">
            <summary>Sets the shim of TaskChain.Wait(Int32 maxWaitMs)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain._TaskChain">
            <summary>Sets the shim of TaskChain.!TaskChain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskChain._TaskChain01">
            <summary>Sets the shim of TaskChain.~TaskChain()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTaskCompletedEventArgs">
            <summary>Shim type of Chilkat.TaskCompletedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskCompletedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskCompletedEventArgs.#ctor(Chilkat.TaskCompletedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTaskCompletedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of TaskCompletedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TaskCompletedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.AllInstances.TaskGet">
            <summary>Sets the shim of TaskCompletedEventArgs.get_Task()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.AllInstances._TaskCompletedEventArgs">
            <summary>Sets the shim of TaskCompletedEventArgs.~TaskCompletedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskCompletedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskCompletedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTaskCompletedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.ConstructorTask">
            <summary>Sets the shim of TaskCompletedEventArgs.TaskCompletedEventArgs(Task task)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.Dispose">
            <summary>Sets the shim of TaskCompletedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.DisposeBoolean">
            <summary>Sets the shim of TaskCompletedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs.TaskGet">
            <summary>Sets the shim of TaskCompletedEventArgs.get_Task()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTaskCompletedEventArgs._TaskCompletedEventArgs">
            <summary>Sets the shim of TaskCompletedEventArgs.~TaskCompletedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTextDataEventArgs">
            <summary>Shim type of Chilkat.TextDataEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTextDataEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTextDataEventArgs.#ctor(Chilkat.TextDataEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTextDataEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.AllInstances.DataGet">
            <summary>Sets the shim of TextDataEventArgs.get_Data()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of TextDataEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TextDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.AllInstances._TextDataEventArgs">
            <summary>Sets the shim of TextDataEventArgs.~TextDataEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTextDataEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTextDataEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTextDataEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.DataGet">
            <summary>Sets the shim of TextDataEventArgs.get_Data()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.Dispose">
            <summary>Sets the shim of TextDataEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs.DisposeBoolean">
            <summary>Sets the shim of TextDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTextDataEventArgs._TextDataEventArgs">
            <summary>Sets the shim of TextDataEventArgs.~TextDataEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimToBeAddedEventArgs">
            <summary>Shim type of Chilkat.ToBeAddedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeAddedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeAddedEventArgs.#ctor(Chilkat.ToBeAddedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of ToBeAddedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances.ExcludeGet">
            <summary>Sets the shim of ToBeAddedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances.ExcludeSetBoolean">
            <summary>Sets the shim of ToBeAddedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of ToBeAddedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of ToBeAddedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.AllInstances._ToBeAddedEventArgs">
            <summary>Sets the shim of ToBeAddedEventArgs.~ToBeAddedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeAddedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeAddedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeAddedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.Dispose">
            <summary>Sets the shim of ToBeAddedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.DisposeBoolean">
            <summary>Sets the shim of ToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.ExcludeGet">
            <summary>Sets the shim of ToBeAddedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.ExcludeSetBoolean">
            <summary>Sets the shim of ToBeAddedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.FileNameGet">
            <summary>Sets the shim of ToBeAddedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs.FileSizeGet">
            <summary>Sets the shim of ToBeAddedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeAddedEventArgs._ToBeAddedEventArgs">
            <summary>Sets the shim of ToBeAddedEventArgs.~ToBeAddedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimToBeUnzippedEventArgs">
            <summary>Shim type of Chilkat.ToBeUnzippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeUnzippedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeUnzippedEventArgs.#ctor(Chilkat.ToBeUnzippedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.CompressedSizeGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_CompressedSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of ToBeUnzippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ToBeUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.ExcludeGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.ExcludeSetBoolean">
            <summary>Sets the shim of ToBeUnzippedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.AllInstances._ToBeUnzippedEventArgs">
            <summary>Sets the shim of ToBeUnzippedEventArgs.~ToBeUnzippedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeUnzippedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeUnzippedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeUnzippedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.CompressedSizeGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_CompressedSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.Dispose">
            <summary>Sets the shim of ToBeUnzippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.DisposeBoolean">
            <summary>Sets the shim of ToBeUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.ExcludeGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.ExcludeSetBoolean">
            <summary>Sets the shim of ToBeUnzippedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.FileNameGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.FileSizeGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs.IsDirectoryGet">
            <summary>Sets the shim of ToBeUnzippedEventArgs.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeUnzippedEventArgs._ToBeUnzippedEventArgs">
            <summary>Sets the shim of ToBeUnzippedEventArgs.~ToBeUnzippedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimToBeZippedEventArgs">
            <summary>Shim type of Chilkat.ToBeZippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeZippedEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeZippedEventArgs.#ctor(Chilkat.ToBeZippedEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances.Dispose">
            <summary>Sets the shim of ToBeZippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ToBeZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances.ExcludeGet">
            <summary>Sets the shim of ToBeZippedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances.ExcludeSetBoolean">
            <summary>Sets the shim of ToBeZippedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances.FileNameGet">
            <summary>Sets the shim of ToBeZippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances.FileSizeGet">
            <summary>Sets the shim of ToBeZippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.AllInstances._ToBeZippedEventArgs">
            <summary>Sets the shim of ToBeZippedEventArgs.~ToBeZippedEventArgs()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeZippedEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeZippedEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimToBeZippedEventArgs.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.Dispose">
            <summary>Sets the shim of ToBeZippedEventArgs.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.DisposeBoolean">
            <summary>Sets the shim of ToBeZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.ExcludeGet">
            <summary>Sets the shim of ToBeZippedEventArgs.get_Exclude()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.ExcludeSetBoolean">
            <summary>Sets the shim of ToBeZippedEventArgs.set_Exclude(Boolean value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.FileNameGet">
            <summary>Sets the shim of ToBeZippedEventArgs.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs.FileSizeGet">
            <summary>Sets the shim of ToBeZippedEventArgs.get_FileSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimToBeZippedEventArgs._ToBeZippedEventArgs">
            <summary>Sets the shim of ToBeZippedEventArgs.~ToBeZippedEventArgs()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTrustedRoots">
            <summary>Shim type of Chilkat.TrustedRoots</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTrustedRoots.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTrustedRoots.#ctor(Chilkat.TrustedRoots)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.Activate">
            <summary>Sets the shim of TrustedRoots.Activate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AddCertCert">
            <summary>Sets the shim of TrustedRoots.AddCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AddJavaKeyStoreAsyncJavaKeyStore">
            <summary>Sets the shim of TrustedRoots.AddJavaKeyStoreAsync(JavaKeyStore keystore)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AddJavaKeyStoreJavaKeyStore">
            <summary>Sets the shim of TrustedRoots.AddJavaKeyStore(JavaKeyStore keystore)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimTrustedRoots.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.Activate">
            <summary>Sets the shim of TrustedRoots.Activate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.AddCertCert">
            <summary>Sets the shim of TrustedRoots.AddCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.AddJavaKeyStoreAsyncJavaKeyStore">
            <summary>Sets the shim of TrustedRoots.AddJavaKeyStoreAsync(JavaKeyStore keystore)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.AddJavaKeyStoreJavaKeyStore">
            <summary>Sets the shim of TrustedRoots.AddJavaKeyStore(JavaKeyStore keystore)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.Deactivate">
            <summary>Sets the shim of TrustedRoots.Deactivate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of TrustedRoots.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of TrustedRoots.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.Dispose">
            <summary>Sets the shim of TrustedRoots.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TrustedRoots.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.EnableEventsGet">
            <summary>Sets the shim of TrustedRoots.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of TrustedRoots.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of TrustedRoots.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of TrustedRoots.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of TrustedRoots.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of TrustedRoots.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of TrustedRoots.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.GetCertInt32">
            <summary>Sets the shim of TrustedRoots.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of TrustedRoots.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of TrustedRoots.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of TrustedRoots.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of TrustedRoots.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LoadCaCertsPemAsyncString">
            <summary>Sets the shim of TrustedRoots.LoadCaCertsPemAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.LoadCaCertsPemString">
            <summary>Sets the shim of TrustedRoots.LoadCaCertsPem(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.NumCertsGet">
            <summary>Sets the shim of TrustedRoots.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnAbortCheckAddTrustedRootsAbortCheckEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnAbortCheckRemoveTrustedRootsAbortCheckEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnBinaryDataAddTrustedRootsBinaryDataEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnBinaryDataRemoveTrustedRootsBinaryDataEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnPercentDoneAddTrustedRootsPercentDoneEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnPercentDoneRemoveTrustedRootsPercentDoneEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnProgressInfoAddTrustedRootsProgressInfoEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnProgressInfoRemoveTrustedRootsProgressInfoEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnTaskCompletedAddTrustedRootsTaskCompletedEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnTaskCompletedRemoveTrustedRootsTaskCompletedEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnTextDataAddTrustedRootsTextDataEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.OnTextDataRemoveTrustedRootsTextDataEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of TrustedRoots.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.ToString01">
            <summary>Sets the shim of TrustedRoots.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.TrustSystemCaRootsGet">
            <summary>Sets the shim of TrustedRoots.get_TrustSystemCaRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.TrustSystemCaRootsSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_TrustSystemCaRoots(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of TrustedRoots.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances.VersionGet">
            <summary>Sets the shim of TrustedRoots.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances._TrustedRoots">
            <summary>Sets the shim of TrustedRoots.!TrustedRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.AllInstances._TrustedRoots01">
            <summary>Sets the shim of TrustedRoots.~TrustedRoots()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTrustedRoots.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTrustedRoots.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimTrustedRoots.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.Constructor">
            <summary>Sets the shim of TrustedRoots.TrustedRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.Deactivate">
            <summary>Sets the shim of TrustedRoots.Deactivate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.DebugLogFilePathGet">
            <summary>Sets the shim of TrustedRoots.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.DebugLogFilePathSetString">
            <summary>Sets the shim of TrustedRoots.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.Dispose">
            <summary>Sets the shim of TrustedRoots.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.DisposeBoolean">
            <summary>Sets the shim of TrustedRoots.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.EnableEventsGet">
            <summary>Sets the shim of TrustedRoots.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.EnableEventsSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of TrustedRoots.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of TrustedRoots.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of TrustedRoots.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of TrustedRoots.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of TrustedRoots.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of TrustedRoots.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.GetCertInt32">
            <summary>Sets the shim of TrustedRoots.GetCert(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LastErrorHtmlGet">
            <summary>Sets the shim of TrustedRoots.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LastErrorTextGet">
            <summary>Sets the shim of TrustedRoots.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LastErrorXmlGet">
            <summary>Sets the shim of TrustedRoots.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LastMethodSuccessGet">
            <summary>Sets the shim of TrustedRoots.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LoadCaCertsPemAsyncString">
            <summary>Sets the shim of TrustedRoots.LoadCaCertsPemAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.LoadCaCertsPemString">
            <summary>Sets the shim of TrustedRoots.LoadCaCertsPem(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.NumCertsGet">
            <summary>Sets the shim of TrustedRoots.get_NumCerts()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnAbortCheckAddTrustedRootsAbortCheckEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnAbortCheckRemoveTrustedRootsAbortCheckEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnBinaryDataAddTrustedRootsBinaryDataEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnBinaryDataRemoveTrustedRootsBinaryDataEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnPercentDoneAddTrustedRootsPercentDoneEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnPercentDoneRemoveTrustedRootsPercentDoneEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnProgressInfoAddTrustedRootsProgressInfoEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnProgressInfoRemoveTrustedRootsProgressInfoEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnTaskCompletedAddTrustedRootsTaskCompletedEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnTaskCompletedRemoveTrustedRootsTaskCompletedEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnTextDataAddTrustedRootsTextDataEventHandler">
            <summary>Sets the shim of TrustedRoots.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of TrustedRoots.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.OnTextDataRemoveTrustedRootsTextDataEventHandler">
            <summary>Sets the shim of TrustedRoots.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.SaveLastErrorString">
            <summary>Sets the shim of TrustedRoots.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.ToString">
            <summary>Sets the shim of TrustedRoots.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.TrustSystemCaRootsGet">
            <summary>Sets the shim of TrustedRoots.get_TrustSystemCaRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.TrustSystemCaRootsSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_TrustSystemCaRoots(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.VerboseLoggingGet">
            <summary>Sets the shim of TrustedRoots.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.VerboseLoggingSetBoolean">
            <summary>Sets the shim of TrustedRoots.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots.VersionGet">
            <summary>Sets the shim of TrustedRoots.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots._TrustedRoots">
            <summary>Sets the shim of TrustedRoots.!TrustedRoots()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimTrustedRoots._TrustedRoots01">
            <summary>Sets the shim of TrustedRoots.~TrustedRoots()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimUnixCompress">
            <summary>Shim type of Chilkat.UnixCompress</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUnixCompress.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUnixCompress.#ctor(Chilkat.UnixCompress)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AbortCurrentGet">
            <summary>Sets the shim of UnixCompress.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AbortCurrentSetBoolean">
            <summary>Sets the shim of UnixCompress.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimUnixCompress.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of UnixCompress.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of UnixCompress.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressFileAsyncStringString">
            <summary>Sets the shim of UnixCompress.CompressFileAsync(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressFileStringString">
            <summary>Sets the shim of UnixCompress.CompressFile(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressFileToMemAsyncString">
            <summary>Sets the shim of UnixCompress.CompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressFileToMemString">
            <summary>Sets the shim of UnixCompress.CompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressMemToFileByteArrayString">
            <summary>Sets the shim of UnixCompress.CompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressMemoryByteArray">
            <summary>Sets the shim of UnixCompress.CompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressStringStringString">
            <summary>Sets the shim of UnixCompress.CompressString(String inStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.CompressStringToFileStringStringString">
            <summary>Sets the shim of UnixCompress.CompressStringToFile(String inStr, String charset, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of UnixCompress.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of UnixCompress.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.Dispose">
            <summary>Sets the shim of UnixCompress.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.DisposeBoolean">
            <summary>Sets the shim of UnixCompress.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.EnableEventsGet">
            <summary>Sets the shim of UnixCompress.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of UnixCompress.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of UnixCompress.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of UnixCompress.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of UnixCompress.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of UnixCompress.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of UnixCompress.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of UnixCompress.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of UnixCompress.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of UnixCompress.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.IsUnlocked">
            <summary>Sets the shim of UnixCompress.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of UnixCompress.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of UnixCompress.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of UnixCompress.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of UnixCompress.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of UnixCompress.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnAbortCheckAddUnixCompressAbortCheckEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnAbortCheckRemoveUnixCompressAbortCheckEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnBinaryDataAddUnixCompressBinaryDataEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnBinaryDataRemoveUnixCompressBinaryDataEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnPercentDoneAddUnixCompressPercentDoneEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnPercentDoneRemoveUnixCompressPercentDoneEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnProgressInfoAddUnixCompressProgressInfoEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnProgressInfoRemoveUnixCompressProgressInfoEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnTaskCompletedAddUnixCompressTaskCompletedEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnTaskCompletedRemoveUnixCompressTaskCompletedEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnTextDataAddUnixCompressTextDataEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.OnTextDataRemoveUnixCompressTextDataEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of UnixCompress.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.ToString01">
            <summary>Sets the shim of UnixCompress.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UnTarZAsyncStringStringBoolean">
            <summary>Sets the shim of UnixCompress.UnTarZAsync(String zFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UnTarZStringStringBoolean">
            <summary>Sets the shim of UnixCompress.UnTarZ(String zFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressFileAsyncStringString">
            <summary>Sets the shim of UnixCompress.UncompressFileAsync(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressFileStringString">
            <summary>Sets the shim of UnixCompress.UncompressFile(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressFileToMemAsyncString">
            <summary>Sets the shim of UnixCompress.UncompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressFileToMemString">
            <summary>Sets the shim of UnixCompress.UncompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressFileToStringAsyncStringString">
            <summary>Sets the shim of UnixCompress.UncompressFileToStringAsync(String zFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressFileToStringStringString">
            <summary>Sets the shim of UnixCompress.UncompressFileToString(String zFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressMemToFileByteArrayString">
            <summary>Sets the shim of UnixCompress.UncompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressMemoryByteArray">
            <summary>Sets the shim of UnixCompress.UncompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UncompressStringByteArrayString">
            <summary>Sets the shim of UnixCompress.UncompressString(Byte[] inCompressedData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.UnlockComponentString">
            <summary>Sets the shim of UnixCompress.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of UnixCompress.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of UnixCompress.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances.VersionGet">
            <summary>Sets the shim of UnixCompress.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances._UnixCompress">
            <summary>Sets the shim of UnixCompress.!UnixCompress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.AllInstances._UnixCompress01">
            <summary>Sets the shim of UnixCompress.~UnixCompress()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUnixCompress.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUnixCompress.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUnixCompress.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressFileAsyncStringString">
            <summary>Sets the shim of UnixCompress.CompressFileAsync(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressFileStringString">
            <summary>Sets the shim of UnixCompress.CompressFile(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressFileToMemAsyncString">
            <summary>Sets the shim of UnixCompress.CompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressFileToMemString">
            <summary>Sets the shim of UnixCompress.CompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressMemToFileByteArrayString">
            <summary>Sets the shim of UnixCompress.CompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressMemoryByteArray">
            <summary>Sets the shim of UnixCompress.CompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressStringStringString">
            <summary>Sets the shim of UnixCompress.CompressString(String inStr, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.CompressStringToFileStringStringString">
            <summary>Sets the shim of UnixCompress.CompressStringToFile(String inStr, String charset, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.Constructor">
            <summary>Sets the shim of UnixCompress.UnixCompress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.DebugLogFilePathGet">
            <summary>Sets the shim of UnixCompress.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.DebugLogFilePathSetString">
            <summary>Sets the shim of UnixCompress.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.Dispose">
            <summary>Sets the shim of UnixCompress.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.DisposeBoolean">
            <summary>Sets the shim of UnixCompress.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.EnableEventsGet">
            <summary>Sets the shim of UnixCompress.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.EnableEventsSetBoolean">
            <summary>Sets the shim of UnixCompress.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of UnixCompress.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of UnixCompress.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of UnixCompress.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of UnixCompress.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of UnixCompress.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of UnixCompress.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.HeartbeatMsGet">
            <summary>Sets the shim of UnixCompress.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.HeartbeatMsSetInt32">
            <summary>Sets the shim of UnixCompress.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.IsUnlocked">
            <summary>Sets the shim of UnixCompress.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.LastErrorHtmlGet">
            <summary>Sets the shim of UnixCompress.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.LastErrorTextGet">
            <summary>Sets the shim of UnixCompress.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.LastErrorXmlGet">
            <summary>Sets the shim of UnixCompress.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.LastMethodSuccessGet">
            <summary>Sets the shim of UnixCompress.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of UnixCompress.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnAbortCheckAddUnixCompressAbortCheckEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnAbortCheckRemoveUnixCompressAbortCheckEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnBinaryDataAddUnixCompressBinaryDataEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnBinaryDataRemoveUnixCompressBinaryDataEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnPercentDoneAddUnixCompressPercentDoneEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnPercentDoneRemoveUnixCompressPercentDoneEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnProgressInfoAddUnixCompressProgressInfoEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnProgressInfoRemoveUnixCompressProgressInfoEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnTaskCompletedAddUnixCompressTaskCompletedEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnTaskCompletedRemoveUnixCompressTaskCompletedEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnTextDataAddUnixCompressTextDataEventHandler">
            <summary>Sets the shim of UnixCompress.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of UnixCompress.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.OnTextDataRemoveUnixCompressTextDataEventHandler">
            <summary>Sets the shim of UnixCompress.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.SaveLastErrorString">
            <summary>Sets the shim of UnixCompress.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.ToString">
            <summary>Sets the shim of UnixCompress.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UnTarZAsyncStringStringBoolean">
            <summary>Sets the shim of UnixCompress.UnTarZAsync(String zFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UnTarZStringStringBoolean">
            <summary>Sets the shim of UnixCompress.UnTarZ(String zFilename, String destDir, Boolean bNoAbsolute)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressFileAsyncStringString">
            <summary>Sets the shim of UnixCompress.UncompressFileAsync(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressFileStringString">
            <summary>Sets the shim of UnixCompress.UncompressFile(String inFilename, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressFileToMemAsyncString">
            <summary>Sets the shim of UnixCompress.UncompressFileToMemAsync(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressFileToMemString">
            <summary>Sets the shim of UnixCompress.UncompressFileToMem(String inFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressFileToStringAsyncStringString">
            <summary>Sets the shim of UnixCompress.UncompressFileToStringAsync(String zFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressFileToStringStringString">
            <summary>Sets the shim of UnixCompress.UncompressFileToString(String zFilename, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressMemToFileByteArrayString">
            <summary>Sets the shim of UnixCompress.UncompressMemToFile(Byte[] inData, String destPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressMemoryByteArray">
            <summary>Sets the shim of UnixCompress.UncompressMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UncompressStringByteArrayString">
            <summary>Sets the shim of UnixCompress.UncompressString(Byte[] inCompressedData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.UnlockComponentString">
            <summary>Sets the shim of UnixCompress.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.VerboseLoggingGet">
            <summary>Sets the shim of UnixCompress.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.VerboseLoggingSetBoolean">
            <summary>Sets the shim of UnixCompress.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress.VersionGet">
            <summary>Sets the shim of UnixCompress.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress._UnixCompress">
            <summary>Sets the shim of UnixCompress.!UnixCompress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUnixCompress._UnixCompress01">
            <summary>Sets the shim of UnixCompress.~UnixCompress()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimUpload">
            <summary>Shim type of Chilkat.Upload</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUpload.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUpload.#ctor(Chilkat.Upload)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AbortCurrentGet">
            <summary>Sets the shim of Upload.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AbortCurrentSetBoolean">
            <summary>Sets the shim of Upload.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AbortUpload">
            <summary>Sets the shim of Upload.AbortUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AddCustomHeaderStringString">
            <summary>Sets the shim of Upload.AddCustomHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AddFileReferenceStringString">
            <summary>Sets the shim of Upload.AddFileReference(String name, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AddParamStringString">
            <summary>Sets the shim of Upload.AddParam(String name, String value)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimUpload.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Upload.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Upload.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.AbortUpload">
            <summary>Sets the shim of Upload.AbortUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.AddCustomHeaderStringString">
            <summary>Sets the shim of Upload.AddCustomHeader(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.AddFileReferenceStringString">
            <summary>Sets the shim of Upload.AddFileReference(String name, String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.AddParamStringString">
            <summary>Sets the shim of Upload.AddParam(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.BandwidthThrottleUpGet">
            <summary>Sets the shim of Upload.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Upload.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.BeginUpload">
            <summary>Sets the shim of Upload.BeginUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.BlockingUpload">
            <summary>Sets the shim of Upload.BlockingUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.BlockingUploadAsync">
            <summary>Sets the shim of Upload.BlockingUploadAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ChunkSizeGet">
            <summary>Sets the shim of Upload.get_ChunkSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ChunkSizeSetInt32">
            <summary>Sets the shim of Upload.set_ChunkSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ClearFileReferences">
            <summary>Sets the shim of Upload.ClearFileReferences()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ClearParams">
            <summary>Sets the shim of Upload.ClearParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ClientIpAddressGet">
            <summary>Sets the shim of Upload.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ClientIpAddressSetString">
            <summary>Sets the shim of Upload.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Upload.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Upload.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.Dispose">
            <summary>Sets the shim of Upload.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Upload.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Upload.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Upload.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.Expect100ContinueGet">
            <summary>Sets the shim of Upload.get_Expect100Continue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.Expect100ContinueSetBoolean">
            <summary>Sets the shim of Upload.set_Expect100Continue(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Upload.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Upload.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Upload.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Upload.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Upload.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Upload.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Upload.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Upload.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.HostnameGet">
            <summary>Sets the shim of Upload.get_Hostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.HostnameSetString">
            <summary>Sets the shim of Upload.set_Hostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of Upload.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Upload.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Upload.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Upload.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Upload.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Upload.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Upload.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LoginGet">
            <summary>Sets the shim of Upload.get_Login()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.LoginSetString">
            <summary>Sets the shim of Upload.set_Login(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.NumBytesSentGet">
            <summary>Sets the shim of Upload.get_NumBytesSent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnAbortCheckAddUploadAbortCheckEventHandler">
            <summary>Sets the shim of Upload.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Upload.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnAbortCheckRemoveUploadAbortCheckEventHandler">
            <summary>Sets the shim of Upload.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnBinaryDataAddUploadBinaryDataEventHandler">
            <summary>Sets the shim of Upload.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Upload.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnBinaryDataRemoveUploadBinaryDataEventHandler">
            <summary>Sets the shim of Upload.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnPercentDoneAddUploadPercentDoneEventHandler">
            <summary>Sets the shim of Upload.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Upload.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnPercentDoneRemoveUploadPercentDoneEventHandler">
            <summary>Sets the shim of Upload.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnProgressInfoAddUploadProgressInfoEventHandler">
            <summary>Sets the shim of Upload.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Upload.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnProgressInfoRemoveUploadProgressInfoEventHandler">
            <summary>Sets the shim of Upload.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnTaskCompletedAddUploadTaskCompletedEventHandler">
            <summary>Sets the shim of Upload.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Upload.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnTaskCompletedRemoveUploadTaskCompletedEventHandler">
            <summary>Sets the shim of Upload.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnTextDataAddUploadTextDataEventHandler">
            <summary>Sets the shim of Upload.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Upload.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.OnTextDataRemoveUploadTextDataEventHandler">
            <summary>Sets the shim of Upload.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PasswordGet">
            <summary>Sets the shim of Upload.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PasswordSetString">
            <summary>Sets the shim of Upload.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PathGet">
            <summary>Sets the shim of Upload.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PathSetString">
            <summary>Sets the shim of Upload.set_Path(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Upload.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Upload.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PercentUploadedGet">
            <summary>Sets the shim of Upload.get_PercentUploaded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PortGet">
            <summary>Sets the shim of Upload.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PortSetInt32">
            <summary>Sets the shim of Upload.set_Port(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PreferIpv6Get">
            <summary>Sets the shim of Upload.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.PreferIpv6SetBoolean">
            <summary>Sets the shim of Upload.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyDomainGet">
            <summary>Sets the shim of Upload.get_ProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyDomainSetString">
            <summary>Sets the shim of Upload.set_ProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyLoginGet">
            <summary>Sets the shim of Upload.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyLoginSetString">
            <summary>Sets the shim of Upload.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyPasswordGet">
            <summary>Sets the shim of Upload.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyPasswordSetString">
            <summary>Sets the shim of Upload.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyPortGet">
            <summary>Sets the shim of Upload.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ProxyPortSetInt32">
            <summary>Sets the shim of Upload.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ResponseBodyGet">
            <summary>Sets the shim of Upload.get_ResponseBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ResponseHeaderGet">
            <summary>Sets the shim of Upload.get_ResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ResponseStatusGet">
            <summary>Sets the shim of Upload.get_ResponseStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Upload.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SleepMsInt32">
            <summary>Sets the shim of Upload.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SslAllowedCiphersGet">
            <summary>Sets the shim of Upload.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SslAllowedCiphersSetString">
            <summary>Sets the shim of Upload.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SslGet">
            <summary>Sets the shim of Upload.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SslProtocolGet">
            <summary>Sets the shim of Upload.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SslProtocolSetString">
            <summary>Sets the shim of Upload.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.SslSetBoolean">
            <summary>Sets the shim of Upload.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.TlsPinSetGet">
            <summary>Sets the shim of Upload.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.TlsPinSetSetString">
            <summary>Sets the shim of Upload.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.ToString01">
            <summary>Sets the shim of Upload.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.TotalUploadSizeGet">
            <summary>Sets the shim of Upload.get_TotalUploadSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.UploadInProgressGet">
            <summary>Sets the shim of Upload.get_UploadInProgress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.UploadSuccessGet">
            <summary>Sets the shim of Upload.get_UploadSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.UploadToMemory">
            <summary>Sets the shim of Upload.UploadToMemory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Upload.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Upload.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances.VersionGet">
            <summary>Sets the shim of Upload.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances._Upload">
            <summary>Sets the shim of Upload.!Upload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.AllInstances._Upload01">
            <summary>Sets the shim of Upload.~Upload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.BandwidthThrottleUpGet">
            <summary>Sets the shim of Upload.get_BandwidthThrottleUp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.BandwidthThrottleUpSetInt32">
            <summary>Sets the shim of Upload.set_BandwidthThrottleUp(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.BeginUpload">
            <summary>Sets the shim of Upload.BeginUpload()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUpload.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUpload.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUpload.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.BlockingUpload">
            <summary>Sets the shim of Upload.BlockingUpload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.BlockingUploadAsync">
            <summary>Sets the shim of Upload.BlockingUploadAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ChunkSizeGet">
            <summary>Sets the shim of Upload.get_ChunkSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ChunkSizeSetInt32">
            <summary>Sets the shim of Upload.set_ChunkSize(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ClearFileReferences">
            <summary>Sets the shim of Upload.ClearFileReferences()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ClearParams">
            <summary>Sets the shim of Upload.ClearParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ClientIpAddressGet">
            <summary>Sets the shim of Upload.get_ClientIpAddress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ClientIpAddressSetString">
            <summary>Sets the shim of Upload.set_ClientIpAddress(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.Constructor">
            <summary>Sets the shim of Upload.Upload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.DebugLogFilePathGet">
            <summary>Sets the shim of Upload.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.DebugLogFilePathSetString">
            <summary>Sets the shim of Upload.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.Dispose">
            <summary>Sets the shim of Upload.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.DisposeBoolean">
            <summary>Sets the shim of Upload.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.EnableEventsGet">
            <summary>Sets the shim of Upload.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.EnableEventsSetBoolean">
            <summary>Sets the shim of Upload.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.Expect100ContinueGet">
            <summary>Sets the shim of Upload.get_Expect100Continue()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.Expect100ContinueSetBoolean">
            <summary>Sets the shim of Upload.set_Expect100Continue(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Upload.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of Upload.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Upload.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Upload.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Upload.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of Upload.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.HeartbeatMsGet">
            <summary>Sets the shim of Upload.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.HeartbeatMsSetInt32">
            <summary>Sets the shim of Upload.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.HostnameGet">
            <summary>Sets the shim of Upload.get_Hostname()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.HostnameSetString">
            <summary>Sets the shim of Upload.set_Hostname(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.IdleTimeoutMsGet">
            <summary>Sets the shim of Upload.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of Upload.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LastErrorHtmlGet">
            <summary>Sets the shim of Upload.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LastErrorTextGet">
            <summary>Sets the shim of Upload.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LastErrorXmlGet">
            <summary>Sets the shim of Upload.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LastMethodSuccessGet">
            <summary>Sets the shim of Upload.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Upload.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LoginGet">
            <summary>Sets the shim of Upload.get_Login()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.LoginSetString">
            <summary>Sets the shim of Upload.set_Login(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.NumBytesSentGet">
            <summary>Sets the shim of Upload.get_NumBytesSent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnAbortCheckAddUploadAbortCheckEventHandler">
            <summary>Sets the shim of Upload.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Upload.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnAbortCheckRemoveUploadAbortCheckEventHandler">
            <summary>Sets the shim of Upload.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnBinaryDataAddUploadBinaryDataEventHandler">
            <summary>Sets the shim of Upload.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of Upload.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnBinaryDataRemoveUploadBinaryDataEventHandler">
            <summary>Sets the shim of Upload.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnPercentDoneAddUploadPercentDoneEventHandler">
            <summary>Sets the shim of Upload.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Upload.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnPercentDoneRemoveUploadPercentDoneEventHandler">
            <summary>Sets the shim of Upload.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnProgressInfoAddUploadProgressInfoEventHandler">
            <summary>Sets the shim of Upload.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Upload.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnProgressInfoRemoveUploadProgressInfoEventHandler">
            <summary>Sets the shim of Upload.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnTaskCompletedAddUploadTaskCompletedEventHandler">
            <summary>Sets the shim of Upload.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Upload.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnTaskCompletedRemoveUploadTaskCompletedEventHandler">
            <summary>Sets the shim of Upload.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnTextDataAddUploadTextDataEventHandler">
            <summary>Sets the shim of Upload.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of Upload.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.OnTextDataRemoveUploadTextDataEventHandler">
            <summary>Sets the shim of Upload.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PasswordGet">
            <summary>Sets the shim of Upload.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PasswordSetString">
            <summary>Sets the shim of Upload.set_Password(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PathGet">
            <summary>Sets the shim of Upload.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PathSetString">
            <summary>Sets the shim of Upload.set_Path(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PercentDoneScaleGet">
            <summary>Sets the shim of Upload.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Upload.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PercentUploadedGet">
            <summary>Sets the shim of Upload.get_PercentUploaded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PortGet">
            <summary>Sets the shim of Upload.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PortSetInt32">
            <summary>Sets the shim of Upload.set_Port(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PreferIpv6Get">
            <summary>Sets the shim of Upload.get_PreferIpv6()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.PreferIpv6SetBoolean">
            <summary>Sets the shim of Upload.set_PreferIpv6(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyDomainGet">
            <summary>Sets the shim of Upload.get_ProxyDomain()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyDomainSetString">
            <summary>Sets the shim of Upload.set_ProxyDomain(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyLoginGet">
            <summary>Sets the shim of Upload.get_ProxyLogin()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyLoginSetString">
            <summary>Sets the shim of Upload.set_ProxyLogin(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyPasswordGet">
            <summary>Sets the shim of Upload.get_ProxyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyPasswordSetString">
            <summary>Sets the shim of Upload.set_ProxyPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyPortGet">
            <summary>Sets the shim of Upload.get_ProxyPort()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ProxyPortSetInt32">
            <summary>Sets the shim of Upload.set_ProxyPort(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ResponseBodyGet">
            <summary>Sets the shim of Upload.get_ResponseBody()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ResponseHeaderGet">
            <summary>Sets the shim of Upload.get_ResponseHeader()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ResponseStatusGet">
            <summary>Sets the shim of Upload.get_ResponseStatus()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SaveLastErrorString">
            <summary>Sets the shim of Upload.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SleepMsInt32">
            <summary>Sets the shim of Upload.SleepMs(Int32 millisec)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SslAllowedCiphersGet">
            <summary>Sets the shim of Upload.get_SslAllowedCiphers()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SslAllowedCiphersSetString">
            <summary>Sets the shim of Upload.set_SslAllowedCiphers(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SslGet">
            <summary>Sets the shim of Upload.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SslProtocolGet">
            <summary>Sets the shim of Upload.get_SslProtocol()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SslProtocolSetString">
            <summary>Sets the shim of Upload.set_SslProtocol(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.SslSetBoolean">
            <summary>Sets the shim of Upload.set_Ssl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.TlsPinSetGet">
            <summary>Sets the shim of Upload.get_TlsPinSet()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.TlsPinSetSetString">
            <summary>Sets the shim of Upload.set_TlsPinSet(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.ToString">
            <summary>Sets the shim of Upload.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.TotalUploadSizeGet">
            <summary>Sets the shim of Upload.get_TotalUploadSize()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.UploadInProgressGet">
            <summary>Sets the shim of Upload.get_UploadInProgress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.UploadSuccessGet">
            <summary>Sets the shim of Upload.get_UploadSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.UploadToMemory">
            <summary>Sets the shim of Upload.UploadToMemory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.VerboseLoggingGet">
            <summary>Sets the shim of Upload.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Upload.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload.VersionGet">
            <summary>Sets the shim of Upload.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload._Upload">
            <summary>Sets the shim of Upload.!Upload()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUpload._Upload01">
            <summary>Sets the shim of Upload.~Upload()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimUrl">
            <summary>Shim type of Chilkat.Url</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUrl.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUrl.#ctor(Chilkat.Url)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimUrl.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.Dispose">
            <summary>Sets the shim of Url.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Url.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.FragGet">
            <summary>Sets the shim of Url.get_Frag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.HostGet">
            <summary>Sets the shim of Url.get_Host()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.HostTypeGet">
            <summary>Sets the shim of Url.get_HostType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Url.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Url.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.LoginGet">
            <summary>Sets the shim of Url.get_Login()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.ParseUrlString">
            <summary>Sets the shim of Url.ParseUrl(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.PasswordGet">
            <summary>Sets the shim of Url.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.PathGet">
            <summary>Sets the shim of Url.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.PathWithQueryParamsGet">
            <summary>Sets the shim of Url.get_PathWithQueryParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.PortGet">
            <summary>Sets the shim of Url.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.QueryGet">
            <summary>Sets the shim of Url.get_Query()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.SslGet">
            <summary>Sets the shim of Url.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances.ToString01">
            <summary>Sets the shim of Url.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances._Url">
            <summary>Sets the shim of Url.!Url()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.AllInstances._Url01">
            <summary>Sets the shim of Url.~Url()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUrl.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUrl.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimUrl.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.Constructor">
            <summary>Sets the shim of Url.Url()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.Dispose">
            <summary>Sets the shim of Url.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.DisposeBoolean">
            <summary>Sets the shim of Url.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.FragGet">
            <summary>Sets the shim of Url.get_Frag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.HostGet">
            <summary>Sets the shim of Url.get_Host()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.HostTypeGet">
            <summary>Sets the shim of Url.get_HostType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.LastMethodSuccessGet">
            <summary>Sets the shim of Url.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Url.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.LoginGet">
            <summary>Sets the shim of Url.get_Login()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.ParseUrlString">
            <summary>Sets the shim of Url.ParseUrl(String url)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.PasswordGet">
            <summary>Sets the shim of Url.get_Password()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.PathGet">
            <summary>Sets the shim of Url.get_Path()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.PathWithQueryParamsGet">
            <summary>Sets the shim of Url.get_PathWithQueryParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.PortGet">
            <summary>Sets the shim of Url.get_Port()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.QueryGet">
            <summary>Sets the shim of Url.get_Query()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.SslGet">
            <summary>Sets the shim of Url.get_Ssl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl.ToString">
            <summary>Sets the shim of Url.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl._Url">
            <summary>Sets the shim of Url.!Url()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimUrl._Url01">
            <summary>Sets the shim of Url.~Url()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimWebSocket">
            <summary>Shim type of Chilkat.WebSocket</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimWebSocket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimWebSocket.#ctor(Chilkat.WebSocket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AddClientHeaders">
            <summary>Sets the shim of WebSocket.AddClientHeaders()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimWebSocket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.AddClientHeaders">
            <summary>Sets the shim of WebSocket.AddClientHeaders()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.CloseAutoRespondGet">
            <summary>Sets the shim of WebSocket.get_CloseAutoRespond()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.CloseAutoRespondSetBoolean">
            <summary>Sets the shim of WebSocket.set_CloseAutoRespond(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.CloseConnection">
            <summary>Sets the shim of WebSocket.CloseConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.CloseReasonGet">
            <summary>Sets the shim of WebSocket.get_CloseReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.CloseReceivedGet">
            <summary>Sets the shim of WebSocket.get_CloseReceived()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.CloseStatusCodeGet">
            <summary>Sets the shim of WebSocket.get_CloseStatusCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of WebSocket.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of WebSocket.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.Dispose">
            <summary>Sets the shim of WebSocket.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.DisposeBoolean">
            <summary>Sets the shim of WebSocket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.EnableEventsGet">
            <summary>Sets the shim of WebSocket.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of WebSocket.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FinalFrameGet">
            <summary>Sets the shim of WebSocket.get_FinalFrame()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of WebSocket.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of WebSocket.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of WebSocket.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of WebSocket.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of WebSocket.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of WebSocket.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FrameDataLenGet">
            <summary>Sets the shim of WebSocket.get_FrameDataLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FrameOpcodeGet">
            <summary>Sets the shim of WebSocket.get_FrameOpcode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.FrameOpcodeIntGet">
            <summary>Sets the shim of WebSocket.get_FrameOpcodeInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.GetFrameData">
            <summary>Sets the shim of WebSocket.GetFrameData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.GetFrameDataBdBinData">
            <summary>Sets the shim of WebSocket.GetFrameDataBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.GetFrameDataSbStringBuilder">
            <summary>Sets the shim of WebSocket.GetFrameDataSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.IdleTimeoutMsGet">
            <summary>Sets the shim of WebSocket.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of WebSocket.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.IsConnectedGet">
            <summary>Sets the shim of WebSocket.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of WebSocket.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of WebSocket.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of WebSocket.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of WebSocket.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of WebSocket.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.NeedSendPongGet">
            <summary>Sets the shim of WebSocket.get_NeedSendPong()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnAbortCheckAddWebSocketAbortCheckEventHandler">
            <summary>Sets the shim of WebSocket.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnAbortCheckRemoveWebSocketAbortCheckEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnBinaryDataAddWebSocketBinaryDataEventHandler">
            <summary>Sets the shim of WebSocket.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnBinaryDataRemoveWebSocketBinaryDataEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnPercentDoneAddWebSocketPercentDoneEventHandler">
            <summary>Sets the shim of WebSocket.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnPercentDoneRemoveWebSocketPercentDoneEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnProgressInfoAddWebSocketProgressInfoEventHandler">
            <summary>Sets the shim of WebSocket.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnProgressInfoRemoveWebSocketProgressInfoEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnTaskCompletedAddWebSocketTaskCompletedEventHandler">
            <summary>Sets the shim of WebSocket.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnTaskCompletedRemoveWebSocketTaskCompletedEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnTextDataAddWebSocketTextDataEventHandler">
            <summary>Sets the shim of WebSocket.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.OnTextDataRemoveWebSocketTextDataEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.PingAutoRespondGet">
            <summary>Sets the shim of WebSocket.get_PingAutoRespond()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.PingAutoRespondSetBoolean">
            <summary>Sets the shim of WebSocket.set_PingAutoRespond(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.PollDataAvailable">
            <summary>Sets the shim of WebSocket.PollDataAvailable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.PongAutoConsumeGet">
            <summary>Sets the shim of WebSocket.get_PongAutoConsume()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.PongAutoConsumeSetBoolean">
            <summary>Sets the shim of WebSocket.set_PongAutoConsume(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.PongConsumedGet">
            <summary>Sets the shim of WebSocket.get_PongConsumed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.ReadFrame">
            <summary>Sets the shim of WebSocket.ReadFrame()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.ReadFrameAsync">
            <summary>Sets the shim of WebSocket.ReadFrameAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.ReadFrameFailReasonGet">
            <summary>Sets the shim of WebSocket.get_ReadFrameFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of WebSocket.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendCloseAsyncBooleanInt32String">
            <summary>Sets the shim of WebSocket.SendCloseAsync(Boolean includeStatus, Int32 statusCode, String reason)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendCloseBooleanInt32String">
            <summary>Sets the shim of WebSocket.SendClose(Boolean includeStatus, Int32 statusCode, String reason)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendFrameAsyncStringBoolean">
            <summary>Sets the shim of WebSocket.SendFrameAsync(String stringToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendFrameBdAsyncBinDataBoolean">
            <summary>Sets the shim of WebSocket.SendFrameBdAsync(BinData bdToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendFrameBdBinDataBoolean">
            <summary>Sets the shim of WebSocket.SendFrameBd(BinData bdToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendFrameSbAsyncStringBuilderBoolean">
            <summary>Sets the shim of WebSocket.SendFrameSbAsync(StringBuilder sbToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendFrameSbStringBuilderBoolean">
            <summary>Sets the shim of WebSocket.SendFrameSb(StringBuilder sbToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendFrameStringBoolean">
            <summary>Sets the shim of WebSocket.SendFrame(String stringToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendPingAsyncString">
            <summary>Sets the shim of WebSocket.SendPingAsync(String pingData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendPingString">
            <summary>Sets the shim of WebSocket.SendPing(String pingData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendPong">
            <summary>Sets the shim of WebSocket.SendPong()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.SendPongAsync">
            <summary>Sets the shim of WebSocket.SendPongAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.ToString01">
            <summary>Sets the shim of WebSocket.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.UseConnectionRest">
            <summary>Sets the shim of WebSocket.UseConnection(Rest connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.ValidateServerHandshake">
            <summary>Sets the shim of WebSocket.ValidateServerHandshake()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of WebSocket.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of WebSocket.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances.VersionGet">
            <summary>Sets the shim of WebSocket.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances._WebSocket">
            <summary>Sets the shim of WebSocket.!WebSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.AllInstances._WebSocket01">
            <summary>Sets the shim of WebSocket.~WebSocket()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimWebSocket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimWebSocket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimWebSocket.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.CloseAutoRespondGet">
            <summary>Sets the shim of WebSocket.get_CloseAutoRespond()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.CloseAutoRespondSetBoolean">
            <summary>Sets the shim of WebSocket.set_CloseAutoRespond(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.CloseConnection">
            <summary>Sets the shim of WebSocket.CloseConnection()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.CloseReasonGet">
            <summary>Sets the shim of WebSocket.get_CloseReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.CloseReceivedGet">
            <summary>Sets the shim of WebSocket.get_CloseReceived()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.CloseStatusCodeGet">
            <summary>Sets the shim of WebSocket.get_CloseStatusCode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.Constructor">
            <summary>Sets the shim of WebSocket.WebSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.DebugLogFilePathGet">
            <summary>Sets the shim of WebSocket.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.DebugLogFilePathSetString">
            <summary>Sets the shim of WebSocket.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.Dispose">
            <summary>Sets the shim of WebSocket.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.DisposeBoolean">
            <summary>Sets the shim of WebSocket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.EnableEventsGet">
            <summary>Sets the shim of WebSocket.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.EnableEventsSetBoolean">
            <summary>Sets the shim of WebSocket.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FinalFrameGet">
            <summary>Sets the shim of WebSocket.get_FinalFrame()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of WebSocket.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of WebSocket.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of WebSocket.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of WebSocket.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of WebSocket.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of WebSocket.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FrameDataLenGet">
            <summary>Sets the shim of WebSocket.get_FrameDataLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FrameOpcodeGet">
            <summary>Sets the shim of WebSocket.get_FrameOpcode()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.FrameOpcodeIntGet">
            <summary>Sets the shim of WebSocket.get_FrameOpcodeInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.GetFrameData">
            <summary>Sets the shim of WebSocket.GetFrameData()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.GetFrameDataBdBinData">
            <summary>Sets the shim of WebSocket.GetFrameDataBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.GetFrameDataSbStringBuilder">
            <summary>Sets the shim of WebSocket.GetFrameDataSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.IdleTimeoutMsGet">
            <summary>Sets the shim of WebSocket.get_IdleTimeoutMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.IdleTimeoutMsSetInt32">
            <summary>Sets the shim of WebSocket.set_IdleTimeoutMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.IsConnectedGet">
            <summary>Sets the shim of WebSocket.get_IsConnected()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.LastErrorHtmlGet">
            <summary>Sets the shim of WebSocket.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.LastErrorTextGet">
            <summary>Sets the shim of WebSocket.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.LastErrorXmlGet">
            <summary>Sets the shim of WebSocket.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.LastMethodSuccessGet">
            <summary>Sets the shim of WebSocket.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of WebSocket.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.NeedSendPongGet">
            <summary>Sets the shim of WebSocket.get_NeedSendPong()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnAbortCheckAddWebSocketAbortCheckEventHandler">
            <summary>Sets the shim of WebSocket.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnAbortCheckRemoveWebSocketAbortCheckEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnBinaryDataAddWebSocketBinaryDataEventHandler">
            <summary>Sets the shim of WebSocket.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnBinaryDataRemoveWebSocketBinaryDataEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnPercentDoneAddWebSocketPercentDoneEventHandler">
            <summary>Sets the shim of WebSocket.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnPercentDoneRemoveWebSocketPercentDoneEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnProgressInfoAddWebSocketProgressInfoEventHandler">
            <summary>Sets the shim of WebSocket.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnProgressInfoRemoveWebSocketProgressInfoEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnTaskCompletedAddWebSocketTaskCompletedEventHandler">
            <summary>Sets the shim of WebSocket.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnTaskCompletedRemoveWebSocketTaskCompletedEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnTextDataAddWebSocketTextDataEventHandler">
            <summary>Sets the shim of WebSocket.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of WebSocket.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.OnTextDataRemoveWebSocketTextDataEventHandler">
            <summary>Sets the shim of WebSocket.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.PingAutoRespondGet">
            <summary>Sets the shim of WebSocket.get_PingAutoRespond()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.PingAutoRespondSetBoolean">
            <summary>Sets the shim of WebSocket.set_PingAutoRespond(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.PollDataAvailable">
            <summary>Sets the shim of WebSocket.PollDataAvailable()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.PongAutoConsumeGet">
            <summary>Sets the shim of WebSocket.get_PongAutoConsume()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.PongAutoConsumeSetBoolean">
            <summary>Sets the shim of WebSocket.set_PongAutoConsume(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.PongConsumedGet">
            <summary>Sets the shim of WebSocket.get_PongConsumed()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.ReadFrame">
            <summary>Sets the shim of WebSocket.ReadFrame()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.ReadFrameAsync">
            <summary>Sets the shim of WebSocket.ReadFrameAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.ReadFrameFailReasonGet">
            <summary>Sets the shim of WebSocket.get_ReadFrameFailReason()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SaveLastErrorString">
            <summary>Sets the shim of WebSocket.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendCloseAsyncBooleanInt32String">
            <summary>Sets the shim of WebSocket.SendCloseAsync(Boolean includeStatus, Int32 statusCode, String reason)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendCloseBooleanInt32String">
            <summary>Sets the shim of WebSocket.SendClose(Boolean includeStatus, Int32 statusCode, String reason)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendFrameAsyncStringBoolean">
            <summary>Sets the shim of WebSocket.SendFrameAsync(String stringToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendFrameBdAsyncBinDataBoolean">
            <summary>Sets the shim of WebSocket.SendFrameBdAsync(BinData bdToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendFrameBdBinDataBoolean">
            <summary>Sets the shim of WebSocket.SendFrameBd(BinData bdToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendFrameSbAsyncStringBuilderBoolean">
            <summary>Sets the shim of WebSocket.SendFrameSbAsync(StringBuilder sbToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendFrameSbStringBuilderBoolean">
            <summary>Sets the shim of WebSocket.SendFrameSb(StringBuilder sbToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendFrameStringBoolean">
            <summary>Sets the shim of WebSocket.SendFrame(String stringToSend, Boolean finalFrame)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendPingAsyncString">
            <summary>Sets the shim of WebSocket.SendPingAsync(String pingData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendPingString">
            <summary>Sets the shim of WebSocket.SendPing(String pingData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendPong">
            <summary>Sets the shim of WebSocket.SendPong()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.SendPongAsync">
            <summary>Sets the shim of WebSocket.SendPongAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.ToString">
            <summary>Sets the shim of WebSocket.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.UseConnectionRest">
            <summary>Sets the shim of WebSocket.UseConnection(Rest connection)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.ValidateServerHandshake">
            <summary>Sets the shim of WebSocket.ValidateServerHandshake()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.VerboseLoggingGet">
            <summary>Sets the shim of WebSocket.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.VerboseLoggingSetBoolean">
            <summary>Sets the shim of WebSocket.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket.VersionGet">
            <summary>Sets the shim of WebSocket.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket._WebSocket">
            <summary>Sets the shim of WebSocket.!WebSocket()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimWebSocket._WebSocket01">
            <summary>Sets the shim of WebSocket.~WebSocket()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXml">
            <summary>Shim type of Chilkat.Xml</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXml.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXml.#ctor(Chilkat.Xml)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AccumulateTagContentStringString">
            <summary>Sets the shim of Xml.AccumulateTagContent(String tag, String skipTags)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddAttributeIntStringInt32">
            <summary>Sets the shim of Xml.AddAttributeInt(String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddAttributeStringString">
            <summary>Sets the shim of Xml.AddAttribute(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddChildTreeXml">
            <summary>Sets the shim of Xml.AddChildTree(Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddOrUpdateAttributeIStringInt32">
            <summary>Sets the shim of Xml.AddOrUpdateAttributeI(String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddOrUpdateAttributeStringString">
            <summary>Sets the shim of Xml.AddOrUpdateAttribute(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddStyleSheetString">
            <summary>Sets the shim of Xml.AddStyleSheet(String styleSheet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddToAttributeStringInt32">
            <summary>Sets the shim of Xml.AddToAttribute(String name, Int32 amount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddToChildContentStringInt32">
            <summary>Sets the shim of Xml.AddToChildContent(String tag, Int32 amount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AddToContentInt32">
            <summary>Sets the shim of Xml.AddToContent(Int32 amount)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXml.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AccumulateTagContentStringString">
            <summary>Sets the shim of Xml.AccumulateTagContent(String tag, String skipTags)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddAttributeIntStringInt32">
            <summary>Sets the shim of Xml.AddAttributeInt(String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddAttributeStringString">
            <summary>Sets the shim of Xml.AddAttribute(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddChildTreeXml">
            <summary>Sets the shim of Xml.AddChildTree(Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddOrUpdateAttributeIStringInt32">
            <summary>Sets the shim of Xml.AddOrUpdateAttributeI(String name, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddOrUpdateAttributeStringString">
            <summary>Sets the shim of Xml.AddOrUpdateAttribute(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddStyleSheetString">
            <summary>Sets the shim of Xml.AddStyleSheet(String styleSheet)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddToAttributeStringInt32">
            <summary>Sets the shim of Xml.AddToAttribute(String name, Int32 amount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddToChildContentStringInt32">
            <summary>Sets the shim of Xml.AddToChildContent(String tag, Int32 amount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AddToContentInt32">
            <summary>Sets the shim of Xml.AddToContent(Int32 amount)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.AppendToContentString">
            <summary>Sets the shim of Xml.AppendToContent(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.BEncodeContentStringByteArray">
            <summary>Sets the shim of Xml.BEncodeContent(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.CdataGet">
            <summary>Sets the shim of Xml.get_Cdata()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.CdataSetBoolean">
            <summary>Sets the shim of Xml.set_Cdata(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ChildContentMatchesStringStringBoolean">
            <summary>Sets the shim of Xml.ChildContentMatches(String tagPath, String pattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ChilkatPathString">
            <summary>Sets the shim of Xml.ChilkatPath(String pathCmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.Clear">
            <summary>Sets the shim of Xml.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ContentGet">
            <summary>Sets the shim of Xml.get_Content()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ContentIntGet">
            <summary>Sets the shim of Xml.get_ContentInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ContentIntSetInt32">
            <summary>Sets the shim of Xml.set_ContentInt(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ContentMatchesStringBoolean">
            <summary>Sets the shim of Xml.ContentMatches(String pattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ContentSetString">
            <summary>Sets the shim of Xml.set_Content(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.CopyRefXml">
            <summary>Sets the shim of Xml.CopyRef(Xml copyFromNode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.CopyXml">
            <summary>Sets the shim of Xml.Copy(Xml node)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Xml.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Xml.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DecodeContent">
            <summary>Sets the shim of Xml.DecodeContent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DecodeEntitiesString">
            <summary>Sets the shim of Xml.DecodeEntities(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DecryptContentString">
            <summary>Sets the shim of Xml.DecryptContent(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.Dispose">
            <summary>Sets the shim of Xml.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Xml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DocTypeGet">
            <summary>Sets the shim of Xml.get_DocType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.DocTypeSetString">
            <summary>Sets the shim of Xml.set_DocType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EmitBomGet">
            <summary>Sets the shim of Xml.get_EmitBom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EmitBomSetBoolean">
            <summary>Sets the shim of Xml.set_EmitBom(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EmitCompactGet">
            <summary>Sets the shim of Xml.get_EmitCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EmitCompactSetBoolean">
            <summary>Sets the shim of Xml.set_EmitCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EmitXmlDeclGet">
            <summary>Sets the shim of Xml.get_EmitXmlDecl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EmitXmlDeclSetBoolean">
            <summary>Sets the shim of Xml.set_EmitXmlDecl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EncodingGet">
            <summary>Sets the shim of Xml.get_Encoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EncodingSetString">
            <summary>Sets the shim of Xml.set_Encoding(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.EncryptContentString">
            <summary>Sets the shim of Xml.EncryptContent(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ExtractChildByIndexInt32">
            <summary>Sets the shim of Xml.ExtractChildByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ExtractChildByNameStringStringString">
            <summary>Sets the shim of Xml.ExtractChildByName(String tagPath, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.FindChild2String">
            <summary>Sets the shim of Xml.FindChild2(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.FindChildString">
            <summary>Sets the shim of Xml.FindChild(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.FindNextRecordStringString">
            <summary>Sets the shim of Xml.FindNextRecord(String tagPath, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.FindOrAddNewChildString">
            <summary>Sets the shim of Xml.FindOrAddNewChild(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.FirstChild">
            <summary>Sets the shim of Xml.FirstChild()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.FirstChild2">
            <summary>Sets the shim of Xml.FirstChild2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetAttrValueIntString">
            <summary>Sets the shim of Xml.GetAttrValueInt(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetAttrValueString">
            <summary>Sets the shim of Xml.GetAttrValue(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetAttributeNameInt32">
            <summary>Sets the shim of Xml.GetAttributeName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetAttributeValueInt32">
            <summary>Sets the shim of Xml.GetAttributeValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetAttributeValueIntInt32">
            <summary>Sets the shim of Xml.GetAttributeValueInt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetBinaryContentBooleanBooleanString">
            <summary>Sets the shim of Xml.GetBinaryContent(Boolean unzipFlag, Boolean decryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChild2Int32">
            <summary>Sets the shim of Xml.GetChild2(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildBoolValueString">
            <summary>Sets the shim of Xml.GetChildBoolValue(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildContentByIndexInt32">
            <summary>Sets the shim of Xml.GetChildContentByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildContentString">
            <summary>Sets the shim of Xml.GetChildContent(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildExactStringString">
            <summary>Sets the shim of Xml.GetChildExact(String tag, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildInt32">
            <summary>Sets the shim of Xml.GetChild(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildIntValueString">
            <summary>Sets the shim of Xml.GetChildIntValue(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildTagByIndexInt32">
            <summary>Sets the shim of Xml.GetChildTagByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildTagInt32">
            <summary>Sets the shim of Xml.GetChildTag(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildWithAttrStringStringString">
            <summary>Sets the shim of Xml.GetChildWithAttr(String tagPath, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildWithContentString">
            <summary>Sets the shim of Xml.GetChildWithContent(String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetChildWithTagString">
            <summary>Sets the shim of Xml.GetChildWithTag(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetNthChildWithTag2StringInt32">
            <summary>Sets the shim of Xml.GetNthChildWithTag2(String tag, Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetNthChildWithTagStringInt32">
            <summary>Sets the shim of Xml.GetNthChildWithTag(String tag, Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetParent">
            <summary>Sets the shim of Xml.GetParent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetParent2">
            <summary>Sets the shim of Xml.GetParent2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetRoot">
            <summary>Sets the shim of Xml.GetRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetRoot2">
            <summary>Sets the shim of Xml.GetRoot2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetSelf">
            <summary>Sets the shim of Xml.GetSelf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetXml">
            <summary>Sets the shim of Xml.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.GetXmlSbStringBuilder">
            <summary>Sets the shim of Xml.GetXmlSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.HasAttrWithValueStringString">
            <summary>Sets the shim of Xml.HasAttrWithValue(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.HasAttributeString">
            <summary>Sets the shim of Xml.HasAttribute(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.HasChildWithContentString">
            <summary>Sets the shim of Xml.HasChildWithContent(String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.HasChildWithTagAndContentStringString">
            <summary>Sets the shim of Xml.HasChildWithTagAndContent(String tagPath, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.HasChildWithTagString">
            <summary>Sets the shim of Xml.HasChildWithTag(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.IGet">
            <summary>Sets the shim of Xml.get_I()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ISetInt32">
            <summary>Sets the shim of Xml.set_I(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.InsertChildTreeAfterInt32Xml">
            <summary>Sets the shim of Xml.InsertChildTreeAfter(Int32 index, Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.InsertChildTreeBeforeInt32Xml">
            <summary>Sets the shim of Xml.InsertChildTreeBefore(Int32 index, Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.JGet">
            <summary>Sets the shim of Xml.get_J()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.JSetInt32">
            <summary>Sets the shim of Xml.set_J(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.KGet">
            <summary>Sets the shim of Xml.get_K()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.KSetInt32">
            <summary>Sets the shim of Xml.set_K(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastChild">
            <summary>Sets the shim of Xml.LastChild()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastChild2">
            <summary>Sets the shim of Xml.LastChild2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Xml.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Xml.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Xml.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Xml.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Xml.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LoadSbStringBuilderBoolean">
            <summary>Sets the shim of Xml.LoadSb(StringBuilder sb, Boolean autoTrim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LoadXml2StringBoolean">
            <summary>Sets the shim of Xml.LoadXml2(String xmlData, Boolean autoTrim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LoadXmlFile2StringBoolean">
            <summary>Sets the shim of Xml.LoadXmlFile2(String fileName, Boolean autoTrim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LoadXmlFileString">
            <summary>Sets the shim of Xml.LoadXmlFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.LoadXmlString">
            <summary>Sets the shim of Xml.LoadXml(String xmlData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NewChild2StringString">
            <summary>Sets the shim of Xml.NewChild2(String tagPath, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NewChildAfterInt32StringString">
            <summary>Sets the shim of Xml.NewChildAfter(Int32 index, String tag, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NewChildBeforeInt32StringString">
            <summary>Sets the shim of Xml.NewChildBefore(Int32 index, String tag, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NewChildInt2StringInt32">
            <summary>Sets the shim of Xml.NewChildInt2(String tagPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NewChildStringString">
            <summary>Sets the shim of Xml.NewChild(String tagPath, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NextSibling">
            <summary>Sets the shim of Xml.NextSibling()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NextSibling2">
            <summary>Sets the shim of Xml.NextSibling2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NumAttributesGet">
            <summary>Sets the shim of Xml.get_NumAttributes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NumChildrenAtString">
            <summary>Sets the shim of Xml.NumChildrenAt(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NumChildrenGet">
            <summary>Sets the shim of Xml.get_NumChildren()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.NumChildrenHavingTagString">
            <summary>Sets the shim of Xml.NumChildrenHavingTag(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.PreviousSibling">
            <summary>Sets the shim of Xml.PreviousSibling()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.PreviousSibling2">
            <summary>Sets the shim of Xml.PreviousSibling2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.QEncodeContentStringByteArray">
            <summary>Sets the shim of Xml.QEncodeContent(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveAllAttributes">
            <summary>Sets the shim of Xml.RemoveAllAttributes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveAllChildren">
            <summary>Sets the shim of Xml.RemoveAllChildren()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveAttributeString">
            <summary>Sets the shim of Xml.RemoveAttribute(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveChildByIndexInt32">
            <summary>Sets the shim of Xml.RemoveChildByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveChildString">
            <summary>Sets the shim of Xml.RemoveChild(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveChildWithContentString">
            <summary>Sets the shim of Xml.RemoveChildWithContent(String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.RemoveFromTree">
            <summary>Sets the shim of Xml.RemoveFromTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SaveBinaryContentStringBooleanBooleanString">
            <summary>Sets the shim of Xml.SaveBinaryContent(String filename, Boolean unzipFlag, Boolean decryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Xml.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SaveXmlString">
            <summary>Sets the shim of Xml.SaveXml(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchAllForContent2XmlString">
            <summary>Sets the shim of Xml.SearchAllForContent2(Xml afterPtr, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchAllForContentXmlString">
            <summary>Sets the shim of Xml.SearchAllForContent(Xml afterPtr, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchForAttribute2XmlStringStringString">
            <summary>Sets the shim of Xml.SearchForAttribute2(Xml afterPtr, String tag, String attr, String valuePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchForAttributeXmlStringStringString">
            <summary>Sets the shim of Xml.SearchForAttribute(Xml afterPtr, String tag, String attr, String valuePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchForContent2XmlStringString">
            <summary>Sets the shim of Xml.SearchForContent2(Xml afterPtr, String tag, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchForContentXmlStringString">
            <summary>Sets the shim of Xml.SearchForContent(Xml afterPtr, String tag, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchForTag2XmlString">
            <summary>Sets the shim of Xml.SearchForTag2(Xml afterPtr, String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SearchForTagXmlString">
            <summary>Sets the shim of Xml.SearchForTag(Xml afterPtr, String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SetBinaryContentByteArrayBooleanBooleanString">
            <summary>Sets the shim of Xml.SetBinaryContent(Byte[] inData, Boolean zipFlag, Boolean encryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SetBinaryContentFromFileStringBooleanBooleanString">
            <summary>Sets the shim of Xml.SetBinaryContentFromFile(String filename, Boolean zipFlag, Boolean encryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortByAttributeIntStringBoolean">
            <summary>Sets the shim of Xml.SortByAttributeInt(String attrName, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortByAttributeStringBoolean">
            <summary>Sets the shim of Xml.SortByAttribute(String attrName, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortByContentBoolean">
            <summary>Sets the shim of Xml.SortByContent(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortByTagBoolean">
            <summary>Sets the shim of Xml.SortByTag(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortCaseInsensitiveGet">
            <summary>Sets the shim of Xml.get_SortCaseInsensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortCaseInsensitiveSetBoolean">
            <summary>Sets the shim of Xml.set_SortCaseInsensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortRecordsByAttributeStringStringBoolean">
            <summary>Sets the shim of Xml.SortRecordsByAttribute(String sortTag, String attrName, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortRecordsByContentIntStringBoolean">
            <summary>Sets the shim of Xml.SortRecordsByContentInt(String sortTag, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SortRecordsByContentStringBoolean">
            <summary>Sets the shim of Xml.SortRecordsByContent(String sortTag, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.StandaloneGet">
            <summary>Sets the shim of Xml.get_Standalone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.StandaloneSetBoolean">
            <summary>Sets the shim of Xml.set_Standalone(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SwapNodeXml">
            <summary>Sets the shim of Xml.SwapNode(Xml node)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.SwapTreeXml">
            <summary>Sets the shim of Xml.SwapTree(Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.TagContentString">
            <summary>Sets the shim of Xml.TagContent(String tagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.TagEqualsString">
            <summary>Sets the shim of Xml.TagEquals(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.TagGet">
            <summary>Sets the shim of Xml.get_Tag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.TagSetString">
            <summary>Sets the shim of Xml.set_Tag(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ToString01">
            <summary>Sets the shim of Xml.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.TreeIdGet">
            <summary>Sets the shim of Xml.get_TreeId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UnzipContent">
            <summary>Sets the shim of Xml.UnzipContent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UnzipTree">
            <summary>Sets the shim of Xml.UnzipTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UpdateAtStringBooleanString">
            <summary>Sets the shim of Xml.UpdateAt(String tagPath, Boolean autoCreate, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UpdateAttrAtStringBooleanStringString">
            <summary>Sets the shim of Xml.UpdateAttrAt(String tagPath, Boolean autoCreate, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UpdateAttributeIntStringInt32">
            <summary>Sets the shim of Xml.UpdateAttributeInt(String attrName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UpdateAttributeStringString">
            <summary>Sets the shim of Xml.UpdateAttribute(String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UpdateChildContentIntStringInt32">
            <summary>Sets the shim of Xml.UpdateChildContentInt(String tagPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.UpdateChildContentStringString">
            <summary>Sets the shim of Xml.UpdateChildContent(String tagPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Xml.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Xml.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.VersionGet">
            <summary>Sets the shim of Xml.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ZipContent">
            <summary>Sets the shim of Xml.ZipContent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances.ZipTree">
            <summary>Sets the shim of Xml.ZipTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances._Xml">
            <summary>Sets the shim of Xml.!Xml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AllInstances._Xml01">
            <summary>Sets the shim of Xml.~Xml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.AppendToContentString">
            <summary>Sets the shim of Xml.AppendToContent(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.BEncodeContentStringByteArray">
            <summary>Sets the shim of Xml.BEncodeContent(String charset, Byte[] inData)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXml.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXml.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXml.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.CdataGet">
            <summary>Sets the shim of Xml.get_Cdata()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.CdataSetBoolean">
            <summary>Sets the shim of Xml.set_Cdata(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ChildContentMatchesStringStringBoolean">
            <summary>Sets the shim of Xml.ChildContentMatches(String tagPath, String pattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ChilkatPathString">
            <summary>Sets the shim of Xml.ChilkatPath(String pathCmd)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.Clear">
            <summary>Sets the shim of Xml.Clear()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.Constructor">
            <summary>Sets the shim of Xml.Xml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ContentGet">
            <summary>Sets the shim of Xml.get_Content()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ContentIntGet">
            <summary>Sets the shim of Xml.get_ContentInt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ContentIntSetInt32">
            <summary>Sets the shim of Xml.set_ContentInt(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ContentMatchesStringBoolean">
            <summary>Sets the shim of Xml.ContentMatches(String pattern, Boolean caseSensitive)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ContentSetString">
            <summary>Sets the shim of Xml.set_Content(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.CopyRefXml">
            <summary>Sets the shim of Xml.CopyRef(Xml copyFromNode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.CopyXml">
            <summary>Sets the shim of Xml.Copy(Xml node)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DebugLogFilePathGet">
            <summary>Sets the shim of Xml.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DebugLogFilePathSetString">
            <summary>Sets the shim of Xml.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DecodeContent">
            <summary>Sets the shim of Xml.DecodeContent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DecodeEntitiesString">
            <summary>Sets the shim of Xml.DecodeEntities(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DecryptContentString">
            <summary>Sets the shim of Xml.DecryptContent(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.Dispose">
            <summary>Sets the shim of Xml.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DisposeBoolean">
            <summary>Sets the shim of Xml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DocTypeGet">
            <summary>Sets the shim of Xml.get_DocType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.DocTypeSetString">
            <summary>Sets the shim of Xml.set_DocType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EmitBomGet">
            <summary>Sets the shim of Xml.get_EmitBom()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EmitBomSetBoolean">
            <summary>Sets the shim of Xml.set_EmitBom(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EmitCompactGet">
            <summary>Sets the shim of Xml.get_EmitCompact()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EmitCompactSetBoolean">
            <summary>Sets the shim of Xml.set_EmitCompact(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EmitXmlDeclGet">
            <summary>Sets the shim of Xml.get_EmitXmlDecl()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EmitXmlDeclSetBoolean">
            <summary>Sets the shim of Xml.set_EmitXmlDecl(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EncodingGet">
            <summary>Sets the shim of Xml.get_Encoding()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EncodingSetString">
            <summary>Sets the shim of Xml.set_Encoding(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.EncryptContentString">
            <summary>Sets the shim of Xml.EncryptContent(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ExtractChildByIndexInt32">
            <summary>Sets the shim of Xml.ExtractChildByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ExtractChildByNameStringStringString">
            <summary>Sets the shim of Xml.ExtractChildByName(String tagPath, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.FindChild2String">
            <summary>Sets the shim of Xml.FindChild2(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.FindChildString">
            <summary>Sets the shim of Xml.FindChild(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.FindNextRecordStringString">
            <summary>Sets the shim of Xml.FindNextRecord(String tagPath, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.FindOrAddNewChildString">
            <summary>Sets the shim of Xml.FindOrAddNewChild(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.FirstChild">
            <summary>Sets the shim of Xml.FirstChild()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.FirstChild2">
            <summary>Sets the shim of Xml.FirstChild2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetAttrValueIntString">
            <summary>Sets the shim of Xml.GetAttrValueInt(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetAttrValueString">
            <summary>Sets the shim of Xml.GetAttrValue(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetAttributeNameInt32">
            <summary>Sets the shim of Xml.GetAttributeName(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetAttributeValueInt32">
            <summary>Sets the shim of Xml.GetAttributeValue(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetAttributeValueIntInt32">
            <summary>Sets the shim of Xml.GetAttributeValueInt(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetBinaryContentBooleanBooleanString">
            <summary>Sets the shim of Xml.GetBinaryContent(Boolean unzipFlag, Boolean decryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChild2Int32">
            <summary>Sets the shim of Xml.GetChild2(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildBoolValueString">
            <summary>Sets the shim of Xml.GetChildBoolValue(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildContentByIndexInt32">
            <summary>Sets the shim of Xml.GetChildContentByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildContentString">
            <summary>Sets the shim of Xml.GetChildContent(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildExactStringString">
            <summary>Sets the shim of Xml.GetChildExact(String tag, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildInt32">
            <summary>Sets the shim of Xml.GetChild(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildIntValueString">
            <summary>Sets the shim of Xml.GetChildIntValue(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildTagByIndexInt32">
            <summary>Sets the shim of Xml.GetChildTagByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildTagInt32">
            <summary>Sets the shim of Xml.GetChildTag(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildWithAttrStringStringString">
            <summary>Sets the shim of Xml.GetChildWithAttr(String tagPath, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildWithContentString">
            <summary>Sets the shim of Xml.GetChildWithContent(String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetChildWithTagString">
            <summary>Sets the shim of Xml.GetChildWithTag(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetNthChildWithTag2StringInt32">
            <summary>Sets the shim of Xml.GetNthChildWithTag2(String tag, Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetNthChildWithTagStringInt32">
            <summary>Sets the shim of Xml.GetNthChildWithTag(String tag, Int32 n)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetParent">
            <summary>Sets the shim of Xml.GetParent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetParent2">
            <summary>Sets the shim of Xml.GetParent2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetRoot">
            <summary>Sets the shim of Xml.GetRoot()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetRoot2">
            <summary>Sets the shim of Xml.GetRoot2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetSelf">
            <summary>Sets the shim of Xml.GetSelf()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetXml">
            <summary>Sets the shim of Xml.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.GetXmlSbStringBuilder">
            <summary>Sets the shim of Xml.GetXmlSb(StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.HasAttrWithValueStringString">
            <summary>Sets the shim of Xml.HasAttrWithValue(String name, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.HasAttributeString">
            <summary>Sets the shim of Xml.HasAttribute(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.HasChildWithContentString">
            <summary>Sets the shim of Xml.HasChildWithContent(String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.HasChildWithTagAndContentStringString">
            <summary>Sets the shim of Xml.HasChildWithTagAndContent(String tagPath, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.HasChildWithTagString">
            <summary>Sets the shim of Xml.HasChildWithTag(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.IGet">
            <summary>Sets the shim of Xml.get_I()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ISetInt32">
            <summary>Sets the shim of Xml.set_I(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.InsertChildTreeAfterInt32Xml">
            <summary>Sets the shim of Xml.InsertChildTreeAfter(Int32 index, Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.InsertChildTreeBeforeInt32Xml">
            <summary>Sets the shim of Xml.InsertChildTreeBefore(Int32 index, Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.JGet">
            <summary>Sets the shim of Xml.get_J()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.JSetInt32">
            <summary>Sets the shim of Xml.set_J(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.KGet">
            <summary>Sets the shim of Xml.get_K()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.KSetInt32">
            <summary>Sets the shim of Xml.set_K(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastChild">
            <summary>Sets the shim of Xml.LastChild()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastChild2">
            <summary>Sets the shim of Xml.LastChild2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastErrorHtmlGet">
            <summary>Sets the shim of Xml.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastErrorTextGet">
            <summary>Sets the shim of Xml.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastErrorXmlGet">
            <summary>Sets the shim of Xml.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastMethodSuccessGet">
            <summary>Sets the shim of Xml.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Xml.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LoadSbStringBuilderBoolean">
            <summary>Sets the shim of Xml.LoadSb(StringBuilder sb, Boolean autoTrim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LoadXml2StringBoolean">
            <summary>Sets the shim of Xml.LoadXml2(String xmlData, Boolean autoTrim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LoadXmlFile2StringBoolean">
            <summary>Sets the shim of Xml.LoadXmlFile2(String fileName, Boolean autoTrim)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LoadXmlFileString">
            <summary>Sets the shim of Xml.LoadXmlFile(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.LoadXmlString">
            <summary>Sets the shim of Xml.LoadXml(String xmlData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NewChild2StringString">
            <summary>Sets the shim of Xml.NewChild2(String tagPath, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NewChildAfterInt32StringString">
            <summary>Sets the shim of Xml.NewChildAfter(Int32 index, String tag, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NewChildBeforeInt32StringString">
            <summary>Sets the shim of Xml.NewChildBefore(Int32 index, String tag, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NewChildInt2StringInt32">
            <summary>Sets the shim of Xml.NewChildInt2(String tagPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NewChildStringString">
            <summary>Sets the shim of Xml.NewChild(String tagPath, String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NextSibling">
            <summary>Sets the shim of Xml.NextSibling()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NextSibling2">
            <summary>Sets the shim of Xml.NextSibling2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NumAttributesGet">
            <summary>Sets the shim of Xml.get_NumAttributes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NumChildrenAtString">
            <summary>Sets the shim of Xml.NumChildrenAt(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NumChildrenGet">
            <summary>Sets the shim of Xml.get_NumChildren()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.NumChildrenHavingTagString">
            <summary>Sets the shim of Xml.NumChildrenHavingTag(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.PreviousSibling">
            <summary>Sets the shim of Xml.PreviousSibling()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.PreviousSibling2">
            <summary>Sets the shim of Xml.PreviousSibling2()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.QEncodeContentStringByteArray">
            <summary>Sets the shim of Xml.QEncodeContent(String charset, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveAllAttributes">
            <summary>Sets the shim of Xml.RemoveAllAttributes()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveAllChildren">
            <summary>Sets the shim of Xml.RemoveAllChildren()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveAttributeString">
            <summary>Sets the shim of Xml.RemoveAttribute(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveChildByIndexInt32">
            <summary>Sets the shim of Xml.RemoveChildByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveChildString">
            <summary>Sets the shim of Xml.RemoveChild(String tagPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveChildWithContentString">
            <summary>Sets the shim of Xml.RemoveChildWithContent(String content)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.RemoveFromTree">
            <summary>Sets the shim of Xml.RemoveFromTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SaveBinaryContentStringBooleanBooleanString">
            <summary>Sets the shim of Xml.SaveBinaryContent(String filename, Boolean unzipFlag, Boolean decryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SaveLastErrorString">
            <summary>Sets the shim of Xml.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SaveXmlString">
            <summary>Sets the shim of Xml.SaveXml(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchAllForContent2XmlString">
            <summary>Sets the shim of Xml.SearchAllForContent2(Xml afterPtr, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchAllForContentXmlString">
            <summary>Sets the shim of Xml.SearchAllForContent(Xml afterPtr, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchForAttribute2XmlStringStringString">
            <summary>Sets the shim of Xml.SearchForAttribute2(Xml afterPtr, String tag, String attr, String valuePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchForAttributeXmlStringStringString">
            <summary>Sets the shim of Xml.SearchForAttribute(Xml afterPtr, String tag, String attr, String valuePattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchForContent2XmlStringString">
            <summary>Sets the shim of Xml.SearchForContent2(Xml afterPtr, String tag, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchForContentXmlStringString">
            <summary>Sets the shim of Xml.SearchForContent(Xml afterPtr, String tag, String contentPattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchForTag2XmlString">
            <summary>Sets the shim of Xml.SearchForTag2(Xml afterPtr, String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SearchForTagXmlString">
            <summary>Sets the shim of Xml.SearchForTag(Xml afterPtr, String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SetBinaryContentByteArrayBooleanBooleanString">
            <summary>Sets the shim of Xml.SetBinaryContent(Byte[] inData, Boolean zipFlag, Boolean encryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SetBinaryContentFromFileStringBooleanBooleanString">
            <summary>Sets the shim of Xml.SetBinaryContentFromFile(String filename, Boolean zipFlag, Boolean encryptFlag, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortByAttributeIntStringBoolean">
            <summary>Sets the shim of Xml.SortByAttributeInt(String attrName, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortByAttributeStringBoolean">
            <summary>Sets the shim of Xml.SortByAttribute(String attrName, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortByContentBoolean">
            <summary>Sets the shim of Xml.SortByContent(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortByTagBoolean">
            <summary>Sets the shim of Xml.SortByTag(Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortCaseInsensitiveGet">
            <summary>Sets the shim of Xml.get_SortCaseInsensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortCaseInsensitiveSetBoolean">
            <summary>Sets the shim of Xml.set_SortCaseInsensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortRecordsByAttributeStringStringBoolean">
            <summary>Sets the shim of Xml.SortRecordsByAttribute(String sortTag, String attrName, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortRecordsByContentIntStringBoolean">
            <summary>Sets the shim of Xml.SortRecordsByContentInt(String sortTag, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SortRecordsByContentStringBoolean">
            <summary>Sets the shim of Xml.SortRecordsByContent(String sortTag, Boolean ascending)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.StandaloneGet">
            <summary>Sets the shim of Xml.get_Standalone()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.StandaloneSetBoolean">
            <summary>Sets the shim of Xml.set_Standalone(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SwapNodeXml">
            <summary>Sets the shim of Xml.SwapNode(Xml node)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.SwapTreeXml">
            <summary>Sets the shim of Xml.SwapTree(Xml tree)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.TagContentString">
            <summary>Sets the shim of Xml.TagContent(String tagName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.TagEqualsString">
            <summary>Sets the shim of Xml.TagEquals(String tag)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.TagGet">
            <summary>Sets the shim of Xml.get_Tag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.TagSetString">
            <summary>Sets the shim of Xml.set_Tag(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ToString">
            <summary>Sets the shim of Xml.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.TreeIdGet">
            <summary>Sets the shim of Xml.get_TreeId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UnzipContent">
            <summary>Sets the shim of Xml.UnzipContent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UnzipTree">
            <summary>Sets the shim of Xml.UnzipTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UpdateAtStringBooleanString">
            <summary>Sets the shim of Xml.UpdateAt(String tagPath, Boolean autoCreate, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UpdateAttrAtStringBooleanStringString">
            <summary>Sets the shim of Xml.UpdateAttrAt(String tagPath, Boolean autoCreate, String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UpdateAttributeIntStringInt32">
            <summary>Sets the shim of Xml.UpdateAttributeInt(String attrName, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UpdateAttributeStringString">
            <summary>Sets the shim of Xml.UpdateAttribute(String attrName, String attrValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UpdateChildContentIntStringInt32">
            <summary>Sets the shim of Xml.UpdateChildContentInt(String tagPath, Int32 value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.UpdateChildContentStringString">
            <summary>Sets the shim of Xml.UpdateChildContent(String tagPath, String value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.VerboseLoggingGet">
            <summary>Sets the shim of Xml.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Xml.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.VersionGet">
            <summary>Sets the shim of Xml.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ZipContent">
            <summary>Sets the shim of Xml.ZipContent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml.ZipTree">
            <summary>Sets the shim of Xml.ZipTree()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml._Xml">
            <summary>Sets the shim of Xml.!Xml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXml._Xml01">
            <summary>Sets the shim of Xml.~Xml()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmlCertVault">
            <summary>Shim type of Chilkat.XmlCertVault</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlCertVault.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlCertVault.#ctor(Chilkat.XmlCertVault)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddCertBinaryByteArray">
            <summary>Sets the shim of XmlCertVault.AddCertBinary(Byte[] certBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddCertCert">
            <summary>Sets the shim of XmlCertVault.AddCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddCertChainCertChain">
            <summary>Sets the shim of XmlCertVault.AddCertChain(CertChain certChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddCertEncodedStringString">
            <summary>Sets the shim of XmlCertVault.AddCertEncoded(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddCertFileString">
            <summary>Sets the shim of XmlCertVault.AddCertFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddCertStringString">
            <summary>Sets the shim of XmlCertVault.AddCertString(String certData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddPemFileStringString">
            <summary>Sets the shim of XmlCertVault.AddPemFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddPfxBinaryByteArrayString">
            <summary>Sets the shim of XmlCertVault.AddPfxBinary(Byte[] pfxBytes, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddPfxEncodedStringStringString">
            <summary>Sets the shim of XmlCertVault.AddPfxEncoded(String encodedBytes, String encoding, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddPfxFileStringString">
            <summary>Sets the shim of XmlCertVault.AddPfxFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AddPfxPfx">
            <summary>Sets the shim of XmlCertVault.AddPfx(Pfx pfx)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmlCertVault.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddCertBinaryByteArray">
            <summary>Sets the shim of XmlCertVault.AddCertBinary(Byte[] certBytes)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddCertCert">
            <summary>Sets the shim of XmlCertVault.AddCert(Cert cert)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddCertChainCertChain">
            <summary>Sets the shim of XmlCertVault.AddCertChain(CertChain certChain)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddCertEncodedStringString">
            <summary>Sets the shim of XmlCertVault.AddCertEncoded(String encodedBytes, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddCertFileString">
            <summary>Sets the shim of XmlCertVault.AddCertFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddCertStringString">
            <summary>Sets the shim of XmlCertVault.AddCertString(String certData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddPemFileStringString">
            <summary>Sets the shim of XmlCertVault.AddPemFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddPfxBinaryByteArrayString">
            <summary>Sets the shim of XmlCertVault.AddPfxBinary(Byte[] pfxBytes, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddPfxEncodedStringStringString">
            <summary>Sets the shim of XmlCertVault.AddPfxEncoded(String encodedBytes, String encoding, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddPfxFileStringString">
            <summary>Sets the shim of XmlCertVault.AddPfxFile(String path, String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.AddPfxPfx">
            <summary>Sets the shim of XmlCertVault.AddPfx(Pfx pfx)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of XmlCertVault.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of XmlCertVault.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.Dispose">
            <summary>Sets the shim of XmlCertVault.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.DisposeBoolean">
            <summary>Sets the shim of XmlCertVault.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.GetXml">
            <summary>Sets the shim of XmlCertVault.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of XmlCertVault.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of XmlCertVault.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of XmlCertVault.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of XmlCertVault.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of XmlCertVault.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LoadXmlFileString">
            <summary>Sets the shim of XmlCertVault.LoadXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.LoadXmlString">
            <summary>Sets the shim of XmlCertVault.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.MasterPasswordGet">
            <summary>Sets the shim of XmlCertVault.get_MasterPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.MasterPasswordSetString">
            <summary>Sets the shim of XmlCertVault.set_MasterPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of XmlCertVault.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.SaveXmlString">
            <summary>Sets the shim of XmlCertVault.SaveXml(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.ToString01">
            <summary>Sets the shim of XmlCertVault.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of XmlCertVault.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of XmlCertVault.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances.VersionGet">
            <summary>Sets the shim of XmlCertVault.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances._XmlCertVault">
            <summary>Sets the shim of XmlCertVault.!XmlCertVault()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.AllInstances._XmlCertVault01">
            <summary>Sets the shim of XmlCertVault.~XmlCertVault()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlCertVault.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlCertVault.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlCertVault.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.Constructor">
            <summary>Sets the shim of XmlCertVault.XmlCertVault()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.DebugLogFilePathGet">
            <summary>Sets the shim of XmlCertVault.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.DebugLogFilePathSetString">
            <summary>Sets the shim of XmlCertVault.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.Dispose">
            <summary>Sets the shim of XmlCertVault.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.DisposeBoolean">
            <summary>Sets the shim of XmlCertVault.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.GetXml">
            <summary>Sets the shim of XmlCertVault.GetXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LastErrorHtmlGet">
            <summary>Sets the shim of XmlCertVault.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LastErrorTextGet">
            <summary>Sets the shim of XmlCertVault.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LastErrorXmlGet">
            <summary>Sets the shim of XmlCertVault.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LastMethodSuccessGet">
            <summary>Sets the shim of XmlCertVault.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of XmlCertVault.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LoadXmlFileString">
            <summary>Sets the shim of XmlCertVault.LoadXmlFile(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.LoadXmlString">
            <summary>Sets the shim of XmlCertVault.LoadXml(String xml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.MasterPasswordGet">
            <summary>Sets the shim of XmlCertVault.get_MasterPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.MasterPasswordSetString">
            <summary>Sets the shim of XmlCertVault.set_MasterPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.SaveLastErrorString">
            <summary>Sets the shim of XmlCertVault.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.SaveXmlString">
            <summary>Sets the shim of XmlCertVault.SaveXml(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.ToString">
            <summary>Sets the shim of XmlCertVault.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.VerboseLoggingGet">
            <summary>Sets the shim of XmlCertVault.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.VerboseLoggingSetBoolean">
            <summary>Sets the shim of XmlCertVault.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault.VersionGet">
            <summary>Sets the shim of XmlCertVault.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault._XmlCertVault">
            <summary>Sets the shim of XmlCertVault.!XmlCertVault()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlCertVault._XmlCertVault01">
            <summary>Sets the shim of XmlCertVault.~XmlCertVault()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmlDSig">
            <summary>Shim type of Chilkat.XmlDSig</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSig.#ctor(Chilkat.XmlDSig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmlDSig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.CanonicalizeFragmentStringStringStringStringBoolean">
            <summary>Sets the shim of XmlDSig.CanonicalizeFragment(String xml, String fragmentId, String version, String prefixList, Boolean withComments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.CanonicalizeXmlStringStringBoolean">
            <summary>Sets the shim of XmlDSig.CanonicalizeXml(String xml, String version, Boolean withComments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of XmlDSig.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of XmlDSig.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.Dispose">
            <summary>Sets the shim of XmlDSig.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.DisposeBoolean">
            <summary>Sets the shim of XmlDSig.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.GetKeyInfo">
            <summary>Sets the shim of XmlDSig.GetKeyInfo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.GetPublicKey">
            <summary>Sets the shim of XmlDSig.GetPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.IsReferenceExternalInt32">
            <summary>Sets the shim of XmlDSig.IsReferenceExternal(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of XmlDSig.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of XmlDSig.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of XmlDSig.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of XmlDSig.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of XmlDSig.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LoadSignatureBdBinData">
            <summary>Sets the shim of XmlDSig.LoadSignatureBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LoadSignatureSbStringBuilder">
            <summary>Sets the shim of XmlDSig.LoadSignatureSb(StringBuilder sbXmlSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.LoadSignatureString">
            <summary>Sets the shim of XmlDSig.LoadSignature(String xmlSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.NumReferencesGet">
            <summary>Sets the shim of XmlDSig.get_NumReferences()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.NumSignaturesGet">
            <summary>Sets the shim of XmlDSig.get_NumSignatures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.ReferenceUriInt32">
            <summary>Sets the shim of XmlDSig.ReferenceUri(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of XmlDSig.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SelectorGet">
            <summary>Sets the shim of XmlDSig.get_Selector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SelectorSetInt32">
            <summary>Sets the shim of XmlDSig.set_Selector(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SetHmacKeyStringString">
            <summary>Sets the shim of XmlDSig.SetHmacKey(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SetPublicKeyPublicKey">
            <summary>Sets the shim of XmlDSig.SetPublicKey(PublicKey pubKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SetRefDataBdInt32BinData">
            <summary>Sets the shim of XmlDSig.SetRefDataBd(Int32 index, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SetRefDataFileInt32String">
            <summary>Sets the shim of XmlDSig.SetRefDataFile(Int32 index, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.SetRefDataSbInt32StringBuilderString">
            <summary>Sets the shim of XmlDSig.SetRefDataSb(Int32 index, StringBuilder sb, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.ToString01">
            <summary>Sets the shim of XmlDSig.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.UseCertVaultXmlCertVault">
            <summary>Sets the shim of XmlDSig.UseCertVault(XmlCertVault certVault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of XmlDSig.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of XmlDSig.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.VerifyReferenceDigestInt32">
            <summary>Sets the shim of XmlDSig.VerifyReferenceDigest(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.VerifySignatureBoolean">
            <summary>Sets the shim of XmlDSig.VerifySignature(Boolean verifyReferenceDigests)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.VersionGet">
            <summary>Sets the shim of XmlDSig.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.WithCommentsGet">
            <summary>Sets the shim of XmlDSig.get_WithComments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances.WithCommentsSetBoolean">
            <summary>Sets the shim of XmlDSig.set_WithComments(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances._XmlDSig">
            <summary>Sets the shim of XmlDSig.!XmlDSig()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.AllInstances._XmlDSig01">
            <summary>Sets the shim of XmlDSig.~XmlDSig()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSig.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.CanonicalizeFragmentStringStringStringStringBoolean">
            <summary>Sets the shim of XmlDSig.CanonicalizeFragment(String xml, String fragmentId, String version, String prefixList, Boolean withComments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.CanonicalizeXmlStringStringBoolean">
            <summary>Sets the shim of XmlDSig.CanonicalizeXml(String xml, String version, Boolean withComments)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.Constructor">
            <summary>Sets the shim of XmlDSig.XmlDSig()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.DebugLogFilePathGet">
            <summary>Sets the shim of XmlDSig.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.DebugLogFilePathSetString">
            <summary>Sets the shim of XmlDSig.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.Dispose">
            <summary>Sets the shim of XmlDSig.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.DisposeBoolean">
            <summary>Sets the shim of XmlDSig.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.GetKeyInfo">
            <summary>Sets the shim of XmlDSig.GetKeyInfo()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.GetPublicKey">
            <summary>Sets the shim of XmlDSig.GetPublicKey()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.IsReferenceExternalInt32">
            <summary>Sets the shim of XmlDSig.IsReferenceExternal(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LastErrorHtmlGet">
            <summary>Sets the shim of XmlDSig.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LastErrorTextGet">
            <summary>Sets the shim of XmlDSig.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LastErrorXmlGet">
            <summary>Sets the shim of XmlDSig.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LastMethodSuccessGet">
            <summary>Sets the shim of XmlDSig.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of XmlDSig.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LoadSignatureBdBinData">
            <summary>Sets the shim of XmlDSig.LoadSignatureBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LoadSignatureSbStringBuilder">
            <summary>Sets the shim of XmlDSig.LoadSignatureSb(StringBuilder sbXmlSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.LoadSignatureString">
            <summary>Sets the shim of XmlDSig.LoadSignature(String xmlSig)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.NumReferencesGet">
            <summary>Sets the shim of XmlDSig.get_NumReferences()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.NumSignaturesGet">
            <summary>Sets the shim of XmlDSig.get_NumSignatures()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.ReferenceUriInt32">
            <summary>Sets the shim of XmlDSig.ReferenceUri(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SaveLastErrorString">
            <summary>Sets the shim of XmlDSig.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SelectorGet">
            <summary>Sets the shim of XmlDSig.get_Selector()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SelectorSetInt32">
            <summary>Sets the shim of XmlDSig.set_Selector(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SetHmacKeyStringString">
            <summary>Sets the shim of XmlDSig.SetHmacKey(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SetPublicKeyPublicKey">
            <summary>Sets the shim of XmlDSig.SetPublicKey(PublicKey pubKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SetRefDataBdInt32BinData">
            <summary>Sets the shim of XmlDSig.SetRefDataBd(Int32 index, BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SetRefDataFileInt32String">
            <summary>Sets the shim of XmlDSig.SetRefDataFile(Int32 index, String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.SetRefDataSbInt32StringBuilderString">
            <summary>Sets the shim of XmlDSig.SetRefDataSb(Int32 index, StringBuilder sb, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.ToString">
            <summary>Sets the shim of XmlDSig.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.UseCertVaultXmlCertVault">
            <summary>Sets the shim of XmlDSig.UseCertVault(XmlCertVault certVault)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.VerboseLoggingGet">
            <summary>Sets the shim of XmlDSig.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.VerboseLoggingSetBoolean">
            <summary>Sets the shim of XmlDSig.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.VerifyReferenceDigestInt32">
            <summary>Sets the shim of XmlDSig.VerifyReferenceDigest(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.VerifySignatureBoolean">
            <summary>Sets the shim of XmlDSig.VerifySignature(Boolean verifyReferenceDigests)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.VersionGet">
            <summary>Sets the shim of XmlDSig.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.WithCommentsGet">
            <summary>Sets the shim of XmlDSig.get_WithComments()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig.WithCommentsSetBoolean">
            <summary>Sets the shim of XmlDSig.set_WithComments(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig._XmlDSig">
            <summary>Sets the shim of XmlDSig.!XmlDSig()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSig._XmlDSig01">
            <summary>Sets the shim of XmlDSig.~XmlDSig()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmlDSigGen">
            <summary>Shim type of Chilkat.XmlDSigGen</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSigGen.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSigGen.#ctor(Chilkat.XmlDSigGen)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AddEnvelopedRefStringStringBuilderStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddEnvelopedRef(String id, StringBuilder content, String digestMethod, String canonMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AddExternalBinaryRefStringBinDataStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalBinaryRef(String uri, BinData content, String digestMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AddExternalFileRefStringStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalFileRef(String uri, String localFilePath, String digestMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AddExternalTextRefStringStringBuilderStringBooleanStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalTextRef(String uri, StringBuilder content, String charset, Boolean includeBom, String digestMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AddExternalXmlRefStringStringBuilderStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalXmlRef(String uri, StringBuilder content, String digestMethod, String canonMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AddSameDocRefStringStringStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddSameDocRef(String id, String digestMethod, String canonMethod, String prefixList, String refType)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmlDSigGen.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.AddEnvelopedRefStringStringBuilderStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddEnvelopedRef(String id, StringBuilder content, String digestMethod, String canonMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.AddExternalBinaryRefStringBinDataStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalBinaryRef(String uri, BinData content, String digestMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.AddExternalFileRefStringStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalFileRef(String uri, String localFilePath, String digestMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.AddExternalTextRefStringStringBuilderStringBooleanStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalTextRef(String uri, StringBuilder content, String charset, Boolean includeBom, String digestMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.AddExternalXmlRefStringStringBuilderStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddExternalXmlRef(String uri, StringBuilder content, String digestMethod, String canonMethod, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.AddSameDocRefStringStringStringStringString">
            <summary>Sets the shim of XmlDSigGen.AddSameDocRef(String id, String digestMethod, String canonMethod, String prefixList, String refType)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.BehaviorsGet">
            <summary>Sets the shim of XmlDSigGen.get_Behaviors()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.BehaviorsSetString">
            <summary>Sets the shim of XmlDSigGen.set_Behaviors(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.CreateXmlDSigSbStringBuilder">
            <summary>Sets the shim of XmlDSigGen.CreateXmlDSigSb(StringBuilder sbXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.CreateXmlDSigString">
            <summary>Sets the shim of XmlDSigGen.CreateXmlDSig(String inXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.CustomKeyInfoXmlGet">
            <summary>Sets the shim of XmlDSigGen.get_CustomKeyInfoXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.CustomKeyInfoXmlSetString">
            <summary>Sets the shim of XmlDSigGen.set_CustomKeyInfoXml(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of XmlDSigGen.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of XmlDSigGen.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.Dispose">
            <summary>Sets the shim of XmlDSigGen.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.DisposeBoolean">
            <summary>Sets the shim of XmlDSigGen.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.IncNamespacePrefixGet">
            <summary>Sets the shim of XmlDSigGen.get_IncNamespacePrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.IncNamespacePrefixSetString">
            <summary>Sets the shim of XmlDSigGen.set_IncNamespacePrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.IncNamespaceUriGet">
            <summary>Sets the shim of XmlDSigGen.get_IncNamespaceUri()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.IncNamespaceUriSetString">
            <summary>Sets the shim of XmlDSigGen.set_IncNamespaceUri(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.KeyInfoKeyNameGet">
            <summary>Sets the shim of XmlDSigGen.get_KeyInfoKeyName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.KeyInfoKeyNameSetString">
            <summary>Sets the shim of XmlDSigGen.set_KeyInfoKeyName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.KeyInfoTypeGet">
            <summary>Sets the shim of XmlDSigGen.get_KeyInfoType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.KeyInfoTypeSetString">
            <summary>Sets the shim of XmlDSigGen.set_KeyInfoType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of XmlDSigGen.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of XmlDSigGen.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of XmlDSigGen.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of XmlDSigGen.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of XmlDSigGen.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of XmlDSigGen.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SetHmacKeyStringString">
            <summary>Sets the shim of XmlDSigGen.SetHmacKey(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SetPrivateKeyPrivateKey">
            <summary>Sets the shim of XmlDSigGen.SetPrivateKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SetX509CertCertBoolean">
            <summary>Sets the shim of XmlDSigGen.SetX509Cert(Cert cert, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigIdGet">
            <summary>Sets the shim of XmlDSigGen.get_SigId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigIdSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigLocationGet">
            <summary>Sets the shim of XmlDSigGen.get_SigLocation()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigLocationSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigLocation(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigNamespacePrefixGet">
            <summary>Sets the shim of XmlDSigGen.get_SigNamespacePrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigNamespacePrefixSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigNamespacePrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigNamespaceUriGet">
            <summary>Sets the shim of XmlDSigGen.get_SigNamespaceUri()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigNamespaceUriSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigNamespaceUri(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SignedInfoCanonAlgGet">
            <summary>Sets the shim of XmlDSigGen.get_SignedInfoCanonAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SignedInfoCanonAlgSetString">
            <summary>Sets the shim of XmlDSigGen.set_SignedInfoCanonAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SignedInfoDigestMethodGet">
            <summary>Sets the shim of XmlDSigGen.get_SignedInfoDigestMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SignedInfoDigestMethodSetString">
            <summary>Sets the shim of XmlDSigGen.set_SignedInfoDigestMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SignedInfoPrefixListGet">
            <summary>Sets the shim of XmlDSigGen.get_SignedInfoPrefixList()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SignedInfoPrefixListSetString">
            <summary>Sets the shim of XmlDSigGen.set_SignedInfoPrefixList(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigningAlgGet">
            <summary>Sets the shim of XmlDSigGen.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.SigningAlgSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.ToString01">
            <summary>Sets the shim of XmlDSigGen.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of XmlDSigGen.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of XmlDSigGen.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.VersionGet">
            <summary>Sets the shim of XmlDSigGen.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.X509TypeGet">
            <summary>Sets the shim of XmlDSigGen.get_X509Type()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances.X509TypeSetString">
            <summary>Sets the shim of XmlDSigGen.set_X509Type(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances._XmlDSigGen">
            <summary>Sets the shim of XmlDSigGen.!XmlDSigGen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.AllInstances._XmlDSigGen01">
            <summary>Sets the shim of XmlDSigGen.~XmlDSigGen()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSigGen.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSigGen.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.BehaviorsGet">
            <summary>Sets the shim of XmlDSigGen.get_Behaviors()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.BehaviorsSetString">
            <summary>Sets the shim of XmlDSigGen.set_Behaviors(String propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmlDSigGen.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.Constructor">
            <summary>Sets the shim of XmlDSigGen.XmlDSigGen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.CreateXmlDSigSbStringBuilder">
            <summary>Sets the shim of XmlDSigGen.CreateXmlDSigSb(StringBuilder sbXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.CreateXmlDSigString">
            <summary>Sets the shim of XmlDSigGen.CreateXmlDSig(String inXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.CustomKeyInfoXmlGet">
            <summary>Sets the shim of XmlDSigGen.get_CustomKeyInfoXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.CustomKeyInfoXmlSetString">
            <summary>Sets the shim of XmlDSigGen.set_CustomKeyInfoXml(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.DebugLogFilePathGet">
            <summary>Sets the shim of XmlDSigGen.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.DebugLogFilePathSetString">
            <summary>Sets the shim of XmlDSigGen.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.Dispose">
            <summary>Sets the shim of XmlDSigGen.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.DisposeBoolean">
            <summary>Sets the shim of XmlDSigGen.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.IncNamespacePrefixGet">
            <summary>Sets the shim of XmlDSigGen.get_IncNamespacePrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.IncNamespacePrefixSetString">
            <summary>Sets the shim of XmlDSigGen.set_IncNamespacePrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.IncNamespaceUriGet">
            <summary>Sets the shim of XmlDSigGen.get_IncNamespaceUri()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.IncNamespaceUriSetString">
            <summary>Sets the shim of XmlDSigGen.set_IncNamespaceUri(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.KeyInfoKeyNameGet">
            <summary>Sets the shim of XmlDSigGen.get_KeyInfoKeyName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.KeyInfoKeyNameSetString">
            <summary>Sets the shim of XmlDSigGen.set_KeyInfoKeyName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.KeyInfoTypeGet">
            <summary>Sets the shim of XmlDSigGen.get_KeyInfoType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.KeyInfoTypeSetString">
            <summary>Sets the shim of XmlDSigGen.set_KeyInfoType(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.LastErrorHtmlGet">
            <summary>Sets the shim of XmlDSigGen.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.LastErrorTextGet">
            <summary>Sets the shim of XmlDSigGen.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.LastErrorXmlGet">
            <summary>Sets the shim of XmlDSigGen.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.LastMethodSuccessGet">
            <summary>Sets the shim of XmlDSigGen.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of XmlDSigGen.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SaveLastErrorString">
            <summary>Sets the shim of XmlDSigGen.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SetHmacKeyStringString">
            <summary>Sets the shim of XmlDSigGen.SetHmacKey(String key, String encoding)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SetPrivateKeyPrivateKey">
            <summary>Sets the shim of XmlDSigGen.SetPrivateKey(PrivateKey privKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SetX509CertCertBoolean">
            <summary>Sets the shim of XmlDSigGen.SetX509Cert(Cert cert, Boolean usePrivateKey)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigIdGet">
            <summary>Sets the shim of XmlDSigGen.get_SigId()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigIdSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigId(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigLocationGet">
            <summary>Sets the shim of XmlDSigGen.get_SigLocation()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigLocationSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigLocation(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigNamespacePrefixGet">
            <summary>Sets the shim of XmlDSigGen.get_SigNamespacePrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigNamespacePrefixSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigNamespacePrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigNamespaceUriGet">
            <summary>Sets the shim of XmlDSigGen.get_SigNamespaceUri()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigNamespaceUriSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigNamespaceUri(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SignedInfoCanonAlgGet">
            <summary>Sets the shim of XmlDSigGen.get_SignedInfoCanonAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SignedInfoCanonAlgSetString">
            <summary>Sets the shim of XmlDSigGen.set_SignedInfoCanonAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SignedInfoDigestMethodGet">
            <summary>Sets the shim of XmlDSigGen.get_SignedInfoDigestMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SignedInfoDigestMethodSetString">
            <summary>Sets the shim of XmlDSigGen.set_SignedInfoDigestMethod(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SignedInfoPrefixListGet">
            <summary>Sets the shim of XmlDSigGen.get_SignedInfoPrefixList()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SignedInfoPrefixListSetString">
            <summary>Sets the shim of XmlDSigGen.set_SignedInfoPrefixList(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigningAlgGet">
            <summary>Sets the shim of XmlDSigGen.get_SigningAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.SigningAlgSetString">
            <summary>Sets the shim of XmlDSigGen.set_SigningAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.ToString">
            <summary>Sets the shim of XmlDSigGen.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.VerboseLoggingGet">
            <summary>Sets the shim of XmlDSigGen.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.VerboseLoggingSetBoolean">
            <summary>Sets the shim of XmlDSigGen.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.VersionGet">
            <summary>Sets the shim of XmlDSigGen.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.X509TypeGet">
            <summary>Sets the shim of XmlDSigGen.get_X509Type()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen.X509TypeSetString">
            <summary>Sets the shim of XmlDSigGen.set_X509Type(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen._XmlDSigGen">
            <summary>Sets the shim of XmlDSigGen.!XmlDSigGen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmlDSigGen._XmlDSigGen01">
            <summary>Sets the shim of XmlDSigGen.~XmlDSigGen()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmp">
            <summary>Shim type of Chilkat.Xmp</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmp.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmp.#ctor(Chilkat.Xmp)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AddArrayXmlStringStringStringArray">
            <summary>Sets the shim of Xmp.AddArray(Xml xml, String arrType, String propName, StringArray values)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AddNsMappingStringString">
            <summary>Sets the shim of Xmp.AddNsMapping(String ns, String uri)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AddSimpleDateXmlStringDateTime">
            <summary>Sets the shim of Xmp.AddSimpleDate(Xml iXml, String propName, DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AddSimpleIntXmlStringInt32">
            <summary>Sets the shim of Xmp.AddSimpleInt(Xml iXml, String propName, Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AddSimpleStrXmlStringString">
            <summary>Sets the shim of Xmp.AddSimpleStr(Xml iXml, String propName, String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AddStructPropXmlStringStringString">
            <summary>Sets the shim of Xmp.AddStructProp(Xml iChilkatXml, String structName, String propName, String propValue)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimXmp.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AddArrayXmlStringStringStringArray">
            <summary>Sets the shim of Xmp.AddArray(Xml xml, String arrType, String propName, StringArray values)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AddNsMappingStringString">
            <summary>Sets the shim of Xmp.AddNsMapping(String ns, String uri)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AddSimpleDateXmlStringDateTime">
            <summary>Sets the shim of Xmp.AddSimpleDate(Xml iXml, String propName, DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AddSimpleIntXmlStringInt32">
            <summary>Sets the shim of Xmp.AddSimpleInt(Xml iXml, String propName, Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AddSimpleStrXmlStringString">
            <summary>Sets the shim of Xmp.AddSimpleStr(Xml iXml, String propName, String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AddStructPropXmlStringStringString">
            <summary>Sets the shim of Xmp.AddStructProp(Xml iChilkatXml, String structName, String propName, String propValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.AppendXml">
            <summary>Sets the shim of Xmp.Append(Xml iXml)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.DateToStringDateTime">
            <summary>Sets the shim of Xmp.DateToString(DateTime d)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Xmp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Xmp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.Dispose">
            <summary>Sets the shim of Xmp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Xmp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetArrayXmlString">
            <summary>Sets the shim of Xmp.GetArray(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetEmbeddedInt32">
            <summary>Sets the shim of Xmp.GetEmbedded(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetPropertyXmlString">
            <summary>Sets the shim of Xmp.GetProperty(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetSimpleDateXmlString">
            <summary>Sets the shim of Xmp.GetSimpleDate(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetSimpleIntXmlString">
            <summary>Sets the shim of Xmp.GetSimpleInt(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetSimpleStrXmlString">
            <summary>Sets the shim of Xmp.GetSimpleStr(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetStructPropNamesXmlString">
            <summary>Sets the shim of Xmp.GetStructPropNames(Xml iXml, String structName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.GetStructValueXmlStringString">
            <summary>Sets the shim of Xmp.GetStructValue(Xml iXml, String structName, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Xmp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Xmp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Xmp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Xmp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Xmp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LoadAppFileString">
            <summary>Sets the shim of Xmp.LoadAppFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.LoadFromBufferByteArrayString">
            <summary>Sets the shim of Xmp.LoadFromBuffer(Byte[] fileData, String ext)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.NewXmp">
            <summary>Sets the shim of Xmp.NewXmp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.NumEmbeddedGet">
            <summary>Sets the shim of Xmp.get_NumEmbedded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveAllEmbedded">
            <summary>Sets the shim of Xmp.RemoveAllEmbedded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveArrayXmlString">
            <summary>Sets the shim of Xmp.RemoveArray(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveEmbeddedInt32">
            <summary>Sets the shim of Xmp.RemoveEmbedded(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveNsMappingString">
            <summary>Sets the shim of Xmp.RemoveNsMapping(String ns)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveSimpleXmlString">
            <summary>Sets the shim of Xmp.RemoveSimple(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveStructPropXmlStringString">
            <summary>Sets the shim of Xmp.RemoveStructProp(Xml iXml, String structName, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.RemoveStructXmlString">
            <summary>Sets the shim of Xmp.RemoveStruct(Xml iXml, String structName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.SaveAppFileString">
            <summary>Sets the shim of Xmp.SaveAppFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Xmp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.SaveToBuffer">
            <summary>Sets the shim of Xmp.SaveToBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.StringToDateString">
            <summary>Sets the shim of Xmp.StringToDate(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.StructInnerDescripGet">
            <summary>Sets the shim of Xmp.get_StructInnerDescrip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.StructInnerDescripSetBoolean">
            <summary>Sets the shim of Xmp.set_StructInnerDescrip(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.ToString01">
            <summary>Sets the shim of Xmp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Xmp.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Xmp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Xmp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances.VersionGet">
            <summary>Sets the shim of Xmp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances._Xmp">
            <summary>Sets the shim of Xmp.!Xmp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AllInstances._Xmp01">
            <summary>Sets the shim of Xmp.~Xmp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.AppendXml">
            <summary>Sets the shim of Xmp.Append(Xml iXml)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmp.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmp.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimXmp.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.Constructor">
            <summary>Sets the shim of Xmp.Xmp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.DateToStringDateTime">
            <summary>Sets the shim of Xmp.DateToString(DateTime d)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.DebugLogFilePathGet">
            <summary>Sets the shim of Xmp.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.DebugLogFilePathSetString">
            <summary>Sets the shim of Xmp.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.Dispose">
            <summary>Sets the shim of Xmp.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.DisposeBoolean">
            <summary>Sets the shim of Xmp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetArrayXmlString">
            <summary>Sets the shim of Xmp.GetArray(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetEmbeddedInt32">
            <summary>Sets the shim of Xmp.GetEmbedded(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetPropertyXmlString">
            <summary>Sets the shim of Xmp.GetProperty(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetSimpleDateXmlString">
            <summary>Sets the shim of Xmp.GetSimpleDate(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetSimpleIntXmlString">
            <summary>Sets the shim of Xmp.GetSimpleInt(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetSimpleStrXmlString">
            <summary>Sets the shim of Xmp.GetSimpleStr(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetStructPropNamesXmlString">
            <summary>Sets the shim of Xmp.GetStructPropNames(Xml iXml, String structName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.GetStructValueXmlStringString">
            <summary>Sets the shim of Xmp.GetStructValue(Xml iXml, String structName, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LastErrorHtmlGet">
            <summary>Sets the shim of Xmp.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LastErrorTextGet">
            <summary>Sets the shim of Xmp.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LastErrorXmlGet">
            <summary>Sets the shim of Xmp.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LastMethodSuccessGet">
            <summary>Sets the shim of Xmp.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Xmp.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LoadAppFileString">
            <summary>Sets the shim of Xmp.LoadAppFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.LoadFromBufferByteArrayString">
            <summary>Sets the shim of Xmp.LoadFromBuffer(Byte[] fileData, String ext)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.NewXmp">
            <summary>Sets the shim of Xmp.NewXmp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.NumEmbeddedGet">
            <summary>Sets the shim of Xmp.get_NumEmbedded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveAllEmbedded">
            <summary>Sets the shim of Xmp.RemoveAllEmbedded()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveArrayXmlString">
            <summary>Sets the shim of Xmp.RemoveArray(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveEmbeddedInt32">
            <summary>Sets the shim of Xmp.RemoveEmbedded(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveNsMappingString">
            <summary>Sets the shim of Xmp.RemoveNsMapping(String ns)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveSimpleXmlString">
            <summary>Sets the shim of Xmp.RemoveSimple(Xml iXml, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveStructPropXmlStringString">
            <summary>Sets the shim of Xmp.RemoveStructProp(Xml iXml, String structName, String propName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.RemoveStructXmlString">
            <summary>Sets the shim of Xmp.RemoveStruct(Xml iXml, String structName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.SaveAppFileString">
            <summary>Sets the shim of Xmp.SaveAppFile(String filename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.SaveLastErrorString">
            <summary>Sets the shim of Xmp.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.SaveToBuffer">
            <summary>Sets the shim of Xmp.SaveToBuffer()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.StringToDateString">
            <summary>Sets the shim of Xmp.StringToDate(String str)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.StructInnerDescripGet">
            <summary>Sets the shim of Xmp.get_StructInnerDescrip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.StructInnerDescripSetBoolean">
            <summary>Sets the shim of Xmp.set_StructInnerDescrip(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.ToString">
            <summary>Sets the shim of Xmp.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.UnlockComponentString">
            <summary>Sets the shim of Xmp.UnlockComponent(String unlockCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.VerboseLoggingGet">
            <summary>Sets the shim of Xmp.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Xmp.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp.VersionGet">
            <summary>Sets the shim of Xmp.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp._Xmp">
            <summary>Sets the shim of Xmp.!Xmp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimXmp._Xmp01">
            <summary>Sets the shim of Xmp.~Xmp()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimZip">
            <summary>Shim type of Chilkat.Zip</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZip.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZip.#ctor(Chilkat.Zip)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AbortCurrentGet">
            <summary>Sets the shim of Zip.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AbortCurrentSetBoolean">
            <summary>Sets the shim of Zip.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AddEmbeddedStringStringString">
            <summary>Sets the shim of Zip.AddEmbedded(String exeFilename, String resourceName, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AddNoCompressExtensionString">
            <summary>Sets the shim of Zip.AddNoCompressExtension(String fileExtension)</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimZip.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AbortCurrentGet">
            <summary>Sets the shim of Zip.get_AbortCurrent()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AbortCurrentSetBoolean">
            <summary>Sets the shim of Zip.set_AbortCurrent(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AddEmbeddedStringStringString">
            <summary>Sets the shim of Zip.AddEmbedded(String exeFilename, String resourceName, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AddNoCompressExtensionString">
            <summary>Sets the shim of Zip.AddNoCompressExtension(String fileExtension)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendBase64StringString">
            <summary>Sets the shim of Zip.AppendBase64(String fileName, String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendBdStringBinData">
            <summary>Sets the shim of Zip.AppendBd(String pathInZip, BinData byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendCompressedStringByteArray">
            <summary>Sets the shim of Zip.AppendCompressed(String filename, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendDataEncodedStringStringString">
            <summary>Sets the shim of Zip.AppendDataEncoded(String filename, String encoding, String data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendDataStringByteArray">
            <summary>Sets the shim of Zip.AppendData(String fileName, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendFilesAsyncStringBoolean">
            <summary>Sets the shim of Zip.AppendFilesAsync(String filePattern, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendFilesExAsyncStringBooleanBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Zip.AppendFilesExAsync(String filePattern, Boolean recurse, Boolean saveExtraPath, Boolean archiveOnly, Boolean includeHidden, Boolean includeSystem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendFilesExStringBooleanBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Zip.AppendFilesEx(String filePattern, Boolean recurse, Boolean saveExtraPath, Boolean archiveOnly, Boolean includeHidden, Boolean includeSystem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendFilesStringBoolean">
            <summary>Sets the shim of Zip.AppendFiles(String filePattern, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendFromDirGet">
            <summary>Sets the shim of Zip.get_AppendFromDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendFromDirSetString">
            <summary>Sets the shim of Zip.set_AppendFromDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendHexStringString">
            <summary>Sets the shim of Zip.AppendHex(String fileName, String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendMultipleAsyncStringArrayBoolean">
            <summary>Sets the shim of Zip.AppendMultipleAsync(StringArray fileSpecs, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendMultipleStringArrayBoolean">
            <summary>Sets the shim of Zip.AppendMultiple(StringArray fileSpecs, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendNewDirString">
            <summary>Sets the shim of Zip.AppendNewDir(String dirName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendNewString">
            <summary>Sets the shim of Zip.AppendNew(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendOneFileOrDirAsyncStringBoolean">
            <summary>Sets the shim of Zip.AppendOneFileOrDirAsync(String fileOrDirPath, Boolean saveExtraPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendOneFileOrDirStringBoolean">
            <summary>Sets the shim of Zip.AppendOneFileOrDir(String fileOrDirPath, Boolean saveExtraPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendString2StringStringString">
            <summary>Sets the shim of Zip.AppendString2(String internalZipFilepath, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendStringStringString">
            <summary>Sets the shim of Zip.AppendString(String internalZipFilepath, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AppendZipString">
            <summary>Sets the shim of Zip.AppendZip(String zipFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AutoRunGet">
            <summary>Sets the shim of Zip.get_AutoRun()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AutoRunParamsGet">
            <summary>Sets the shim of Zip.get_AutoRunParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AutoRunParamsSetString">
            <summary>Sets the shim of Zip.set_AutoRunParams(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AutoRunSetString">
            <summary>Sets the shim of Zip.set_AutoRun(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AutoTempGet">
            <summary>Sets the shim of Zip.get_AutoTemp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.AutoTempSetBoolean">
            <summary>Sets the shim of Zip.set_AutoTemp(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.CaseSensitiveGet">
            <summary>Sets the shim of Zip.get_CaseSensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.CaseSensitiveSetBoolean">
            <summary>Sets the shim of Zip.set_CaseSensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ClearArchiveAttributeGet">
            <summary>Sets the shim of Zip.get_ClearArchiveAttribute()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ClearArchiveAttributeSetBoolean">
            <summary>Sets the shim of Zip.set_ClearArchiveAttribute(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ClearReadOnlyAttrGet">
            <summary>Sets the shim of Zip.get_ClearReadOnlyAttr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ClearReadOnlyAttrSetBoolean">
            <summary>Sets the shim of Zip.set_ClearReadOnlyAttr(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.CloseZip">
            <summary>Sets the shim of Zip.CloseZip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.CommentGet">
            <summary>Sets the shim of Zip.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.CommentSetString">
            <summary>Sets the shim of Zip.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of Zip.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of Zip.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DecryptPasswordGet">
            <summary>Sets the shim of Zip.get_DecryptPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DecryptPasswordSetString">
            <summary>Sets the shim of Zip.set_DecryptPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DeleteEntryZipEntry">
            <summary>Sets the shim of Zip.DeleteEntry(ZipEntry entry)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DiscardPathsGet">
            <summary>Sets the shim of Zip.get_DiscardPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DiscardPathsSetBoolean">
            <summary>Sets the shim of Zip.set_DiscardPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.Dispose">
            <summary>Sets the shim of Zip.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Zip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EnableEventsGet">
            <summary>Sets the shim of Zip.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of Zip.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EncryptKeyLengthGet">
            <summary>Sets the shim of Zip.get_EncryptKeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EncryptKeyLengthSetInt32">
            <summary>Sets the shim of Zip.set_EncryptKeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EncryptPasswordGet">
            <summary>Sets the shim of Zip.get_EncryptPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EncryptPasswordSetString">
            <summary>Sets the shim of Zip.set_EncryptPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EncryptionGet">
            <summary>Sets the shim of Zip.get_Encryption()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.EncryptionSetInt32">
            <summary>Sets the shim of Zip.set_Encryption(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExcludeDirString">
            <summary>Sets the shim of Zip.ExcludeDir(String dirName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeDefaultDirGet">
            <summary>Sets the shim of Zip.get_ExeDefaultDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeDefaultDirSetString">
            <summary>Sets the shim of Zip.set_ExeDefaultDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeFinishNotifierGet">
            <summary>Sets the shim of Zip.get_ExeFinishNotifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeFinishNotifierSetBoolean">
            <summary>Sets the shim of Zip.set_ExeFinishNotifier(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeIconFileGet">
            <summary>Sets the shim of Zip.get_ExeIconFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeIconFileSetString">
            <summary>Sets the shim of Zip.set_ExeIconFile(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeNoInterfaceGet">
            <summary>Sets the shim of Zip.get_ExeNoInterface()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeNoInterfaceSetBoolean">
            <summary>Sets the shim of Zip.set_ExeNoInterface(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeSilentProgressGet">
            <summary>Sets the shim of Zip.get_ExeSilentProgress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeSilentProgressSetBoolean">
            <summary>Sets the shim of Zip.set_ExeSilentProgress(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeTitleGet">
            <summary>Sets the shim of Zip.get_ExeTitle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeTitleSetString">
            <summary>Sets the shim of Zip.set_ExeTitle(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeUnzipCaptionGet">
            <summary>Sets the shim of Zip.get_ExeUnzipCaption()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeUnzipCaptionSetString">
            <summary>Sets the shim of Zip.set_ExeUnzipCaption(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeUnzipDirGet">
            <summary>Sets the shim of Zip.get_ExeUnzipDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeUnzipDirSetString">
            <summary>Sets the shim of Zip.set_ExeUnzipDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeWaitForSetupGet">
            <summary>Sets the shim of Zip.get_ExeWaitForSetup()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeWaitForSetupSetBoolean">
            <summary>Sets the shim of Zip.set_ExeWaitForSetup(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeXmlConfigGet">
            <summary>Sets the shim of Zip.get_ExeXmlConfig()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExeXmlConfigSetString">
            <summary>Sets the shim of Zip.set_ExeXmlConfig(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractAsyncString">
            <summary>Sets the shim of Zip.ExtractAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractExeAsyncStringString">
            <summary>Sets the shim of Zip.ExtractExeAsync(String exePath, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractExeStringString">
            <summary>Sets the shim of Zip.ExtractExe(String exePath, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractIntoString">
            <summary>Sets the shim of Zip.ExtractInto(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractMatchingStringString">
            <summary>Sets the shim of Zip.ExtractMatching(String dirPath, String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractNewerString">
            <summary>Sets the shim of Zip.ExtractNewer(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractOneZipEntryString">
            <summary>Sets the shim of Zip.ExtractOne(ZipEntry entry, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ExtractString">
            <summary>Sets the shim of Zip.Extract(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FileCountGet">
            <summary>Sets the shim of Zip.get_FileCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FileNameGet">
            <summary>Sets the shim of Zip.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FileNameSetString">
            <summary>Sets the shim of Zip.set_FileName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Zip.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireAddFilesBeginObjectEventArgs">
            <summary>Sets the shim of Zip.FireAddFilesBegin(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireAddFilesEndObjectEventArgs">
            <summary>Sets the shim of Zip.FireAddFilesEnd(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireDirToBeAddedObjectDirToBeAddedEventArgs">
            <summary>Sets the shim of Zip.FireDirToBeAdded(Object sender, DirToBeAddedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireFileAddedObjectFileAddedEventArgs">
            <summary>Sets the shim of Zip.FireFileAdded(Object sender, FileAddedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireFileUnzippedObjectFileUnzippedEventArgs">
            <summary>Sets the shim of Zip.FireFileUnzipped(Object sender, FileUnzippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireFileZippedObjectFileZippedEventArgs">
            <summary>Sets the shim of Zip.FireFileZipped(Object sender, FileZippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Zip.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Zip.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireSkippedForUnzipObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.FireSkippedForUnzip(Object sender, ToBeUnzippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Zip.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireToBeAddedObjectToBeAddedEventArgs">
            <summary>Sets the shim of Zip.FireToBeAdded(Object sender, ToBeAddedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireToBeUnzippedObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.FireToBeUnzipped(Object sender, ToBeUnzippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireToBeZippedObjectToBeZippedEventArgs">
            <summary>Sets the shim of Zip.FireToBeZipped(Object sender, ToBeZippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireUnzipBeginObjectEventArgs">
            <summary>Sets the shim of Zip.FireUnzipBegin(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireUnzipEndObjectEventArgs">
            <summary>Sets the shim of Zip.FireUnzipEnd(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireWriteZipBeginObjectEventArgs">
            <summary>Sets the shim of Zip.FireWriteZipBegin(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FireWriteZipEndObjectEventArgs">
            <summary>Sets the shim of Zip.FireWriteZipEnd(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FirstEntry">
            <summary>Sets the shim of Zip.FirstEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.FirstMatchingEntryString">
            <summary>Sets the shim of Zip.FirstMatchingEntry(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.GetDirectoryAsXML">
            <summary>Sets the shim of Zip.GetDirectoryAsXML()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.GetEntryByIDInt32">
            <summary>Sets the shim of Zip.GetEntryByID(Int32 entryID)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.GetEntryByIndexInt32">
            <summary>Sets the shim of Zip.GetEntryByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.GetEntryByNameString">
            <summary>Sets the shim of Zip.GetEntryByName(String entryName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.GetExclusions">
            <summary>Sets the shim of Zip.GetExclusions()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.GetExeConfigParamString">
            <summary>Sets the shim of Zip.GetExeConfigParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.HasZipFormatErrorsGet">
            <summary>Sets the shim of Zip.get_HasZipFormatErrors()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of Zip.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of Zip.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.IgnoreAccessDeniedGet">
            <summary>Sets the shim of Zip.get_IgnoreAccessDenied()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.IgnoreAccessDeniedSetBoolean">
            <summary>Sets the shim of Zip.set_IgnoreAccessDenied(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.InsertNewStringInt32">
            <summary>Sets the shim of Zip.InsertNew(String fileName, Int32 beforeIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.IsNoCompressExtensionString">
            <summary>Sets the shim of Zip.IsNoCompressExtension(String fileExtension)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.IsPasswordProtectedString">
            <summary>Sets the shim of Zip.IsPasswordProtected(String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.IsUnlocked">
            <summary>Sets the shim of Zip.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of Zip.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of Zip.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of Zip.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of Zip.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Zip.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.NewZipString">
            <summary>Sets the shim of Zip.NewZip(String zipFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.NumEntriesGet">
            <summary>Sets the shim of Zip.get_NumEntries()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OemCodePageGet">
            <summary>Sets the shim of Zip.get_OemCodePage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OemCodePageSetInt32">
            <summary>Sets the shim of Zip.set_OemCodePage(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAbortCheckAddZipAbortCheckEventHandler">
            <summary>Sets the shim of Zip.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Zip.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAbortCheckRemoveZipAbortCheckEventHandler">
            <summary>Sets the shim of Zip.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAddFilesBeginAddZipAddFilesBeginEventHandler">
            <summary>Sets the shim of Zip.add_OnAddFilesBegin(AddFilesBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAddFilesBeginRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnAddFilesBegin(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAddFilesBeginRemoveZipAddFilesBeginEventHandler">
            <summary>Sets the shim of Zip.remove_OnAddFilesBegin(AddFilesBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAddFilesEndAddZipAddFilesEndEventHandler">
            <summary>Sets the shim of Zip.add_OnAddFilesEnd(AddFilesEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAddFilesEndRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnAddFilesEnd(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnAddFilesEndRemoveZipAddFilesEndEventHandler">
            <summary>Sets the shim of Zip.remove_OnAddFilesEnd(AddFilesEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnDirToBeAddedAddZipDirToBeAddedEventHandler">
            <summary>Sets the shim of Zip.add_OnDirToBeAdded(DirToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnDirToBeAddedRaiseObjectDirToBeAddedEventArgs">
            <summary>Sets the shim of Zip.raise_OnDirToBeAdded(Object value0, DirToBeAddedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnDirToBeAddedRemoveZipDirToBeAddedEventHandler">
            <summary>Sets the shim of Zip.remove_OnDirToBeAdded(DirToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileAddedAddZipFileAddedEventHandler">
            <summary>Sets the shim of Zip.add_OnFileAdded(FileAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileAddedRaiseObjectFileAddedEventArgs">
            <summary>Sets the shim of Zip.raise_OnFileAdded(Object value0, FileAddedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileAddedRemoveZipFileAddedEventHandler">
            <summary>Sets the shim of Zip.remove_OnFileAdded(FileAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileUnzippedAddZipFileUnzippedEventHandler">
            <summary>Sets the shim of Zip.add_OnFileUnzipped(FileUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileUnzippedRaiseObjectFileUnzippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnFileUnzipped(Object value0, FileUnzippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileUnzippedRemoveZipFileUnzippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnFileUnzipped(FileUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileZippedAddZipFileZippedEventHandler">
            <summary>Sets the shim of Zip.add_OnFileZipped(FileZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileZippedRaiseObjectFileZippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnFileZipped(Object value0, FileZippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnFileZippedRemoveZipFileZippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnFileZipped(FileZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnPercentDoneAddZipPercentDoneEventHandler">
            <summary>Sets the shim of Zip.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Zip.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnPercentDoneRemoveZipPercentDoneEventHandler">
            <summary>Sets the shim of Zip.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnProgressInfoAddZipProgressInfoEventHandler">
            <summary>Sets the shim of Zip.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Zip.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnProgressInfoRemoveZipProgressInfoEventHandler">
            <summary>Sets the shim of Zip.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnSkippedForUnzipAddZipSkippedForUnzipEventHandler">
            <summary>Sets the shim of Zip.add_OnSkippedForUnzip(SkippedForUnzipEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnSkippedForUnzipRaiseObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnSkippedForUnzip(Object value0, ToBeUnzippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnSkippedForUnzipRemoveZipSkippedForUnzipEventHandler">
            <summary>Sets the shim of Zip.remove_OnSkippedForUnzip(SkippedForUnzipEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnTaskCompletedAddZipTaskCompletedEventHandler">
            <summary>Sets the shim of Zip.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Zip.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnTaskCompletedRemoveZipTaskCompletedEventHandler">
            <summary>Sets the shim of Zip.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeAddedAddZipToBeAddedEventHandler">
            <summary>Sets the shim of Zip.add_OnToBeAdded(ToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeAddedRaiseObjectToBeAddedEventArgs">
            <summary>Sets the shim of Zip.raise_OnToBeAdded(Object value0, ToBeAddedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeAddedRemoveZipToBeAddedEventHandler">
            <summary>Sets the shim of Zip.remove_OnToBeAdded(ToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeUnzippedAddZipToBeUnzippedEventHandler">
            <summary>Sets the shim of Zip.add_OnToBeUnzipped(ToBeUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeUnzippedRaiseObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnToBeUnzipped(Object value0, ToBeUnzippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeUnzippedRemoveZipToBeUnzippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnToBeUnzipped(ToBeUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeZippedAddZipToBeZippedEventHandler">
            <summary>Sets the shim of Zip.add_OnToBeZipped(ToBeZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeZippedRaiseObjectToBeZippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnToBeZipped(Object value0, ToBeZippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnToBeZippedRemoveZipToBeZippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnToBeZipped(ToBeZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnUnzipBeginAddZipUnzipBeginEventHandler">
            <summary>Sets the shim of Zip.add_OnUnzipBegin(UnzipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnUnzipBeginRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnUnzipBegin(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnUnzipBeginRemoveZipUnzipBeginEventHandler">
            <summary>Sets the shim of Zip.remove_OnUnzipBegin(UnzipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnUnzipEndAddZipUnzipEndEventHandler">
            <summary>Sets the shim of Zip.add_OnUnzipEnd(UnzipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnUnzipEndRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnUnzipEnd(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnUnzipEndRemoveZipUnzipEndEventHandler">
            <summary>Sets the shim of Zip.remove_OnUnzipEnd(UnzipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnWriteZipBeginAddZipWriteZipBeginEventHandler">
            <summary>Sets the shim of Zip.add_OnWriteZipBegin(WriteZipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnWriteZipBeginRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnWriteZipBegin(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnWriteZipBeginRemoveZipWriteZipBeginEventHandler">
            <summary>Sets the shim of Zip.remove_OnWriteZipBegin(WriteZipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnWriteZipEndAddZipWriteZipEndEventHandler">
            <summary>Sets the shim of Zip.add_OnWriteZipEnd(WriteZipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnWriteZipEndRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnWriteZipEnd(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OnWriteZipEndRemoveZipWriteZipEndEventHandler">
            <summary>Sets the shim of Zip.remove_OnWriteZipEnd(WriteZipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenBdBinData">
            <summary>Sets the shim of Zip.OpenBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenEmbeddedStringString">
            <summary>Sets the shim of Zip.OpenEmbedded(String exeFilename, String resourceName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenFromByteDataByteArray">
            <summary>Sets the shim of Zip.OpenFromByteData(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenFromMemoryByteArray">
            <summary>Sets the shim of Zip.OpenFromMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenMyEmbeddedString">
            <summary>Sets the shim of Zip.OpenMyEmbedded(String resourceName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenZipAsyncString">
            <summary>Sets the shim of Zip.OpenZipAsync(String zipPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OpenZipString">
            <summary>Sets the shim of Zip.OpenZip(String zipPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OverwriteExistingGet">
            <summary>Sets the shim of Zip.get_OverwriteExisting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.OverwriteExistingSetBoolean">
            <summary>Sets the shim of Zip.set_OverwriteExisting(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.PasswordProtectGet">
            <summary>Sets the shim of Zip.get_PasswordProtect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.PasswordProtectSetBoolean">
            <summary>Sets the shim of Zip.set_PasswordProtect(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.PathPrefixGet">
            <summary>Sets the shim of Zip.get_PathPrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.PathPrefixSetString">
            <summary>Sets the shim of Zip.set_PathPrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.PercentDoneScaleGet">
            <summary>Sets the shim of Zip.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Zip.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.QuickAppendAsyncString">
            <summary>Sets the shim of Zip.QuickAppendAsync(String ZipFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.QuickAppendString">
            <summary>Sets the shim of Zip.QuickAppend(String ZipFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.RemoveEmbeddedStringString">
            <summary>Sets the shim of Zip.RemoveEmbedded(String exeFilename, String resourceName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.RemoveNoCompressExtensionString">
            <summary>Sets the shim of Zip.RemoveNoCompressExtension(String fileExtension)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ReplaceEmbeddedStringStringString">
            <summary>Sets the shim of Zip.ReplaceEmbedded(String exeFilename, String resourceName, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of Zip.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.SetCompressionLevelInt32">
            <summary>Sets the shim of Zip.SetCompressionLevel(Int32 level)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.SetExclusionsStringArray">
            <summary>Sets the shim of Zip.SetExclusions(StringArray excludePatterns)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.SetExeConfigParamStringString">
            <summary>Sets the shim of Zip.SetExeConfigParam(String paramName, String paramValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.SetPasswordString">
            <summary>Sets the shim of Zip.SetPassword(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.TempDirGet">
            <summary>Sets the shim of Zip.get_TempDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.TempDirSetString">
            <summary>Sets the shim of Zip.set_TempDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.TextFlagGet">
            <summary>Sets the shim of Zip.get_TextFlag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.TextFlagSetBoolean">
            <summary>Sets the shim of Zip.set_TextFlag(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ToString01">
            <summary>Sets the shim of Zip.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnlockComponentString">
            <summary>Sets the shim of Zip.UnlockComponent(String regCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipAsyncString">
            <summary>Sets the shim of Zip.UnzipAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipIntoAsyncString">
            <summary>Sets the shim of Zip.UnzipIntoAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipIntoString">
            <summary>Sets the shim of Zip.UnzipInto(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipMatchingAsyncStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatchingAsync(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipMatchingIntoAsyncStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatchingIntoAsync(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipMatchingIntoStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatchingInto(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipMatchingStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatching(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipNewerAsyncString">
            <summary>Sets the shim of Zip.UnzipNewerAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipNewerString">
            <summary>Sets the shim of Zip.UnzipNewer(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.UnzipString">
            <summary>Sets the shim of Zip.Unzip(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of Zip.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Zip.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.VerifyPassword">
            <summary>Sets the shim of Zip.VerifyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.VersionGet">
            <summary>Sets the shim of Zip.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteBdAsyncBinData">
            <summary>Sets the shim of Zip.WriteBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteBdBinData">
            <summary>Sets the shim of Zip.WriteBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteExeString">
            <summary>Sets the shim of Zip.WriteExe(String exeFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteExeToMemory">
            <summary>Sets the shim of Zip.WriteExeToMemory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteToMemory">
            <summary>Sets the shim of Zip.WriteToMemory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteToMemoryAsync">
            <summary>Sets the shim of Zip.WriteToMemoryAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteZip">
            <summary>Sets the shim of Zip.WriteZip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteZipAndClose">
            <summary>Sets the shim of Zip.WriteZipAndClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteZipAndCloseAsync">
            <summary>Sets the shim of Zip.WriteZipAndCloseAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.WriteZipAsync">
            <summary>Sets the shim of Zip.WriteZipAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ZipxDefaultAlgGet">
            <summary>Sets the shim of Zip.get_ZipxDefaultAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ZipxDefaultAlgSetString">
            <summary>Sets the shim of Zip.set_ZipxDefaultAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ZipxGet">
            <summary>Sets the shim of Zip.get_Zipx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances.ZipxSetBoolean">
            <summary>Sets the shim of Zip.set_Zipx(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances._Zip">
            <summary>Sets the shim of Zip.!Zip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AllInstances._Zip01">
            <summary>Sets the shim of Zip.~Zip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendBase64StringString">
            <summary>Sets the shim of Zip.AppendBase64(String fileName, String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendBdStringBinData">
            <summary>Sets the shim of Zip.AppendBd(String pathInZip, BinData byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendCompressedStringByteArray">
            <summary>Sets the shim of Zip.AppendCompressed(String filename, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendDataEncodedStringStringString">
            <summary>Sets the shim of Zip.AppendDataEncoded(String filename, String encoding, String data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendDataStringByteArray">
            <summary>Sets the shim of Zip.AppendData(String fileName, Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendFilesAsyncStringBoolean">
            <summary>Sets the shim of Zip.AppendFilesAsync(String filePattern, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendFilesExAsyncStringBooleanBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Zip.AppendFilesExAsync(String filePattern, Boolean recurse, Boolean saveExtraPath, Boolean archiveOnly, Boolean includeHidden, Boolean includeSystem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendFilesExStringBooleanBooleanBooleanBooleanBoolean">
            <summary>Sets the shim of Zip.AppendFilesEx(String filePattern, Boolean recurse, Boolean saveExtraPath, Boolean archiveOnly, Boolean includeHidden, Boolean includeSystem)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendFilesStringBoolean">
            <summary>Sets the shim of Zip.AppendFiles(String filePattern, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendFromDirGet">
            <summary>Sets the shim of Zip.get_AppendFromDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendFromDirSetString">
            <summary>Sets the shim of Zip.set_AppendFromDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendHexStringString">
            <summary>Sets the shim of Zip.AppendHex(String fileName, String encodedCompressedData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendMultipleAsyncStringArrayBoolean">
            <summary>Sets the shim of Zip.AppendMultipleAsync(StringArray fileSpecs, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendMultipleStringArrayBoolean">
            <summary>Sets the shim of Zip.AppendMultiple(StringArray fileSpecs, Boolean recurse)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendNewDirString">
            <summary>Sets the shim of Zip.AppendNewDir(String dirName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendNewString">
            <summary>Sets the shim of Zip.AppendNew(String fileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendOneFileOrDirAsyncStringBoolean">
            <summary>Sets the shim of Zip.AppendOneFileOrDirAsync(String fileOrDirPath, Boolean saveExtraPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendOneFileOrDirStringBoolean">
            <summary>Sets the shim of Zip.AppendOneFileOrDir(String fileOrDirPath, Boolean saveExtraPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendString2StringStringString">
            <summary>Sets the shim of Zip.AppendString2(String internalZipFilepath, String textData, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendStringStringString">
            <summary>Sets the shim of Zip.AppendString(String internalZipFilepath, String textData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AppendZipString">
            <summary>Sets the shim of Zip.AppendZip(String zipFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AutoRunGet">
            <summary>Sets the shim of Zip.get_AutoRun()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AutoRunParamsGet">
            <summary>Sets the shim of Zip.get_AutoRunParams()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AutoRunParamsSetString">
            <summary>Sets the shim of Zip.set_AutoRunParams(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AutoRunSetString">
            <summary>Sets the shim of Zip.set_AutoRun(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AutoTempGet">
            <summary>Sets the shim of Zip.get_AutoTemp()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.AutoTempSetBoolean">
            <summary>Sets the shim of Zip.set_AutoTemp(Boolean propVal)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZip.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZip.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZip.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.CaseSensitiveGet">
            <summary>Sets the shim of Zip.get_CaseSensitive()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.CaseSensitiveSetBoolean">
            <summary>Sets the shim of Zip.set_CaseSensitive(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ClearArchiveAttributeGet">
            <summary>Sets the shim of Zip.get_ClearArchiveAttribute()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ClearArchiveAttributeSetBoolean">
            <summary>Sets the shim of Zip.set_ClearArchiveAttribute(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ClearReadOnlyAttrGet">
            <summary>Sets the shim of Zip.get_ClearReadOnlyAttr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ClearReadOnlyAttrSetBoolean">
            <summary>Sets the shim of Zip.set_ClearReadOnlyAttr(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.CloseZip">
            <summary>Sets the shim of Zip.CloseZip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.CommentGet">
            <summary>Sets the shim of Zip.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.CommentSetString">
            <summary>Sets the shim of Zip.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.Constructor">
            <summary>Sets the shim of Zip.Zip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DebugLogFilePathGet">
            <summary>Sets the shim of Zip.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DebugLogFilePathSetString">
            <summary>Sets the shim of Zip.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DecryptPasswordGet">
            <summary>Sets the shim of Zip.get_DecryptPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DecryptPasswordSetString">
            <summary>Sets the shim of Zip.set_DecryptPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DeleteEntryZipEntry">
            <summary>Sets the shim of Zip.DeleteEntry(ZipEntry entry)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DiscardPathsGet">
            <summary>Sets the shim of Zip.get_DiscardPaths()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DiscardPathsSetBoolean">
            <summary>Sets the shim of Zip.set_DiscardPaths(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.Dispose">
            <summary>Sets the shim of Zip.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.DisposeBoolean">
            <summary>Sets the shim of Zip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EnableEventsGet">
            <summary>Sets the shim of Zip.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EnableEventsSetBoolean">
            <summary>Sets the shim of Zip.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EncryptKeyLengthGet">
            <summary>Sets the shim of Zip.get_EncryptKeyLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EncryptKeyLengthSetInt32">
            <summary>Sets the shim of Zip.set_EncryptKeyLength(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EncryptPasswordGet">
            <summary>Sets the shim of Zip.get_EncryptPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EncryptPasswordSetString">
            <summary>Sets the shim of Zip.set_EncryptPassword(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EncryptionGet">
            <summary>Sets the shim of Zip.get_Encryption()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.EncryptionSetInt32">
            <summary>Sets the shim of Zip.set_Encryption(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExcludeDirString">
            <summary>Sets the shim of Zip.ExcludeDir(String dirName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeDefaultDirGet">
            <summary>Sets the shim of Zip.get_ExeDefaultDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeDefaultDirSetString">
            <summary>Sets the shim of Zip.set_ExeDefaultDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeFinishNotifierGet">
            <summary>Sets the shim of Zip.get_ExeFinishNotifier()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeFinishNotifierSetBoolean">
            <summary>Sets the shim of Zip.set_ExeFinishNotifier(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeIconFileGet">
            <summary>Sets the shim of Zip.get_ExeIconFile()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeIconFileSetString">
            <summary>Sets the shim of Zip.set_ExeIconFile(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeNoInterfaceGet">
            <summary>Sets the shim of Zip.get_ExeNoInterface()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeNoInterfaceSetBoolean">
            <summary>Sets the shim of Zip.set_ExeNoInterface(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeSilentProgressGet">
            <summary>Sets the shim of Zip.get_ExeSilentProgress()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeSilentProgressSetBoolean">
            <summary>Sets the shim of Zip.set_ExeSilentProgress(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeTitleGet">
            <summary>Sets the shim of Zip.get_ExeTitle()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeTitleSetString">
            <summary>Sets the shim of Zip.set_ExeTitle(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeUnzipCaptionGet">
            <summary>Sets the shim of Zip.get_ExeUnzipCaption()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeUnzipCaptionSetString">
            <summary>Sets the shim of Zip.set_ExeUnzipCaption(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeUnzipDirGet">
            <summary>Sets the shim of Zip.get_ExeUnzipDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeUnzipDirSetString">
            <summary>Sets the shim of Zip.set_ExeUnzipDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeWaitForSetupGet">
            <summary>Sets the shim of Zip.get_ExeWaitForSetup()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeWaitForSetupSetBoolean">
            <summary>Sets the shim of Zip.set_ExeWaitForSetup(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeXmlConfigGet">
            <summary>Sets the shim of Zip.get_ExeXmlConfig()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExeXmlConfigSetString">
            <summary>Sets the shim of Zip.set_ExeXmlConfig(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractAsyncString">
            <summary>Sets the shim of Zip.ExtractAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractExeAsyncStringString">
            <summary>Sets the shim of Zip.ExtractExeAsync(String exePath, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractExeStringString">
            <summary>Sets the shim of Zip.ExtractExe(String exePath, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractIntoString">
            <summary>Sets the shim of Zip.ExtractInto(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractMatchingStringString">
            <summary>Sets the shim of Zip.ExtractMatching(String dirPath, String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractNewerString">
            <summary>Sets the shim of Zip.ExtractNewer(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractOneZipEntryString">
            <summary>Sets the shim of Zip.ExtractOne(ZipEntry entry, String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ExtractString">
            <summary>Sets the shim of Zip.Extract(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FileCountGet">
            <summary>Sets the shim of Zip.get_FileCount()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FileNameGet">
            <summary>Sets the shim of Zip.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FileNameSetString">
            <summary>Sets the shim of Zip.set_FileName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of Zip.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireAddFilesBeginObjectEventArgs">
            <summary>Sets the shim of Zip.FireAddFilesBegin(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireAddFilesEndObjectEventArgs">
            <summary>Sets the shim of Zip.FireAddFilesEnd(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireDirToBeAddedObjectDirToBeAddedEventArgs">
            <summary>Sets the shim of Zip.FireDirToBeAdded(Object sender, DirToBeAddedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireFileAddedObjectFileAddedEventArgs">
            <summary>Sets the shim of Zip.FireFileAdded(Object sender, FileAddedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireFileUnzippedObjectFileUnzippedEventArgs">
            <summary>Sets the shim of Zip.FireFileUnzipped(Object sender, FileUnzippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireFileZippedObjectFileZippedEventArgs">
            <summary>Sets the shim of Zip.FireFileZipped(Object sender, FileZippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of Zip.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of Zip.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireSkippedForUnzipObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.FireSkippedForUnzip(Object sender, ToBeUnzippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Zip.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireToBeAddedObjectToBeAddedEventArgs">
            <summary>Sets the shim of Zip.FireToBeAdded(Object sender, ToBeAddedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireToBeUnzippedObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.FireToBeUnzipped(Object sender, ToBeUnzippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireToBeZippedObjectToBeZippedEventArgs">
            <summary>Sets the shim of Zip.FireToBeZipped(Object sender, ToBeZippedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireUnzipBeginObjectEventArgs">
            <summary>Sets the shim of Zip.FireUnzipBegin(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireUnzipEndObjectEventArgs">
            <summary>Sets the shim of Zip.FireUnzipEnd(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireWriteZipBeginObjectEventArgs">
            <summary>Sets the shim of Zip.FireWriteZipBegin(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FireWriteZipEndObjectEventArgs">
            <summary>Sets the shim of Zip.FireWriteZipEnd(Object sender, EventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FirstEntry">
            <summary>Sets the shim of Zip.FirstEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.FirstMatchingEntryString">
            <summary>Sets the shim of Zip.FirstMatchingEntry(String pattern)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.GetDirectoryAsXML">
            <summary>Sets the shim of Zip.GetDirectoryAsXML()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.GetEntryByIDInt32">
            <summary>Sets the shim of Zip.GetEntryByID(Int32 entryID)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.GetEntryByIndexInt32">
            <summary>Sets the shim of Zip.GetEntryByIndex(Int32 index)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.GetEntryByNameString">
            <summary>Sets the shim of Zip.GetEntryByName(String entryName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.GetExclusions">
            <summary>Sets the shim of Zip.GetExclusions()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.GetExeConfigParamString">
            <summary>Sets the shim of Zip.GetExeConfigParam(String name)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.HasZipFormatErrorsGet">
            <summary>Sets the shim of Zip.get_HasZipFormatErrors()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.HeartbeatMsGet">
            <summary>Sets the shim of Zip.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.HeartbeatMsSetInt32">
            <summary>Sets the shim of Zip.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.IgnoreAccessDeniedGet">
            <summary>Sets the shim of Zip.get_IgnoreAccessDenied()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.IgnoreAccessDeniedSetBoolean">
            <summary>Sets the shim of Zip.set_IgnoreAccessDenied(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.InsertNewStringInt32">
            <summary>Sets the shim of Zip.InsertNew(String fileName, Int32 beforeIndex)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.IsNoCompressExtensionString">
            <summary>Sets the shim of Zip.IsNoCompressExtension(String fileExtension)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.IsPasswordProtectedString">
            <summary>Sets the shim of Zip.IsPasswordProtected(String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.IsUnlocked">
            <summary>Sets the shim of Zip.IsUnlocked()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.LastErrorHtmlGet">
            <summary>Sets the shim of Zip.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.LastErrorTextGet">
            <summary>Sets the shim of Zip.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.LastErrorXmlGet">
            <summary>Sets the shim of Zip.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.LastMethodSuccessGet">
            <summary>Sets the shim of Zip.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of Zip.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.NewZipString">
            <summary>Sets the shim of Zip.NewZip(String zipFilePath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.NumEntriesGet">
            <summary>Sets the shim of Zip.get_NumEntries()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OemCodePageGet">
            <summary>Sets the shim of Zip.get_OemCodePage()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OemCodePageSetInt32">
            <summary>Sets the shim of Zip.set_OemCodePage(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAbortCheckAddZipAbortCheckEventHandler">
            <summary>Sets the shim of Zip.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of Zip.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAbortCheckRemoveZipAbortCheckEventHandler">
            <summary>Sets the shim of Zip.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAddFilesBeginAddZipAddFilesBeginEventHandler">
            <summary>Sets the shim of Zip.add_OnAddFilesBegin(AddFilesBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAddFilesBeginRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnAddFilesBegin(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAddFilesBeginRemoveZipAddFilesBeginEventHandler">
            <summary>Sets the shim of Zip.remove_OnAddFilesBegin(AddFilesBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAddFilesEndAddZipAddFilesEndEventHandler">
            <summary>Sets the shim of Zip.add_OnAddFilesEnd(AddFilesEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAddFilesEndRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnAddFilesEnd(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnAddFilesEndRemoveZipAddFilesEndEventHandler">
            <summary>Sets the shim of Zip.remove_OnAddFilesEnd(AddFilesEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnDirToBeAddedAddZipDirToBeAddedEventHandler">
            <summary>Sets the shim of Zip.add_OnDirToBeAdded(DirToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnDirToBeAddedRaiseObjectDirToBeAddedEventArgs">
            <summary>Sets the shim of Zip.raise_OnDirToBeAdded(Object value0, DirToBeAddedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnDirToBeAddedRemoveZipDirToBeAddedEventHandler">
            <summary>Sets the shim of Zip.remove_OnDirToBeAdded(DirToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileAddedAddZipFileAddedEventHandler">
            <summary>Sets the shim of Zip.add_OnFileAdded(FileAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileAddedRaiseObjectFileAddedEventArgs">
            <summary>Sets the shim of Zip.raise_OnFileAdded(Object value0, FileAddedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileAddedRemoveZipFileAddedEventHandler">
            <summary>Sets the shim of Zip.remove_OnFileAdded(FileAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileUnzippedAddZipFileUnzippedEventHandler">
            <summary>Sets the shim of Zip.add_OnFileUnzipped(FileUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileUnzippedRaiseObjectFileUnzippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnFileUnzipped(Object value0, FileUnzippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileUnzippedRemoveZipFileUnzippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnFileUnzipped(FileUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileZippedAddZipFileZippedEventHandler">
            <summary>Sets the shim of Zip.add_OnFileZipped(FileZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileZippedRaiseObjectFileZippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnFileZipped(Object value0, FileZippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnFileZippedRemoveZipFileZippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnFileZipped(FileZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnPercentDoneAddZipPercentDoneEventHandler">
            <summary>Sets the shim of Zip.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of Zip.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnPercentDoneRemoveZipPercentDoneEventHandler">
            <summary>Sets the shim of Zip.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnProgressInfoAddZipProgressInfoEventHandler">
            <summary>Sets the shim of Zip.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of Zip.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnProgressInfoRemoveZipProgressInfoEventHandler">
            <summary>Sets the shim of Zip.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnSkippedForUnzipAddZipSkippedForUnzipEventHandler">
            <summary>Sets the shim of Zip.add_OnSkippedForUnzip(SkippedForUnzipEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnSkippedForUnzipRaiseObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnSkippedForUnzip(Object value0, ToBeUnzippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnSkippedForUnzipRemoveZipSkippedForUnzipEventHandler">
            <summary>Sets the shim of Zip.remove_OnSkippedForUnzip(SkippedForUnzipEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnTaskCompletedAddZipTaskCompletedEventHandler">
            <summary>Sets the shim of Zip.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of Zip.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnTaskCompletedRemoveZipTaskCompletedEventHandler">
            <summary>Sets the shim of Zip.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeAddedAddZipToBeAddedEventHandler">
            <summary>Sets the shim of Zip.add_OnToBeAdded(ToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeAddedRaiseObjectToBeAddedEventArgs">
            <summary>Sets the shim of Zip.raise_OnToBeAdded(Object value0, ToBeAddedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeAddedRemoveZipToBeAddedEventHandler">
            <summary>Sets the shim of Zip.remove_OnToBeAdded(ToBeAddedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeUnzippedAddZipToBeUnzippedEventHandler">
            <summary>Sets the shim of Zip.add_OnToBeUnzipped(ToBeUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeUnzippedRaiseObjectToBeUnzippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnToBeUnzipped(Object value0, ToBeUnzippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeUnzippedRemoveZipToBeUnzippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnToBeUnzipped(ToBeUnzippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeZippedAddZipToBeZippedEventHandler">
            <summary>Sets the shim of Zip.add_OnToBeZipped(ToBeZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeZippedRaiseObjectToBeZippedEventArgs">
            <summary>Sets the shim of Zip.raise_OnToBeZipped(Object value0, ToBeZippedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnToBeZippedRemoveZipToBeZippedEventHandler">
            <summary>Sets the shim of Zip.remove_OnToBeZipped(ToBeZippedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnUnzipBeginAddZipUnzipBeginEventHandler">
            <summary>Sets the shim of Zip.add_OnUnzipBegin(UnzipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnUnzipBeginRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnUnzipBegin(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnUnzipBeginRemoveZipUnzipBeginEventHandler">
            <summary>Sets the shim of Zip.remove_OnUnzipBegin(UnzipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnUnzipEndAddZipUnzipEndEventHandler">
            <summary>Sets the shim of Zip.add_OnUnzipEnd(UnzipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnUnzipEndRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnUnzipEnd(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnUnzipEndRemoveZipUnzipEndEventHandler">
            <summary>Sets the shim of Zip.remove_OnUnzipEnd(UnzipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnWriteZipBeginAddZipWriteZipBeginEventHandler">
            <summary>Sets the shim of Zip.add_OnWriteZipBegin(WriteZipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnWriteZipBeginRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnWriteZipBegin(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnWriteZipBeginRemoveZipWriteZipBeginEventHandler">
            <summary>Sets the shim of Zip.remove_OnWriteZipBegin(WriteZipBeginEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnWriteZipEndAddZipWriteZipEndEventHandler">
            <summary>Sets the shim of Zip.add_OnWriteZipEnd(WriteZipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnWriteZipEndRaiseObjectEventArgs">
            <summary>Sets the shim of Zip.raise_OnWriteZipEnd(Object value0, EventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OnWriteZipEndRemoveZipWriteZipEndEventHandler">
            <summary>Sets the shim of Zip.remove_OnWriteZipEnd(WriteZipEndEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenBdBinData">
            <summary>Sets the shim of Zip.OpenBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenEmbeddedStringString">
            <summary>Sets the shim of Zip.OpenEmbedded(String exeFilename, String resourceName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenFromByteDataByteArray">
            <summary>Sets the shim of Zip.OpenFromByteData(Byte[] byteData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenFromMemoryByteArray">
            <summary>Sets the shim of Zip.OpenFromMemory(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenMyEmbeddedString">
            <summary>Sets the shim of Zip.OpenMyEmbedded(String resourceName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenZipAsyncString">
            <summary>Sets the shim of Zip.OpenZipAsync(String zipPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OpenZipString">
            <summary>Sets the shim of Zip.OpenZip(String zipPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OverwriteExistingGet">
            <summary>Sets the shim of Zip.get_OverwriteExisting()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.OverwriteExistingSetBoolean">
            <summary>Sets the shim of Zip.set_OverwriteExisting(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.PasswordProtectGet">
            <summary>Sets the shim of Zip.get_PasswordProtect()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.PasswordProtectSetBoolean">
            <summary>Sets the shim of Zip.set_PasswordProtect(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.PathPrefixGet">
            <summary>Sets the shim of Zip.get_PathPrefix()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.PathPrefixSetString">
            <summary>Sets the shim of Zip.set_PathPrefix(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.PercentDoneScaleGet">
            <summary>Sets the shim of Zip.get_PercentDoneScale()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.PercentDoneScaleSetInt32">
            <summary>Sets the shim of Zip.set_PercentDoneScale(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.QuickAppendAsyncString">
            <summary>Sets the shim of Zip.QuickAppendAsync(String ZipFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.QuickAppendString">
            <summary>Sets the shim of Zip.QuickAppend(String ZipFileName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.RemoveEmbeddedStringString">
            <summary>Sets the shim of Zip.RemoveEmbedded(String exeFilename, String resourceName)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.RemoveNoCompressExtensionString">
            <summary>Sets the shim of Zip.RemoveNoCompressExtension(String fileExtension)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ReplaceEmbeddedStringStringString">
            <summary>Sets the shim of Zip.ReplaceEmbedded(String exeFilename, String resourceName, String zipFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.SaveLastErrorString">
            <summary>Sets the shim of Zip.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.SetCompressionLevelInt32">
            <summary>Sets the shim of Zip.SetCompressionLevel(Int32 level)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.SetExclusionsStringArray">
            <summary>Sets the shim of Zip.SetExclusions(StringArray excludePatterns)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.SetExeConfigParamStringString">
            <summary>Sets the shim of Zip.SetExeConfigParam(String paramName, String paramValue)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.SetPasswordString">
            <summary>Sets the shim of Zip.SetPassword(String password)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.TempDirGet">
            <summary>Sets the shim of Zip.get_TempDir()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.TempDirSetString">
            <summary>Sets the shim of Zip.set_TempDir(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.TextFlagGet">
            <summary>Sets the shim of Zip.get_TextFlag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.TextFlagSetBoolean">
            <summary>Sets the shim of Zip.set_TextFlag(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ToString">
            <summary>Sets the shim of Zip.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnlockComponentString">
            <summary>Sets the shim of Zip.UnlockComponent(String regCode)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipAsyncString">
            <summary>Sets the shim of Zip.UnzipAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipIntoAsyncString">
            <summary>Sets the shim of Zip.UnzipIntoAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipIntoString">
            <summary>Sets the shim of Zip.UnzipInto(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipMatchingAsyncStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatchingAsync(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipMatchingIntoAsyncStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatchingIntoAsync(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipMatchingIntoStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatchingInto(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipMatchingStringStringBoolean">
            <summary>Sets the shim of Zip.UnzipMatching(String dirPath, String pattern, Boolean verbose)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipNewerAsyncString">
            <summary>Sets the shim of Zip.UnzipNewerAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipNewerString">
            <summary>Sets the shim of Zip.UnzipNewer(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.UnzipString">
            <summary>Sets the shim of Zip.Unzip(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.VerboseLoggingGet">
            <summary>Sets the shim of Zip.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.VerboseLoggingSetBoolean">
            <summary>Sets the shim of Zip.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.VerifyPassword">
            <summary>Sets the shim of Zip.VerifyPassword()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.VersionGet">
            <summary>Sets the shim of Zip.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteBdAsyncBinData">
            <summary>Sets the shim of Zip.WriteBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteBdBinData">
            <summary>Sets the shim of Zip.WriteBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteExeString">
            <summary>Sets the shim of Zip.WriteExe(String exeFilename)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteExeToMemory">
            <summary>Sets the shim of Zip.WriteExeToMemory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteToMemory">
            <summary>Sets the shim of Zip.WriteToMemory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteToMemoryAsync">
            <summary>Sets the shim of Zip.WriteToMemoryAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteZip">
            <summary>Sets the shim of Zip.WriteZip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteZipAndClose">
            <summary>Sets the shim of Zip.WriteZipAndClose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteZipAndCloseAsync">
            <summary>Sets the shim of Zip.WriteZipAndCloseAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.WriteZipAsync">
            <summary>Sets the shim of Zip.WriteZipAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ZipxDefaultAlgGet">
            <summary>Sets the shim of Zip.get_ZipxDefaultAlg()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ZipxDefaultAlgSetString">
            <summary>Sets the shim of Zip.set_ZipxDefaultAlg(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ZipxGet">
            <summary>Sets the shim of Zip.get_Zipx()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip.ZipxSetBoolean">
            <summary>Sets the shim of Zip.set_Zipx(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip._Zip">
            <summary>Sets the shim of Zip.!Zip()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZip._Zip01">
            <summary>Sets the shim of Zip.~Zip()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimZipCrc">
            <summary>Shim type of Chilkat.ZipCrc</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipCrc.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipCrc.#ctor(Chilkat.ZipCrc)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimZipCrc.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.BeginStream">
            <summary>Sets the shim of ZipCrc.BeginStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.CalculateCrcByteArray">
            <summary>Sets the shim of ZipCrc.CalculateCrc(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.Dispose">
            <summary>Sets the shim of ZipCrc.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ZipCrc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.EnableEventsGet">
            <summary>Sets the shim of ZipCrc.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of ZipCrc.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.EndStream">
            <summary>Sets the shim of ZipCrc.EndStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FileCrcAsyncString">
            <summary>Sets the shim of ZipCrc.FileCrcAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FileCrcString">
            <summary>Sets the shim of ZipCrc.FileCrc(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipCrc.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipCrc.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipCrc.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipCrc.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipCrc.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of ZipCrc.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of ZipCrc.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of ZipCrc.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.MoreDataByteArray">
            <summary>Sets the shim of ZipCrc.MoreData(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnAbortCheckAddZipCrcAbortCheckEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnAbortCheckRemoveZipCrcAbortCheckEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnBinaryDataAddZipCrcBinaryDataEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnBinaryDataRemoveZipCrcBinaryDataEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnPercentDoneAddZipCrcPercentDoneEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnPercentDoneRemoveZipCrcPercentDoneEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnProgressInfoAddZipCrcProgressInfoEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnProgressInfoRemoveZipCrcProgressInfoEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnTaskCompletedAddZipCrcTaskCompletedEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnTaskCompletedRemoveZipCrcTaskCompletedEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnTextDataAddZipCrcTextDataEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.OnTextDataRemoveZipCrcTextDataEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.ToHexInt32">
            <summary>Sets the shim of ZipCrc.ToHex(Int32 crc)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances.ToString01">
            <summary>Sets the shim of ZipCrc.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances._ZipCrc">
            <summary>Sets the shim of ZipCrc.!ZipCrc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.AllInstances._ZipCrc01">
            <summary>Sets the shim of ZipCrc.~ZipCrc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.BeginStream">
            <summary>Sets the shim of ZipCrc.BeginStream()</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipCrc.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipCrc.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipCrc.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.CalculateCrcByteArray">
            <summary>Sets the shim of ZipCrc.CalculateCrc(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.Constructor">
            <summary>Sets the shim of ZipCrc.ZipCrc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.Dispose">
            <summary>Sets the shim of ZipCrc.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.DisposeBoolean">
            <summary>Sets the shim of ZipCrc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.EnableEventsGet">
            <summary>Sets the shim of ZipCrc.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.EnableEventsSetBoolean">
            <summary>Sets the shim of ZipCrc.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.EndStream">
            <summary>Sets the shim of ZipCrc.EndStream()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FileCrcAsyncString">
            <summary>Sets the shim of ZipCrc.FileCrcAsync(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FileCrcString">
            <summary>Sets the shim of ZipCrc.FileCrc(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipCrc.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipCrc.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipCrc.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipCrc.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipCrc.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of ZipCrc.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.LastMethodSuccessGet">
            <summary>Sets the shim of ZipCrc.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of ZipCrc.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.MoreDataByteArray">
            <summary>Sets the shim of ZipCrc.MoreData(Byte[] data)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnAbortCheckAddZipCrcAbortCheckEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnAbortCheckRemoveZipCrcAbortCheckEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnBinaryDataAddZipCrcBinaryDataEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnBinaryDataRemoveZipCrcBinaryDataEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnPercentDoneAddZipCrcPercentDoneEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnPercentDoneRemoveZipCrcPercentDoneEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnProgressInfoAddZipCrcProgressInfoEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnProgressInfoRemoveZipCrcProgressInfoEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnTaskCompletedAddZipCrcTaskCompletedEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnTaskCompletedRemoveZipCrcTaskCompletedEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnTextDataAddZipCrcTextDataEventHandler">
            <summary>Sets the shim of ZipCrc.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of ZipCrc.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.OnTextDataRemoveZipCrcTextDataEventHandler">
            <summary>Sets the shim of ZipCrc.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.ToHexInt32">
            <summary>Sets the shim of ZipCrc.ToHex(Int32 crc)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc.ToString">
            <summary>Sets the shim of ZipCrc.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc._ZipCrc">
            <summary>Sets the shim of ZipCrc.!ZipCrc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipCrc._ZipCrc01">
            <summary>Sets the shim of ZipCrc.~ZipCrc()</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimZipEntry">
            <summary>Shim type of Chilkat.ZipEntry</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipEntry.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipEntry.#ctor(Chilkat.ZipEntry)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Chilkat.Fakes.ShimZipEntry.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.AppendDataAsyncByteArray">
            <summary>Sets the shim of ZipEntry.AppendDataAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.AppendDataByteArray">
            <summary>Sets the shim of ZipEntry.AppendData(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.AppendStringAsyncStringString">
            <summary>Sets the shim of ZipEntry.AppendStringAsync(String strContent, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.AppendStringStringString">
            <summary>Sets the shim of ZipEntry.AppendString(String strContent, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CommentGet">
            <summary>Sets the shim of ZipEntry.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CommentSetString">
            <summary>Sets the shim of ZipEntry.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CompressedLength64Get">
            <summary>Sets the shim of ZipEntry.get_CompressedLength64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CompressedLengthGet">
            <summary>Sets the shim of ZipEntry.get_CompressedLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CompressionLevelGet">
            <summary>Sets the shim of ZipEntry.get_CompressionLevel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CompressionLevelSetInt32">
            <summary>Sets the shim of ZipEntry.set_CompressionLevel(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CompressionMethodGet">
            <summary>Sets the shim of ZipEntry.get_CompressionMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CompressionMethodSetInt32">
            <summary>Sets the shim of ZipEntry.set_CompressionMethod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.Copy">
            <summary>Sets the shim of ZipEntry.Copy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CopyToBase64">
            <summary>Sets the shim of ZipEntry.CopyToBase64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CopyToHex">
            <summary>Sets the shim of ZipEntry.CopyToHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.CrcGet">
            <summary>Sets the shim of ZipEntry.get_Crc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.DebugLogFilePathGet">
            <summary>Sets the shim of ZipEntry.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.DebugLogFilePathSetString">
            <summary>Sets the shim of ZipEntry.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.Dispose">
            <summary>Sets the shim of ZipEntry.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ZipEntry.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.EnableEventsGet">
            <summary>Sets the shim of ZipEntry.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.EnableEventsSetBoolean">
            <summary>Sets the shim of ZipEntry.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.EncryptionKeyLenGet">
            <summary>Sets the shim of ZipEntry.get_EncryptionKeyLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.EntryIDGet">
            <summary>Sets the shim of ZipEntry.get_EntryID()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.EntryTypeGet">
            <summary>Sets the shim of ZipEntry.get_EntryType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ExtractAsyncString">
            <summary>Sets the shim of ZipEntry.ExtractAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ExtractIntoAsyncString">
            <summary>Sets the shim of ZipEntry.ExtractIntoAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ExtractIntoString">
            <summary>Sets the shim of ZipEntry.ExtractInto(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ExtractString">
            <summary>Sets the shim of ZipEntry.Extract(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileDateTimeGet">
            <summary>Sets the shim of ZipEntry.get_FileDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileDateTimeSetDateTime">
            <summary>Sets the shim of ZipEntry.set_FileDateTime(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileDateTimeStrGet">
            <summary>Sets the shim of ZipEntry.get_FileDateTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileDateTimeStrSetString">
            <summary>Sets the shim of ZipEntry.set_FileDateTimeStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileNameGet">
            <summary>Sets the shim of ZipEntry.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileNameHexGet">
            <summary>Sets the shim of ZipEntry.get_FileNameHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FileNameSetString">
            <summary>Sets the shim of ZipEntry.set_FileName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipEntry.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipEntry.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipEntry.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipEntry.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipEntry.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of ZipEntry.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.GetDt">
            <summary>Sets the shim of ZipEntry.GetDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.HeartbeatMsGet">
            <summary>Sets the shim of ZipEntry.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.HeartbeatMsSetInt32">
            <summary>Sets the shim of ZipEntry.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.Inflate">
            <summary>Sets the shim of ZipEntry.Inflate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.InflateAsync">
            <summary>Sets the shim of ZipEntry.InflateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.IsAesEncryptedGet">
            <summary>Sets the shim of ZipEntry.get_IsAesEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.IsDirectoryGet">
            <summary>Sets the shim of ZipEntry.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.LastErrorHtmlGet">
            <summary>Sets the shim of ZipEntry.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.LastErrorTextGet">
            <summary>Sets the shim of ZipEntry.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.LastErrorXmlGet">
            <summary>Sets the shim of ZipEntry.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.LastMethodSuccessGet">
            <summary>Sets the shim of ZipEntry.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of ZipEntry.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.NextEntry">
            <summary>Sets the shim of ZipEntry.NextEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.NextMatchingEntryString">
            <summary>Sets the shim of ZipEntry.NextMatchingEntry(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnAbortCheckAddZipEntryAbortCheckEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnAbortCheckRemoveZipEntryAbortCheckEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnBinaryDataAddZipEntryBinaryDataEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnBinaryDataRemoveZipEntryBinaryDataEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnPercentDoneAddZipEntryPercentDoneEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnPercentDoneRemoveZipEntryPercentDoneEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnProgressInfoAddZipEntryProgressInfoEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnProgressInfoRemoveZipEntryProgressInfoEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnTaskCompletedAddZipEntryTaskCompletedEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnTaskCompletedRemoveZipEntryTaskCompletedEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnTextDataAddZipEntryTextDataEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.OnTextDataRemoveZipEntryTextDataEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ReplaceDataByteArray">
            <summary>Sets the shim of ZipEntry.ReplaceData(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ReplaceStringStringString">
            <summary>Sets the shim of ZipEntry.ReplaceString(String strContent, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.SaveLastErrorString">
            <summary>Sets the shim of ZipEntry.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.SetDtCkDateTime">
            <summary>Sets the shim of ZipEntry.SetDt(CkDateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.TextFlagGet">
            <summary>Sets the shim of ZipEntry.get_TextFlag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.TextFlagSetBoolean">
            <summary>Sets the shim of ZipEntry.set_TextFlag(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.ToString01">
            <summary>Sets the shim of ZipEntry.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UncompressedLength64Get">
            <summary>Sets the shim of ZipEntry.get_UncompressedLength64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UncompressedLengthGet">
            <summary>Sets the shim of ZipEntry.get_UncompressedLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToBdAsyncBinData">
            <summary>Sets the shim of ZipEntry.UnzipToBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToBdBinData">
            <summary>Sets the shim of ZipEntry.UnzipToBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToSbAsyncInt32StringStringBuilder">
            <summary>Sets the shim of ZipEntry.UnzipToSbAsync(Int32 lineEndingBehavior, String srcCharset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToSbInt32StringStringBuilder">
            <summary>Sets the shim of ZipEntry.UnzipToSb(Int32 lineEndingBehavior, String srcCharset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToStreamAsyncStream">
            <summary>Sets the shim of ZipEntry.UnzipToStreamAsync(Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToStreamStream">
            <summary>Sets the shim of ZipEntry.UnzipToStream(Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToStringAsyncInt32String">
            <summary>Sets the shim of ZipEntry.UnzipToStringAsync(Int32 lineEndingBehavior, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.UnzipToStringInt32String">
            <summary>Sets the shim of ZipEntry.UnzipToString(Int32 lineEndingBehavior, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.VerboseLoggingGet">
            <summary>Sets the shim of ZipEntry.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.VerboseLoggingSetBoolean">
            <summary>Sets the shim of ZipEntry.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances.VersionGet">
            <summary>Sets the shim of ZipEntry.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances._ZipEntry">
            <summary>Sets the shim of ZipEntry.!ZipEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AllInstances._ZipEntry01">
            <summary>Sets the shim of ZipEntry.~ZipEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AppendDataAsyncByteArray">
            <summary>Sets the shim of ZipEntry.AppendDataAsync(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AppendDataByteArray">
            <summary>Sets the shim of ZipEntry.AppendData(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AppendStringAsyncStringString">
            <summary>Sets the shim of ZipEntry.AppendStringAsync(String strContent, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.AppendStringStringString">
            <summary>Sets the shim of ZipEntry.AppendString(String strContent, String charset)</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipEntry.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipEntry.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Chilkat.Fakes.ShimZipEntry.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CommentGet">
            <summary>Sets the shim of ZipEntry.get_Comment()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CommentSetString">
            <summary>Sets the shim of ZipEntry.set_Comment(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CompressedLength64Get">
            <summary>Sets the shim of ZipEntry.get_CompressedLength64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CompressedLengthGet">
            <summary>Sets the shim of ZipEntry.get_CompressedLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CompressionLevelGet">
            <summary>Sets the shim of ZipEntry.get_CompressionLevel()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CompressionLevelSetInt32">
            <summary>Sets the shim of ZipEntry.set_CompressionLevel(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CompressionMethodGet">
            <summary>Sets the shim of ZipEntry.get_CompressionMethod()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CompressionMethodSetInt32">
            <summary>Sets the shim of ZipEntry.set_CompressionMethod(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.Constructor">
            <summary>Sets the shim of ZipEntry.ZipEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.Copy">
            <summary>Sets the shim of ZipEntry.Copy()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CopyToBase64">
            <summary>Sets the shim of ZipEntry.CopyToBase64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CopyToHex">
            <summary>Sets the shim of ZipEntry.CopyToHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.CrcGet">
            <summary>Sets the shim of ZipEntry.get_Crc()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.DebugLogFilePathGet">
            <summary>Sets the shim of ZipEntry.get_DebugLogFilePath()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.DebugLogFilePathSetString">
            <summary>Sets the shim of ZipEntry.set_DebugLogFilePath(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.Dispose">
            <summary>Sets the shim of ZipEntry.Dispose()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.DisposeBoolean">
            <summary>Sets the shim of ZipEntry.Dispose(Boolean A_0)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.EnableEventsGet">
            <summary>Sets the shim of ZipEntry.get_EnableEvents()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.EnableEventsSetBoolean">
            <summary>Sets the shim of ZipEntry.set_EnableEvents(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.EncryptionKeyLenGet">
            <summary>Sets the shim of ZipEntry.get_EncryptionKeyLen()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.EntryIDGet">
            <summary>Sets the shim of ZipEntry.get_EntryID()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.EntryTypeGet">
            <summary>Sets the shim of ZipEntry.get_EntryType()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ExtractAsyncString">
            <summary>Sets the shim of ZipEntry.ExtractAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ExtractIntoAsyncString">
            <summary>Sets the shim of ZipEntry.ExtractIntoAsync(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ExtractIntoString">
            <summary>Sets the shim of ZipEntry.ExtractInto(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ExtractString">
            <summary>Sets the shim of ZipEntry.Extract(String dirPath)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileDateTimeGet">
            <summary>Sets the shim of ZipEntry.get_FileDateTime()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileDateTimeSetDateTime">
            <summary>Sets the shim of ZipEntry.set_FileDateTime(DateTime propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileDateTimeStrGet">
            <summary>Sets the shim of ZipEntry.get_FileDateTimeStr()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileDateTimeStrSetString">
            <summary>Sets the shim of ZipEntry.set_FileDateTimeStr(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileNameGet">
            <summary>Sets the shim of ZipEntry.get_FileName()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileNameHexGet">
            <summary>Sets the shim of ZipEntry.get_FileNameHex()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FileNameSetString">
            <summary>Sets the shim of ZipEntry.set_FileName(String propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FireAbortCheckObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipEntry.FireAbortCheck(Object sender, AbortCheckEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FireBinaryDataObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipEntry.FireBinaryData(Object sender, BinaryDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FirePercentDoneObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipEntry.FirePercentDone(Object sender, PercentDoneEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FireProgressInfoObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipEntry.FireProgressInfo(Object sender, ProgressInfoEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FireTaskCompletedObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipEntry.FireTaskCompleted(Object sender, TaskCompletedEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.FireTextDataObjectTextDataEventArgs">
            <summary>Sets the shim of ZipEntry.FireTextData(Object sender, TextDataEventArgs args)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.GetDt">
            <summary>Sets the shim of ZipEntry.GetDt()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.HeartbeatMsGet">
            <summary>Sets the shim of ZipEntry.get_HeartbeatMs()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.HeartbeatMsSetInt32">
            <summary>Sets the shim of ZipEntry.set_HeartbeatMs(Int32 propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.Inflate">
            <summary>Sets the shim of ZipEntry.Inflate()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.InflateAsync">
            <summary>Sets the shim of ZipEntry.InflateAsync()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.IsAesEncryptedGet">
            <summary>Sets the shim of ZipEntry.get_IsAesEncrypted()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.IsDirectoryGet">
            <summary>Sets the shim of ZipEntry.get_IsDirectory()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.LastErrorHtmlGet">
            <summary>Sets the shim of ZipEntry.get_LastErrorHtml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.LastErrorTextGet">
            <summary>Sets the shim of ZipEntry.get_LastErrorText()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.LastErrorXmlGet">
            <summary>Sets the shim of ZipEntry.get_LastErrorXml()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.LastMethodSuccessGet">
            <summary>Sets the shim of ZipEntry.get_LastMethodSuccess()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.LastMethodSuccessSetBoolean">
            <summary>Sets the shim of ZipEntry.set_LastMethodSuccess(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.NextEntry">
            <summary>Sets the shim of ZipEntry.NextEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.NextMatchingEntryString">
            <summary>Sets the shim of ZipEntry.NextMatchingEntry(String matchStr)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnAbortCheckAddZipEntryAbortCheckEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnAbortCheckRaiseObjectAbortCheckEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnAbortCheck(Object value0, AbortCheckEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnAbortCheckRemoveZipEntryAbortCheckEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnAbortCheck(AbortCheckEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnBinaryDataAddZipEntryBinaryDataEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnBinaryDataRaiseObjectBinaryDataEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnBinaryData(Object value0, BinaryDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnBinaryDataRemoveZipEntryBinaryDataEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnBinaryData(BinaryDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnPercentDoneAddZipEntryPercentDoneEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnPercentDoneRaiseObjectPercentDoneEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnPercentDone(Object value0, PercentDoneEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnPercentDoneRemoveZipEntryPercentDoneEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnPercentDone(PercentDoneEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnProgressInfoAddZipEntryProgressInfoEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnProgressInfoRaiseObjectProgressInfoEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnProgressInfo(Object value0, ProgressInfoEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnProgressInfoRemoveZipEntryProgressInfoEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnProgressInfo(ProgressInfoEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnTaskCompletedAddZipEntryTaskCompletedEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnTaskCompletedRaiseObjectTaskCompletedEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnTaskCompleted(Object value0, TaskCompletedEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnTaskCompletedRemoveZipEntryTaskCompletedEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnTaskCompleted(TaskCompletedEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnTextDataAddZipEntryTextDataEventHandler">
            <summary>Sets the shim of ZipEntry.add_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnTextDataRaiseObjectTextDataEventArgs">
            <summary>Sets the shim of ZipEntry.raise_OnTextData(Object value0, TextDataEventArgs value1)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.OnTextDataRemoveZipEntryTextDataEventHandler">
            <summary>Sets the shim of ZipEntry.remove_OnTextData(TextDataEventHandler value)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ReplaceDataByteArray">
            <summary>Sets the shim of ZipEntry.ReplaceData(Byte[] inData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ReplaceStringStringString">
            <summary>Sets the shim of ZipEntry.ReplaceString(String strContent, String charset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.SaveLastErrorString">
            <summary>Sets the shim of ZipEntry.SaveLastError(String path)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.SetDtCkDateTime">
            <summary>Sets the shim of ZipEntry.SetDt(CkDateTime dt)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.TextFlagGet">
            <summary>Sets the shim of ZipEntry.get_TextFlag()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.TextFlagSetBoolean">
            <summary>Sets the shim of ZipEntry.set_TextFlag(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.ToString">
            <summary>Sets the shim of ZipEntry.ToString()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UncompressedLength64Get">
            <summary>Sets the shim of ZipEntry.get_UncompressedLength64()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UncompressedLengthGet">
            <summary>Sets the shim of ZipEntry.get_UncompressedLength()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToBdAsyncBinData">
            <summary>Sets the shim of ZipEntry.UnzipToBdAsync(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToBdBinData">
            <summary>Sets the shim of ZipEntry.UnzipToBd(BinData binData)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToSbAsyncInt32StringStringBuilder">
            <summary>Sets the shim of ZipEntry.UnzipToSbAsync(Int32 lineEndingBehavior, String srcCharset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToSbInt32StringStringBuilder">
            <summary>Sets the shim of ZipEntry.UnzipToSb(Int32 lineEndingBehavior, String srcCharset, StringBuilder sb)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToStreamAsyncStream">
            <summary>Sets the shim of ZipEntry.UnzipToStreamAsync(Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToStreamStream">
            <summary>Sets the shim of ZipEntry.UnzipToStream(Stream toStream)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToStringAsyncInt32String">
            <summary>Sets the shim of ZipEntry.UnzipToStringAsync(Int32 lineEndingBehavior, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.UnzipToStringInt32String">
            <summary>Sets the shim of ZipEntry.UnzipToString(Int32 lineEndingBehavior, String srcCharset)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.VerboseLoggingGet">
            <summary>Sets the shim of ZipEntry.get_VerboseLogging()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.VerboseLoggingSetBoolean">
            <summary>Sets the shim of ZipEntry.set_VerboseLogging(Boolean propVal)</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry.VersionGet">
            <summary>Sets the shim of ZipEntry.get_Version()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry._ZipEntry">
            <summary>Sets the shim of ZipEntry.!ZipEntry()</summary>
        </member>
        <member name="P:Chilkat.Fakes.ShimZipEntry._ZipEntry01">
            <summary>Sets the shim of ZipEntry.~ZipEntry()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAbortCheckEventArgs">
            <summary>Stub type of Chilkat.AbortCheckEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAbortCheckEventArgs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAbortCheckEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAbortCheckEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of AbortCheckEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAbortCheckEventArgs.DisposeBoolean">
            <summary>Sets the stub of AbortCheckEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAbortCheckEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubAbortCheckEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAbortCheckEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAbortCheckEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAsn">
            <summary>Stub type of Chilkat.Asn</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAsn.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAsn.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAsn.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAsn.Dispose(System.Boolean)">
            <summary>Sets the stub of Asn.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAsn.DisposeBoolean">
            <summary>Sets the stub of Asn.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAsn.InitializeStub">
            <summary>Initializes a new instance of type StubAsn</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAsn.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAsn.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAsn.ToString">
            <summary>Sets the stub of Asn.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAsn.ToString01">
            <summary>Sets the stub of Asn.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAtom">
            <summary>Stub type of Chilkat.Atom</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAtom.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAtom.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAtom.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAtom.Dispose(System.Boolean)">
            <summary>Sets the stub of Atom.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAtom.DisposeBoolean">
            <summary>Sets the stub of Atom.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAtom.InitializeStub">
            <summary>Initializes a new instance of type StubAtom</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAtom.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAtom.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAtom.ToString">
            <summary>Sets the stub of Atom.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAtom.ToString01">
            <summary>Sets the stub of Atom.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAuthAws">
            <summary>Stub type of Chilkat.AuthAws</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAws.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAws.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAws.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAws.Dispose(System.Boolean)">
            <summary>Sets the stub of AuthAws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAws.DisposeBoolean">
            <summary>Sets the stub of AuthAws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAws.InitializeStub">
            <summary>Initializes a new instance of type StubAuthAws</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAws.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAws.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAws.ToString">
            <summary>Sets the stub of AuthAws.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAws.ToString01">
            <summary>Sets the stub of AuthAws.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAuthAzureAD">
            <summary>Stub type of Chilkat.AuthAzureAD</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureAD.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureAD.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureAD.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureAD.Dispose(System.Boolean)">
            <summary>Sets the stub of AuthAzureAD.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAzureAD.DisposeBoolean">
            <summary>Sets the stub of AuthAzureAD.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureAD.InitializeStub">
            <summary>Initializes a new instance of type StubAuthAzureAD</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureAD.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureAD.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureAD.ToString">
            <summary>Sets the stub of AuthAzureAD.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAzureAD.ToString01">
            <summary>Sets the stub of AuthAzureAD.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAuthAzureSAS">
            <summary>Stub type of Chilkat.AuthAzureSAS</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureSAS.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureSAS.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureSAS.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureSAS.Dispose(System.Boolean)">
            <summary>Sets the stub of AuthAzureSAS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAzureSAS.DisposeBoolean">
            <summary>Sets the stub of AuthAzureSAS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureSAS.InitializeStub">
            <summary>Initializes a new instance of type StubAuthAzureSAS</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureSAS.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureSAS.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureSAS.ToString">
            <summary>Sets the stub of AuthAzureSAS.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAzureSAS.ToString01">
            <summary>Sets the stub of AuthAzureSAS.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAuthAzureStorage">
            <summary>Stub type of Chilkat.AuthAzureStorage</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureStorage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureStorage.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureStorage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureStorage.Dispose(System.Boolean)">
            <summary>Sets the stub of AuthAzureStorage.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAzureStorage.DisposeBoolean">
            <summary>Sets the stub of AuthAzureStorage.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureStorage.InitializeStub">
            <summary>Initializes a new instance of type StubAuthAzureStorage</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureStorage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthAzureStorage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthAzureStorage.ToString">
            <summary>Sets the stub of AuthAzureStorage.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthAzureStorage.ToString01">
            <summary>Sets the stub of AuthAzureStorage.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAuthGoogle">
            <summary>Stub type of Chilkat.AuthGoogle</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthGoogle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthGoogle.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthGoogle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthGoogle.Dispose(System.Boolean)">
            <summary>Sets the stub of AuthGoogle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthGoogle.DisposeBoolean">
            <summary>Sets the stub of AuthGoogle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthGoogle.InitializeStub">
            <summary>Initializes a new instance of type StubAuthGoogle</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthGoogle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthGoogle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthGoogle.ToString">
            <summary>Sets the stub of AuthGoogle.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthGoogle.ToString01">
            <summary>Sets the stub of AuthGoogle.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubAuthUtil">
            <summary>Stub type of Chilkat.AuthUtil</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthUtil.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthUtil.Dispose(System.Boolean)">
            <summary>Sets the stub of AuthUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthUtil.DisposeBoolean">
            <summary>Sets the stub of AuthUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthUtil.InitializeStub">
            <summary>Initializes a new instance of type StubAuthUtil</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubAuthUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubAuthUtil.ToString">
            <summary>Sets the stub of AuthUtil.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubAuthUtil.ToString01">
            <summary>Sets the stub of AuthUtil.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubBinData">
            <summary>Stub type of Chilkat.BinData</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinData.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBinData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinData.Dispose(System.Boolean)">
            <summary>Sets the stub of BinData.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBinData.DisposeBoolean">
            <summary>Sets the stub of BinData.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinData.InitializeStub">
            <summary>Initializes a new instance of type StubBinData</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBinData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBinData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinData.ToString">
            <summary>Sets the stub of BinData.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBinData.ToString01">
            <summary>Sets the stub of BinData.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubBinaryDataEventArgs">
            <summary>Stub type of Chilkat.BinaryDataEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinaryDataEventArgs.#ctor(System.Byte*,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBinaryDataEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinaryDataEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of BinaryDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBinaryDataEventArgs.DisposeBoolean">
            <summary>Sets the stub of BinaryDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBinaryDataEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryDataEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBinaryDataEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBinaryDataEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubBounce">
            <summary>Stub type of Chilkat.Bounce</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBounce.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBounce.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBounce.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBounce.Dispose(System.Boolean)">
            <summary>Sets the stub of Bounce.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBounce.DisposeBoolean">
            <summary>Sets the stub of Bounce.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBounce.InitializeStub">
            <summary>Initializes a new instance of type StubBounce</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBounce.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBounce.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBounce.ToString">
            <summary>Sets the stub of Bounce.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBounce.ToString01">
            <summary>Sets the stub of Bounce.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubByteBuffer">
            <summary>Stub type of Chilkat.ByteBuffer</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubByteBuffer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubByteBuffer.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubByteBuffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubByteBuffer.Dispose(System.Boolean)">
            <summary>Sets the stub of ByteBuffer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubByteBuffer.DisposeBoolean">
            <summary>Sets the stub of ByteBuffer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubByteBuffer.InitializeStub">
            <summary>Initializes a new instance of type StubByteBuffer</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubByteBuffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubByteBuffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubBz2">
            <summary>Stub type of Chilkat.Bz2</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBz2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBz2.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBz2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBz2.Dispose(System.Boolean)">
            <summary>Sets the stub of Bz2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBz2.DisposeBoolean">
            <summary>Sets the stub of Bz2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBz2.InitializeStub">
            <summary>Initializes a new instance of type StubBz2</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBz2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubBz2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubBz2.ToString">
            <summary>Sets the stub of Bz2.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubBz2.ToString01">
            <summary>Sets the stub of Bz2.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCache">
            <summary>Stub type of Chilkat.Cache</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCache.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCache.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCache.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCache.Dispose(System.Boolean)">
            <summary>Sets the stub of Cache.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCache.DisposeBoolean">
            <summary>Sets the stub of Cache.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCache.InitializeStub">
            <summary>Initializes a new instance of type StubCache</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCache.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCache.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCache.ToString">
            <summary>Sets the stub of Cache.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCache.ToString01">
            <summary>Sets the stub of Cache.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCert">
            <summary>Stub type of Chilkat.Cert</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCert.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCert.Dispose(System.Boolean)">
            <summary>Sets the stub of Cert.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCert.DisposeBoolean">
            <summary>Sets the stub of Cert.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCert.InitializeStub">
            <summary>Initializes a new instance of type StubCert</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCert.ToString">
            <summary>Sets the stub of Cert.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCert.ToString01">
            <summary>Sets the stub of Cert.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCertChain">
            <summary>Stub type of Chilkat.CertChain</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertChain.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertChain.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCertChain.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertChain.Dispose(System.Boolean)">
            <summary>Sets the stub of CertChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCertChain.DisposeBoolean">
            <summary>Sets the stub of CertChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertChain.InitializeStub">
            <summary>Initializes a new instance of type StubCertChain</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCertChain.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCertChain.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertChain.ToString">
            <summary>Sets the stub of CertChain.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCertChain.ToString01">
            <summary>Sets the stub of CertChain.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCertStore">
            <summary>Stub type of Chilkat.CertStore</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertStore.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCertStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertStore.Dispose(System.Boolean)">
            <summary>Sets the stub of CertStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCertStore.DisposeBoolean">
            <summary>Sets the stub of CertStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertStore.InitializeStub">
            <summary>Initializes a new instance of type StubCertStore</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCertStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCertStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCertStore.ToString">
            <summary>Sets the stub of CertStore.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCertStore.ToString01">
            <summary>Sets the stub of CertStore.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCharset">
            <summary>Stub type of Chilkat.Charset</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCharset.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCharset.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCharset.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCharset.Dispose(System.Boolean)">
            <summary>Sets the stub of Charset.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCharset.DisposeBoolean">
            <summary>Sets the stub of Charset.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCharset.InitializeStub">
            <summary>Initializes a new instance of type StubCharset</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCharset.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCharset.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCharset.ToString">
            <summary>Sets the stub of Charset.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCharset.ToString01">
            <summary>Sets the stub of Charset.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCkDateTime">
            <summary>Stub type of Chilkat.CkDateTime</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkDateTime.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkDateTime.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkDateTime.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkDateTime.Dispose(System.Boolean)">
            <summary>Sets the stub of CkDateTime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCkDateTime.DisposeBoolean">
            <summary>Sets the stub of CkDateTime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkDateTime.InitializeStub">
            <summary>Initializes a new instance of type StubCkDateTime</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkDateTime.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkDateTime.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCkMarshal">
            <summary>Stub type of Chilkat.CkMarshal</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkMarshal.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkMarshal.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkMarshal.Dispose(System.Boolean)">
            <summary>Sets the stub of CkMarshal.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCkMarshal.DisposeBoolean">
            <summary>Sets the stub of CkMarshal.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkMarshal.InitializeStub">
            <summary>Initializes a new instance of type StubCkMarshal</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkMarshal.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkMarshal.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCkString">
            <summary>Stub type of Chilkat.CkString</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkString.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkString.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkString.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkString.Dispose(System.Boolean)">
            <summary>Sets the stub of CkString.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCkString.DisposeBoolean">
            <summary>Sets the stub of CkString.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkString.InitializeStub">
            <summary>Initializes a new instance of type StubCkString</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkString.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCkString.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCkString.ToString">
            <summary>Sets the stub of CkString.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCkString.ToString01">
            <summary>Sets the stub of CkString.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCompression">
            <summary>Stub type of Chilkat.Compression</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCompression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCompression.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCompression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCompression.Dispose(System.Boolean)">
            <summary>Sets the stub of Compression.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCompression.DisposeBoolean">
            <summary>Sets the stub of Compression.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCompression.InitializeStub">
            <summary>Initializes a new instance of type StubCompression</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCompression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCompression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCompression.ToString">
            <summary>Sets the stub of Compression.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCompression.ToString01">
            <summary>Sets the stub of Compression.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCreateCS">
            <summary>Stub type of Chilkat.CreateCS</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCreateCS.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCreateCS.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCreateCS.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCreateCS.Dispose(System.Boolean)">
            <summary>Sets the stub of CreateCS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCreateCS.DisposeBoolean">
            <summary>Sets the stub of CreateCS.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCreateCS.InitializeStub">
            <summary>Initializes a new instance of type StubCreateCS</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCreateCS.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCreateCS.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCreateCS.ToString">
            <summary>Sets the stub of CreateCS.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCreateCS.ToString01">
            <summary>Sets the stub of CreateCS.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCrypt2">
            <summary>Stub type of Chilkat.Crypt2</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCrypt2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCrypt2.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCrypt2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCrypt2.Dispose(System.Boolean)">
            <summary>Sets the stub of Crypt2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCrypt2.DisposeBoolean">
            <summary>Sets the stub of Crypt2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCrypt2.InitializeStub">
            <summary>Initializes a new instance of type StubCrypt2</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCrypt2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCrypt2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCrypt2.ToString">
            <summary>Sets the stub of Crypt2.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCrypt2.ToString01">
            <summary>Sets the stub of Crypt2.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCsp">
            <summary>Stub type of Chilkat.Csp</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsp.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsp.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsp.Dispose(System.Boolean)">
            <summary>Sets the stub of Csp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCsp.DisposeBoolean">
            <summary>Sets the stub of Csp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsp.InitializeStub">
            <summary>Initializes a new instance of type StubCsp</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsp.ToString">
            <summary>Sets the stub of Csp.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCsp.ToString01">
            <summary>Sets the stub of Csp.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCsr">
            <summary>Stub type of Chilkat.Csr</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsr.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsr.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsr.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsr.Dispose(System.Boolean)">
            <summary>Sets the stub of Csr.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCsr.DisposeBoolean">
            <summary>Sets the stub of Csr.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsr.InitializeStub">
            <summary>Initializes a new instance of type StubCsr</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsr.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsr.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsr.ToString">
            <summary>Sets the stub of Csr.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCsr.ToString01">
            <summary>Sets the stub of Csr.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubCsv">
            <summary>Stub type of Chilkat.Csv</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsv.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsv.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsv.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsv.Dispose(System.Boolean)">
            <summary>Sets the stub of Csv.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCsv.DisposeBoolean">
            <summary>Sets the stub of Csv.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsv.InitializeStub">
            <summary>Initializes a new instance of type StubCsv</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsv.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubCsv.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubCsv.ToString">
            <summary>Sets the stub of Csv.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubCsv.ToString01">
            <summary>Sets the stub of Csv.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDataRateEventArgs">
            <summary>Stub type of Chilkat.DataRateEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDataRateEventArgs.#ctor(System.Int64,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDataRateEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDataRateEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of DataRateEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDataRateEventArgs.DisposeBoolean">
            <summary>Sets the stub of DataRateEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDataRateEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDataRateEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDataRateEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDataRateEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDh">
            <summary>Stub type of Chilkat.Dh</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDh.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDh.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDh.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDh.Dispose(System.Boolean)">
            <summary>Sets the stub of Dh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDh.DisposeBoolean">
            <summary>Sets the stub of Dh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDh.InitializeStub">
            <summary>Initializes a new instance of type StubDh</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDh.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDh.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDh.ToString">
            <summary>Sets the stub of Dh.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDh.ToString01">
            <summary>Sets the stub of Dh.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDirToBeAddedEventArgs">
            <summary>Stub type of Chilkat.DirToBeAddedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirToBeAddedEventArgs.#ctor(System.SByte*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDirToBeAddedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirToBeAddedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of DirToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDirToBeAddedEventArgs.DisposeBoolean">
            <summary>Sets the stub of DirToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirToBeAddedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubDirToBeAddedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDirToBeAddedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDirToBeAddedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDirTree">
            <summary>Stub type of Chilkat.DirTree</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirTree.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirTree.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDirTree.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirTree.Dispose(System.Boolean)">
            <summary>Sets the stub of DirTree.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDirTree.DisposeBoolean">
            <summary>Sets the stub of DirTree.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirTree.InitializeStub">
            <summary>Initializes a new instance of type StubDirTree</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDirTree.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDirTree.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDirTree.ToString">
            <summary>Sets the stub of DirTree.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDirTree.ToString01">
            <summary>Sets the stub of DirTree.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDkim">
            <summary>Stub type of Chilkat.Dkim</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDkim.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDkim.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDkim.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDkim.Dispose(System.Boolean)">
            <summary>Sets the stub of Dkim.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDkim.DisposeBoolean">
            <summary>Sets the stub of Dkim.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDkim.InitializeStub">
            <summary>Initializes a new instance of type StubDkim</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDkim.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDkim.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDkim.ToString">
            <summary>Sets the stub of Dkim.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDkim.ToString01">
            <summary>Sets the stub of Dkim.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDsa">
            <summary>Stub type of Chilkat.Dsa</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDsa.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDsa.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDsa.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDsa.Dispose(System.Boolean)">
            <summary>Sets the stub of Dsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDsa.DisposeBoolean">
            <summary>Sets the stub of Dsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDsa.InitializeStub">
            <summary>Initializes a new instance of type StubDsa</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDsa.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDsa.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDsa.ToString">
            <summary>Sets the stub of Dsa.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDsa.ToString01">
            <summary>Sets the stub of Dsa.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubDtObj">
            <summary>Stub type of Chilkat.DtObj</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDtObj.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDtObj.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDtObj.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDtObj.Dispose(System.Boolean)">
            <summary>Sets the stub of DtObj.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDtObj.DisposeBoolean">
            <summary>Sets the stub of DtObj.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDtObj.InitializeStub">
            <summary>Initializes a new instance of type StubDtObj</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDtObj.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubDtObj.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubDtObj.ToString">
            <summary>Sets the stub of DtObj.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubDtObj.ToString01">
            <summary>Sets the stub of DtObj.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubEcc">
            <summary>Stub type of Chilkat.Ecc</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEcc.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEcc.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEcc.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEcc.Dispose(System.Boolean)">
            <summary>Sets the stub of Ecc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEcc.DisposeBoolean">
            <summary>Sets the stub of Ecc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEcc.InitializeStub">
            <summary>Initializes a new instance of type StubEcc</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEcc.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEcc.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEcc.ToString">
            <summary>Sets the stub of Ecc.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEcc.ToString01">
            <summary>Sets the stub of Ecc.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubEmail">
            <summary>Stub type of Chilkat.Email</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmail.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmail.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmail.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmail.Dispose(System.Boolean)">
            <summary>Sets the stub of Email.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEmail.DisposeBoolean">
            <summary>Sets the stub of Email.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmail.InitializeStub">
            <summary>Initializes a new instance of type StubEmail</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmail.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmail.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmail.ToString">
            <summary>Sets the stub of Email.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEmail.ToString01">
            <summary>Sets the stub of Email.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubEmailBundle">
            <summary>Stub type of Chilkat.EmailBundle</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailBundle.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailBundle.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmailBundle.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailBundle.Dispose(System.Boolean)">
            <summary>Sets the stub of EmailBundle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEmailBundle.DisposeBoolean">
            <summary>Sets the stub of EmailBundle.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailBundle.InitializeStub">
            <summary>Initializes a new instance of type StubEmailBundle</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmailBundle.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmailBundle.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailBundle.ToString">
            <summary>Sets the stub of EmailBundle.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEmailBundle.ToString01">
            <summary>Sets the stub of EmailBundle.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubEmailEventArgs">
            <summary>Stub type of Chilkat.EmailEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailEventArgs.#ctor(System.SByte*,System.SByte*,System.SByte*,System.SByte*,System.SByte*,System.SByte*,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmailEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of EmailEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubEmailEventArgs.DisposeBoolean">
            <summary>Sets the stub of EmailEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubEmailEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubEmailEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmailEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubEmailEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubFileAccess">
            <summary>Stub type of Chilkat.FileAccess</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAccess.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAccess.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileAccess.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAccess.Dispose(System.Boolean)">
            <summary>Sets the stub of FileAccess.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFileAccess.DisposeBoolean">
            <summary>Sets the stub of FileAccess.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAccess.InitializeStub">
            <summary>Initializes a new instance of type StubFileAccess</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileAccess.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileAccess.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAccess.ToString">
            <summary>Sets the stub of FileAccess.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFileAccess.ToString01">
            <summary>Sets the stub of FileAccess.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubFileAddedEventArgs">
            <summary>Stub type of Chilkat.FileAddedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAddedEventArgs.#ctor(System.SByte*,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileAddedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAddedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of FileAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFileAddedEventArgs.DisposeBoolean">
            <summary>Sets the stub of FileAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileAddedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFileAddedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileAddedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileAddedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubFileUnzippedEventArgs">
            <summary>Stub type of Chilkat.FileUnzippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileUnzippedEventArgs.#ctor(System.SByte*,System.Int64,System.Int64,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileUnzippedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileUnzippedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of FileUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFileUnzippedEventArgs.DisposeBoolean">
            <summary>Sets the stub of FileUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileUnzippedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFileUnzippedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileUnzippedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileUnzippedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubFileZippedEventArgs">
            <summary>Stub type of Chilkat.FileZippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileZippedEventArgs.#ctor(System.SByte*,System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileZippedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileZippedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of FileZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFileZippedEventArgs.DisposeBoolean">
            <summary>Sets the stub of FileZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFileZippedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFileZippedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileZippedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFileZippedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubFtp2">
            <summary>Stub type of Chilkat.Ftp2</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtp2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtp2.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFtp2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtp2.Dispose(System.Boolean)">
            <summary>Sets the stub of Ftp2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFtp2.DisposeBoolean">
            <summary>Sets the stub of Ftp2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtp2.InitializeStub">
            <summary>Initializes a new instance of type StubFtp2</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFtp2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFtp2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtp2.ToString">
            <summary>Sets the stub of Ftp2.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFtp2.ToString01">
            <summary>Sets the stub of Ftp2.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubFtpTreeEventArgs">
            <summary>Stub type of Chilkat.FtpTreeEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtpTreeEventArgs.#ctor(System.SByte*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtpTreeEventArgs.#ctor(System.SByte*,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFtpTreeEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtpTreeEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of FtpTreeEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubFtpTreeEventArgs.DisposeBoolean">
            <summary>Sets the stub of FtpTreeEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubFtpTreeEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubFtpTreeEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFtpTreeEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubFtpTreeEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubGlobal">
            <summary>Stub type of Chilkat.Global</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGlobal.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGlobal.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubGlobal.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGlobal.Dispose(System.Boolean)">
            <summary>Sets the stub of Global.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubGlobal.DisposeBoolean">
            <summary>Sets the stub of Global.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGlobal.InitializeStub">
            <summary>Initializes a new instance of type StubGlobal</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubGlobal.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubGlobal.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGlobal.ToString">
            <summary>Sets the stub of Global.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubGlobal.ToString01">
            <summary>Sets the stub of Global.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubGzip">
            <summary>Stub type of Chilkat.Gzip</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGzip.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGzip.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubGzip.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGzip.Dispose(System.Boolean)">
            <summary>Sets the stub of Gzip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubGzip.DisposeBoolean">
            <summary>Sets the stub of Gzip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGzip.InitializeStub">
            <summary>Initializes a new instance of type StubGzip</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubGzip.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubGzip.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubGzip.ToString">
            <summary>Sets the stub of Gzip.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubGzip.ToString01">
            <summary>Sets the stub of Gzip.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHashtable">
            <summary>Stub type of Chilkat.Hashtable</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHashtable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHashtable.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHashtable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHashtable.Dispose(System.Boolean)">
            <summary>Sets the stub of Hashtable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHashtable.DisposeBoolean">
            <summary>Sets the stub of Hashtable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHashtable.InitializeStub">
            <summary>Initializes a new instance of type StubHashtable</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHashtable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHashtable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHashtable.ToString">
            <summary>Sets the stub of Hashtable.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHashtable.ToString01">
            <summary>Sets the stub of Hashtable.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHtmlToText">
            <summary>Stub type of Chilkat.HtmlToText</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToText.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToText.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlToText.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToText.Dispose(System.Boolean)">
            <summary>Sets the stub of HtmlToText.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHtmlToText.DisposeBoolean">
            <summary>Sets the stub of HtmlToText.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToText.InitializeStub">
            <summary>Initializes a new instance of type StubHtmlToText</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlToText.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlToText.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToText.ToString">
            <summary>Sets the stub of HtmlToText.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHtmlToText.ToString01">
            <summary>Sets the stub of HtmlToText.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHtmlToXml">
            <summary>Stub type of Chilkat.HtmlToXml</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToXml.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToXml.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlToXml.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToXml.Dispose(System.Boolean)">
            <summary>Sets the stub of HtmlToXml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHtmlToXml.DisposeBoolean">
            <summary>Sets the stub of HtmlToXml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToXml.InitializeStub">
            <summary>Initializes a new instance of type StubHtmlToXml</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlToXml.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlToXml.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlToXml.ToString">
            <summary>Sets the stub of HtmlToXml.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHtmlToXml.ToString01">
            <summary>Sets the stub of HtmlToXml.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHtmlUtil">
            <summary>Stub type of Chilkat.HtmlUtil</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlUtil.Dispose(System.Boolean)">
            <summary>Sets the stub of HtmlUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHtmlUtil.DisposeBoolean">
            <summary>Sets the stub of HtmlUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHtmlUtil.InitializeStub">
            <summary>Initializes a new instance of type StubHtmlUtil</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHtmlUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHttp">
            <summary>Stub type of Chilkat.Http</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttp.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttp.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttp.Dispose(System.Boolean)">
            <summary>Sets the stub of Http.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttp.DisposeBoolean">
            <summary>Sets the stub of Http.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttp.InitializeStub">
            <summary>Initializes a new instance of type StubHttp</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttp.ToString">
            <summary>Sets the stub of Http.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttp.ToString01">
            <summary>Sets the stub of Http.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHttpRedirectEventArgs">
            <summary>Stub type of Chilkat.HttpRedirectEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRedirectEventArgs.#ctor(System.SByte*,System.SByte*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpRedirectEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRedirectEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of HttpRedirectEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttpRedirectEventArgs.DisposeBoolean">
            <summary>Sets the stub of HttpRedirectEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRedirectEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRedirectEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpRedirectEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpRedirectEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHttpRequest">
            <summary>Stub type of Chilkat.HttpRequest</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRequest.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRequest.Dispose(System.Boolean)">
            <summary>Sets the stub of HttpRequest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttpRequest.DisposeBoolean">
            <summary>Sets the stub of HttpRequest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRequest.InitializeStub">
            <summary>Initializes a new instance of type StubHttpRequest</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpRequest.ToString">
            <summary>Sets the stub of HttpRequest.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttpRequest.ToString01">
            <summary>Sets the stub of HttpRequest.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubHttpResponse">
            <summary>Stub type of Chilkat.HttpResponse</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpResponse.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpResponse.Dispose(System.Boolean)">
            <summary>Sets the stub of HttpResponse.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttpResponse.DisposeBoolean">
            <summary>Sets the stub of HttpResponse.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpResponse.InitializeStub">
            <summary>Initializes a new instance of type StubHttpResponse</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubHttpResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubHttpResponse.ToString">
            <summary>Sets the stub of HttpResponse.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubHttpResponse.ToString01">
            <summary>Sets the stub of HttpResponse.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubImap">
            <summary>Stub type of Chilkat.Imap</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubImap.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubImap.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubImap.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubImap.Dispose(System.Boolean)">
            <summary>Sets the stub of Imap.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubImap.DisposeBoolean">
            <summary>Sets the stub of Imap.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubImap.InitializeStub">
            <summary>Initializes a new instance of type StubImap</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubImap.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubImap.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubImap.ToString">
            <summary>Sets the stub of Imap.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubImap.ToString01">
            <summary>Sets the stub of Imap.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubJavaKeyStore">
            <summary>Stub type of Chilkat.JavaKeyStore</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJavaKeyStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJavaKeyStore.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJavaKeyStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJavaKeyStore.Dispose(System.Boolean)">
            <summary>Sets the stub of JavaKeyStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJavaKeyStore.DisposeBoolean">
            <summary>Sets the stub of JavaKeyStore.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJavaKeyStore.InitializeStub">
            <summary>Initializes a new instance of type StubJavaKeyStore</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJavaKeyStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJavaKeyStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJavaKeyStore.ToString">
            <summary>Sets the stub of JavaKeyStore.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJavaKeyStore.ToString01">
            <summary>Sets the stub of JavaKeyStore.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubJsonArray">
            <summary>Stub type of Chilkat.JsonArray</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonArray.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonArray.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJsonArray.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonArray.Dispose(System.Boolean)">
            <summary>Sets the stub of JsonArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJsonArray.DisposeBoolean">
            <summary>Sets the stub of JsonArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonArray.InitializeStub">
            <summary>Initializes a new instance of type StubJsonArray</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJsonArray.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJsonArray.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonArray.ToString">
            <summary>Sets the stub of JsonArray.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJsonArray.ToString01">
            <summary>Sets the stub of JsonArray.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubJsonObject">
            <summary>Stub type of Chilkat.JsonObject</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonObject.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJsonObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonObject.Dispose(System.Boolean)">
            <summary>Sets the stub of JsonObject.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJsonObject.DisposeBoolean">
            <summary>Sets the stub of JsonObject.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonObject.InitializeStub">
            <summary>Initializes a new instance of type StubJsonObject</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJsonObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJsonObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJsonObject.ToString">
            <summary>Sets the stub of JsonObject.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJsonObject.ToString01">
            <summary>Sets the stub of JsonObject.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubJwe">
            <summary>Stub type of Chilkat.Jwe</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwe.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwe.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJwe.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwe.Dispose(System.Boolean)">
            <summary>Sets the stub of Jwe.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJwe.DisposeBoolean">
            <summary>Sets the stub of Jwe.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwe.InitializeStub">
            <summary>Initializes a new instance of type StubJwe</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJwe.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJwe.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwe.ToString">
            <summary>Sets the stub of Jwe.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJwe.ToString01">
            <summary>Sets the stub of Jwe.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubJws">
            <summary>Stub type of Chilkat.Jws</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJws.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJws.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJws.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJws.Dispose(System.Boolean)">
            <summary>Sets the stub of Jws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJws.DisposeBoolean">
            <summary>Sets the stub of Jws.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJws.InitializeStub">
            <summary>Initializes a new instance of type StubJws</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJws.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJws.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJws.ToString">
            <summary>Sets the stub of Jws.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJws.ToString01">
            <summary>Sets the stub of Jws.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubJwt">
            <summary>Stub type of Chilkat.Jwt</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwt.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwt.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJwt.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwt.Dispose(System.Boolean)">
            <summary>Sets the stub of Jwt.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJwt.DisposeBoolean">
            <summary>Sets the stub of Jwt.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwt.InitializeStub">
            <summary>Initializes a new instance of type StubJwt</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJwt.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubJwt.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubJwt.ToString">
            <summary>Sets the stub of Jwt.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubJwt.ToString01">
            <summary>Sets the stub of Jwt.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubKeyContainer">
            <summary>Stub type of Chilkat.KeyContainer</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubKeyContainer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubKeyContainer.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubKeyContainer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubKeyContainer.Dispose(System.Boolean)">
            <summary>Sets the stub of KeyContainer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubKeyContainer.DisposeBoolean">
            <summary>Sets the stub of KeyContainer.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubKeyContainer.InitializeStub">
            <summary>Initializes a new instance of type StubKeyContainer</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubKeyContainer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubKeyContainer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubKeyContainer.ToString">
            <summary>Sets the stub of KeyContainer.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubKeyContainer.ToString01">
            <summary>Sets the stub of KeyContainer.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubLog">
            <summary>Stub type of Chilkat.Log</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubLog.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubLog.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubLog.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubLog.Dispose(System.Boolean)">
            <summary>Sets the stub of Log.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubLog.DisposeBoolean">
            <summary>Sets the stub of Log.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubLog.InitializeStub">
            <summary>Initializes a new instance of type StubLog</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubLog.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubLog.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubLog.ToString">
            <summary>Sets the stub of Log.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubLog.ToString01">
            <summary>Sets the stub of Log.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubMailMan">
            <summary>Stub type of Chilkat.MailMan</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailMan.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailMan.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMailMan.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailMan.Dispose(System.Boolean)">
            <summary>Sets the stub of MailMan.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMailMan.DisposeBoolean">
            <summary>Sets the stub of MailMan.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailMan.InitializeStub">
            <summary>Initializes a new instance of type StubMailMan</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMailMan.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMailMan.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailMan.ToString">
            <summary>Sets the stub of MailMan.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMailMan.ToString01">
            <summary>Sets the stub of MailMan.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubMailboxes">
            <summary>Stub type of Chilkat.Mailboxes</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailboxes.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailboxes.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMailboxes.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailboxes.Dispose(System.Boolean)">
            <summary>Sets the stub of Mailboxes.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMailboxes.DisposeBoolean">
            <summary>Sets the stub of Mailboxes.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailboxes.InitializeStub">
            <summary>Initializes a new instance of type StubMailboxes</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMailboxes.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMailboxes.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMailboxes.ToString">
            <summary>Sets the stub of Mailboxes.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMailboxes.ToString01">
            <summary>Sets the stub of Mailboxes.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubMessageSet">
            <summary>Stub type of Chilkat.MessageSet</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMessageSet.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMessageSet.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMessageSet.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMessageSet.Dispose(System.Boolean)">
            <summary>Sets the stub of MessageSet.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMessageSet.DisposeBoolean">
            <summary>Sets the stub of MessageSet.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMessageSet.InitializeStub">
            <summary>Initializes a new instance of type StubMessageSet</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMessageSet.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMessageSet.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMessageSet.ToString">
            <summary>Sets the stub of MessageSet.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMessageSet.ToString01">
            <summary>Sets the stub of MessageSet.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubMht">
            <summary>Stub type of Chilkat.Mht</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMht.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMht.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMht.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMht.Dispose(System.Boolean)">
            <summary>Sets the stub of Mht.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMht.DisposeBoolean">
            <summary>Sets the stub of Mht.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMht.InitializeStub">
            <summary>Initializes a new instance of type StubMht</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMht.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMht.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMht.ToString">
            <summary>Sets the stub of Mht.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMht.ToString01">
            <summary>Sets the stub of Mht.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubMime">
            <summary>Stub type of Chilkat.Mime</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMime.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMime.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMime.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMime.Dispose(System.Boolean)">
            <summary>Sets the stub of Mime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMime.DisposeBoolean">
            <summary>Sets the stub of Mime.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMime.InitializeStub">
            <summary>Initializes a new instance of type StubMime</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMime.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubMime.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubMime.ToString">
            <summary>Sets the stub of Mime.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubMime.ToString01">
            <summary>Sets the stub of Mime.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubNextTarFileEventArgs">
            <summary>Stub type of Chilkat.NextTarFileEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNextTarFileEventArgs.#ctor(System.SByte*,System.Int64,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubNextTarFileEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNextTarFileEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of NextTarFileEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubNextTarFileEventArgs.DisposeBoolean">
            <summary>Sets the stub of NextTarFileEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNextTarFileEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubNextTarFileEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubNextTarFileEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubNextTarFileEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubNtlm">
            <summary>Stub type of Chilkat.Ntlm</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNtlm.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNtlm.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubNtlm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNtlm.Dispose(System.Boolean)">
            <summary>Sets the stub of Ntlm.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubNtlm.DisposeBoolean">
            <summary>Sets the stub of Ntlm.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNtlm.InitializeStub">
            <summary>Initializes a new instance of type StubNtlm</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubNtlm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubNtlm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubNtlm.ToString">
            <summary>Sets the stub of Ntlm.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubNtlm.ToString01">
            <summary>Sets the stub of Ntlm.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubOAuth1">
            <summary>Stub type of Chilkat.OAuth1</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth1.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubOAuth1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth1.Dispose(System.Boolean)">
            <summary>Sets the stub of OAuth1.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubOAuth1.DisposeBoolean">
            <summary>Sets the stub of OAuth1.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth1.InitializeStub">
            <summary>Initializes a new instance of type StubOAuth1</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubOAuth1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubOAuth1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth1.ToString">
            <summary>Sets the stub of OAuth1.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubOAuth1.ToString01">
            <summary>Sets the stub of OAuth1.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubOAuth2">
            <summary>Stub type of Chilkat.OAuth2</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth2.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubOAuth2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth2.Dispose(System.Boolean)">
            <summary>Sets the stub of OAuth2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubOAuth2.DisposeBoolean">
            <summary>Sets the stub of OAuth2.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth2.InitializeStub">
            <summary>Initializes a new instance of type StubOAuth2</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubOAuth2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubOAuth2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubOAuth2.ToString">
            <summary>Sets the stub of OAuth2.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubOAuth2.ToString01">
            <summary>Sets the stub of OAuth2.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubPem">
            <summary>Stub type of Chilkat.Pem</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPem.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPem.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPem.Dispose(System.Boolean)">
            <summary>Sets the stub of Pem.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPem.DisposeBoolean">
            <summary>Sets the stub of Pem.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPem.InitializeStub">
            <summary>Initializes a new instance of type StubPem</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPem.ToString">
            <summary>Sets the stub of Pem.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPem.ToString01">
            <summary>Sets the stub of Pem.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubPercentDoneEventArgs">
            <summary>Stub type of Chilkat.PercentDoneEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPercentDoneEventArgs.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPercentDoneEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPercentDoneEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of PercentDoneEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPercentDoneEventArgs.DisposeBoolean">
            <summary>Sets the stub of PercentDoneEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPercentDoneEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubPercentDoneEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPercentDoneEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPercentDoneEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubPfx">
            <summary>Stub type of Chilkat.Pfx</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPfx.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPfx.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPfx.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPfx.Dispose(System.Boolean)">
            <summary>Sets the stub of Pfx.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPfx.DisposeBoolean">
            <summary>Sets the stub of Pfx.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPfx.InitializeStub">
            <summary>Initializes a new instance of type StubPfx</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPfx.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPfx.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPfx.ToString">
            <summary>Sets the stub of Pfx.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPfx.ToString01">
            <summary>Sets the stub of Pfx.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubPrivateKey">
            <summary>Stub type of Chilkat.PrivateKey</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrivateKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrivateKey.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPrivateKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrivateKey.Dispose(System.Boolean)">
            <summary>Sets the stub of PrivateKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPrivateKey.DisposeBoolean">
            <summary>Sets the stub of PrivateKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrivateKey.InitializeStub">
            <summary>Initializes a new instance of type StubPrivateKey</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPrivateKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPrivateKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrivateKey.ToString">
            <summary>Sets the stub of PrivateKey.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPrivateKey.ToString01">
            <summary>Sets the stub of PrivateKey.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubPrng">
            <summary>Stub type of Chilkat.Prng</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrng.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrng.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPrng.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrng.Dispose(System.Boolean)">
            <summary>Sets the stub of Prng.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPrng.DisposeBoolean">
            <summary>Sets the stub of Prng.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrng.InitializeStub">
            <summary>Initializes a new instance of type StubPrng</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPrng.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPrng.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPrng.ToString">
            <summary>Sets the stub of Prng.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPrng.ToString01">
            <summary>Sets the stub of Prng.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubProgressInfoEventArgs">
            <summary>Stub type of Chilkat.ProgressInfoEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubProgressInfoEventArgs.#ctor(System.SByte*,System.SByte*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubProgressInfoEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubProgressInfoEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of ProgressInfoEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubProgressInfoEventArgs.DisposeBoolean">
            <summary>Sets the stub of ProgressInfoEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubProgressInfoEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubProgressInfoEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubProgressInfoEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubProgressInfoEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubPublicKey">
            <summary>Stub type of Chilkat.PublicKey</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPublicKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPublicKey.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPublicKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPublicKey.Dispose(System.Boolean)">
            <summary>Sets the stub of PublicKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPublicKey.DisposeBoolean">
            <summary>Sets the stub of PublicKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPublicKey.InitializeStub">
            <summary>Initializes a new instance of type StubPublicKey</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPublicKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubPublicKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubPublicKey.ToString">
            <summary>Sets the stub of PublicKey.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubPublicKey.ToString01">
            <summary>Sets the stub of PublicKey.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubRest">
            <summary>Stub type of Chilkat.Rest</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRest.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRest.Dispose(System.Boolean)">
            <summary>Sets the stub of Rest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubRest.DisposeBoolean">
            <summary>Sets the stub of Rest.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRest.InitializeStub">
            <summary>Initializes a new instance of type StubRest</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRest.ToString">
            <summary>Sets the stub of Rest.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubRest.ToString01">
            <summary>Sets the stub of Rest.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubRsa">
            <summary>Stub type of Chilkat.Rsa</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRsa.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRsa.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRsa.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRsa.Dispose(System.Boolean)">
            <summary>Sets the stub of Rsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubRsa.DisposeBoolean">
            <summary>Sets the stub of Rsa.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRsa.InitializeStub">
            <summary>Initializes a new instance of type StubRsa</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRsa.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRsa.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRsa.ToString">
            <summary>Sets the stub of Rsa.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubRsa.ToString01">
            <summary>Sets the stub of Rsa.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubRss">
            <summary>Stub type of Chilkat.Rss</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRss.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRss.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRss.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRss.Dispose(System.Boolean)">
            <summary>Sets the stub of Rss.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubRss.DisposeBoolean">
            <summary>Sets the stub of Rss.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRss.InitializeStub">
            <summary>Initializes a new instance of type StubRss</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRss.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubRss.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubRss.ToString">
            <summary>Sets the stub of Rss.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubRss.ToString01">
            <summary>Sets the stub of Rss.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSFtp">
            <summary>Stub type of Chilkat.SFtp</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtp.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtp.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtp.Dispose(System.Boolean)">
            <summary>Sets the stub of SFtp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSFtp.DisposeBoolean">
            <summary>Sets the stub of SFtp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtp.InitializeStub">
            <summary>Initializes a new instance of type StubSFtp</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtp.ToString">
            <summary>Sets the stub of SFtp.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSFtp.ToString01">
            <summary>Sets the stub of SFtp.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSFtpDir">
            <summary>Stub type of Chilkat.SFtpDir</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpDir.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpDir.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtpDir.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpDir.Dispose(System.Boolean)">
            <summary>Sets the stub of SFtpDir.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSFtpDir.DisposeBoolean">
            <summary>Sets the stub of SFtpDir.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpDir.InitializeStub">
            <summary>Initializes a new instance of type StubSFtpDir</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtpDir.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtpDir.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpDir.ToString">
            <summary>Sets the stub of SFtpDir.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSFtpDir.ToString01">
            <summary>Sets the stub of SFtpDir.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSFtpFile">
            <summary>Stub type of Chilkat.SFtpFile</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpFile.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpFile.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtpFile.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpFile.Dispose(System.Boolean)">
            <summary>Sets the stub of SFtpFile.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSFtpFile.DisposeBoolean">
            <summary>Sets the stub of SFtpFile.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpFile.InitializeStub">
            <summary>Initializes a new instance of type StubSFtpFile</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtpFile.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSFtpFile.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSFtpFile.ToString">
            <summary>Sets the stub of SFtpFile.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSFtpFile.ToString01">
            <summary>Sets the stub of SFtpFile.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubScp">
            <summary>Stub type of Chilkat.Scp</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubScp.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubScp.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubScp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubScp.Dispose(System.Boolean)">
            <summary>Sets the stub of Scp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubScp.DisposeBoolean">
            <summary>Sets the stub of Scp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubScp.InitializeStub">
            <summary>Initializes a new instance of type StubScp</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubScp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubScp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubScp.ToString">
            <summary>Sets the stub of Scp.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubScp.ToString01">
            <summary>Sets the stub of Scp.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubServerSentEvent">
            <summary>Stub type of Chilkat.ServerSentEvent</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubServerSentEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubServerSentEvent.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubServerSentEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubServerSentEvent.Dispose(System.Boolean)">
            <summary>Sets the stub of ServerSentEvent.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubServerSentEvent.DisposeBoolean">
            <summary>Sets the stub of ServerSentEvent.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubServerSentEvent.InitializeStub">
            <summary>Initializes a new instance of type StubServerSentEvent</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubServerSentEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubServerSentEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubServerSentEvent.ToString">
            <summary>Sets the stub of ServerSentEvent.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubServerSentEvent.ToString01">
            <summary>Sets the stub of ServerSentEvent.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubService">
            <summary>Stub type of Chilkat.Service</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubService.Dispose(System.Boolean)">
            <summary>Sets the stub of Service.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubService.DisposeBoolean">
            <summary>Sets the stub of Service.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubService.InitializeStub">
            <summary>Initializes a new instance of type StubService</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSocket">
            <summary>Stub type of Chilkat.Socket</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSocket.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSocket.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSocket.Dispose(System.Boolean)">
            <summary>Sets the stub of Socket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSocket.DisposeBoolean">
            <summary>Sets the stub of Socket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSocket.InitializeStub">
            <summary>Initializes a new instance of type StubSocket</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSocket.ToString">
            <summary>Sets the stub of Socket.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSocket.ToString01">
            <summary>Sets the stub of Socket.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSpider">
            <summary>Stub type of Chilkat.Spider</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSpider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSpider.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSpider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSpider.Dispose(System.Boolean)">
            <summary>Sets the stub of Spider.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSpider.DisposeBoolean">
            <summary>Sets the stub of Spider.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSpider.InitializeStub">
            <summary>Initializes a new instance of type StubSpider</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSpider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSpider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSpider.ToString">
            <summary>Sets the stub of Spider.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSpider.ToString01">
            <summary>Sets the stub of Spider.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSsh">
            <summary>Stub type of Chilkat.Ssh</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSsh.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSsh.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSsh.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSsh.Dispose(System.Boolean)">
            <summary>Sets the stub of Ssh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSsh.DisposeBoolean">
            <summary>Sets the stub of Ssh.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSsh.InitializeStub">
            <summary>Initializes a new instance of type StubSsh</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSsh.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSsh.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSsh.ToString">
            <summary>Sets the stub of Ssh.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSsh.ToString01">
            <summary>Sets the stub of Ssh.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSshKey">
            <summary>Stub type of Chilkat.SshKey</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshKey.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshKey.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSshKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshKey.Dispose(System.Boolean)">
            <summary>Sets the stub of SshKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSshKey.DisposeBoolean">
            <summary>Sets the stub of SshKey.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshKey.InitializeStub">
            <summary>Initializes a new instance of type StubSshKey</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSshKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSshKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshKey.ToString">
            <summary>Sets the stub of SshKey.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSshKey.ToString01">
            <summary>Sets the stub of SshKey.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSshTunnel">
            <summary>Stub type of Chilkat.SshTunnel</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshTunnel.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshTunnel.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSshTunnel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshTunnel.Dispose(System.Boolean)">
            <summary>Sets the stub of SshTunnel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSshTunnel.DisposeBoolean">
            <summary>Sets the stub of SshTunnel.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshTunnel.InitializeStub">
            <summary>Initializes a new instance of type StubSshTunnel</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSshTunnel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSshTunnel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSshTunnel.ToString">
            <summary>Sets the stub of SshTunnel.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSshTunnel.ToString01">
            <summary>Sets the stub of SshTunnel.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubStatusEventArgs">
            <summary>Stub type of Chilkat.StatusEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStatusEventArgs.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStatusEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStatusEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of StatusEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStatusEventArgs.DisposeBoolean">
            <summary>Sets the stub of StatusEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStatusEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubStatusEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStatusEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStatusEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubStream">
            <summary>Stub type of Chilkat.Stream</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStream.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStream.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStream.Dispose(System.Boolean)">
            <summary>Sets the stub of Stream.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStream.DisposeBoolean">
            <summary>Sets the stub of Stream.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStream.InitializeStub">
            <summary>Initializes a new instance of type StubStream</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStream.ToString">
            <summary>Sets the stub of Stream.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStream.ToString01">
            <summary>Sets the stub of Stream.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubStreamConnector">
            <summary>Stub type of Chilkat.StreamConnector</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStreamConnector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStreamConnector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStreamConnector.Dispose(System.Boolean)">
            <summary>Sets the stub of StreamConnector.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStreamConnector.DisposeBoolean">
            <summary>Sets the stub of StreamConnector.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStreamConnector.InitializeStub">
            <summary>Initializes a new instance of type StubStreamConnector</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStreamConnector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStreamConnector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubStringArray">
            <summary>Stub type of Chilkat.StringArray</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringArray.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringArray.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringArray.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringArray.Dispose(System.Boolean)">
            <summary>Sets the stub of StringArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStringArray.DisposeBoolean">
            <summary>Sets the stub of StringArray.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringArray.InitializeStub">
            <summary>Initializes a new instance of type StubStringArray</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringArray.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringArray.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringArray.ToString">
            <summary>Sets the stub of StringArray.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStringArray.ToString01">
            <summary>Sets the stub of StringArray.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubStringBuilder">
            <summary>Stub type of Chilkat.StringBuilder</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringBuilder.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringBuilder.Dispose(System.Boolean)">
            <summary>Sets the stub of StringBuilder.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStringBuilder.DisposeBoolean">
            <summary>Sets the stub of StringBuilder.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubStringBuilder</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringBuilder.ToString">
            <summary>Sets the stub of StringBuilder.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStringBuilder.ToString01">
            <summary>Sets the stub of StringBuilder.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubStringTable">
            <summary>Stub type of Chilkat.StringTable</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringTable.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringTable.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringTable.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringTable.Dispose(System.Boolean)">
            <summary>Sets the stub of StringTable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStringTable.DisposeBoolean">
            <summary>Sets the stub of StringTable.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringTable.InitializeStub">
            <summary>Initializes a new instance of type StubStringTable</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringTable.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubStringTable.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubStringTable.ToString">
            <summary>Sets the stub of StringTable.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubStringTable.ToString01">
            <summary>Sets the stub of StringTable.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubSysUtil">
            <summary>Stub type of Chilkat.SysUtil</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSysUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSysUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSysUtil.Dispose(System.Boolean)">
            <summary>Sets the stub of SysUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubSysUtil.DisposeBoolean">
            <summary>Sets the stub of SysUtil.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubSysUtil.InitializeStub">
            <summary>Initializes a new instance of type StubSysUtil</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSysUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubSysUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubTar">
            <summary>Stub type of Chilkat.Tar</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTar.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTar.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTar.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTar.Dispose(System.Boolean)">
            <summary>Sets the stub of Tar.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTar.DisposeBoolean">
            <summary>Sets the stub of Tar.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTar.InitializeStub">
            <summary>Initializes a new instance of type StubTar</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTar.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTar.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTar.ToString">
            <summary>Sets the stub of Tar.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTar.ToString01">
            <summary>Sets the stub of Tar.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubTask">
            <summary>Stub type of Chilkat.Task</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTask.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTask.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTask.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTask.Dispose(System.Boolean)">
            <summary>Sets the stub of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTask.DisposeBoolean">
            <summary>Sets the stub of Task.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTask.InitializeStub">
            <summary>Initializes a new instance of type StubTask</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTask.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTask.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTask.ToString">
            <summary>Sets the stub of Task.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTask.ToString01">
            <summary>Sets the stub of Task.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubTaskChain">
            <summary>Stub type of Chilkat.TaskChain</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskChain.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskChain.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTaskChain.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskChain.Dispose(System.Boolean)">
            <summary>Sets the stub of TaskChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTaskChain.DisposeBoolean">
            <summary>Sets the stub of TaskChain.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskChain.InitializeStub">
            <summary>Initializes a new instance of type StubTaskChain</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTaskChain.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTaskChain.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskChain.ToString">
            <summary>Sets the stub of TaskChain.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTaskChain.ToString01">
            <summary>Sets the stub of TaskChain.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubTaskCompletedEventArgs">
            <summary>Stub type of Chilkat.TaskCompletedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskCompletedEventArgs.#ctor(Chilkat.Task)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTaskCompletedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskCompletedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of TaskCompletedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTaskCompletedEventArgs.DisposeBoolean">
            <summary>Sets the stub of TaskCompletedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTaskCompletedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTaskCompletedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTaskCompletedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTaskCompletedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubTextDataEventArgs">
            <summary>Stub type of Chilkat.TextDataEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTextDataEventArgs.#ctor(System.SByte*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTextDataEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTextDataEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of TextDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTextDataEventArgs.DisposeBoolean">
            <summary>Sets the stub of TextDataEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTextDataEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubTextDataEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTextDataEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTextDataEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubToBeAddedEventArgs">
            <summary>Stub type of Chilkat.ToBeAddedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeAddedEventArgs.#ctor(System.SByte*,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeAddedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeAddedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of ToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubToBeAddedEventArgs.DisposeBoolean">
            <summary>Sets the stub of ToBeAddedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeAddedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubToBeAddedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeAddedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeAddedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubToBeUnzippedEventArgs">
            <summary>Stub type of Chilkat.ToBeUnzippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeUnzippedEventArgs.#ctor(System.SByte*,System.Int64,System.Int64,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeUnzippedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeUnzippedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of ToBeUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubToBeUnzippedEventArgs.DisposeBoolean">
            <summary>Sets the stub of ToBeUnzippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeUnzippedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubToBeUnzippedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeUnzippedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeUnzippedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubToBeZippedEventArgs">
            <summary>Stub type of Chilkat.ToBeZippedEventArgs</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeZippedEventArgs.#ctor(System.SByte*,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeZippedEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeZippedEventArgs.Dispose(System.Boolean)">
            <summary>Sets the stub of ToBeZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubToBeZippedEventArgs.DisposeBoolean">
            <summary>Sets the stub of ToBeZippedEventArgs.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubToBeZippedEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubToBeZippedEventArgs</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeZippedEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubToBeZippedEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubTrustedRoots">
            <summary>Stub type of Chilkat.TrustedRoots</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTrustedRoots.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTrustedRoots.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTrustedRoots.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTrustedRoots.Dispose(System.Boolean)">
            <summary>Sets the stub of TrustedRoots.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTrustedRoots.DisposeBoolean">
            <summary>Sets the stub of TrustedRoots.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTrustedRoots.InitializeStub">
            <summary>Initializes a new instance of type StubTrustedRoots</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTrustedRoots.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubTrustedRoots.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubTrustedRoots.ToString">
            <summary>Sets the stub of TrustedRoots.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubTrustedRoots.ToString01">
            <summary>Sets the stub of TrustedRoots.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubUnixCompress">
            <summary>Stub type of Chilkat.UnixCompress</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUnixCompress.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUnixCompress.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUnixCompress.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUnixCompress.Dispose(System.Boolean)">
            <summary>Sets the stub of UnixCompress.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubUnixCompress.DisposeBoolean">
            <summary>Sets the stub of UnixCompress.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUnixCompress.InitializeStub">
            <summary>Initializes a new instance of type StubUnixCompress</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUnixCompress.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUnixCompress.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUnixCompress.ToString">
            <summary>Sets the stub of UnixCompress.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubUnixCompress.ToString01">
            <summary>Sets the stub of UnixCompress.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubUpload">
            <summary>Stub type of Chilkat.Upload</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUpload.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUpload.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUpload.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUpload.Dispose(System.Boolean)">
            <summary>Sets the stub of Upload.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubUpload.DisposeBoolean">
            <summary>Sets the stub of Upload.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUpload.InitializeStub">
            <summary>Initializes a new instance of type StubUpload</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUpload.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUpload.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUpload.ToString">
            <summary>Sets the stub of Upload.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubUpload.ToString01">
            <summary>Sets the stub of Upload.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubUrl">
            <summary>Stub type of Chilkat.Url</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUrl.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUrl.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUrl.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUrl.Dispose(System.Boolean)">
            <summary>Sets the stub of Url.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubUrl.DisposeBoolean">
            <summary>Sets the stub of Url.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUrl.InitializeStub">
            <summary>Initializes a new instance of type StubUrl</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUrl.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubUrl.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubUrl.ToString">
            <summary>Sets the stub of Url.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubUrl.ToString01">
            <summary>Sets the stub of Url.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubWebSocket">
            <summary>Stub type of Chilkat.WebSocket</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubWebSocket.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubWebSocket.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubWebSocket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubWebSocket.Dispose(System.Boolean)">
            <summary>Sets the stub of WebSocket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubWebSocket.DisposeBoolean">
            <summary>Sets the stub of WebSocket.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubWebSocket.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocket</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubWebSocket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubWebSocket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubWebSocket.ToString">
            <summary>Sets the stub of WebSocket.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubWebSocket.ToString01">
            <summary>Sets the stub of WebSocket.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubXml">
            <summary>Stub type of Chilkat.Xml</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXml.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXml.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXml.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXml.Dispose(System.Boolean)">
            <summary>Sets the stub of Xml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXml.DisposeBoolean">
            <summary>Sets the stub of Xml.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXml.InitializeStub">
            <summary>Initializes a new instance of type StubXml</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXml.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXml.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXml.ToString">
            <summary>Sets the stub of Xml.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXml.ToString01">
            <summary>Sets the stub of Xml.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubXmlCertVault">
            <summary>Stub type of Chilkat.XmlCertVault</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlCertVault.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlCertVault.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlCertVault.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlCertVault.Dispose(System.Boolean)">
            <summary>Sets the stub of XmlCertVault.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmlCertVault.DisposeBoolean">
            <summary>Sets the stub of XmlCertVault.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlCertVault.InitializeStub">
            <summary>Initializes a new instance of type StubXmlCertVault</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlCertVault.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlCertVault.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlCertVault.ToString">
            <summary>Sets the stub of XmlCertVault.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmlCertVault.ToString01">
            <summary>Sets the stub of XmlCertVault.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubXmlDSig">
            <summary>Stub type of Chilkat.XmlDSig</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSig.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlDSig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSig.Dispose(System.Boolean)">
            <summary>Sets the stub of XmlDSig.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmlDSig.DisposeBoolean">
            <summary>Sets the stub of XmlDSig.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSig.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDSig</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlDSig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlDSig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSig.ToString">
            <summary>Sets the stub of XmlDSig.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmlDSig.ToString01">
            <summary>Sets the stub of XmlDSig.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubXmlDSigGen">
            <summary>Stub type of Chilkat.XmlDSigGen</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSigGen.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSigGen.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlDSigGen.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSigGen.Dispose(System.Boolean)">
            <summary>Sets the stub of XmlDSigGen.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmlDSigGen.DisposeBoolean">
            <summary>Sets the stub of XmlDSigGen.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSigGen.InitializeStub">
            <summary>Initializes a new instance of type StubXmlDSigGen</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlDSigGen.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmlDSigGen.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmlDSigGen.ToString">
            <summary>Sets the stub of XmlDSigGen.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmlDSigGen.ToString01">
            <summary>Sets the stub of XmlDSigGen.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubXmp">
            <summary>Stub type of Chilkat.Xmp</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmp.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmp.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmp.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmp.Dispose(System.Boolean)">
            <summary>Sets the stub of Xmp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmp.DisposeBoolean">
            <summary>Sets the stub of Xmp.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmp.InitializeStub">
            <summary>Initializes a new instance of type StubXmp</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmp.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubXmp.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubXmp.ToString">
            <summary>Sets the stub of Xmp.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubXmp.ToString01">
            <summary>Sets the stub of Xmp.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubZip">
            <summary>Stub type of Chilkat.Zip</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZip.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZip.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZip.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZip.Dispose(System.Boolean)">
            <summary>Sets the stub of Zip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubZip.DisposeBoolean">
            <summary>Sets the stub of Zip.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZip.InitializeStub">
            <summary>Initializes a new instance of type StubZip</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZip.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZip.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZip.ToString">
            <summary>Sets the stub of Zip.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubZip.ToString01">
            <summary>Sets the stub of Zip.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubZipCrc">
            <summary>Stub type of Chilkat.ZipCrc</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipCrc.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipCrc.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZipCrc.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipCrc.Dispose(System.Boolean)">
            <summary>Sets the stub of ZipCrc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubZipCrc.DisposeBoolean">
            <summary>Sets the stub of ZipCrc.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipCrc.InitializeStub">
            <summary>Initializes a new instance of type StubZipCrc</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZipCrc.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZipCrc.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipCrc.ToString">
            <summary>Sets the stub of ZipCrc.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubZipCrc.ToString01">
            <summary>Sets the stub of ZipCrc.ToString()</summary>
        </member>
        <member name="T:Chilkat.Fakes.StubZipEntry">
            <summary>Stub type of Chilkat.ZipEntry</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipEntry.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipEntry.#ctor(System.Void*)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZipEntry.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipEntry.Dispose(System.Boolean)">
            <summary>Sets the stub of ZipEntry.Dispose(Boolean A_0)</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubZipEntry.DisposeBoolean">
            <summary>Sets the stub of ZipEntry.Dispose(Boolean A_0)</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipEntry.InitializeStub">
            <summary>Initializes a new instance of type StubZipEntry</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZipEntry.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Chilkat.Fakes.StubZipEntry.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Chilkat.Fakes.StubZipEntry.ToString">
            <summary>Sets the stub of ZipEntry.ToString()</summary>
        </member>
        <member name="F:Chilkat.Fakes.StubZipEntry.ToString01">
            <summary>Sets the stub of ZipEntry.ToString()</summary>
        </member>
        <member name="T:Global.Fakes.ShimXString">
            <summary>Shim type of XString</summary>
        </member>
        <member name="M:Global.Fakes.ShimXString.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Global.Fakes.ShimXString.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Global.Fakes.ShimXString.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Global.Fakes.ShimXString.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Global.Fakes.ShimXString.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
    </members>
</doc>
